{"version":3,"sources":["utils/messages.tsx","models/global/tooltip.tsx","models/ordering/address.tsx","models/support/ISupportWrapper.tsx","components/existing/data/activities.tsx","components/existing/data/customerPayment.tsx","components/existing/data/download.tsx","components/existing/data/bills.tsx","models/ordering/brand.tsx","components/existing/data/contract.tsx","components/existing/data/contractData.tsx","components/existing/data/crossSelling.tsx","components/existing/data/protectionAndConsent.tsx","components/existing/data/customerData.tsx","components/existing/data/nba.tsx","components/existing/data/services.tsx","components/existing/data/simReplacement.tsx","utils/static.tsx","screens/existing/customer.tsx","components/process/tariffConfiguration.tsx","store/app/types.tsx","store/app/reducers.tsx","store/app/actions.tsx","store/index.ts","models/ordering/tel.tsx","models/ordering/customerAction.tsx","screens/am/imei.tsx","components/existing/data/Belatedporting.tsx","components/ordering/brandTariffs.tsx","components/ordering/brandList.tsx","screens/am/editUser.tsx","interfaces/app/IAppSettings.tsx","utils/storage.tsx","models/global/defcon.tsx","utils/apiActivation.tsx","models/ordering/house.tsx","interfaces/app/IApiAction.tsx","utils/validation/validationOption.tsx","models/global/process.tsx","models/page/infoItem.tsx","components/dialogs/body.tsx","components/ordering/customer/consent.tsx","components/existing/data/Cancellation.tsx","screens/global/error.tsx","components/page/inner1.tsx","components/dialogs/popup.tsx","screens/am/mnpStatus.tsx","components/existing/data/partnerCard.tsx","components/tools/searchExisting.tsx","components/dialogs/errorMessage/errorMessage.tsx","screens/test/ScreenshotTool/Screenshot.tsx","screens/test/feedback.tsx","components/ordering/process/activationResponseStatus.tsx","components/page/block.tsx","models/index.ts","components/dialogs/action.tsx","components/index.ts","screens/test/ProgressBar.tsx","screens/test/ErrorUI.tsx","screens/test/form.tsx","utils/router.tsx","utils/api.tsx","interfaces/app/IApiResponse.tsx","models/existing/login.tsx","models/global/tariffAndSub.tsx","utils/GlobalJSX.tsx","models/existing/partnerCard.tsx","models/global/mobileNumber.tsx","models/existing/consumption.tsx","screens/ordering/advertisement.tsx","screens/ordering/process.tsx","screens/ordering/welcome.tsx","screens/global/main.tsx","screens/global/init.tsx","screens/ordering/preview.tsx","screens/am/managerDetails.tsx","screens/am/manager.tsx","screens/am/idscanner.tsx","screens/am/drafts.tsx","screens/am/cancellation.tsx","screens/am/access.tsx","screens/user/editPassword.tsx","screens/user/editProfile.tsx","screens/user/dealer.tsx","screens/am/administration.tsx","screens/global/defcon.tsx","screens/test/StatusPorting.tsx","screens/orderProducts/order.tsx","screens/orderProducts/deliveryAddress.tsx","screens/orderProducts/orderOverview.tsx","screens/am/spice.tsx","screens/am/haPortal.tsx","screens/insex.ts","components/page/blockInfo.tsx","components/page/errorBlock.tsx","components/page/footer.tsx","components/tools/teaser.tsx","components/page/head.tsx","components/page/inner2.tsx","components/page/inner2left.tsx","components/page/inner2head.tsx","components/page/inner2right.tsx","components/page/innerSingle.tsx","components/page/thumb.tsx","components/page/time.tsx","components/page/timer.tsx","components/page/userpannel.tsx","components/page/index.ts","assets/icons/info-circle.svg","assets/images/idcard.jpg","models/support/tree.tsx","assets/icons/trafficLight_noVVL.svg","assets/icons/trafficLight_VVL.svg","assets/icons/trafficLight_VVLTW.svg","assets/icons/trafficLight_vVVL.svg","components/process/optionGroup.tsx","components/ordering/process/activationActions.tsx","components/brand/cableRenderer.tsx","components/ordering/process/activationOptions.tsx","components/ordering/process/activationServiceSelector.tsx","components/ordering/process/activationTariff.tsx","components/ordering/process/activationSummary.tsx","components/ordering/process/activationProgress.tsx","components/brand/gigaCombi.tsx","components/ordering/preview/delivery.tsx","components/ordering/preview/newCustomerData.tsx","components/ordering/process/activationPreview.tsx","components/ordering/process/activationMsisdn.tsx","components/ordering/process/activationSim.tsx","components/ordering/process/activationTel.tsx","components/ordering/process/portingOptions.tsx","components/ordering/process/activationHardware.tsx","components/ordering/process/activationContractBlock.tsx","components/ordering/process/activationContractContainer.tsx","components/ordering/process/activationBlockSimple.tsx","components/ordering/process/activationBlock.tsx","components/ordering/process/activationAvailability.tsx","components/ordering/process/activationMnp.tsx","components/ordering/process/index.ts","components/support/status.tsx","interfaces/index.ts","utils/Defaults.tsx","utils/validation/modelState.tsx","utils/validation/orderingBase.tsx","utils/validation/brandValidationVf.tsx","utils/validation/brandValidationOtelo.tsx","utils/validation/brandValidationDsl.tsx","utils/validation/brandValidationCable.tsx","utils/validation/brandValidationUnity.tsx","utils/validation/validationWrapper.tsx","utils/visibility/ordering.tsx","utils/index.ts","components/ordering/tariffThumb.tsx","components/ordering/brandThumb.tsx","components/page/button.tsx","models/ordering/availability.tsx","models/ordering/order.tsx","components/page/label.tsx","constants.tsx","components/page/table.tsx","components/page/paging.tsx","components/ordering/preview/contract.tsx","models/page/diverse.tsx","utils/OrderingHelper.tsx","components/page/control.tsx","components/page/clear.tsx","models/ordering/activation.tsx","serviceWorker.ts","index.tsx","components/page/date.tsx","components/ordering/customer/evn.tsx","components/ordering/customer/dsl.tsx","components/ordering/customer/legitimation.tsx","models/ordering/previousAccessOwner.tsx","components/ordering/global/person.tsx","components/ordering/customer/main.tsx","components/ordering/customer/payment.tsx","components/ordering/customer/consulting.tsx","components/ordering/customer/action.tsx","components/ordering/customer/mnp.tsx","components/ordering/customer/desiredSchedule.tsx","components/ordering/customer/phonebook.tsx","components/ordering/customer/topup.tsx","components/ordering/customer/index.ts","components/ordering/global/tel.tsx","models/ordering/data.tsx","utils/fixes.js","components/tools/defcon.tsx","utils/browser.tsx","App.tsx","components/page/inputWrapper.tsx","components/tools/singalRClient.tsx","utils/Global.tsx","components/page/filter.tsx","components/ordering/global/address.tsx","models/ordering/person.tsx","models/ordering/personWithAddress.tsx","components/ordering/process/activationCustomerData.tsx","components/tools/categoryWrapper.tsx","models/ordering/productWrapper.tsx"],"names":["ValidationMessages","Object","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","multipleDslComfortError","requiredError","nationalityError","numericError","selectItemError","errorImei","errorProd","errorSub","errorHardware","errorOption","errorCart","errorPortationCount","errorEditDone","errorOneMandatoryOption","errorSim","errorSimNumeric14","errorMsisdnNumeric","errorImeiNumeric","errorImei15","errorMsisndCode","titleValidationError","errorGeneral","errorValidation","errorExactLength","errorMaxLength","errorNumeric","errorEmail","errorDeliveryDate","oteloMSISDNareaError","errorEmailMatch","errorBrandNotAvailable","errorPassword","errorPasswordOutsideCustomerData","errorPasswordMatch","errorMonthFormat","errorYearFormat","alphanumeric","alphanumericNoUmlauts","germanIBANerror","surnameDSL","errorDateFormat","Hints","dataCorrectCheck","addressCorrected","noMoreInfo","hintMandatoryServicesVodafone","customerSignedDocument","customerSignedBoni","paymentHintOPS","paymentHintOPL","simReplaceHint","hintVfVllOldTariff","passwordOutsideCustomerDataHint","ActivationMessages","requestContract","requestContractOptions","reRequestContract","completeContract","completeContractOptions","print","printOptions","overview","reset","run","saveSuccess","execSuccess","prolongateWithCurrent","ActionTexts","requestInProcess","orderSim","addImei","cancel","belateporting","addNextContract","loadData","MainTexts","hint","feeActivation","feeMonthly","feeBookedOptions","logout","contactNumber","loginInfo","costs","areUsureLogout","post","phoneContractExtension","costsAll","scrollToConsents","costsBookedOptions","letterOfAceptance","belatedPortingTitle","ready","sendBillType","securityQuestion","securityAnswer","vf_dsl_email_text","otelo_email_text","start","phone","gigacombiTitle","gigaShow","activate","deactivate","bill","sms_mms","evn","allTariffs","activationFee","favoriteTariffs","roles","printFile","serviceAddRemove","numberPortability","numberOptions","optionsMandatory","group","owner","partner","member","imei","imeiMenuItem","imeiPageTitle","exCustBillsWithBday","imeiListUpload","imeiListUploadDesc","imeiManualDesc","editProfile","changePassword","userAdministration","personalIdNr","legitimationCreditCard","cardNumber","legitimationCreditCardAt","month","year","day","title","firstname","surname","textAvailability","noErrors","textError","textSIMCards","vfserial","textConnectivity","connectivityPresent","connectivityNotPresent","vodafoneCustomerNo","vodafoneCustomer","street","houseNumber","phoneNumber","city","addressAdditional","zip","nameAddress","address","stnr","stnre","telPrefix","countryCode","telnummer","gigakombiTooltip","mobilePhoneNumber","email","emailLastChange","deliveryAddress","deliverydate","telCallback","adrAdditional","notAvailable","available","inCheck","dateOfBirth","validFrom","validTo","customerId","nationality","mr","mrs","salutation","no","yes","pleaseSelect","pleaseWait","productSelection","sepa","contractTv","contractFn","contractId","webOrderId","referenceId","businessCase","postpaid","prepaid","date","contractEndDate","complete","shortened","unkonwnAtThisTime","euro","toDashboard","save","saveOptions","next","back","backToCustomer","paymentType","paymentData","deliveryData","idNumber","idGerman","idNotGerman","thankYou","thankYouFor","reasoningPOS","cancellation","dealerInfo","orderType","timeFilter","extraordinaryCancellation","typeOfCancellation","floor","reason","dealerName","customerNumber","numberToBePorted","currentPrepaidNumber","portingTime","immediately","afterContractEnds","networkProvider","yourOrder","orderProducts","yourOrders","savedAddress","newAddress","orderOverviewTitle","backToOrderProducts","monitorYourOrders","genderError","portingInformation","individualPorting","multiplePorting","laterPorting","numberOFPhonesToBePorted","orderFrom","status","numberOfProducts","totalPriceEuro","productGroup","picture","availability","availabilityCheck","priceInEuro","amount","orderText","portingStatus","filterCriteria","selectDeliveryAddress","orderProductsTitle","pleaseSelectSIM","orderReplacementSIM","backToCustomerDataSheet","orderReplForaFee","activationByCustomerUponReceipt","cardActivatedSent","documentScanner","drafts","draft","contractManager","administration","filter","doFilter","apply","searchExisting","additionalContract","periodFrom","to","searchTitle","customer","customerName","customerPassword","customerEMailValidation","customerEMailCreated","customerEMailNotValidated","customerEMailValidated","customerEMailNotValidatedTitle","customerEMailNotValidatedText","passwordRepeat","tariff","details","type","employee","employeeShort","newCustomerActivation","existingCustomerActivation","feeMonthTotal","feeActTotal","optionsAdditional","optionsInclusive","optionsAlreadyBooked","noPromotions","noOptions","tariffOptions","bookedOptions","bookedPromotions","bookedServices","bookableServices","fnvoid","salesId","void","vpkn","mainData","noData","createEmployee","edit","request","takeOver","msisdn","contract","contractType","contractTypeBnt","contractTypePort","contractTypeProlong","ok","change","book","remove","close","gold","silver","platinum","na","configuration","newUser","mnpStatusPageTitle","mnpStatus","mnpStatusLinkText","mnpPortingStatusLinkText","orderProductLink","cancellations","level1Cancellation","CustomerTexts","legitimation","churner","DefConTexts","underConstruction","OrderingTexts","bankOwner","bookMulticard","prolongateCurrentTariff","dataOfLastContract","bookMulticardDesc","bookPartner","bookPartnerDesc","bookNow","moreOptions","activationBNTTariff","activationBNTCustomer","activationBNTOverview","activation","portation","cdChange","pcBooking","pcPortation","inProcess","success","error","info","sub","options","mnpProvider","mnpNetwork","mnpSameCustomer","mnpDiffCustomer","mnpCustomerNr","mnpContractEnd","mnpCancellationDate","phoneBookEntry","phoneBook1","phoneBook2","forMobile","forDSL","forCable","forOtelo","activationDate","portationDate","bookDate","prolongationDate","desiredSchedule","desiredSchedule1","desiredSchedule2","payment","payment1","payment2","payment3","payment4","billType","billAddress","billAddress1","billAddress2","productDeliveryAddress","deliveryType1","deliveryType2","installationAddress","previousAccessOwner","previousAccessOwnerLabelYes","previousAccessOwnerLabelNo","installationType1","installationType2","dataLastContract","dslHouse","autotopup","noComfort","noSofort","amountATDesc","atTrigger","atTriggerDesc","singeltopup","mnpContract","mnpDate","mnp1","mnp2","mnp3","mnpCable1","mnpCable2","mnpCable3","mnpCable4","evnDesc","evnVf1","evnVf2","evnVf3","evn1","evn2","evn3","targetNumber","contractData","customerData","customerDataTillNow","customerBills","customerConsent","activities","nba","crossSelling","services","firstActivation","statusBegin","statusCustomer","contractStart","contractEnd","customerStatus","countCards","orderProductsNotification","errorAmountText","ErrorMessages","general","title404","message404","title403","message403","title4031","message4031","UserMessages","passwordEdit","passwordEditDesc","currentPassword","newPassword","newPasswordConfirm","profileEdit","profileEditDesc","profileSecurityTanValDesc","DealerMessages","dealerEdit","OrderStages","dashboard","done","action","summary","OrderProductStages","selectProducts","overviewOrder","ETooltipDataType","__webpack_require__","d","__webpack_exports__","Address","house_number","nr","nre","additional","corrected","name","CombiWrapper","items","pt","ProductTree","combis","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","dw","callback","getProducts","changed","needGigaCombi","c","findCombi","map","i","a","getActivationByProduct","product","id","b","linq","Global","categoryWrapper","bra","where","x","brand","first","j","hasService","sa","checkServiceCompatibility","length","k","removeService","combisWereAdded","addService","benefits","catKey","CatKeys","fn","brandKey","BrandKeys","kabel","citem","cat","pindex","selection","getChildIndex","TreeItem","addRemovePath","children","StorageHelper","updateActivation","cats","getCats","vodafone","tv","distinct","count","matchServices","Combi","ensure","undefined","all","ci","fitInCombi","findChild","p","forEach","kombi","productId","familyId","getCombis","assign","markup","json","JSON","parse","product_ui","ui_blister","ExistingCustomerActivities","_React$Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","selectActivity","bind","assertThisInitialized","parent","data","contracts","inherits","createClass","_this2","cfg","transparent","style","styleContainer","collapsible","collapsed","act","react","act2","actions","aa","active","toArray","idx","toGermanDate","possibleFrom","endsWith","tariffThumb","text","indexOf","cssStyle","selected","styleBrand","onClick","EasyRouter","route","url","openImei","visible","closable","EPopupType","closeOnDone","content","t","ERequestType","customerGetCanellation","processCustomer","hub","send","stringify","ctrl","Container","Row","Col","md","className","otelo","block","config","Number","parseInt","replace","OrderDataWrapper","createProcess","bc","EActivationType","existingCustomer","refresh","getMsisdnFromContract","EBusinessCase","bnt","actDefault","activations","nextContract","getUniqueId","processId","code","EIDCardType","german","authority","addOrder","switchCat","currentCat","setState","React","ExistingCustomerPayment","switchMode","mode","EFormMode","view","onInput","preview","optionsBillType","billTypeDesc","billingType","EBillingType","containerId","xs","page","onChange","checked","online","EControlType","dropdown","toString","hideTitle","label","isHtml","overflowEnabled","radio","EPaymentType","iban","maxLength","validationOptions","ValidationOption","EValidationOption","required","message","hideIBAN","germanIBAN","ELButtonType","buttonWithIconRight","css","ValidationWrapper","validateFormular","resetFormular","customerChangePayment","linkSimple","substring","newMode","target","_this3","Download","doc","EDocumentType","iconImage","icon","e","Api","follow","activationId","file","clickModel","ExistingCustomerBills","bills","documents","loginModel","EExistingCustomerLoginMode","birthday","download","customerPayment","Brand","_InfoItem","arguments","InfoItem","ExistingCustomerContract","red","green","yellow","noColor","showFN","showTV","purchase","dateToday","Date","dateServer","ECustomerActionPurchase","addedRuntime","getFullYear","getMonth","getDate","gigakombiCheck","brandThumb","ckey","item","fromInterface","EBrandThumbType","square","EBrandThumbStatus","getProductFromContract","width","src","span","offset","tooltip","linkWithIconLeft","height","Rot_ErwerbNichtMoeglich","alt","Gruen_ErwerbMoeglich","Gelb_ErwerbMoeglichMitTarifwechsel","ErwerbMitAddedRuntimeMoeglich","bookedProduct","findIndex","ExistingContractData","consumption","ConsumptionItem","partnerCard","dsl","contractFirstActivation","OrderingHelper","getSubName","getCustomerStatus","ProgressBar","maxValue","initialValue","getValueReverse","getLabel","dataWrapper","hasPartnerGroups","renderOptionalSimCards","but","button","ExistingCustomerCrossSelling","dc","getDefCon","canRunAvailability","avl","getAvailability","br","getBrands","tocheck","executed","ERequestStatus","tempResult","inner","renderAction","renderBrands","cust","isCrossSelling","running","set","StorageKeys","keyAvailability","checkAvailability","brandList","thumbSelectable","needSelection","thumbType","blister","withTariffs","forceVisible","checkAvailabilityProductsUponClick","clickHandler","getCategory","ECategoryStatus","currentBrand","getCategoryBrandKey","activationType","creditDebitType","ECreditDebitType","addressType","EActionAddressType","sameAddress","mnp","provider","network","differentCustomer","cancellationDate","Consents","email_EMA","ad_channel_type","change_date","channel","sms_mms_SMS","post_WHM","telefon_OBP","telefonContractExt_PVL","checkoutTerms","data_handling_terms","ProtectionAndConsent","allConsents","oneConsent","consent_date","consent_type","not_selected_ad_channels","selected_ad_channels","canPrint","canSave","printed","needPrint","collapse","activateAll","deactivateAll","getCustomer","onCollapse","prepareConsents","bew","consulting1","consulting2","adChannels","checkbox","disabled","selectAll","deselectAll","v","consentExisting","ActualTexts","bew_checkout_terms","m","canProcess","update","customerPrintBEW","api","fetch","msg","EApiResponseStatus","parseSummary","Binary","resetDynamicPopup","custom","cfgHint","runSave","setTimeout","FocusComponent","_this4","customerUpdateConsents","updateCustomer","_this5","consents","consent","hasOwnProperty","_this6","firstOrDefault","push","_this7","ExistingCustomerData","password","password2","emailStatusControl","emailStatus","modePassword","ECustomerEmailStatus","UNDEFIEND","CREATED","showEMailStatusPopup","VALIDATED","showConsentPopup","canEdit","customerChangeData","customerValidateEMail","sum","match","targetControl","customerChangePassword","ecpassword","textPositive","dangerouslySetInnerHTML","__html","toLowerCase","cont","GetComponent","ExistingCustomerNba","vvl","nbaId","getTooltip","category","products","html","s","fee","monthlyFee","price","feeToString","familyName","ServiceConfigUpdate","booked","bookable","add","ExistingCustomerServices","lastApi","activtion","serviceUpdate","removedBookableOptions","confirmAddRemove","addRemoveService","onDismissPopup","onSave","socketCallback","renderPopupConfirmService","onConfirm","prepareServices","renderPopup","renderServices","renderThumb","isSelected","service","link","tooltipModel","bookedAll","select","toAdd","toRemove","bookService","onNext","customerChangeAddRemoveServices","addServices","removeServices","removeElementFromArray","svcExc","getAllExcludesForSelectedServices","index","y","res","prodId","subId","prod","subs","EServiceType","option","sl","svc","mandatory","svc64","temp","onDismiss","pr","GlobalJSX","GetPopup","textNegative","confirmCustom","onNegative","onPositive","canUpdate","sock","failed","wrapper","steps","SimReplacement","current","activateByCustomer","unit","priceFormated","simSelected","actByCustomer","actUponReceipt","procedeButtonState","onBackToCustomer","components","renderSim","textArea","activationChange","simCards","customerOrderSim","ctr","element","finalPrice","simChange","event","sim","OteloStatic","simOnly","EExistingCustomerMode","TariffConfiguration","processParent","availableProducts","onSelectTariff","onSelectOption","onSelectSub","getParentOfProcess","canChangeProduct","canChangeSub","preselectedServices","renderCurrent","renderGroups","inCurrent","renderSub","process","preselected","blockAddRemove","onChanged","onConfigurationChanged","renderPromotions","renderOptions","ECustomerActionType","STD","ConstantKeys","join","cs","bs","CS","BS","orderBy","sort","isNba","subList","splice","tt","getSub","ct","customerType","at","plist","groups","filterProducts","familySort","renderGroup","ECustomerType","personal","pw","ProductWrapper","getServices","_loop","promotion","hideHint","selectable","getSelectableServices","brandProducts","avprod","_ret","brandServices","_loop2","brands","hasComfort","serviceDisabled","_this8","filterServices","IActivation","_this9","servicesRemove","resetSeetedsubsAndServices","validateService","CustomerScreen","modelState","u","parentId","progress","EOrderProcessView","processPopupState","dynamicPopup","_imeiCancel","dataMode","main","processing","loading","closablePopup","apiMessage","clear","showConsentPopUp","onChangeHardware","onBack","onDismissProcessPopup","onDismissValidation","getOrder","from","getOrders","easyApp","setTitle","dyn","renderProgress","window","location","href","_unused","customerChangeRemoveService","customerChangeAddService","actionName","routeUrl","validation","applyValidation","todo","removeOrder","getProgress","actProgress","states","head","appendSub","renderSimReplace","renderCancellation","belatedPorting","renderBelatedportingReplace","renderImei","getAllActivationsDone","rednerDashboard","renderDone","renderTariff","data_contract","data_nba","data_bills","protectionAndConsent","uploadType","ImeiUploadType","Manual","onCancel","simReplacement","Cancellation","Belatedporting","ensureActivationIsObject","aw","ActivationWrapper","ordering_customer","parentRefresh","preview_contract","ah","refreshParent","tarif","isValid","errorMessage","tariffConfiguration","selectedTariff","getAvailableProducts","val","external","validate","createCustomerProcess","startExistingProcessValidation","isActivated","uri","OPEN_POPUP","OPEN_SCREEN","appState","popup","screen","openPopup","jsx","console","log","payload","openScreen","mapStateToProps","mapDispatchToProps","configureStore","rootReducer","combineReducers","app","_ref","objectSpread","dispatch","container","middlewares","thunkMiddleware","middleWareEnhancer","applyMiddleware","createStore","composeWithDevTools","Tel","prefix","number","telType","ETelType","mobile","ENbaCategory","ECustomerStatus","ECardType","EGroupMemeberType","CustomerGroup","groupId","numberOfOwner","numberOfMember","groupName","groupStatus","groupType","marketCode","effectiveDate","members","gr","ICancellation","vvlCancelable","twCancelable","bntCancelable","bntReasons","cancellationTypeId","cancellationSpecialTypeId","reasonId","employeeName","provisionRenounce","ImeiScreen","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_renderManual","react__WEBPACK_IMPORTED_MODULE_6__","_components_page_block__WEBPACK_IMPORTED_MODULE_12__","_components_index__WEBPACK_IMPORTED_MODULE_11__","closblePopup","popupTitle","_onDismissProcessPopup","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","_components_page_index__WEBPACK_IMPORTED_MODULE_13__","_onChange","_onSave","_renderList","accept","_onFileChange","files","List","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","_showPopup","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","st","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","model","saveImei","getBase64","then","fileName","saveImeiList","inprocess","EPortingTime","BelatedPorting","cfg2","portingModel","salutationId","toBePorted","networkKey","providerKey","belatedPortation","ESalutation","telMobile","Now","_page_index__WEBPACK_IMPORTED_MODULE_21__","___WEBPACK_IMPORTED_MODULE_10__","_page_block__WEBPACK_IMPORTED_MODULE_20__","datePicker","AfterContractEnd","_ordering_customer__WEBPACK_IMPORTED_MODULE_19__","Text","BrandTariffsList","onSelect","onClickBlister","availableBrands","sortFocus","take","thumbs","dom","classList","contains","getAttribute","parentNode","BrandsList","onlyOne","oneClick","onSelectCat","onSelectProduct","checkDefCon","getFirstProductInCategory","processUrl","createOrder","getBrandByProduct","onlyOneBrandAvailable","getSelected","pathname","getCrossSellingCats","availableCats","brandTariffs","getCategoryBrandProducts","subTitle","sta","inactive","UserData","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","mobilePhone","birthDate","voId","portalStatus","positionId","newsletterId","salutations","positions","newsletters","portalStatuses","UserActivationStatus","EditUserScreen","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","globalCfg","getConfiguration","cfgConfiguration","cfgRoles","_activateUser","contactId","activateUser","_deactivateUser","deactivateUser","_reload","cancelRequest","userActivationStatus","Unknown","loadContact","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","loadUserCallback","saveUserCallback","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__","user","getUser","activationDeactivation","react__WEBPACK_IMPORTED_MODULE_7__","checkAccessRoles","Roles","XTND_ShopManager","XTND_Nutzerverwaltung","Active","_components_page_index__WEBPACK_IMPORTED_MODULE_14__","InActive","_components_index__WEBPACK_IMPORTED_MODULE_12__","_components_page_block__WEBPACK_IMPORTED_MODULE_13__","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","structToKeyTexts","r","isVisible","Stornofreigabe","accountLevel","isSelectable","actStatus","cntId","path","dateValue","eval","struct","trim","saveContact","EAppTheme","sessionStorage","getItem","keyOrders","order","step","processStatus","orders","o","ord","found","bpm","getCategoryBrandMapByProduct","getCategoryKeyByProduct","keyOrdersProducts","adr","targetStatus","avlStore","invalid","resetOrders","other","cur","keyUser","debug","setItem","keyBrands","syncAvailabilityPrices","unity","PriceWrapper","createInstance","EElementType","getMonthlyFee","l","getActivationFee","removeItem","tmp","keyApp","expanded","theme","light","keyCombis","cw","sup","IDefCon","keyDefCon","cab","keySupport","countries","networks","fields","boxes","Availability","getAvailabilityForBrand","EAppState","isAvailable","voidAllowed","notification","bookingAllowed","usr","source","ActivationApi","apiUrl","create","statusRequest","HttpMethods","parseResponse","open","House","homeType","EHomeType","appartmentHouse","homeLocation","EHouseLocation","front","homePosition","ELRPosition","left","techDetails","entranceLocation","appartmentLocation","previousFirstname","previousSurname","tel","ERAPIAction","op","getValue","nullable","isValidRequired","exactLength","isValidExactLength","isValidMaxLength","minLength","isValidMinLength","numeric","isValidNumeric","exactValue","isExactValue","notEqual","isNotEqual","isEmail","isMatch","isPassword","bdayValidation","isDateValid","inputRange","isInputInRange","oneOf","isOneOf","monthRange","isMonthInRange","yearFieldValidity","isYearInRange","dateMax","dateMin","isDateMinMaxValid","isNationalitySameAsIDcard","deliveryDateValidation","bdayValidationVeryPrecise","validateBdayPrecise","validateAlphanumeric","alphanumericWithoutGermanChars","validateAlphanumericWithoutGermanChars","validateGermanIBAN","validateNames","leftAndRightTrim","trimWhitespaces","validateSurname","validateSurnameDSL","passwordOutsideCustomerData","field","targetValue","RegExp","test","oteloFound","or","minimumAgeNeeded","maximumAgeNeeded","ser","age","getAgeFromDate","concat","orderKabel","find","monthDiff","d1","d2","months","foreign","blockInputOnError","blockInput","svalue","setValue","exec","getValueByPath","targetMatch","tempDate","slice","dateParts","split","dateObject","ApiProcess","PopupBody","react__WEBPACK_IMPORTED_MODULE_5__","CustomerConsent","_components_page_block__WEBPACK_IMPORTED_MODULE_9__","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","_page_index__WEBPACK_IMPORTED_MODULE_10__","readonly","viewState","EPreviewState","printedDocument","parseStatus","_page_index__WEBPACK_IMPORTED_MODULE_15__","cancelProgress","_ordering_process__WEBPACK_IMPORTED_MODULE_17__","toUpperCase","activationDone","_page_block__WEBPACK_IMPORTED_MODULE_13__","valueType","EValueType","numberInt","getOrderType","ECancellationType","extraordinary","getExtraodrinaryCancellation","getCancellationReasons","___WEBPACK_IMPORTED_MODULE_11__","requestNeeded","prStep","acStep","printNeeded","printReady","createCancellationProcess","innerType","customerSetCancellation","orderId","receiverId","setValueByPath","Array","ErrorScreen","prepare","isContent","_components_page_index__WEBPACK_IMPORTED_MODULE_12__","_components_page_block__WEBPACK_IMPORTED_MODULE_7__","_components__WEBPACK_IMPORTED_MODULE_11__","Inner1C","child","Popup","hasAction","confirmNegative","confirmPositive","clickOverlay","cssover","styles","confirm","h","renderContent","GetLoaderWithText","ReactDOMServer","renderToString","___WEBPACK_IMPORTED_MODULE_7__","_page__WEBPACK_IMPORTED_MODULE_9__","arg","MnpStatusScreen","_loadData","loadPortingStatus","_onMsisdnChange","statusDataHtml","_components__WEBPACK_IMPORTED_MODULE_10__","statusMsg","_components_dialogs_popup__WEBPACK_IMPORTED_MODULE_11__","ExistingPartnerCard","apiState","EStatusState","onStart","getBrand","renderControl","inprocessTimer","createInstanceFromJson","getOwner","getMembers","renderMember","MobileNumber","subscriberNumber","TariffAndSub","createInstanceFromId","tariffOption","productName","_page_index__WEBPACK_IMPORTED_MODULE_13__","customerGroupCreate","ToolSearchExisting","valoptIdCard","canceled","valopt","valoptNumber","valoptPrefix","getPrefixes","hintVF","msisdnLength","preSearch","startSearch","preventDefault","queryAvailability","switchState","changeBrand","onCancelPopup","getNumberValidation","input","isDelaer","oteloVisible","vfVisible","dslVisible","renderPopupAvailability","autoComplete","_page_index__WEBPACK_IMPORTED_MODULE_24__","renderLogin","onClickEvent","addOrderAndReset","renderDsl","renderOtelo","renderVodafone","controlStlye","placeholder","hideLabel","ecusername","onEnter","temp1","onChangeDropDown","borderRadius","backgroundColor","borderColor","temp2","startsWith","withAvailability","resetAvailability","elements","ev","loadCustomer","ErrorMessage","ScreenCapture","mouse","componentDidMount","handleWindowResize","addEventListener","componentWillUnmount","removeEventListener","windowWidth","innerWidth","document","documentElement","clientWidth","body","windowHeight","innerHeight","clientHeight","handStartCapture","on","handleMouseMove","_this$state","isMouseDown","startX","startY","borderWidth","cropPositionTop","cropPositionLeft","endX","clientX","endY","clientY","isStartTop","isStartBottom","isStartLeft","isStartRight","isStartTopRight","isStartBottomLeft","isStartBottomRight","newBorderWidth","cropWidth","cropHeigth","crossHairsTop","crossHairsLeft","handleMouseDown","prevState","handleMouseUp","handleClickTakeScreenShot","_this$state2","elementerror","querySelector","html2canvas","canvas","croppedCanvas","createElement","croppedCanvasContext","getContext","drawImage","onEndCapture","toDataURL","renderChild","onStartCapture","imageURL","_this$state3","onMouseMove","onMouseDown","onMouseUp","position","top","defaultProps","screenCapture","UserFeedback","handleScreenCapture","screenshot","screenCaptureVisibility","notes","username","error_message","hideShowArea","successFeedback","screenshotStarted","renderThankYouPopUp","renderBugReporter","Screenshot_ScreenCapture","screenShotTool","answerError","suggestion","linkWithIconRight","aria-labelledby","data-parent","rows","getElementById","ActivationResponseStatus","warning","counter","resetTimer","cmp","defaultTimer","timerId","autoRestart","completedCallback","stepCallback","processCallback","componentId","feedback","BaseBlockAction","BlockBase","_React$Component2","cls","clsc","teaser","titleDesc","renderCollapse","___WEBPACK_IMPORTED_MODULE_6__","stopPropagation","_ordering_address__WEBPACK_IMPORTED_MODULE_0__","_ordering_availability__WEBPACK_IMPORTED_MODULE_1__","_ordering_activation__WEBPACK_IMPORTED_MODULE_2__","_ordering_tel__WEBPACK_IMPORTED_MODULE_3__","_ordering_data__WEBPACK_IMPORTED_MODULE_4__","_existing_login__WEBPACK_IMPORTED_MODULE_5__","_global_tariffAndSub__WEBPACK_IMPORTED_MODULE_9__","_global_answerInfo__WEBPACK_IMPORTED_MODULE_10__","_page_infoItem__WEBPACK_IMPORTED_MODULE_11__","_ordering_mnp__WEBPACK_IMPORTED_MODULE_13__","_ordering_autotopup__WEBPACK_IMPORTED_MODULE_14__","_global_filter__WEBPACK_IMPORTED_MODULE_15__","_am_draft__WEBPACK_IMPORTED_MODULE_16__","_global_defcon__WEBPACK_IMPORTED_MODULE_18__","_ordering_customerAction__WEBPACK_IMPORTED_MODULE_19__","_existing_partnerCard__WEBPACK_IMPORTED_MODULE_20__","_global_mobileNumber__WEBPACK_IMPORTED_MODULE_21__","_existing_consumption__WEBPACK_IMPORTED_MODULE_22__","_page_diverse__WEBPACK_IMPORTED_MODULE_23__","Action","support_status","max","htmlFor","ErrorUI","TestScreenComponent","errorFromReponse","timerCompleted","onConfirmNegative","showConfirm","showCustom","showWait","closeAll","onclick","customVisible","pleaseWaitVisible","confirmVisible","table1","table2","responseError","iframeSrc","alert","page_button","gotoDashboard","TestScreen","connect","history","pushState","last","require","getAppUrl","test_form","insex","toLocaleLowerCase","onchange","getQueryVariable","dm","App","setContainer","AppIds","appTitle","skipState","FindReact","fallback","query","vars","pair","decodeURIComponent","_fetch","_x","_x2","_x3","_x4","method","what","get","credentials","headers","Accept","Content-Type","logoutUrl","protocol","host","Key","ErrorGroup","form","Value","extractErrorInfo","orderByDescending","Info","ErrorCode","answer","err","ae","react__WEBPACK_IMPORTED_MODULE_2___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","Fragment","renderToStaticMarkup","arr","getElementsByName","setError","ExistingCustomerLogin","_ApiProcess","_getPrototypeOf2","_len","args","_key","substr","bprod","react__WEBPACK_IMPORTED_MODULE_2__","_components_index__WEBPACK_IMPORTED_MODULE_4__","idOrName","pref","extra","parseModelState","previewMode","fixedValue","getKeyFromPrefix","sname","react_tooltip__WEBPACK_IMPORTED_MODULE_3__","place","effect","data-for","data-tip","PartnerCardGet","customerGroupGet","NDC","MSISDN","mn","Consumed","Remaining","Total","Unit","GigacombiBookOptions","GiggacombiBanners","advertisementBanner","gigacombi_advertisement","renderAuto","hasTv","hasCategory","hasFn","hasVf","hasOtelo","renderButton","nextCat","onCategoryChanged","ProcessNewScreen","currentBookedOption","defcon","selectedBrand","selectedProduct","currentIndex","numbersToPort","mounted","onCategoryChange","catkey","scrollIntoView","behavior","hasKabel","startNewActivation","prepareData","changeCat","previewAvailable","nextUrl","changeCatBrand","handleActivation","applyPayment","applyActivationType","applyCustomerType","applyCustomer","onCreateProcess","onInputData","activationChanged","loadProcess","mobilfunk_doppel_kombi","internet_Phone_Doppel_Kombi","tv_doppel_kombi","initData","startActivationValidation","pay","portationType","renderPreviewPrint","renderProcess","availabilityId","toSend","isPrinted","resetSteps","isTimedout","getPasswordForAdditionalContract","canEditActivation","prname","getTitle","checkMsisdn","gotoView","extractErrorAndValidation","runPopup","pop","renderErrorBlock","ordering_process","aaa","renderCustomer","renderPreview","box","hasProduct","getCategoryBrand","getSupport","hasKip","renderAdditional","renderBrand","advertisement_GiggacombiBanners","bookOption","portDefault","numberPortingType","ENumberPortingType","later","countNumbers","selectionChanged","hasDSL","activationCustomerData","hasPartnerCard","isMultiple","Enumerable","renderPage","WelcomeScreen","inner1","needAvailability","MainScreen","jsxLoader","react_default","loaderVisible","loaderText","loaderState","blank","renderDefCon","global_defcon","Component","InitScreen","interval","init","parseDefcon","setInterval","started","clearInterval","startApp","GetLoader","support","isAuthenticated","CategoryWrapper","refreshAndRoute","ContractManagerDetailsScreen","cols","showTitle","binding","size","sortable","renderer","filterable","reqModel","getContractDetails","_renderPopup","_onDismissPopup","_onDismissMainPopup","onDismissDetailsScreen","nextProps","pagingProps","pageSize","EPagingType","none","coulmns","expnaded","resModel","ContractManagerScreen","needle","txt","labelShort","selectRecord","transactionTypeId","canReprint","rendererHead","expand","selectedRecord","_filterChange","f","_applyFilter","getContracts","itemClick","setDate","obj","search","EFilterType","default","orderManagerFilter","onApply","placeholderSearch","renderData","record","Void","am_managerDetails","local","dateColumn","IDScannerScreen","renderScanner","DraftsScreen","currentRecord","applyFilter","onDismissConfirmPopup","removeDraft","setMonth","confirmRemove","getDrafts","renderPopupConfirm","loadDraft","CancellationScreen","approve","addRemove","TypeId","TypeText","Id","cancellationIds","cancelationConfirm","EditPasswordScreen","showPopup","labelStyle","xl","exception","Message","EditProfileScreen","loadProfile","EDateType","saveProfile","DealerScreen","home","loadAccount","countryCodeVisible","telTypeHidden","closeEditScreen","dataRaw","dealer","cc","ndc","sn","stateModel","saveAccount","AdministrationEditType","DefConScreen","AdministrationScreen","editContact","filterActionButtons","dialogs_popup","contactsRecieved","loadAccountCallback","_onNewUserClick","editType","editContactId","validateAccessRoles","getContacts","editAccount","user_dealer","editUser","newUsrBtn","actionButtons","hideDateFilter","table","accountMainPreviewData","StatusPorting","buttonStatus","renderDetailsSection","optionalButtonSelection","getButtonState","optionalButtons","ContractId","total","getMnpPortingStatusDetails","Kunde","Customer","Tarif","colsPopup","api2","LastStatus","getMnpPortingStatus","OrderProduct","dataTable1","dataTable2","orderProductsModel","priceTotal","currentProduct","ProductGroup","Picture","Name","ProductAvailability","PriceString","Amount","totalAmountProducts","totalPriceEverything","currentAddressByOrder","errorAmount","selectProduct","data2","orderTotal","fullAmountProducts","noAmountFound","dataDetails","validateInput","getOrderDetails","calculateAmount","getOrderProducts","colsTable2","I_id","colsTable1","cfg1","getOrdersList","toFixed","addOrderProducts","Items","getOrderDetail","City","ZIP","Street","HouseNumber","priceFormat","countPrice","Price","DeliveryAddress","savedAddressFullString","ModelStete","valop","getStoredDeliveryAddreses","addressAdditionalFields","voCity","voName","voStreet","voZIP","retailerName","OrderOverview","processPopupStateCustom","processPopupStateWait","orderOverview","processingDone","calculatePriceTotal","saveOrderPoducts","Spice","frameBorder","border","HAportal","frame-ancestors","screens_ordering_process","welcome","manager","idscanner","editPassword","test_StatusPorting","orderProducts_order","BlockInfo","ErrorBlock","Footer","Teaser","popupVisible","Head","fixed","subContent","Inner2C","Inner2CLeft","Inner2CRight","LTime","hh","min","valueControl","changeValue","control","isChild","getHours","getMinutes","time","LTimer","timer","startTimer","completed","stopTimer","tickCallback","cnt","tick","showUI","UserPannel","appSettings","session","_onExpand","_logout","_onExpandUser","_onSwitchTheme","onLogout","trackSession","getAppSettings","expiredSessionVisibility","lifetime","userOpen","backgroundImage","pictureUrl","cssu","localStorage","keyTheme","cssText","inAnyRole","E3_User","XTND_Produktbestellung","linkPanel","_onProfileEditClick","_onPasswordEditClick","Themes","visibilityLogout","dark","blockInfo","errorBlock","footer","inner2","inner2left","inner2right","userpannel","module","exports","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","prio","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","tr","getChildrenIds","shift","withPath","el","toArrayInner","addOrRemove","_TreeItem","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_0__","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__","_home_pc_abiatec_my_projects_Easy3_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","ch","ti","EOptionGroupRenderType","ActivationActions","areYouSureVisibility","resetUnfinishedActivations","GetInstance","hasUnity","getActivationByBrand","syncOrder","updateAvailability","onNextInternal","onYesClicked","renderActions","renderCustomerActions","renderCustomerPreview","renderCustomerTariff","OptionGroup","ids","containerClass","oneMandatory","newSvc","ERenderType","CableRenderer","sel","optionGroup","ActivationOptions","avSelection","checkResult","selectionOk","initSelection","correctCart","cart","check","handleSelection","addRemoveTo","findPath","getMandatory","getMandatoryForElement","AvailabilityWrapper","prepareCableServices","level","applyChanges","checkPopup","inout","applyAutoSelection","validateAvailability","EAvailabilityResultStatus","getvailabilityCheckMessage","updateSelection","AvailabilityProduct","insel","metaname","devices","dropedServices","getService","hasHardware","tvConnect","jdx","hardwareNecesseryAndSelected","hasDroppedServices","renderTvConnectCable","ui","prepareElements","EElementTypeUi","FromTree","parents","getElement","renderSecond","cname","cableServices","ActivationServiceSelector","alreadyBooked","inclusive","serviceRules","onDismissSelector","onDone","thumbClick","availableSvc","reverseExcludes","notbookableWith","abids","excludes","hidden","fmailySort","svcGroup","groupItems","getAllServicesFromConfig","subSvc","checkRules","clickable","ruleCss","insub","rul","EServiceRuleType","canBeRemoved","notRemovable","addRemoveServiceRemove","svcs","svcSelected","bonusType","getAlreadyBooked","getInclusiveOptions","renderSelected","getInfoTooltip","renderSelection","ActivationTariff","virtualOptions","virtualOptionsExclude","popupVirtualOptionsVisible","popupRefreshAvailability","currentFamily","validationOptionsPassword","selectOption","selectOptionVirtual","switchActivationType","selectDate","switchActivationDate","switchAdditional","renderRefreshAvailability","onSelectedOptionsChanged","productTemp","partnerCardPortation","forProduct","renderSubMultiple","Defaults","listSeparator","uprod","getProduct","getChildrenIdSub","subid","currentsub","ubrand","usubs","svcMandatory","subDef","allMandatory","removeServiceLike","virtsvc","optionVirtual","prodSubSvc","prodSubService","hasRegioOnly","_ret2","avlProd","_loop3","isVirtual","optionBundle","mandatorySelected","stay","svcAvl","serviceChecked","marginLeft","getToday","addDays","dto","activationTime","EActivationTime","future","now","fixedStart","clone","indexOfAny","virtualIds","selectedVirtual","actionAllowed","_this10","idAvailabilityPopup","getMe","checkAvailabilityStart","_this11","scrollTo","getAvailabilityProduct","_this12","activationServiceSelector","cableRenderer","activationOptions_ActivationOptions","renderPopupVirtualOptions","renderDate","_this13","addRemoveProduct","startAvailabilityIfNeeded","_this14","hasHw","resetChildren","ActivationSummary","brutto","bruttoAct","hasGiga","removeContract","saveDraft","getDraftFromActivation","editContract","editActivation","htmlDiscount","vodafoneIsChecked","getFirstSuitableCombi","renderActivations","getBlister","previewAvailableForAtLeastOne","renderActivation","renderSummary","hasMultiple","renderActivationSingle","actIndex","cssi","isDone","ttProduct","index_es","getProductMonthlyFee","ttHardware","getSubMonthlyFee","ttOptions","getOptionMonthlyFee","ttActivation","removeActivation","ActivationProgress","cssp","getStringFromEnum","getProgressStatus","getProgressStatusForOrderProducts","ELElementStatus","CustomVodafoneGigaCombi","PreviewDelivery","delivery","PersonAndAddress","deliveryType","differentAddress","callbackTime","deliveryDate","global_tel","dateOnly","PreviewCustomerData","ActivationPreview","renderHint","gigaCombi","renderSummaryPrice","newCustomerData","prw","ActivationMsisdn","businessType","trimValue","ActivationSim","lbl","getErrorFromState","ActivationTel","TelModel","msisdnArray","areaCode","howManyElToDisplay","telModel","withPading","valueChange","disablePrefix","PortingOptions","portType","single","getFromNumbers","individualNumber","multipleNumbers","multiplePortingAvailable","multiple","getNumberCount","hasBasic","opt","_i","applyCablePortation","ActivationHardware","ActivationContractBlock","static","ActivationBlockSimple","handleCategoryBrand","handlePayment","handleActivationType","handleCusomerType","canMnpPredate","canMnpStandard","canSoho","canPrepaid","hasNextContract","cfgCategory","nextBrands","getOtherBrandsAvailable","normal","canSwitchCat","soho","ActivationAvailability","currentId","onDelete","onCompleted","timerCallback","timerCompletedCallback","closed","forUI","AutoInput","nextStep","activationResponseStatus","resetCategory","getControls","ActivationMnp","EPortationType","asap","activationActions","activationTariff","activationSummary","activationProgress","activationPreview","activationMsisdn","activationSim","activationTel","portingOptions","activationHardware","activationBlockSimple","activationAvailability","activationMnp","Status","counterDefault","timerTick","background","proc","_page__WEBPACK_IMPORTED_MODULE_7__","_app_IBaseComponentState__WEBPACK_IMPORTED_MODULE_0__","_app_IApiAction__WEBPACK_IMPORTED_MODULE_1__","_app_IApiError__WEBPACK_IMPORTED_MODULE_2__","_app_IApiResponse__WEBPACK_IMPORTED_MODULE_4__","Lists","brandCats","tv_fn","Auftragsmanager","Backoffice","CMSAdministrator","CMSBearbeiter","E3_Backoffice","E3_EPM","E3_UserForNewEmployee","Hotline","IdentityServerAdministrators","IdentityServerDevelopers","IdentityServerUsers","PortalAdministrator","PortalTester","PortalUser","VodafoneSMS","XTND_Druckshop","XTND_Kampagnen","XTND_Provisionen","XTND_Provisionssimulation","XTND_Reporting","VodafonePositions","Hauptabteilungsleiter","Vertriebsleiter","Vertriebsbeauftragter","Niederlassungsleiter","Niederlassungssupport","StringTokens","currencyUnit","ModelStateError","ModelState","errors","specialCase","OrderingBase","validateServiceGroups","isWithHardware","validateSim","validateRequired","validateNumeric","hasErrors","allNumbers","splitted","numberInfo","errorFound","tempArray","oneNumber","serviceGroups","g","EValidationGroupType","svcNames","OrderingVodafone","_OrderingBase","prototype","subHasOption","ESubOptions","ImeiRequired","addValues","getPropertyPath","OrderingOtelo","OrderingDsl","OrderingCable","OrderingUnity","showErrors","getElementsByClassName","controlSelector","validateControls","selector","firstFailed","fld","getKey","applyFieldConfig","getValidationOptions","vo","getId","setValidationOptions","inline","hasBrand","inPostpaid","inActDefault","inPrepaid","inActMnp","inCdChange","hideShow","getPortationCount","validateOrder","VisibilityOrdering","_step","_iterator","_createForOfIteratorHelper","n","activationTypes","validation_modelState","orderingBase","brandValidationVf","validationWrapper","TariffThumb","_onClick","uid","ttm","formated","react_tooltip__WEBPACK_IMPORTED_MODULE_7__","BrandThumb","multiBasketId","clst","clin","withoutInfo","activationStatus","LButton","renderNormal","renderIcon","renderButtonIcon","renderImageIcon","textWithIconLeft","renderTextIcon","renderLinkIcon","renderLink","prices","getEmptyFee","billingFrequency","BillingFrequency","monthly","periodEnd","once","avlBrand","applyElements","connectionTypes","asb","offeredAccessTechnology","bandwidth","speed","speedText","exc","meta","selectionArray","selectMandatoryForParent","elem","getExcludes","tree","newparent","appendElements","currentPath","selectedMandatory","toElementUi","childrenSelected","toElementUiString","deselectElements","_this15","validateElements","_this16","getElementStatus","spath","getUserFriendlyPath","getFullPath","_this17","svc2","_this18","kav","brdsl","_this19","EMnpType","EActivationFileType","EPreviousAccessOwner","EBonusType","EcancellationProcessView","EEvnType","ETargetNumber","ETopupType","EPhonebookType","LLabel","BuildEnv","build","Dev","Prod","Int","ESortDirection","TablePaging","getPaginationItemsPerPage","itemsPerPage","onFirstPageClick","onLastPageClick","onPrevPageClick","onNextPageClick","onPageClick","selectedPage","pagesToRender","lastPage","Math","ceil","totalItemsCount","Pagination","Item","First","Prev","Next","Last","color","onPaginationPageChanged","Table","me","hasMoreItems","_resetSortIcons","sortCol","columns","col","sortDirection","Desc","_sortDescending","_sortAscending","Asc","_sort","pagingModel","filterAndPaginate","paging","paging_TablePaging","renderTable","applyLocalPagging","server","applyServerPagging","pager","renderRow","getWidth","renderFooter","sortableHtml","sortButton","renderHead","row","renderColumn","totalCount","setHours","dateok","PreviewContract","failedOnce","prevStatus","downloads","customerUpdated","checkBoni","onPrintDocument","setActivationDone","e3c","activateManually","loadCustomerRefresh","renderPopupConfirmSigned","confirmSigned","onActivate","renderPopupConfirmBoniSigned","confirmBoni","onRequestPrint","onDownload","contractRequested","onActivateConfirm","activationStarted","onOverview","socketCallbackCustomer","tempStatus","timeout","checkStatus","renderMultiple","getCategoryByProduct","categoryOne","categoryTwo","renderActionCustomer","_brandThumb__WEBPACK_IMPORTED_MODULE_28__","renderMain","renderPrice","renderStatusBlock","_page_index__WEBPACK_IMPORTED_MODULE_26__","renderStatus","getActionName","getProductName","getContractType","getMsisdn","getCustomerId","getContractIdUi","activationDateTitleUI","getContractId","getSim","subUI","optionsUI","promotionsUI","allServices","bcss","consentSet","printReadyBoni","hasBoniFile","getFile","boni","react_tooltip__WEBPACK_IMPORTED_MODULE_11__","getStep","onDownloadNotReady","ctrldbg","constants","getSteps","responseObject","Files","updateSteps","stepPrint","stepAct","checkSuccess","uiUpdate","_process_activationResponseStatus__WEBPACK_IMPORTED_MODULE_29__","EEasyTransactionType","EEasttransactionStatus","EDesiredSchedule","EComponentState","prid","businessCases","filterServicesFromAvailability","svcAll","svcSel","S","A","LControl","rules","targetName","toggle","disable","onKeyDown","renderTitle","cssHint","hintText","hintObject","ii","iidx","renderPassword","renderTextbox","renderRadio","renderCheckbox","renderDropDown","renderInfo","renderToggle","additionalClasses","onPaste","pasteDisabled","react_tooltip__WEBPACK_IMPORTED_MODULE_8__","defaultValue","LClear","ActivationPrice","monthlyFeeProduct","monthlyFeeSub","monthlyFeeOptions","activationFeeProduct","activationFeeSub","activationFeeOptions","ActivationHelper","fromSelection","ActivationUI","fromActivation","calculatePrices","productUI","prom","oid","getOptionUniqueId","barcode","convertUTCDateToLocalDate","draftId","isSimulation","Type","hasContractFile","contractMain","getActivationDate","addChildren","currentInSel","thisCat","prBrand","updateStep","avlp","_loop4","_ret3","hw","hwbr","containsAny","pattern","_loop5","_loop6","some","_loop7","_ret5","CustomerId","Sim","I","P","_IActivation","hardware","activationDateUI","msisdnUI","barcodeUI","simUI","customerIdUI","_this20","tooltipExtra","getTooltipOptions","getTooltipActivation","_this21","prAvl","bse","getOptionPriceMonthly","_this22","_loop8","ensureUi","Boolean","hostname","getStore","appStore","subscribe","getState","ReactDOM","render","es","store","navigator","serviceWorker","registration","unregister","EDateInputMode","registerLocale","de","LDate","textFieldDate","handleChange","dateToString","startDate","onChangeD","onChangeM","onChangeY","toDate","withToggle","regEx","applyValue","react__WEBPACK_IMPORTED_MODULE_8__","_control__WEBPACK_IMPORTED_MODULE_19__","dateWrapper","textInput","handleChangeTextInput","_clear__WEBPACK_IMPORTED_MODULE_18__","react_datepicker__WEBPACK_IMPORTED_MODULE_12___default","popperClassName","locale","dateFormat","showYearDropdown","showMonthDropdown","maxDate","minDate","popperModifiers","enabled","preventOverflow","escapeWithReference","boundariesElement","showDisabledMonthNavigation","popperPlacement","customInput","getDynamicDays","getDynamicMonths","getDynamicYears","fromGermanDateString","dateIsValid","setFullYear","getDays","getDaysInMonth","days","getMonths","ml","N","M","getYears","minimumBdayYear","CustomerEVN","hasVodafone","hasDsl","evnType","fullEvn","shortEvn","noEvn","targetNumberType","CustomerDSL","house","prefixDisabled","hasDslOnly","showAddress","detachedHouse","getFllors","showTel","titleTel","CustomerLegitimation","bank","hasKabelOnly","hintIdCard","maxWidth","imageInfoIdCard","imageInfo","hasVodafoneOrDsl","ccNumber","ccBank","ccMonth","ccYear","hasOteloPrepaid","AccessOwner","AccessNumber","Person","bdid","bdname","sal","renderInner","showBirthday","CustomerDataMain","email2","createDate","callbackTimeSplitted","CallbackTimeSplitted","minYear","pwAdditional","noPasswordNeeded","hasUnityOnly","marginBottom","person","getNationalities","withAditional","showStrnAdditional","renderDelivery","renderInst","renderPreviousAccessOwner","emailApproved","years","dt","bt","del","prev","prevOwner","noPreviousOwner","previousAccessNumber","previousOwner","instType","inst","CustomerPayment","unityOnly","oteloOnly","hasOteloOnly","oteloPrepaid","canIban","cash","topup","bankId","accountId","CustomerConsulting","CustomerAction","CustomerMnp","portBrand","getPortationBrand","hasCdChange","ActivationCustomerData","getNetworks","getProviders","hasVodafoneWithMnp","hasCableWithMnp","customerNr","hasVodafoneWithMnpANDPortierungandASAP","cast","net","CustomerDesiredSchedule","ds","installationSchedule","dateType","dateVisible","CustomerTopup","needTopUp","amountSingle","trigger","getAmounts","getTriggers","getNow","consulting","customer_topup","countryCodeControl","_page_index__WEBPACK_IMPORTED_MODULE_12__","inDsl","inOtelo","inVodafone","inKabel","hasPrepaid","hasPostpaid","hasActDefault","hasActMnp","selectedServices","getProductsTree","con","keyNecessary","phonebook","createProcessFromData","newid","ART","res1","res2","bookableProducts","ps","splitProductSub","bp","psub","defineProperty","predicate","TypeError","len","thisArg","kValue","String","searchString","valueOf","DefCon","warningVisible","blockScreen","Browser","isIE","isSafari","isFirefox","isEdge","_Component","extras","canAccess","popupDefCon","currentTheme","append","handleScroll","onpopstate","initialised","popUpVisibility","expiredSessionUser","firstLoginDataCheck","runnable","comp","reload","setAttribute","isBlank","getBrowserString","oteloOnlyBookable","defConPopup","show","textAlign","scrollTop","scrollY","fix","AppC","InputWrapper","buildEnv","jQuery","$","signalR","Error","makeProxyCallback","makeArray","registerHubProxies","instance","shouldSubscribe","memberKey","memberValue","subscriptionMethod","hubName","off","client","isFunction","cnnDev","cnn","DevInt","hubConnection","useDefaultPath","extend","_registerSubscribedHubs","createHubProxies","proxies","starting","disconnected","createHubProxy","onSend","invoke","merge","SignalRClient","autostart","connectionId","auto","requestType","connection","trustlightApiHub","pushResponse","pingInterval","transport","fail","stop","parseSocketAndApiResponse","login","defconChanged","receiver","parseAvailability","receiverAvl","receiverCust","scr","applyAvailability","customerChangeAddCombi","contractSummaryPost","socketCallbackDetails","loadProfileCallback","saveProfileCallback","saveAccountCallback","socketCallbackOrdersList","activateUserCallback","deactivateUserCallback","notify","keys","internalInstance","return","_debugOwner","stateNode","_currentElement","_owner","_instance","cache","today","bday","getTime","getTimezoneOffset","toISOString","errorInfo","role","redirect","hours","needles","isLeapYear","stat","dd","mm","yyyy","re","creditcard","GetValueForControl","isNaN","object","reduce","priority","thenBy","timestamp","devUrl","getVersion","followUrl","parseSocketResponseAndContinue","parseApiResponseAndContinue","getEmptyGuid","random","Filter","onButtonChange","inProcessing","_components_page_index__WEBPACK_IMPORTED_MODULE_11__","getTimeFilterOptions","renderCats","cb","hour","minutes","prov","variant","_page_inputWrapper__WEBPACK_IMPORTED_MODULE_15__","_customer_index__WEBPACK_IMPORTED_MODULE_16__","topUPageValidation","ownerChanged","canbook","ageOfCustomer","Category","catBrandMap","categories","any","brandsFnTv","av","isBrandAvailableInDefCon","fa","allBrandsInCategoryAvailable","allInCat","allAvl","withBlister","bdc","applyAvailabilityToProducts","getBrandProductIds","brandsAvl","ip","IP","BP","oneIsAvailable","oneOfIsAvaialble","productsAvailable","getCategoryProductsAvailable","setInfo","distinctBrandsWithProducts","brp","valProduct","withMandatory"],"mappings":"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","file":"static/js/main.8a9f9493.chunk.js","sourcesContent":["export class ValidationMessages {\r\n    public static multipleDslComfortError: string = \"Eine Übernahme von mehreren Rufnummern ist nur mit gebuchter Komfort-Anschluss Option möglich. Bitte den Komfort-Anschluss auswählen oder mit einer Einzelportierung fortfahren.\";\r\n    public static requiredError: string = \"Pflichtfeld.\";\r\n    public static nationalityError: string = \"Die Nationalität des Kunden und die Art des gewählten Ausweisdokuments stimmen nicht überein.\";\r\n    public static numericError: string = \"Bitte geben sie eine Zahl ein.\";\r\n    public static selectItemError: string = \"Bitte wählen sie ein Wert aus.\";\r\n    public static errorImei: string = 'Bitte geben Sie die IMEI ein.';\r\n    public static errorProd: string = 'Bitte wählen Sie ein Tarif aus.';\r\n    public static errorSub: string = 'Bitte wählen Sie eine SUB Stufe aus.';\r\n    public static errorHardware: string = 'Bitte wählen Sie eine Hardware aus.';\r\n    public static errorOption: string = 'Bitte wählen S ie eine Option aus.';\r\n    public static errorCart = 'Bitte überprüfen Sie den Warenkorb.';\r\n    public static errorPortationCount = 'Max. eine portierung pro Bestellung möglich';\r\n    public static errorEditDone = 'Diese Aktivierung darf nicht mehr geändert werden';\r\n    public static errorOneMandatoryOption = 'Eine der Optionen/Dienste muss ausgewählt sein: {0}';\r\n    public static errorSim: string = 'Bitte tragen Sie die SIM Seriennummer ein.';\r\n    public static errorSimNumeric14: string = 'Die SIM Seriennummer muss 14 stellig und numerisch sein.';\r\n    public static errorMsisdnNumeric: string = 'Die MSISDN muss numerisch sein.';\r\n    public static errorImeiNumeric: string = 'Die IMEI muss numerisch sein.';\r\n    public static errorImei15: string = 'Die IMEI muss 15 stellig sein.';\r\n    public static errorMsisndCode: string = 'Bitte tragen Sie die MISDN und die Aktivierungscode ein.';\r\n    public static titleValidationError: string = 'Validierungsfehler';\r\n    public static errorGeneral = 'Bei der Verarbeitung der Anforderung ist ein Fehler aufgetreten.';\r\n    public static errorValidation = 'Validierungsfehler.';\r\n    public static errorExactLength = 'Das Feld $0 muss $1 stellig sein.';\r\n    public static errorMaxLength = 'Das Feld $0 muss max. $1 Zeichen lang sein.';\r\n    public static errorNumeric = 'Das Feld $0 muss numerisch sein.';\r\n    public static errorEmail = 'E-Mail nicht valid.';\r\n    public static errorDeliveryDate = 'Der ausgewählte Liefertermin muss bis zu sechs Monate nach dem Aktivierungsdatum liegen';\r\n    public static oteloMSISDNareaError = '';\r\n    public static errorEmailMatch = 'Beide E-Mail sind nicht gleich.';\r\n    public static errorBrandNotAvailable = \"Nicht verfügbar\";\r\n    public static errorPassword = \"Die Eingabe entspricht nicht den unten aufgeführten Vorgaben\";\r\n    public static errorPasswordOutsideCustomerData = \"Bitte achten Sie auf die Kennwortrichtlinie.\";\r\n    public static errorPasswordMatch = \"Beide Kennwörter müssen übereinstimmen.\";\r\n    public static errorMonthFormat =  \"Der Monat muss im Format 01, 02 ... 12 eingetragen werden.\";\r\n    public static errorYearFormat =  \"Das eingegebene Jahr darf nicht vor dem aktuellen Jahr liegen und muss im Format 20, 21 ... 25 eingetragen werden\";\r\n    public static alphanumeric = \"Die ausstellende Behörde beginnt mit einem Großbuchstaben. Die Eingabe sollte nur aus Buchstaben, Zahlen und Leezeichen bestehen\";\r\n    public static alphanumericNoUmlauts = \"Die Eingabe sollte nur aus Buchstaben und Zahlen ohne Leerzeichen bestehen\";\r\n    public static germanIBANerror = 'IBAN ist nicht Gültig.';\r\n    public static surnameDSL = 'Der Nachname beginnt mit einem Großbuchstaben und ist zwischen 2 und 30 Zeichen lang. Nur Buchstaben, Bindestrichen und Leerzeichen sind erlaubt';\r\n\r\n    public static errorDateFormat = 'Geben Sie ein gültiges Format ein';\r\n    \r\n};\r\n\r\nexport class Hints {\r\n    public static dataCorrectCheck = 'Bitte überprüfe ob alle Daten richtig sind.';\r\n    public static addressCorrected = 'Addressdaten wurden korrigiert';\r\n    public static noMoreInfo = 'Keine weiteren Informationen verfügbar';\r\n    public static hintMandatoryServicesVodafone = '*Die folgenden Einstellungen werden bei der Buchung automatisch vorgenommen und können bei Bedarf nachträglich angepasst werden. Bei Vertragsabschluss erhält dein Kunde keine Eintragung in ein gedrucktes oder elektronisches Telefonbuch. Seine Rufnummer wird bei Anrufen angezeigt. Die Dienste zum SMS Versand und Empfang sowie die Nutzung der Standard Mailbox sind voreingestellt.';\r\n    public static customerSignedDocument = 'Hat der Kunde das Vertragsdokument unterzeichnet?';\r\n    public static customerSignedBoni = 'Bitte stelle sicher das alle Kundendaten richtig eingegeben wurden und hat dein Kunde das Bonitätsprüfungs-Einverständnis unterschrieben?';\r\n    public static paymentHintOPS = 'Der Kunde erhält seine mtl. Rechnung an die oben angegebene E-Mail Adresse $email. <br/>Für den Rechnungsversand per Mail muss der Kunde seine E-Mail Adresse bestätigen. Bitte weisen Sie den Kunden darauf hin, dass er von otelo eine Mail mit einem Link erhält, den er zur Bestätigung seiner E-Mail Adresse anklicken muss.';\r\n    public static paymentHintOPL = 'Dem Kunden stehen seine Rechnungen online unter www.otelo.de zur Verfügung.';\r\n    public static simReplaceHint = 'Information:<br/>Die SIM-Karte wird an die hinterlegte Kundenadresse verschickt.<br/>Dies dauert in der Regel 1-3 Werktage.<br/>Die Kosten für die SIM-Karte werden dem Kunden auf der nächsten Rechnung ausgewiesen.';\r\n    public static hintVfVllOldTariff = 'Hinweis: Bei Vertragsverlängerungen oder Tarifwechseln werden deinen Kunden nur Tarife angeboten, die sich im aktuellen Vermarktungsportfolio befinden. Alt-Tarife werden zurzeit nicht angeboten.';\r\n    public static passwordOutsideCustomerDataHint = 'Das Passwort muss mindestens 8 Zeichen lang sein und darf maximal 30 Zeichen betragen. Das Passwort muss mindestens 1 Großbuchstaben (ABC...) enthalten. Das Passwort muss mindestens 1 Kleinbuchstaben (abc...) enthalten. Sonderzeichen wie , und ; sind nicht erlaubt.'\r\n};\r\n\r\nexport class ActivationMessages {\r\n    public static requestContract: string = 'Vertragsdaten prüfen';\r\n    public static requestContractOptions: string = 'Dienständerung prüfen';\r\n    public static reRequestContract: string = 'Vertrag erneut anfordern';\r\n    public static completeContract: string = 'Vertrag abschliessen';\r\n    public static completeContractOptions: string = 'Dienständerung abschließen';\r\n    public static print: string = 'Ausdrucken';\r\n    public static printOptions: string = 'Zusatzvereinbarung drucken';\r\n    public static overview: string = 'Aktivierungsbestätigung';\r\n    public static reset: string = 'Reset';\r\n    public static run: string = 'Ausführen';\r\n    public static saveSuccess = 'Die Daten wurden erfolgreich gespeichert.';\r\n    public static execSuccess = 'Erfolgreich ausgeführt.';\r\n    public static prolongateWithCurrent = 'Mit aktuellem Tarif verlängern';\r\n};\r\n\r\nexport class ActionTexts {\r\n    public static requestInProcess = 'Abfrage wird ausgeführt';\r\n    public static orderSim = 'Ersatz SIM Karte bestellen';\r\n    public static addImei = 'IMEI nachmelden';\r\n    public static cancel = 'Cancellation';\r\n    public static belateporting = 'Nachträgliche Rufnummerübernahme durchführen';\r\n    public static addNextContract = 'Weiteren Vertrag hinzufügen';\r\n    public static loadData = 'Daten werden geladen';\r\n};\r\n\r\nexport class MainTexts {\r\n    public static hint = 'Hinweis';\r\n    public static feeActivation = 'Anschlusspreis (einmalig)';\r\n    public static feeMonthly = 'Monatliche Gebühr';\r\n    public static feeBookedOptions = 'Kosten gebuchten Optionen';\r\n\r\n    public static logout = 'Abmelden';\r\n    public static contactNumber = 'Kontaktnummer';\r\n    public static loginInfo = 'Aufgrund von Inaktivität wurde Ihre Session beendet. Per Klick auf den Button werden Sie zur Anmeldung weitergeleitet.';\r\n    public static costs = 'Kosten';\r\n    public static areUsureLogout = 'Bist du sicher, dass du vf-easy.de verlassen möchtest?';\r\n    public static post = 'Post';\r\n    public static phoneContractExtension = 'Telefon (nur Vertragsverlängerung)';\r\n    public static costsAll = 'Gesamt';\r\n    public static scrollToConsents = 'BEW ANPASSEN';\r\n    public static costsBookedOptions = 'Kosten gebuchten Optionen';\r\n    public static letterOfAceptance = 'Einverständniserklärung';\r\n    public static belatedPortingTitle = 'Nachträgliche Rufnummerübernahme';\r\n    public static ready = 'Fertig';\r\n    public static sendBillType = 'Art der Rechungszustellung';\r\n    public static securityQuestion = 'Sicherheitsfrage';\r\n    public static securityAnswer = 'Sicherheitsantwort';\r\n    public static vf_dsl_email_text = 'Wenn keine E-Mail-Adresse vorhanden ist, trage folgende Dummy-E-Mail-Adresse ein: 0@d2.de';\r\n    public static otelo_email_text = 'Wenn keine E-Mail-Adresse vorhanden ist, trage folgende Dummy-E-Mail-Adresse ein: dummy@arvato.de';\r\n    public static start = 'Starten';\r\n    public static phone = 'Telefon';\r\n    public static gigacombiTitle = 'GigaKombi Vorteile';\r\n    public static gigaShow = 'GigaKombi anzeigen';\r\n    public static activate = 'Aktivieren';\r\n    public static deactivate = 'Deaktivieren';\r\n    public static bill = 'Rechnung';\r\n    public static sms_mms = 'SMS/MMS';\r\n    public static evn = 'Einzelverbindungsnachweis';\r\n    public static allTariffs = 'Alle Tarife';\r\n    public static activationFee = 'Einmalbetrag';\r\n    public static favoriteTariffs = 'Beliebteste Tarife';\r\n    public static roles = 'Rollen';\r\n    public static printFile = 'Ausdruck';\r\n    public static serviceAddRemove = 'Dienste hinzufügen/entfernen';\r\n    public static numberPortability = 'Rufnummermitnahme';\r\n    public static numberOptions = 'Rufnummeroptionen';\r\n    public static optionsMandatory = 'eine muss ausgewält werden';\r\n    public static group = 'Gruppe';\r\n    public static owner = 'Besitzer';\r\n    public static partner = 'Partner';\r\n    public static member = 'Mitglied';\r\n    public static imei = 'IMEI';\r\n    public static imeiMenuItem = 'IMEI-Nachmelden';\r\n    public static imeiPageTitle = 'IMEI - NACHMELDUNG';\r\n    public static exCustBillsWithBday = 'Hinweis: Die Anzeige der Rechnungen und Einzelverbindungsnachweise ist nur nach Bestandskunden-Aufruf mit MSISDN und Passwort möglich.';\r\n    public static imeiListUpload = 'IMEI LISTEN UPLOAD';\r\n    public static imeiListUploadDesc = 'Bitte beachten Sie beim Upload von IMEI-Listen:<br />Upload von IMEI Nachmeldelisten kann ausschließlich im CSV Format erfolgen.<br />Die Upload Datei ist mit den Informationen MSISDN (Wert 1) und IMEI (Wert 2) zu füllen (Reihenfolge einhalten).<br />Eingabearten der MSISDN können in den Formen +49, 0049 oder 49 erfolgen.<br />Die Spalteninformationen sind durch das Zeichen „Semikolon“ (;) voneinander zu trennen.<br />Es kann pro Rufnummer nur eine IMEI nachgemeldet werden.<br />Eine IMEI kann nicht später als 42 Tage nach Aktivierung berücksichtigt werden.<br />Das Ergebnis einer Vorabprüfung wird Ihnen, direkt nach Upload, in Form einer ergänzten Liste zurückgespielt.<br />Bei dem Ergebnis der Vorabprüfung handelt es sich nicht um eine ﬁnale Prüfung die einen Prämienanspruch begründet. Die Prämienrelevanten Informationen entnehmen Sie bitte Ihrer Prämienabrechnung.<br />Bitte beachten Sie beim Upload von IMEI-Listen: <a href=\"/files/imeiupload.csv\">Download CSV-Datei</a><br />';\r\n    public static imeiManualDesc = 'Sie können zu einer Rufnummer, die zu einem in Ihrem Shop erfassten Vertrag gehört, eine IMEI nachmelden.<br />Bitte beachten Sie:<br />Es kann pro Rufnummer nur eine IMEI nachgemeldet werden.<br />Eine bereits gemeldete IMEI kann nicht erneut eingegeben werden.<br />';\r\n    public static editProfile = 'Profil bearbeiten';\r\n    public static changePassword = 'Passwort ändern';\r\n    public static userAdministration = 'Verwaltung';\r\n    public static personalIdNr = 'Ausweisnummer';\r\n    public static legitimationCreditCard = 'Kartennummer';\r\n    public static cardNumber = 'Kartennummer';\r\n    public static legitimationCreditCardAt = 'bei Kreditinstitut';\r\n    public static month = 'Monat';\r\n    public static year = 'Jahr';\r\n    public static day = 'Tag';\r\n    public static title = 'Titel';\r\n    public static firstname = 'Vorname';\r\n    public static surname = 'Nachname';\r\n    public static textAvailability = 'Verfügbarkeit am Ort prüfen';\r\n    public static noErrors = 'Keine Fehler';\r\n    public static textError = \"Bei der Verarbeitung ist ein Fehler aufgetretten.\"\r\n    public static textSIMCards = \"Kartendaten\";\r\n    public static vfserial = 'VF-Seriennummer';\r\n    public static textConnectivity = 'Existiert ein DSl/Kabel Anschluss?';\r\n    public static connectivityPresent = 'Anschluss vorhanden';\r\n    public static connectivityNotPresent = 'Kein DSL/Kabel';\r\n    public static vodafoneCustomerNo = 'Kein Vodafone Kunde';\r\n    public static vodafoneCustomer = 'Vodafone Kundennummer';\r\n    //public static textSIMCardsForPorting = \"Zu portierende Rufnummer\";\r\n    //public static dslNummer = \"Zu portierende Rufnummer\";\r\n    public static street = \"Straße\";\r\n    public static houseNumber = \"Hausnummer\";\r\n    public static phoneNumber ='Rufnummer'\r\n    public static city = \"Ort\";\r\n    public static addressAdditional = \"Adresszusatz\";\r\n    public static zip = \"PLZ\";\r\n    public static nameAddress = \"Name\";\r\n    public static address = 'Anschrift';\r\n    public static stnr = \"Hausnummer\";\r\n    public static stnre = \"Zusatz\";\r\n    public static telPrefix = \"Vorwahl\";\r\n    public static countryCode = \"Landesvorwahl\";\r\n    public static telnummer = \"Nummer\";\r\n    public static gigakombiTooltip = \"Hat dein Kunde schon einen Giga Kombi Marker und somit auch ein Festnetz / TV Paket gebucht? Sprich den Kunden gerne an, ob er damit zufrieden ist und prüfe, ob ggf. ein Speedupgrade möglich ist. Hat Dein Kunde keinen der Kombimarker gesetzt ist das ein weiteres Potential die aktuelle VVL mit weiteren Rabatten oder Datenvolumen aufzuwerten (Gigakombi) - bis zu -10€ & +10GB.\";\r\n    public static mobilePhoneNumber = \"Mobilfunknummer\";\r\n    public static email = \"E-Mail\";\r\n    public static emailLastChange = \"E-Mail Letzte Änderung\";\r\n    public static deliveryAddress = 'Lieferadresse';\r\n    public static deliverydate = 'Lieferdatum';\r\n    public static telCallback = \"Callback time\";\r\n    public static adrAdditional = 'Adresszusatz';\r\n    public static notAvailable = \"Nicht verfügbar\";\r\n    public static available = \"verfügbar\";\r\n    public static inCheck = \"wird geprüft\";\r\n    public static dateOfBirth = \"Geburtsdatum\";\r\n    public static validFrom = \"Gültig ab\";\r\n    public static validTo = \"Gültig bis\";\r\n    public static customerId = 'Kundennummer';\r\n    public static nationality = \"Nationalität\";\r\n    public static mr = \"Herr\";\r\n    public static mrs = \"Frau\";\r\n    public static salutation = \"Anrede\";\r\n    public static no = \"Nein\";\r\n    public static yes = \"Ja\";\r\n    public static pleaseSelect = 'Bitte auswählen';\r\n    public static pleaseWait = 'Bitte warten';\r\n    public static productSelection = 'Produktauswahl';\r\n    public static sepa = 'SEPA Mandat';\r\n    public static contractTv = 'Vertrag TV';\r\n    public static contractFn = 'Vertrag Festnetz';\r\n    public static contractId = 'Vertrags Nr.';\r\n    public static webOrderId = 'Weborder-ID.';\r\n    public static referenceId = 'Referenz Nr.';\r\n    public static businessCase = 'Geschäftsfall';\r\n    public static postpaid = 'Postpaid';\r\n    public static prepaid = 'Prepaid';\r\n    public static date = 'Datum';\r\n    public static contractEndDate = 'Vertragsende';\r\n    public static complete = 'vollständig';\r\n    public static shortened = 'verkürzt';\r\n    public static unkonwnAtThisTime = 'noch nicht bekannt';\r\n    public static euro = '€';\r\n    public static toDashboard = 'Zum Dashboard';\r\n    public static save = 'Speichern';\r\n    public static saveOptions = 'Dienste ändern';\r\n    public static next = 'Weiter';\r\n    public static back = 'ZURÜCK';\r\n    public static print = 'Ausdrucken';\r\n    public static backToCustomer = 'Zu den Kundendaten';\r\n    public static paymentType = 'Zahlungsart';\r\n    public static paymentData = 'Zahlungsdaten';\r\n    public static deliveryData = 'Lieferung';\r\n    public static idNumber = 'Personalausweis-Nummer';\r\n    public static idGerman = 'Deutscher Personalausweis';\r\n    public static idNotGerman = 'Nicht deutsches Dokument';\r\n    public static thankYou = 'Vielen Dank';\r\n    public static thankYouFor = 'Vielen Dank für Ihre';\r\n    public static reasoningPOS = 'BEGRÜNDUNG POS';\r\n    public static cancellation = 'Stornierung';\r\n    public static dealerInfo = 'HÄNDLER INFO';\r\n    public static orderType = 'Auftragsart';\r\n    public static timeFilter = 'Zeitraum';\r\n    public static extraordinaryCancellation = 'Ausserordentliche Stornierung beantragen';\r\n    public static typeOfCancellation = 'Art der Stornierung';\r\n    public static floor = 'Etage';\r\n    public static reason = 'Grund';\r\n    public static dealerName = 'Händlername';\r\n    public static customerNumber = 'Kontaktnummer';\r\n    public static numberToBePorted = 'Zu portierende Rufnummer';\r\n    public static currentPrepaidNumber = 'Bisherige Prepaid Nummer';\r\n    public static portingTime = 'Portierungszeitpunkt';\r\n    public static immediately = 'Sofort';\r\n    public static afterContractEnds = 'Nach Vertragsende';\r\n    public static networkProvider = 'Netz des Anbieters';\r\n    public static yourOrder = 'NEUE BESTELLUNG';\r\n    public static orderProducts = 'PRODUKTE BESTELLEN';\r\n    public static yourOrders = 'IHRE BESTELLUNGEN';\r\n    public static savedAddress = 'gespeicherte Adresse';\r\n    public static newAddress = 'neue Adresse';\r\n    public static orderOverviewTitle = 'Bestellübersicht';\r\n    public static backToOrderProducts = 'Zurück zu PRODUKTE BESTELLEN';\r\n    public static monitorYourOrders = 'Sie können den Status Ihrer Bestellung in Ihre Bestellungen überwachen.';\r\n    public static genderError =  \"Bitte wählen Sie ein Geschlecht aus.\";\r\n\r\n    public static portingInformation = 'Angaben zur Portierung';\r\n    public static individualPorting = 'Einzelportierung';\r\n    public static multiplePorting = 'Mehrfach Portierung';\r\n    public static laterPorting = 'Später nachreichen';\r\n    public static numberOFPhonesToBePorted = 'Anzahl zu portierender Rufnummern';\r\n\r\n    public static orderFrom = 'Bestellung vom';\r\n    public static status = 'Status';\r\n    public static numberOfProducts = 'Anzahl Produkte';\r\n    public static totalPriceEuro = 'Preis gesamt €';\r\n    public static productGroup = 'Produktgruppe';\r\n    public static picture = 'Bild';\r\n    public static availability = 'Verfügbarkeit';\r\n    public static availabilityCheck = 'Giga Kombi Check';\r\n    public static priceInEuro = 'Preis in €';\r\n    public static amount = 'Menge';\r\n    public static orderText = 'Bestellwert';\r\n    public static portingStatus = 'Status Rufnummernportierung';\r\n    public static filterCriteria =  'RUFNUMMERNPORTIERUNG / FILTERKRITERIEN';\r\n    public static selectDeliveryAddress =  'Lieferadresse auswählen';\r\n    public static orderProductsTitle = 'Produkte bestellen';\r\n\r\n    \r\n    public static pleaseSelectSIM = 'Bitte wählen Sie eine SIM Karte aus.';\r\n    public static orderReplacementSIM = 'ERSATZ-SIM-KARTE BESTELLEN';\r\n    public static backToCustomerDataSheet = 'Zum Kundendatenblatt';\r\n    public static orderReplForaFee = 'Ersatzkarte kostenpflichtig bestellen';\r\n    public static activationByCustomerUponReceipt = 'Aktivierung durch Kunden nach Erhalt';\r\n    public static cardActivatedSent = 'Karte aktiviert versendet';\r\n\r\n    public static documentScanner = 'Ausweis - Scanner';\r\n    public static drafts = \"Entwürfe\";\r\n    public static draft = 'Entwurf';\r\n    public static contractManager = \"Auftragsmanager\";\r\n    public static administration = \"Verwaltung\";\r\n    public static filter = \"Filter\";\r\n    public static doFilter = \"Filtern\";\r\n    public static apply = \"Anwenden\";\r\n    public static searchExisting = 'Bestandskundensuche';\r\n\r\n    public static additionalContract = 'Zusatzauftrag';\r\n\r\n    public static periodFrom = \"Zeitraum von\";\r\n    public static to = \"bis\";\r\n    public static searchTitle = 'Suche';\r\n    public static customer = 'Kunde';\r\n    public static customerName = 'Kundenname';\r\n    public static customerPassword = 'Kundenkennwort';\r\n    \r\n    public static customerEMailValidation = 'E-Mail Validierung';\r\n    public static customerEMailCreated = 'E-Mail Validierung ausstehend';\r\n    public static customerEMailNotValidated = 'nicht validiert';\r\n    public static customerEMailValidated = 'validiert';\r\n\r\n    public static customerEMailNotValidatedTitle = 'Bestätigung der E-Mail Adresse steht aus';\r\n    public static customerEMailNotValidatedText = 'Um Ihrem Kunden den besten Service anbieten zu können, benötigt dieser eine validierte E-Mail-Adresse. Dem Kunden wurde eine E-Mail an <b>$email</b> gesendet. Bitte weisen Sie Ihn darauf hin, diese zu bestätigen.';\r\n\r\n    public static passwordRepeat = 'Kennwort wiederholen';\r\n    public static tariff = 'Tarif';\r\n    public static details = 'Details';\r\n    public static type = 'Typ';\r\n    public static employee = 'Mitarbeiter';\r\n    public static employeeShort = 'Ma.';\r\n    public static newCustomerActivation = 'Neukunden Aktivierung';\r\n    public static existingCustomerActivation = 'Bestandskunden';\r\n\r\n    public static feeMonthTotal = 'Monatlich';\r\n    public static feeActTotal = 'Einmalige Gesamtkosten';\r\n\r\n    public static optionsAdditional = 'Zusatzoptionen';\r\n    public static optionsInclusive = 'Inklusivoptionen';\r\n    public static optionsAlreadyBooked = 'Bereits gebuchte Optionen';\r\n    public static saveSuccess = 'Die Daten wurden erfolgreich gespeichert.';\r\n\r\n    public static noPromotions = 'Keine Promotionen';\r\n    public static noOptions = 'Keine Optionen';\r\n    public static tariffOptions = 'Tarif Optionen';\r\n    public static bookedOptions = 'Gebuchte Tarifoptionen';\r\n    public static bookedPromotions = 'Gebuchte Promotionen';\r\n    public static bookedServices = 'Gebuchte Dienste';\r\n    public static bookableServices = 'Buchbare Dienste';\r\n    public static fnvoid = 'fnvoid';\r\n    public static salesId = 'Sales-ID';\r\n    public static void = 'VOID'\r\n    public static vpkn = 'vpkn';\r\n    public static mainData = 'Stammdaten';\r\n    public static noData = 'keine Daten';\r\n    public static createEmployee = 'Mitarbeiter anlegen';\r\n    public static edit = 'Bearbeiten';\r\n    public static request = 'Anfordern';\r\n    public static takeOver = 'Übernehmen';\r\n    public static msisdn = 'MSISDN';\r\n\r\n    public static contract = 'Vertrag';\r\n    public static contractType = 'Vertragsart';\r\n    public static contractTypeBnt = 'Neu';\r\n    public static contractTypePort = 'Portierung';\r\n    public static contractTypeProlong = 'VVL/TW';\r\n    public static cancel = 'Abbrechen';\r\n    public static ok = 'OK';\r\n    public static change = 'Ändern';\r\n    public static book = 'Buchen';\r\n    public static remove = 'Entfernen';\r\n    public static close = 'Schließen';\r\n\r\n    public static gold = 'Gold';\r\n    public static silver = 'Silber';\r\n    public static platinum = 'Platin';\r\n    public static na = 'k.A.';\r\n    public static configuration = 'Konfiguration';\r\n    public static newUser = 'Neuer Mitarbeiter'; \r\n\r\n    public static mnpStatusPageTitle = 'Status Rufnummernportierung';\r\n    public static mnpStatus = 'STATUSABFRAGE';\r\n    public static mnpStatusLinkText = 'Status Portierung Einzelabfrage';\r\n    public static mnpPortingStatusLinkText = 'Status Portierung Listenabfrage';\r\n    public static orderProductLink = 'Bestellungen';\r\n\r\n    public static cancellations = 'Stornierungen';\r\n    public static level1Cancellation = 'L1 Stornofreigabe';\r\n\r\n};\r\n\r\nexport class CustomerTexts {\r\n    public static legitimation = 'Legitimation des Kunden';\r\n    public static churner = 'Kündigung liegt vor';\r\n};\r\n\r\nexport class DefConTexts {\r\n    public static underConstruction = 'Seite temporär nicht verfügbar';\r\n};\r\n\r\n\r\nexport class OrderingTexts {\r\n    public static cancellation = 'Stornierung';\r\n    public static bankOwner = 'Kontoinhaber';\r\n    public static bookMulticard = 'Multikarte buchen';\r\n    public static prolongateCurrentTariff = 'Aktuellen Tarif verlängern';\r\n    public static dataOfLastContract = 'DATEN DES BISHERIGEN VERTRAGS';\r\n    public static bookMulticardDesc = 'Für Tablet oder andere IOT Geräte.';\r\n    public static bookPartner = 'Partnerkarte buchen';\r\n    public static bookPartnerDesc = 'Für Partner oder Kinder.';\r\n    public static bookNow = 'Jetzt bestellen';\r\n    public static moreOptions = 'Weitere Optionen';\r\n    public static activationBNTTariff = \"Tarifauswahl\";\r\n    public static activationBNTCustomer = \"Kundendaten\";\r\n    //public static activationBNTCustomerCAPITAL = \"KUNDENDATEN\";\r\n    public static activationBNTOverview = \"Übersicht\";\r\n    public static activation = 'Aktivierung';\r\n    public static portation = 'Portierung';\r\n    public static cdChange = 'Debit Credit Wechsel';\r\n    public static pcBooking = 'Aktivierung - Partnerkarte';\r\n    public static pcPortation = 'Portierung - Partnerkarte';\r\n    public static inProcess = \"In Bearbeitung\";\r\n    public static success = \"Erfolgreich\";\r\n    public static error = \"Fehlgeschlagen\";\r\n    public static info = \"Info\";\r\n    public static sub = 'Hardware';\r\n    public static options = 'Optionen';\r\n    public static tariff = 'TARIF';\r\n    public static imei = 'IMEI';\r\n    public static mnpProvider = 'Name des Anbieters';\r\n    public static mnpNetwork = 'Netz des Anbieters';\r\n    public static mnpSameCustomer = 'Aktueller Kunde';\r\n    public static mnpDiffCustomer = 'Abweichender Kunde';\r\n    public static mnpCustomerNr = 'Kundennummer beim bisherigen Dienstanbieter';\r\n    public static mnpContractEnd = 'Vertragsende';\r\n    public static mnpCancellationDate = 'Kündigungsdatum';\r\n    public static phoneBookEntry = 'Telefonbucheintrag';\r\n    public static phoneBook1 = 'Ja (Standard)';\r\n    public static phoneBook2 = 'Ja (Individuell)';\r\n    public static forMobile = 'FÜR MOBILFUNK';\r\n    public static forDSL = 'FÜR DSL';\r\n    public static forCable = 'FÜR KABEL';\r\n    public static forOtelo = 'FÜR OTELO';\r\n    public static activationDate = 'Aktivierung ab Datum';\r\n    public static portationDate = 'Portierungsdatum';\r\n    public static bookDate = 'Buchungsdatum';\r\n    public static prolongationDate = 'Verlängerungsdatum';\r\n    public static desiredSchedule = 'Wunschtermin für den Anschluss';\r\n    public static desiredSchedule1 = 'Ich wünsche den Vodafone-Anschluss so schnell wie möglich';\r\n    public static desiredSchedule2 = 'Ich wünsche den Vodafone-Anschluss an einem bestimmten Tag';\r\n    public static payment = \"Bezahlart\";\r\n    public static payment1 = \"IBAN\";\r\n    public static payment2 = \"BLZ & Kontonummer\";\r\n    public static payment3 = \"Kreditkarte\";\r\n    public static payment4 = \"Vorkasse\";\r\n    public static billType = \"Art der Rechnung\";\r\n\r\n    public static billAddress = 'Rechnungsadresse';\r\n    public static billAddress1 = 'Rechnungsadresse wie oben';\r\n    public static billAddress2 = 'Abweichende Rechnungsadresse';\r\n\r\n    public static productDeliveryAddress = 'Lieferadresse der Produkte';\r\n    public static deliveryType1 = 'Lieferung an meine oben genannte Adresse';\r\n    public static deliveryType2 = 'Lieferung an eine abweichende Lieferadresse';\r\n\r\n    public static installationAddress = 'Installationsadresse der Produkte';\r\n    public static previousAccessOwner = \"Daten des vorherigen Anschlussinhaber bekannt?\";\r\n    public static previousAccessOwnerLabelYes = \"Ja\";\r\n    public static previousAccessOwnerLabelNo = \"Nein\";\r\n    public static installationType1 = 'Installation an meine oben genannte Adresse';\r\n    public static installationType2 = 'Installation an eine abweichende Lieferadresse';\r\n    public static dataLastContract = 'Falls der Kunde der Rufnummer nicht selbst der Vertragspartner beim bisherigen Anbieter ist, versichert er, dass der bisherige Vertragspartner damit einverstanden ist, dass er seinen Vertrag übernimmt und die Rufnummern-Mitnahme in seinem Auftrag veranlasst wird. Der Kunde haftet für alle Schäden, die dadurch entstehen, dass der bisherige Vertragspartner entgegen der Angaben der Rufnummern-Mitnahme nicht zugestimmt hatte und direkt oder indirekt über den bisherigen Anbieter gegenüber Vodafone Ansprüche wegen unberechtigter Übertragung der Rufnummer geltend macht. Dem Kunden ist bewusst, dass die Zuteilung einer unberechtigt übertragenen Rufnummer unter diesen Umständen wieder aufgehoben wird und er aus der Zuteilung keine Rechte geltend machen kann.';\r\n\r\n    public static dslHouse = 'Genaue Lagebezeichnung für den Anschluss';\r\n\r\n    public static autotopup = 'Komfortaufladung';\r\n    public static noComfort = 'Keine Komfortaufladung';\r\n    public static noSofort = 'Keine Sofortaufladung';\r\n    public static amount = 'Betrag';\r\n    public static amountATDesc = 'Um diesen Betrag wird die Karte aufgeladen, wenn ....';\r\n    public static atTrigger = 'Auﬂaden wenn Guthaben kleiner ist als.';\r\n    public static atTriggerDesc = '… das Guthaben unter diesen Wert fällt..';\r\n\r\n    public static singeltopup = 'Sofortaufladung';\r\n\r\n    public static mnpContract = 'Daten des bisherigen Vertrages';\r\n    //public static mnpData = 'Angaben zur Portierung';\r\n    public static mnpDate = 'Portierungsdatum';\r\n    public static mnp1 = 'schnellstmöglich';\r\n    public static mnp2 = 'zum Vertragsende';\r\n    public static mnp3 = 'zum Wunschdatum';\r\n\r\n    public static mnpCable1 = 'Altvertrag bereits gekündigt';\r\n    public static mnpCable2 = 'Kündigungsdatum wird nachgereicht';\r\n    public static mnpCable3 = 'Altvertrag ist kein Laufzeitvertrag';\r\n    public static mnpCable4 = 'Letztmögliches Kündigungsdatum';\r\n\r\n    public static evn = 'Einzelverbindungsnachweis';\r\n    public static evnDesc = 'Der Kunde erhält seine mtl. Rechnung an die oben angegebene E-Mail Adresse n.a.. Für den Rechnungsversand per Mail muss der Kunde seine E-Mail Adresse bestätigen. Bitte weisen Sie den Kunden darauf hin, dass er von otelo eine Mail mit einem Link erhält, den er zur Bestätigung seiner E-Mail Adresse anklicken muss.';\r\n    public static evnVf1 = 'Übersicht';\r\n    public static evnVf2 = 'Übersicht Mini';\r\n    public static evnVf3 = 'keine';\r\n    public static evn1 = 'EVN mit ganzer Rufnr.';\r\n    public static evn2 = 'EVN mit gekürzter Rufnr.';\r\n    public static evn3 = 'kein EVN.';\r\n\r\n    public static targetNumber = 'Zielrufnummerndarstellung';\r\n\r\n    public static contractData = 'Vertragsdaten';\r\n    public static customerData = 'Kundendaten';\r\n    public static customerDataTillNow = 'Daten des bisherigen Vertragsinhabers';\r\n    public static customerBills = 'Rechnungen & EVN';\r\n    public static customerConsent = 'Datenschutz & Einwilligungen/Widersprüche';\r\n    public static contractId = 'Vertragsnummer';\r\n    public static activities = 'Aktivitäten';\r\n    public static nba = 'Tarif-Tipp';\r\n    public static crossSelling = 'Cross-Selling';\r\n    public static services = 'Dienste';\r\n    public static firstActivation = 'Erste Aktivierung';\r\n    public static statusBegin = 'Status Beginn';\r\n    public static statusCustomer = 'Kundenstatus';\r\n    public static contractStart = 'Vertragsbeginn';\r\n    public static contractEnd = 'Vertragsende';\r\n    public static customerStatus = 'Kundenstatus';\r\n    public static countCards = 'Kartenanzahl';\r\n    public static orderProductsNotification = 'Hinweis: Aufgrund größerer Bestellungen kann es in den nächsten 3-4 Wochen Lieferengpässe und Verzögerungen bei der Auslieferung von neuen Bestellungen geben.';\r\n    public static errorAmountText = 'Bitte wählen Sie die Produktmenge';\r\n};\r\n\r\nexport class ErrorMessages {\r\n    public static general = 'Es ist ein Fehler aufgtreten';\r\n\r\n    public static title404 = 'DIE VON IHNEN GEWÄHLTE SEITE EXISTIERT LEIDER NICHT (MEHR).';\r\n    public static message404 = 'Sehr geehrte Kundin, \\nSehr geehrter Kunde, \\n\\ndie von Ihnen gewählte Seite oder Resource konnte nicht gefunden werden. Bitte versuchen Sie es erneut. \\nSollten weiterhin Probleme auftreten, freuen wir uns, wenn Sie mit uns Kontakt aufnehmen und das Problem beschreiben. \\nSie helfen uns dadurch, die Seite weiter zu optimieren. \\nIhr otelo-EASY Team';\r\n\r\n    public static title403 = 'ZUGRIFF VERWEIGERT';\r\n    public static message403 = 'Sie verfügen nicht über ausreichnde Rechte auf die gewünschte Resource zuzugreiffen.';\r\n    public static title4031 = 'Herzlich willkommen $user!';\r\n    public static message4031 = 'Der User <b>$user</b> hat keine Login Berechtigung. Bitte ändere den User oder melde dich auf <a href=\"https://bo.vf-easy.de\" target=\"_blank\">bo.vf-easy.de</a> an.';\r\n};\r\n\r\nexport class UserMessages {\r\n    public static passwordEdit = 'Passwort ändern';\r\n    public static passwordEditDesc = 'Bitte geben Sie Ihr altes und Ihr neu vergebenes Passwort ein!';\r\n    public static currentPassword = 'Aktuelles Passwort';\r\n    public static newPassword = 'Neues Passwort';\r\n    public static newPasswordConfirm = 'Neues Passwort bestätigen';\r\n\r\n    public static profileEdit = 'Persönliche daten';\r\n    public static profileEditDesc = 'Bitte passen Sie Ihre persönlichen Daten an*, sofern sich etwas geändert haben sollte oder Sie einen Fehler entdecken.';\r\n    public static profileSecurityTanValDesc = '* Aus Sicherheitsgründen werden Änderungen erst nach einer erfolgreichen mTAN-Validierung wirksam. Bitte beachten Sie insbesondere, dass auch eine Änderung Ihrer Mobilnummer erst nach erfolgreicher mTAN-Validierung gegen Ihre alte Mobilnummer greift. Sollte es Ihnen nicht möglich sein, die mTAN auf Ihrer alten Mobilnummer zu empfangen, wenden Sie sich bitte an unseren Support.';\r\n}\r\n\r\nexport class DealerMessages {\r\n    public static dealerEdit = 'Konto bearbeiten';\r\n\r\n}\r\n\r\nexport class Messages {\r\n\r\n};\r\n\r\nexport class OrderStages {\r\n    public static tariff = 'tariff';\r\n    public static customer = 'customer';\r\n    public static dashboard = 'dashboard';\r\n    public static done = 'done';\r\n    public static action = 'action';\r\n\r\n    public static cancellation = 'selection';\r\n    public static overview = 'preview';\r\n    public static summary = 'summary';\r\n};\r\n\r\nexport class OrderProductStages {\r\n  public static selectProducts = 'PRODUKTE AUSWÄHLEN';\r\n  public static deliveryAddress = 'LIEFERANSCHRIFT';\r\n  public static overviewOrder = 'ÜBERSICHT';\r\n};\r\n\r\nexport default Messages;","export enum ETooltipDataType {\r\n    html = 0,\r\n    formated =1\r\n};\r\n\r\nexport interface ITooltipModel {\r\n    type: ETooltipDataType;\r\n    style: string;\r\n    body: string;\r\n};","import { EHomeType } from \"./order\";\r\n\r\nexport class Address {\r\n    public house_number: string = '';\r\n\r\n    public street: string = '';\r\n    public nr: string = '';\r\n    public nre?: string = '';\r\n    public zip: string = '';\r\n    public city: string = '';\r\n    public additional: string = '';\r\n    public corrected:boolean = false;\r\n\r\n    public name?: string = '';\r\n};\r\n\r\nexport default Address;","import * as linq from 'linq';\r\nimport { BrandKeys, CatKeys } from \"../../utils/Defaults\";\r\nimport Global from \"../../utils/Global\";\r\nimport StorageHelper from \"../../utils/storage\";\r\nimport IBrand from \"../ordering/brand\";\r\nimport { OrderDataWrapper } from \"../ordering/data\";\r\nimport { ICountry, IFocusBox, IListItem } from \"../page/interfaces\";\r\nimport { IField } from './field';\r\nimport { ProductTree, TreeItem } from \"./tree\";\r\n\r\nexport interface ISupportWrapper {\r\n    countries: ICountry[];\r\n    networks: IListItem[];\r\n    fields: IField[];\r\n    boxes: IFocusBox[];\r\n};\r\n\r\nexport class CombiWrapper {\r\n    items: Combi[] = [];\r\n    pt: ProductTree = new ProductTree('', '');\r\n   public static combisWereAdded: boolean = false;\r\n\r\n    combis: Combi[] = []\r\n\r\n    public static GetInstance(): CombiWrapper {\r\n        let c = StorageHelper.getCombis();\r\n\r\n        Object.assign(new CombiWrapper(), c);\r\n\r\n        return c;\r\n    };\r\n\r\n    public validate(dw: OrderDataWrapper, callback: any) {\r\n        this.pt = dw.getProducts();\r\n\r\n        let changed : boolean = false;\r\n\r\n        if (this.needGigaCombi()) {\r\n            let c = this.findCombi(false);\r\n\r\n            if (c) {\r\n                c.items.map((i) => {\r\n                    var a = dw.getActivationByProduct(i.product!.id);\r\n                    let b = linq.from<IBrand>(Global.categoryWrapper.bra)\r\n                        .where(x => x.id == i.product!.brand)\r\n                        .first();\r\n\r\n                    //try add services if not present\r\n                    i.services.map((j) => {\r\n                        if (a && !a.hasService(j, i.product!.id)) {\r\n                            let sa: string[] = a.checkServiceCompatibility(j, b);\r\n\r\n                            if (sa.length) {\r\n                                sa.map((k) => {\r\n                                    a!.removeService(k, i.product!.id);\r\n                                    CombiWrapper.combisWereAdded = false;\r\n                                })\r\n                            };\r\n                            CombiWrapper.combisWereAdded = true;\r\n                            changed = true;\r\n                            a.addService(j, i.product!.id);\r\n                        };\r\n                    });\r\n\r\n                    //append benefits if any\r\n                    if (c && c.benefits && c.benefits.length > 0 && a && a.catKey == CatKeys.fn) {\r\n                       \r\n                        c.benefits.map((j) => {\r\n                            if (a && !a.hasService(j, i.product!.id)) {\r\n                                let sa: string[] = a.checkServiceCompatibility(j, b);\r\n\r\n                                if (sa.length) {\r\n                                    sa.map((k) => {\r\n                                        a!.removeService(k, i.product!.id);\r\n                                    })\r\n                                };\r\n\r\n                                //** for cable we shold add the fn.benefit to the gigakombi item */\r\n                                if (a.brandKey == BrandKeys.kabel) {\r\n                                   \r\n                                    let citem = linq.from<CombiItem>(c!.items).where(x => x.cat == CatKeys.fn).first();\r\n                                    if(i.product!.cat == CatKeys.fn) {\r\n                                        \r\n                                        let pindex = a.selection.getChildIndex(i.product!.id);\r\n                                        TreeItem.addRemovePath(a.selection.children[pindex], [citem.services[0], j]);\r\n                                        StorageHelper.updateActivation(a);\r\n                                    }\r\n                                } else {\r\n                                    a.addService(j, i.product!.id);\r\n                                    StorageHelper.updateActivation(a);\r\n                                };\r\n\r\n                            };\r\n                        });\r\n                    };\r\n                });\r\n            };\r\n        }\r\n\r\n        if (callback) {\r\n            callback(dw, changed);\r\n        };\r\n    };\r\n\r\n    public needGigaCombi() {\r\n        let cats = this.pt.getCats();\r\n\r\n        return linq.from<string>(cats).where(x => x == CatKeys.vodafone || x == CatKeys.tv || x == CatKeys.fn).distinct().count() > 1;\r\n    };\r\n\r\n    public getFirstSuitableCombi(dw: OrderDataWrapper,\r\n        matchServices: boolean) {\r\n        this.pt = dw.getProducts();\r\n\r\n        if (!this.needGigaCombi()) {          \r\n            return undefined;\r\n        };\r\n\r\n        let c = this.findCombi(matchServices);\r\n\r\n        return c ? Combi.ensure(c) : undefined;\r\n    };\r\n\r\n    private findCombi(matchServices: boolean): Combi | undefined {\r\n        for (let i: number = 0; i < this.items.length; i++) {\r\n            let all: number = 0;\r\n            for (let j: number = 0; j < this.pt.children.length; j++) {\r\n                let ci = this.fitInCombi(this.items[i], this.pt.children[j]);\r\n                if (ci) {\r\n                    if (matchServices) {\r\n                        if (TreeItem.findChild(this.pt.children[j], ci.services[0])) {\r\n                            all++;\r\n                        };\r\n                    } else {\r\n                        all++;\r\n                    };\r\n                } else {\r\n                    continue;\r\n                }\r\n            };\r\n\r\n            if (all == this.pt.children.length && all == this.items[i].items.length) {             \r\n                return this.items[i]; }\r\n        };\r\n\r\n        return undefined;\r\n    };\r\n\r\n    //** if matchServices true, then the services in selection are being checked too */\r\n    private fitInCombi(c: Combi, p: ProductTree) {\r\n      //  let ci = linq.from<CombiItem>(c.items).where(x => x.cat == p.cat && x.familyId == p.familyId ).firstOrDefault();\r\n      let ci ;\r\n\r\n        c.items.forEach(kombi => {\r\n            if(kombi.cat==CatKeys.vodafone){\r\n                if(kombi.cat== p.cat && kombi.productId == p.id){\r\n                    ci = kombi;\r\n                }\r\n            }else {\r\n                if(kombi.cat == p.cat && kombi.familyId == p.familyId){\r\n                    ci = kombi\r\n                }\r\n            }\r\n        });\r\n        \r\n        if (ci) {         \r\n            ci.product = p;\r\n        }\r\n\r\n        return ci;\r\n    };\r\n};\r\n\r\nexport class Combi {\r\n    items: CombiItem[] = [];\r\n    benefits: string[] = [];\r\n    markup: string = '';\r\n\r\n    public static ensure(c: Combi) {\r\n        c = Object.assign(new Combi(), c);\r\n\r\n        return c;\r\n    };\r\n\r\n    public getBlister() {\r\n\r\n        if (this.markup) {\r\n            let json = JSON.parse(this.markup);\r\n            return json ? json.product_ui.ui_blister : null;\r\n        }\r\n\r\n        return null;\r\n    };\r\n};\r\n\r\nexport class CombiItem {\r\n    cat: string = '';\r\n    familyId: number = 0;\r\n    productId: string = '';\r\n    services: string[] = [];\r\n\r\n    product?: ProductTree;\r\n};\r\n","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { ERequestType, ICustomerAction, OrderDataWrapper } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { IContract } from '../../../models/existing/contract';\r\nimport { EActivationType, EBusinessCase, EIDCardType } from '../../../models/ordering/order';\r\nimport CustomerScreen from '../../../screens/existing/customer';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { ActionTexts, Hints, MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport EasyRouter from '../../../utils/router';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport { EPopupType, IPopupConfig } from '../../dialogs/popup';\r\nimport TariffThumb from '../../ordering/tariffThumb';\r\nimport BaseBlock from '../../page/block';\r\n\r\nexport interface IExistingCustomerActivitiesProps {\r\n    parent: CustomerScreen;\r\n};\r\n\r\nexport interface IExistingCustomerActivitiesState extends IBaseComponentState {\r\n};\r\n\r\nexport class ExistingCustomerActivities extends React.Component<IExistingCustomerActivitiesProps, IExistingCustomerActivitiesState> {\r\n    private contract: IContract;\r\n    constructor(props: IExistingCustomerActivitiesProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n\r\n        this.selectActivity = this.selectActivity.bind(this);\r\n        this.addNextContract = this.addNextContract.bind(this);\r\n\r\n        this.contract = this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0] : {};\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.activities,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: '',\r\n            collapsible: true,\r\n            collapsed: false\r\n        };\r\n\r\n        let act: JSX.Element = <></>;\r\n        let act2: JSX.Element = <></>;\r\n        let info: JSX.Element = <></>;\r\n\r\n        if (this.contract.actions) {\r\n            let aa = linq.from<ICustomerAction>(this.contract.actions)\r\n                .where(x => !x.active)\r\n                .toArray();\r\n\r\n            if (aa && aa.length) {\r\n                info = (\r\n                    <ul>\r\n                        {aa.map((i, idx) =>\r\n                            (<li>{i.name} {Global.toGermanDate(i.possibleFrom).endsWith('1900') ? null : ' möglich ab: ' + Global.toGermanDate(i.possibleFrom)}</li>)\r\n                        )}\r\n                    </ul>\r\n                );\r\n            };\r\n\r\n            aa = linq.from<ICustomerAction>(this.contract.actions)\r\n                .where(x => x.active)\r\n                .toArray();\r\n\r\n                \r\n\r\n            act = (\r\n                <>\r\n                    {aa.map((i, idx) =>\r\n                        (<TariffThumb\r\n                            text={i.name }\r\n                            id={'action-' + (this.contract.actions ? this.contract.actions.indexOf(i) : -1)}\r\n                            idx={idx}\r\n                            key={idx}\r\n                            cssStyle=\"thumb-w2\"\r\n                            brandKey={''}\r\n                            selected={false}\r\n                            styleBrand={true}\r\n                            onClick={this.selectActivity} />)\r\n                    )}\r\n                </>\r\n            );\r\n        };\r\n\r\n        act2 = <>\r\n            <TariffThumb\r\n                        text={ActionTexts.belateporting}\r\n                        id={'action-' + 101}\r\n                        idx={101}\r\n                        key={101}\r\n                        cssStyle=\"thumb-w2\"\r\n                        brandKey={''}\r\n                        selected={false}\r\n                        styleBrand={true}\r\n                        onClick={() => {\r\n                            EasyRouter.route({ url: '/customer/belatedporting/' + this.props.parent.data.id, title: ActionTexts.belateporting });\r\n                        }} />   \r\n\r\n            <TariffThumb\r\n                text={ActionTexts.addImei}\r\n                id={'action-' + 100}\r\n                idx={100}\r\n                key={100}\r\n                cssStyle=\"thumb-w2\"\r\n                brandKey={''}\r\n                selected={false}\r\n                styleBrand={true}\r\n                onClick={() => {\r\n                    let msisdn;\r\n                    if (this.props.parent.data.customer.contracts) {\r\n                        msisdn = this.props.parent.data.customer.contracts[0].msisdn;\r\n                    }\r\n                    this.props.parent.openImei(msisdn);\r\n                }} />\r\n\r\n            <TariffThumb\r\n                text={ActionTexts.orderSim}\r\n                id={'action-' + 102}\r\n                idx={102}\r\n                key={102}\r\n                cssStyle=\"thumb-w2\"\r\n                brandKey={''}\r\n                selected={false}\r\n                styleBrand={true}\r\n                onClick={() => {\r\n                    EasyRouter.route({ url: '/customer/sim/' + this.props.parent.data.id, title: ActionTexts.orderSim });\r\n                }} />\r\n\r\n            <TariffThumb\r\n                text={MainTexts.cancellation}\r\n                id={'action-' + 101}\r\n                idx={101}\r\n                key={101}\r\n                cssStyle=\"thumb-w2\"\r\n                brandKey={''}\r\n                selected={false}\r\n                styleBrand={true}\r\n                onClick={() => {\r\n                    let cfg: IPopupConfig = {\r\n                        props: {\r\n                            id: 'dynamicPopup',\r\n                            title: 'Stornoprozess wird vorbereitet',\r\n                            visible: true,\r\n                            closable: false,\r\n                            type: EPopupType.pleaseWait\r\n                        },\r\n                        closeOnDone: true,\r\n                        //callback: ()=> { },\r\n                        content: <div>{OrderingTexts.customerData}</div>\r\n                    };\r\n\r\n                    let t = {\r\n                        type: ERequestType.customerGetCanellation,\r\n                        brandKey: this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0].brandKey : '',\r\n                        id: this.props.parent.data.id\r\n                    };\r\n\r\n                    this.props.parent.processCustomer(() => {\r\n                        Global.hub.send(JSON.stringify(t),\r\n                            ERequestType.customerGetCanellation,\r\n                            undefined);\r\n                    }, cfg);\r\n                    //EasyRouter.route({ url: '/customer/cancellation/' + this.props.parent.data.id, title: ActionTexts.cancel });\r\n                }} />\r\n\r\n            <TariffThumb\r\n                text={ActionTexts.addNextContract}\r\n                id={'action-' + 102}\r\n                idx={102}\r\n                key={102}\r\n                cssStyle=\"thumb-w2\"\r\n                brandKey={''}\r\n                selected={false}\r\n                styleBrand={true}\r\n                onClick={() => {\r\n                    this.addNextContract()\r\n                }} />                \r\n        </>;\r\n\r\n       // act2 = <></>\r\n\r\n        let ctrl =\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12} className=\"np\">\r\n                        {info}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12} className=\"np\">\r\n                        {act}\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    this.props.parent.data.customer.contracts && this.props.parent.data.customer.contracts[0].brandKey === BrandKeys.otelo ?\r\n                        <Row>\r\n                            <Col md={12} className=\"np\">\r\n                                {act2}\r\n                            </Col>\r\n                        </Row>\r\n                        : null\r\n                }\r\n\r\n                {\r\n                    this.props.parent.data.customer.contracts && this.props.parent.data.customer.contracts[0].brandKey === BrandKeys.vodafone ?\r\n                        <Row>\r\n                            <Col md={12} className=\"np\">\r\n                                <span className=\"text-h1 red\">*</span> {Hints.hintVfVllOldTariff}\r\n                            </Col>\r\n                        </Row>\r\n                        : null\r\n                }\r\n            </Container>;\r\n\r\n        ctrl = <BaseBlock config={cfg}>\r\n            {ctrl}\r\n        </BaseBlock>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private selectActivity(value: string) {\r\n        let id = Number.parseInt(value.replace('action-', ''));\r\n       \r\n        if (this.contract && this.contract.actions) {\r\n            let a = this.contract.actions[id];\r\n\r\n            // if(this.props.parent.data.customer.payment){\r\n            //     this.props.parent.data.customer.payment.iban = '';\r\n            // }\r\n\r\n            let d = OrderDataWrapper.createProcess(a.bc, EActivationType.existingCustomer, this.props.parent.data, a);\r\n            this.props.parent.refresh();          \r\n            EasyRouter.route({ url: '/customer/tariff/' + d.id, title: a.name + ' ' + OrderDataWrapper.getMsisdnFromContract(d) });\r\n        }\r\n    };\r\n\r\n    private addNextContract() {\r\n        let d = OrderDataWrapper.createProcess(EBusinessCase.bnt, EActivationType.actDefault, this.props.parent.data, undefined);\r\n       \r\n        d.activations.map((i)=>{\r\n            i.nextContract = true;\r\n            i.id = Global.getUniqueId();\r\n            i.processId = d.id;\r\n            i.brandKey = BrandKeys.otelo;\r\n            i.contractId = '';\r\n           // i.productId = productId? productId : '3'\r\n            i.msisdn = '';\r\n            i.code = '';\r\n           \r\n             \r\n        });\r\n        d.customer.nationality = 'DEU';\r\n        d.customer.legitimation = { id: '', type: EIDCardType.german, authority: d.customer.address ? d.customer.address.city : ''};\r\n        StorageHelper.addOrder(d);\r\n        Global.categoryWrapper.switchCat(this.props.parent.data.currentCat);\r\n       \r\n        //this.props.parent.refresh();\r\n        EasyRouter.route({ url: '/ordering/new/tariff/' + d.id, title: ActionTexts.addNextContract });\r\n        this.setState({changed: true});\r\n    };\r\n};\r\n\r\nexport default ExistingCustomerActivities;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { EControlType, EFormMode, ELButtonType, ERequestType } from '../../../models';\r\nimport { IContract } from '../../../models/existing/contract';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { EBillingType, EPaymentType } from '../../../models/ordering/order';\r\nimport { IKeyText } from '../../../models/page/interfaces';\r\nimport CustomerScreen from '../../../screens/existing/customer';\r\nimport { ValidationWrapper } from '../../../utils';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { Hints, MainTexts, OrderingTexts, ValidationMessages } from '../../../utils/messages';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport { EPopupType, IPopupConfig } from '../../dialogs/popup';\r\nimport { LControl } from '../../page';\r\nimport * as page from '../../page/index';\r\n\r\nexport interface IExistingCustomerPaymentState extends IBaseComponentState {\r\n    mode: EFormMode\r\n}\r\n\r\nexport interface IExistingCustomerPaymentProps {\r\n    parent: CustomerScreen;\r\n    contract?: IContract;\r\n};\r\n\r\nexport class ExistingCustomerPayment extends React.Component<IExistingCustomerPaymentProps, IExistingCustomerPaymentState> {\r\n    private customer: ICustomer;\r\n    public static containerId = 'existingCustomerPayment';\r\n\r\n    constructor(props: IExistingCustomerPaymentProps) {\r\n        super(props);\r\n\r\n        this.switchMode = this.switchMode.bind(this);\r\n\r\n        this.state = {\r\n            changed: false,\r\n            mode: EFormMode.view\r\n        };\r\n\r\n        this.onInput = this.onInput.bind(this);\r\n\r\n        this.customer = JSON.parse(JSON.stringify(this.props.parent.data.customer));\r\n    };\r\n\r\n    public render() {\r\n        const preview = this.state.mode === EFormMode.view;\r\n\r\n        let optionsBillType: IKeyText[] = [];\r\n\r\n        let billTypeDesc = Hints.paymentHintOPL;\r\n\r\n        if (this.customer.evn && this.customer.evn.billingType == EBillingType.email) {\r\n            billTypeDesc = Hints.paymentHintOPS.replace('$email', (this.customer.email ? this.customer.email : MainTexts.na));\r\n        };\r\n\r\n\r\n\r\n        if (!this.props.contract) {\r\n            return <></>\r\n        } else {\r\n            if (this.props.contract.brandKey === BrandKeys.otelo) {\r\n                optionsBillType = [\r\n                    { key: '1', text: 'Rechnung per E-Mail' },\r\n                    { key: '2', text: 'Rechnung Online / App' },\r\n                ];\r\n            };\r\n\r\n            let ctrl =\r\n                <div id={ExistingCustomerPayment.containerId}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl onChange={this.onInput}\r\n                                    preview={preview}\r\n                                    checked={this.customer.evn != null && this.customer.evn.billingType == EBillingType.online}\r\n                                    type={EControlType.dropdown}\r\n                                    value={this.customer.evn ? this.customer.evn.billingType.toString() : ''}\r\n                                    options={optionsBillType}\r\n                                    hideTitle={true}\r\n                                    label={OrderingTexts.billType}\r\n                                    name=\"evn.billingType\"\r\n                                    id=\"billingType_dd\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl\r\n                                    type={EControlType.info}\r\n                                    hideTitle={true}\r\n                                    isHtml={true}\r\n                                    overflowEnabled={true}\r\n                                    label={billTypeDesc} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <page.LControl type={EControlType.radio} title={OrderingTexts.payment}\r\n                                    checked={this.customer.payment && this.customer.payment.paymentType === EPaymentType.iban}\r\n                                    name=\"payment.paymentType\"\r\n                                    id=\"paymentType_1\" label={OrderingTexts.payment1} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6} className=\"np\">\r\n                                <LControl preview={preview}\r\n                                    type={EControlType.text}\r\n                                    style=\"merged\"\r\n                                    title={OrderingTexts.bankOwner}\r\n                                    id={\"owner\"}\r\n                                    name={\"payment.owner\"}\r\n                                    onChange={this.onInput}\r\n                                    maxLength={27}\r\n                                    validationOptions={ \r\n                                        [\r\n                                            new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                            new ValidationOption({type: EValidationOption.alphanumeric, message: ValidationMessages.alphanumeric })\r\n                                        ]\r\n                                    }                                    \r\n                                    value={this.customer.payment ? this.customer.payment.owner : ''}\r\n                                    />\r\n                            </Col>\r\n                            <Col md={6} className=\"\">\r\n                                <LControl preview={preview}\r\n                                    type={EControlType.text}\r\n                                    style=\"merged\"\r\n                                    title={'IBAN'}\r\n                                    id={\"iban\"}\r\n                                    name={\"payment.iban\"}\r\n                                    onChange={this.onInput}\r\n                                    value={this.customer.payment ? (preview ? this.hideIBAN(this.customer.payment.iban) : this.customer.payment.iban) : ''}\r\n                                    validationOptions={ \r\n                                        [\r\n                                            new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                            new ValidationOption({type: EValidationOption.germanIBAN, message: ValidationMessages.germanIBANerror })\r\n                                        ]\r\n                                    }   \r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={4}></Col>\r\n                            <Col xs={12} md={12} >\r\n                                {this.state.mode === EFormMode.view ?\r\n                                    <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                        css=\"a1 fr\"\r\n                                        id=\"buttonEdit\"\r\n                                        text={MainTexts.edit}\r\n                                        onClick={() => {\r\n                                            if (this.customer.payment === undefined) {\r\n                                                return;\r\n                                            }\r\n                                            \r\n                                            this.customer.payment!.iban = '';\r\n\r\n                                            this.setState({ mode: EFormMode.edit });\r\n                                        }} /> :\r\n                                    <>\r\n                                        <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                            css=\"a1 fr\"\r\n                                            id=\"buttonSave\"\r\n                                            text={MainTexts.save}\r\n                                            onClick={() => {\r\n                                                let cfg: IPopupConfig = {\r\n                                                    props: {\r\n                                                        id: 'dynamicPopup',\r\n                                                        title: 'Zahlungsdaten ändern',\r\n                                                        visible: true,\r\n                                                        closable: false,\r\n                                                        type: EPopupType.pleaseWait\r\n                                                    },\r\n                                                    content: <div>{OrderingTexts.customerData}</div>\r\n                                                };\r\n\r\n                                                if(ValidationWrapper.validateFormular(undefined, true, ExistingCustomerPayment.containerId)){\r\n                                                    ValidationWrapper.resetFormular(ExistingCustomerPayment.containerId);\r\n\r\n                                                    this.props.parent.processCustomer(() => {\r\n                                                        Global.hub.send('{ \"type\": ' + ERequestType.customerChangePayment + ', \"brandKey\": \"' + (this.customer.contracts ? this.customer.contracts[0].brandKey : '') + '\", \"iban\": \"' + (this.customer.payment ? this.customer.payment.iban : '') + '\", \"owner\": \"' + (this.customer.payment ? this.customer.payment.owner : '') + '\", \"billingType\": ' + (this.customer.evn ? this.customer.evn.billingType : 0) + ', \"id\": \"' + this.props.parent.data.id + '\", \"orderId\": \"' + this.props.parent.data.activations[0].id + '\" }',\r\n                                                            ERequestType.customerChangePayment,\r\n                                                            undefined);\r\n                                                    }, cfg);\r\n                                                }\r\n                                            }} />\r\n                                        <page.LButton type={ELButtonType.linkSimple}\r\n                                            css=\"action3 fr\"\r\n                                            id=\"buttonCancel\"\r\n                                            text={MainTexts.cancel}\r\n                                            onClick={() => {\r\n                                                this.customer = JSON.parse(JSON.stringify(this.props.parent.data.customer));\r\n                                                this.setState({ mode: EFormMode.view });\r\n                                            }} />\r\n                                    </>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>;\r\n\r\n            return ctrl;\r\n        }\r\n    };\r\n\r\n    public hideIBAN(iban: string | undefined) {\r\n        if (iban === undefined || iban === null) {\r\n            return '';\r\n        } else if (this.state.mode === EFormMode.edit) {\r\n            if (this.customer.payment !== undefined) {\r\n                this.customer.payment.iban = iban;\r\n            }\r\n        } else {\r\n            if(iban.length > 4) {\r\n                iban = iban.substring(iban.length - 4);\r\n            }\r\n\r\n            iban = '****' + iban;\r\n            return iban;\r\n        }\r\n    };\r\n\r\n    public switchMode(newMode: EFormMode) {\r\n        this.setState({ mode: newMode });\r\n    };\r\n\r\n    private onInput(target: any) {\r\n        Global.onInput(this.customer, target, () => {\r\n            this.setState({ changed: true });\r\n        });\r\n    };\r\n};\r\n\r\nexport default ExistingCustomerPayment;","import * as React from 'react';\r\nimport * as linq from 'linq';\r\nimport * as d from '../../../models/existing/document';\r\nimport { EDocumentType } from '../../../models/ordering/order';\r\nimport {MainTexts} from '../../../utils/messages';\r\nimport { LButton } from '../../page';\r\nimport { ELButtonType } from '../../../models';\r\nimport Api from '../../../utils/api';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\n\r\nexport interface IDownloadProps {\r\n    doc: d.Document;\r\n    brandKey: string;\r\n    activationId: string;\r\n};\r\n\r\nexport class Download extends React.Component<IDownloadProps, any> {\r\n    constructor(props: IDownloadProps) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = <div className=\"block-download\">\r\n            <div className=\"text-h2\">{this.props.doc.name}</div>\r\n            <div className=\"text-tiny\">\r\n                {\r\n                    this.props.doc.type === EDocumentType.evn ? MainTexts.evn : MainTexts.bill\r\n                }\r\n            </div>\r\n            <div className=\"action\">\r\n            <LButton type={ELButtonType.iconImage} \r\n                    icon=\"download\" \r\n                    onClick={(e:d.Document)=>{\r\n                        Api.follow('environment/dd/?brand=' + this.props.brandKey + '&activationId=' + this.props.activationId + '&file=' + e.file);\r\n                    }} \r\n                    clickModel={this.props.doc}/>     \r\n            </div>\r\n        </div>\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default Download;","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { EExistingCustomerLoginMode } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { IContract } from '../../../models/existing/contract';\r\nimport * as d from '../../../models/existing/document';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { EDocumentType } from '../../../models/ordering/order';\r\nimport CustomerScreen from '../../../screens/existing/customer';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport { MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport ExistingCustomerPayment from '../../existing/data/customerPayment';\r\nimport BaseBlock from '../../page/block';\r\nimport Download from './download';\r\n\r\nexport interface IExistingCustomerBillsProps {\r\n    parent: CustomerScreen;\r\n};\r\n\r\nexport class ExistingCustomerBills extends React.Component<IExistingCustomerBillsProps, IBaseComponentState> {\r\n    private contract: IContract;\r\n    private customer: ICustomer;\r\n    constructor(props: IExistingCustomerBillsProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n\r\n        this.customer = this.props.parent.data.customer;\r\n        this.contract = this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0] : {};\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.customerBills,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: '',\r\n            collapsible: true,\r\n            collapsed: false\r\n        };\r\n\r\n        let bills: d.Document[] = this.contract.documents ? linq.from<d.Document>(this.contract.documents).where(x => x.type === EDocumentType.bill).toArray() : [];\r\n        let evn: d.Document[] = this.contract.documents ? linq.from<d.Document>(this.contract.documents).where(x => x.type === EDocumentType.evn).toArray() : [];\r\n\r\n        let ctrl =\r\n            <Container className=\"\">\r\n                <Row>\r\n                    {this.props.parent.data.activations[0].brandKey === BrandKeys.otelo && this.props.parent.data.customer.loginModel && this.props.parent.data.customer.loginModel.mode === EExistingCustomerLoginMode.birthday ?\r\n                        <Col md={12}>\r\n                            <p><b>{MainTexts.exCustBillsWithBday}</b></p>\r\n\r\n                        </Col> : <Col md={12} className=\"np\">\r\n                            {\r\n                                bills.map((i, idx) => (<Download doc={i} brandKey={this.props.parent.data.activations[0].brandKey} activationId={this.props.parent.data.activations[0].id} key={'b-' + idx} />))\r\n                            }\r\n                        </Col>}\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12} className=\"np\">\r\n                        <ExistingCustomerPayment parent={this.props.parent}\r\n                            contract={this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0] : undefined} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>;\r\n\r\n        return <BaseBlock config={cfg}>\r\n            {ctrl}\r\n        </BaseBlock>;\r\n    };\r\n};\r\n\r\nexport default ExistingCustomerBills;","import IProduct from './product';\r\nimport ISub from './sub';\r\nimport IService, { IServiceRule } from './service';\r\nimport IServiceValidationGroup from './validationGroup';\r\nimport { InfoItem } from '../page/infoItem';\r\n\r\nexport class Brand extends InfoItem {\r\n    public static fromInterface(i: IBrand) {\r\n        let b = new Brand();\r\n        b.id = i.id;\r\n\r\n        return b;\r\n    };\r\n};\r\n\r\nexport interface IBrand {\r\n    id:string;\r\n    categories: string[];\r\n    available: boolean;\r\n    name:string;\r\n    subs: ISub[];\r\n    products: IProduct[];\r\n    services: IService[];\r\n    serviceRules: IServiceRule[];\r\n    //info: IInfoItem;\r\n    visible: boolean;\r\n    loading?: boolean;\r\n\r\n    style?: string;\r\n\r\n    serviceGroups: IServiceValidationGroup[];\r\n};\r\n\r\nexport default IBrand;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport Rot_ErwerbNichtMoeglich from '../../../assets/icons/trafficLight_noVVL.svg';\r\nimport Gruen_ErwerbMoeglich from '../../../assets/icons/trafficLight_VVL.svg';\r\nimport Gelb_ErwerbMoeglichMitTarifwechsel from '../../../assets/icons/trafficLight_VVLTW.svg';\r\nimport ErwerbMitAddedRuntimeMoeglich from '../../../assets/icons/trafficLight_vVVL.svg';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { EControlType, ECustomerActionPurchase, ELButtonType, OrderDataWrapper } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { IContract } from '../../../models/existing/contract';\r\nimport { Brand } from '../../../models/ordering/brand';\r\nimport CustomerScreen from '../../../screens/existing/customer';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport { CustomerTexts, MainTexts } from '../../../utils/messages';\r\nimport BrandThumb, { EBrandThumbStatus, EBrandThumbType } from '../../ordering/brandThumb';\r\nimport { LButton, LControl } from '../../page';\r\nimport BaseBlock from '../../page/block';\r\n\r\nexport interface IExistingCustomerContractProps {\r\n    parent: CustomerScreen;\r\n};\r\n\r\nexport interface IExistingCustomerContractState {\r\n\r\n};\r\n\r\nexport class ExistingCustomerContract extends React.Component<IExistingCustomerContractProps, IBaseComponentState> {\r\n    private contract: IContract;\r\n    private red: boolean = false;\r\n    private green: boolean = false;\r\n    private yellow: boolean = false;\r\n    private noColor: boolean = false;\r\n    private showFN: boolean = false;\r\n    private showTV: boolean = false;\r\n\r\n    constructor(props: IExistingCustomerContractProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n\r\n        };\r\n\r\n        this.contract = this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0] : {};\r\n        \r\n        if (this.contract.purchase) {\r\n            switch (this.contract.purchase) {\r\n                case 1: {\r\n                    this.red = true;\r\n                    break;\r\n                }\r\n                case 2: {\r\n                    this.yellow = true;\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    this.green = true;\r\n                    break;\r\n                }\r\n                case 4: {\r\n                    this.noColor = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (this.red) {\r\n            var dateToday = new Date();\r\n            if (this.contract.actions !== undefined) {\r\n                this.contract.actions.forEach(x => {\r\n                    var dateServer = new Date(x.possibleFrom);\r\n\r\n                    if (x.purchase === ECustomerActionPurchase.addedRuntime && dateToday.getFullYear() === dateServer.getFullYear() && dateToday.getMonth() === dateServer.getMonth() && dateToday.getDate() === dateServer.getDate()) {\r\n\r\n                        this.red = false;\r\n                        this.noColor = true;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        if (this.contract.brandKey === BrandKeys.vodafone) {\r\n            this.gigakombiCheck()\r\n        }\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: undefined,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: ''\r\n        };\r\n\r\n        let ctrl =\r\n            <Container>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <BrandThumb ckey={'bt-brand-' + this.props.parent.brand.id} item={Brand.fromInterface(this.props.parent.brand)} onClick={undefined} type={EBrandThumbType.square} status={EBrandThumbStatus.active} />\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <div className=\"text-h1\">{this.props.parent.data.customer.firstname} {this.props.parent.data.customer.surname}</div>\r\n                        <div className=\"spacer\" />\r\n                        {\r\n                            //this.props.parent.brand.id == BrandKeys.otelo ?\r\n                            //<LControl type={EControlType.info} title={MainTexts.contractId} label={this.contract.contractId} style=\"merged\"/>\r\n                            //:\r\n                            <LControl type={EControlType.info} title={MainTexts.customerId} label={this.contract.customerId} style=\"merged\" />\r\n                        }\r\n\r\n                        <div className=\"spacer\" />\r\n                        <LControl type={EControlType.info} title={MainTexts.msisdn} label={OrderDataWrapper.getMsisdnFromContract(this.props.parent.data)} style=\"merged\" />\r\n                        <div className=\"spacer\" />\r\n                        <LControl type={EControlType.info} title={MainTexts.contract} label={OrderDataWrapper.getProductFromContract(this.props.parent.brand, this.props.parent.data)} style=\"merged\" />\r\n                    </Col>\r\n\r\n\r\n                    {this.contract.brandKey === BrandKeys.vodafone ? <Col xs={3} md={3} >\r\n                        <Row>\r\n                            <Col xs={12} md={12}>\r\n                                <img style={{ width: '100%' }} src=\"/images/GigaKombiBooked.svg\" />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n\r\n                            <Col xs={{ span: 1, offset: 10 }}>\r\n                                {!this.showFN || !this.showTV ? <LButton\r\n                                    icon=\"info\" id=\"gk\" tooltip={MainTexts.gigakombiTooltip} type={ELButtonType.linkWithIconLeft} /> : <></>}\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col xs={12} md={12}>\r\n                                {!this.showFN ? <LButton\r\n                                    icon=\"ok-disabled\" id=\"gk\" text=\"GigaKombi Festnetz\" type={ELButtonType.linkWithIconLeft} />\r\n                                    :\r\n                                    <LButton\r\n                                        icon=\"ok-green\" text=\"GigaKombi Festnetz\" type={ELButtonType.linkWithIconLeft} />}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12}>\r\n                                {!this.showTV ? <LButton\r\n                                    icon=\"ok-disabled\" id=\"gk2\" text=\"GigaKombi TV\" type={ELButtonType.linkWithIconLeft} />\r\n                                    :\r\n                                    <LButton\r\n                                        icon=\"ok-green\" text=\"GigaKombi TV\" type={ELButtonType.linkWithIconLeft} />}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    </Col> : <></>}\r\n\r\n\r\n                    <Col md={2}>\r\n                        {this.contract.brandKey === BrandKeys.vodafone ? \r\n                        <>\r\n                            {this.red ? <img style={{ width: '190px', height: '190px' }} src={Rot_ErwerbNichtMoeglich} alt={\"contractRed\"} /> : <></>}\r\n                            {this.green ? <img style={{ width: '190px', height: '190px' }} src={Gruen_ErwerbMoeglich} alt={\"contractGreen\"} /> : <></>}\r\n                            {this.yellow ? <img style={{ width: '190px', height: '190px' }} src={Gelb_ErwerbMoeglichMitTarifwechsel} alt={\"contractYellow\"} /> : <></>}\r\n                            {this.noColor ? <img style={{ width: '190px', height: '190px' }} src={ErwerbMitAddedRuntimeMoeglich} alt={\"contractNoColor\"} /> : <></>}\r\n\r\n                            {\r\n                                this.contract.churner ? \r\n                                <div className=\"text-desc tar\">\r\n                                    {CustomerTexts.churner}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </>\r\n                            : <></>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>;\r\n\r\n        ctrl = <BaseBlock config={cfg}>\r\n            {ctrl}\r\n        </BaseBlock>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private gigakombiCheck() {\r\n        if (this.contract.bookedProduct) {\r\n            if (this.contract.bookedProduct.services.findIndex(x => x === 'VFAIO2MRK' || x === 'VFGSUK10') > -1) {\r\n                this.showFN = true;\r\n            }\r\n            if (this.contract.bookedProduct.services.findIndex(x => x === 'GKTVMRK') > -1) {\r\n                this.showTV = true;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n};\r\n\r\nexport default ExistingCustomerContract;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { ConsumptionItem, EControlType, ELButtonType, OrderDataWrapper } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { IContract } from '../../../models/existing/contract';\r\nimport { EActivationType, EBusinessCase } from '../../../models/ordering/order';\r\nimport CustomerScreen from '../../../screens/existing/customer';\r\nimport ProgressBar from '../../../screens/test/ProgressBar';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport OrderingHelper from '../../../utils/OrderingHelper';\r\nimport EasyRouter from '../../../utils/router';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport { LControl } from '../../page';\r\nimport BaseBlock from '../../page/block';\r\nimport * as page from '../../page/index';\r\nimport ExistingPartnerCard from './partnerCard';\r\n\r\nexport interface IExistingContractDataProps {\r\n    parent: CustomerScreen;\r\n};\r\n\r\nexport class ExistingContractData extends React.Component<IExistingContractDataProps, IBaseComponentState> {\r\n    private contract: IContract;\r\n    constructor(props: IExistingContractDataProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n\r\n        this.contract = this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0] : {};\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.contractData,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: '',\r\n            collapsible: true,\r\n            collapsed: false\r\n        };\r\n\r\n        let consumption: ConsumptionItem | undefined = this.contract.consumption && this.contract.consumption.data ? this.contract.consumption.data : undefined;\r\n\r\n        if (consumption) {\r\n            consumption = Object.assign(new ConsumptionItem(), consumption);\r\n        }\r\n\r\n        let ctrl =\r\n            <Container>\r\n                {\r\n                    this.contract.brandKey === BrandKeys.vodafone ?\r\n                        <>\r\n                            <Row>\r\n                                <Col>\r\n                                    <ExistingPartnerCard parent={this.props.parent} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"np\">\r\n                                    <div className=\"spacer-line\" />\r\n                                    <div className=\"spacer-medium\" />\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                        : null\r\n                }\r\n                <Row>\r\n                    {this.contract.brandKey === BrandKeys.otelo || this.contract.brandKey === BrandKeys.dsl  ? <Col md={4}>\r\n                        <LControl type={EControlType.info} style=\"merged\" title={OrderingTexts.contractStart}\r\n                            label={Global.toGermanDate(this.contract.contractFirstActivation)} />\r\n                    </Col> : <></>}\r\n                    {\r\n                        this.contract.brandKey === BrandKeys.vodafone ?\r\n                            <>\r\n                                <Col md={4}>\r\n                                    <LControl type={EControlType.info} style=\"merged\" title={OrderingTexts.contractStart}\r\n                                        label={Global.toGermanDate(this.contract.contractStart)} />\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <LControl type={EControlType.info} style=\"merged\" title={OrderingTexts.firstActivation}\r\n                                        label={Global.toGermanDate(this.contract.contractFirstActivation)} />\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <LControl type={EControlType.info} style=\"merged\" title={OrderingTexts.contractEnd}\r\n                                        label={Global.toGermanDate(this.contract.contractEnd)} />\r\n                                </Col>\r\n                            </> : <></>\r\n\r\n                    }\r\n\r\n                    {\r\n                        this.contract.brandKey === BrandKeys.otelo ?\r\n                            <>\r\n                                <Col md={4}>\r\n                                    <LControl type={EControlType.info} style=\"merged\" title={MainTexts.contractId}\r\n                                        label={this.contract.contractId} />\r\n                                </Col>\r\n                            </>\r\n                            : null\r\n                    }\r\n\r\n                    <Col md={4}>\r\n                        <LControl type={EControlType.info} style=\"merged\" title={OrderingTexts.sub}\r\n                            label={OrderingHelper.getSubName(this.props.parent.brand, this.contract.bookedProduct ? this.contract.bookedProduct.sub : '', this.contract.bookedProduct ? this.contract.bookedProduct.id : MainTexts.na)} />\r\n                    </Col>\r\n\r\n                    {\r\n                        this.contract.status ?\r\n                            <Col md={4}>\r\n                                <LControl type={EControlType.info} style=\"merged\" title={OrderingTexts.customerStatus}\r\n                                    label={Global.getCustomerStatus(this.contract.status.status)} />\r\n                            </Col>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                    {\r\n                        this.contract.brandKey === BrandKeys.vodafone ?\r\n                            <Col md={4}>\r\n                                <LControl type={EControlType.info} style=\"merged\" title={OrderingTexts.countCards}\r\n                                    label={this.contract.countCards !== undefined ? this.contract.countCards.toString() : \"0\"} />\r\n                            </Col>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                    {\r\n                        consumption ?\r\n                            <Col md={6} className=\"np\">\r\n                                <div className=\"spacer-big\" />\r\n                                <page.LLabel text=\"Status Datenverbrauch\" css=\"title\" />\r\n                                <ProgressBar maxValue={100} initialValue={consumption.getValueReverse()}\r\n                                    label={'[' + consumption.getLabel() + ']'} />\r\n                            </Col>\r\n                            : null\r\n                    }\r\n                </Row>\r\n\r\n                {\r\n                    this.contract.brandKey === BrandKeys.vodafone ?\r\n                        <>\r\n                            <Row>\r\n                                <Col className=\"np\">\r\n                                    <div className=\"spacer-medium\" />\r\n                                    <div className=\"spacer-line\" />\r\n                                    <div className=\"spacer-medium\" />\r\n                                </Col>\r\n                            </Row>\r\n                            {\r\n                                this.props.parent.dataWrapper.hasPartnerGroups() ?\r\n                                    <Row>\r\n                                        <Col md={12} className=\"text-sub text-desc\">{OrderingTexts.moreOptions}</Col>\r\n                                        <div className=\"spacer\" />\r\n                                        <Col md={12} className=\"text-sub text-desc\">\r\n                                            {this.renderOptionalSimCards()}\r\n                                        </Col>\r\n                                    </Row>\r\n                                    : null\r\n                            }\r\n                        </>\r\n                        : null\r\n                }\r\n            </Container>;\r\n\r\n        ctrl = <BaseBlock config={cfg}>\r\n            {ctrl}\r\n        </BaseBlock>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderOptionalSimCards(): JSX.Element {\r\n        let ctrl = <></>;\r\n\r\n        if (this.contract.brandKey !== BrandKeys.vodafone) {\r\n            return ctrl;\r\n        };\r\n\r\n        let but = <page.LButton type={ELButtonType.buttonWithIconRight}\r\n            icon=\"print\"\r\n            css=\"a1\"\r\n            id=\"buttonRequestContract\"\r\n            text={OrderingTexts.bookNow}\r\n            onClick={() => {\r\n                let d = OrderDataWrapper.createProcess(EBusinessCase.bnt,\r\n                    EActivationType.partnerCard,\r\n                    this.props.parent.data,\r\n                    undefined);\r\n\r\n                d.activations[0].additional = true;\r\n                d.activations[0].msisdn = '';\r\n                if (this.props.parent.data.customer.contracts && this.props.parent.data.customer.contracts[0].customerId) {\r\n                    d.activations[0].customerId = this.props.parent.data.customer.contracts[0].customerId;\r\n                }\r\n\r\n                StorageHelper.addOrder(d);\r\n\r\n                this.props.parent.refresh();\r\n                EasyRouter.route({ url: '/ordering/new/tariff/' + d.id, title: OrderingTexts.bookPartner });\r\n                this.props.parent.refresh();\r\n            }} />;\r\n\r\n        ctrl = (\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12} className=\"np\">\r\n                        {/* <page.BlockInfo title={OrderingTexts.bookMulticard} \r\n                        style=\"thumb-sim\"\r\n                        button={but}>\r\n                        <></>\r\n                        <div>\r\n                            {OrderingTexts.bookMulticardDesc}\r\n                        </div>\r\n                    </page.BlockInfo> */}\r\n                        {\r\n                            this.props.parent.dataWrapper.hasPartnerGroups() ?\r\n                                <page.BlockInfo title={OrderingTexts.bookPartner}\r\n                                    style=\"thumb-sim\"\r\n                                    button={but}>\r\n                                    <></>\r\n                                    <div>\r\n                                        {OrderingTexts.bookMulticardDesc}\r\n                                    </div>\r\n                                </page.BlockInfo>\r\n                                : <></>\r\n                        }\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default ExistingContractData;","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { Address, Availability, ELButtonType, ERequestStatus, ERequestType, IDefCon, OrderDataWrapper } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport { EActionAddressType, EActivationType, EBusinessCase, ECreditDebitType, EIDCardType, EPaymentType } from '../../../models/ordering/order';\r\nimport { TreeItem } from '../../../models/support/tree';\r\nimport CustomerScreen from '../../../screens/existing/customer';\r\nimport { BrandKeys, StorageKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { OrderingTexts } from '../../../utils/messages';\r\nimport EasyRouter from '../../../utils/router';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport BrandsList from '../../ordering/brandList';\r\nimport { EBrandThumbType } from '../../ordering/brandThumb';\r\nimport { LButton } from '../../page';\r\nimport BaseBlock from '../../page/block';\r\nimport { ECategoryStatus } from '../../tools/categoryWrapper';\r\n\r\nexport interface IExistingCustomerCrossSellingProps {\r\n    parent: CustomerScreen;\r\n}\r\n\r\nexport interface IExistingCustomerCrossSellingState extends IBaseComponentState {\r\n\r\n}\r\n\r\nexport class ExistingCustomerCrossSelling extends React.Component<IExistingCustomerCrossSellingProps, IExistingCustomerCrossSellingState> {\r\n    private dc: IDefCon;\r\n   \r\n    constructor(props: IExistingCustomerCrossSellingProps) {\r\n        super(props);\r\n\r\n        this.dc = StorageHelper.getDefCon();\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    componentWillReceiveProps(next: IExistingCustomerCrossSellingProps) {\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    \r\n\r\n    render() {\r\n        if (!this.dc.canRunAvailability()) { return <></> }\r\n\r\n        let avl = StorageHelper.getAvailability();\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.crossSelling,\r\n            transparent: false,\r\n            style: 'crossselling',\r\n            styleContainer: '',\r\n            collapsible: true,\r\n            collapsed: false\r\n        };\r\n\r\n        let br = linq.from<IBrand>(StorageHelper.getBrands())\r\n            .where(x => x.id == BrandKeys.kabel || x.id == BrandKeys.dsl)\r\n            .toArray();\r\n\r\n        let tocheck = avl.executed == ERequestStatus.undefined;\r\n\r\n        if (this.props.parent.data.customer.address && avl.address.city != this.props.parent.data.customer.address.city) {\r\n            tocheck = true;\r\n        }\r\n\r\n        if (avl.executed == ERequestStatus.tempResult || avl.executed == ERequestStatus.done) {\r\n            tocheck = false;\r\n        }\r\n\r\n        let inner = tocheck ? this.renderAction(avl) : this.renderBrands(br, avl);\r\n\r\n        let ctrl = <BaseBlock config={cfg}>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12} className=\"np\">\r\n                        {inner}\r\n                        {/* {this.renderAction(avl)} */}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </BaseBlock>\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderAction(avl: Availability) {\r\n        let cust = this.props.parent.data.customer;\r\n        let ctrl = <LButton type={ELButtonType.buttonWithIconRight}\r\n            css=\"action3 fl\"\r\n            id=\"\"\r\n            text={\"Festnetz und TV Verfügbarkeit prüfen\"}\r\n            onClick={() => {\r\n                avl.address = cust.address!;\r\n                avl.isCrossSelling = true;\r\n                avl.executed = ERequestStatus.running;\r\n               \r\n\r\n                StorageHelper.set(StorageKeys.keyAvailability, avl);\r\n\r\n                Global.hub.send(JSON.stringify(avl),\r\n                    ERequestType.checkAvailability,\r\n                    undefined);\r\n\r\n                this.setState({ changed: true });\r\n            }} />\r\n\r\n        return ctrl;\r\n    };\r\n\r\n\r\n    private renderBrands(br: IBrand[], avl: Availability) {\r\n        let cust = this.props.parent.data.customer;\r\n        avl.address = cust.address!;\r\n        avl.isCrossSelling = true;\r\n        avl.executed = ERequestStatus.done;\r\n\r\n        StorageHelper.set(StorageKeys.keyAvailability, avl);\r\n\r\n        let inner = <BrandsList\r\n            selected={BrandKeys.kabel}\r\n            thumbSelectable={true}\r\n            needSelection={false}\r\n            thumbType={EBrandThumbType.blister}\r\n            withTariffs={false}\r\n            forceVisible={true}\r\n            crossSelling={true}\r\n            checkAvailabilityProductsUponClick={true}\r\n            clickHandler={(catKey) => {\r\n                \r\n                let c = Global.categoryWrapper.getCategory(catKey);\r\n\r\n                if (!c || c.status != ECategoryStatus.available) {\r\n                    return;\r\n                }\r\n\r\n                let d = OrderDataWrapper.createProcess(EBusinessCase.bnt,\r\n                    EActivationType.actDefault,\r\n                    this.props.parent.data,\r\n                    undefined);\r\n                Global.categoryWrapper.switchCat(catKey);\r\n                d.currentCat = catKey;\r\n\r\n                d.currentBrand = d.activations[0].brandKey = Global.categoryWrapper.getCategoryBrandKey(undefined);\r\n                d.activations[0].reset();\r\n                d.activations[0].catKey = catKey;\r\n                d.activations[0].additional = true;\r\n                d.activations[0].msisdn = '';\r\n                d.activations[0].activationType = EActivationType.actDefault;\r\n                d.activations[0]['businessCaseId'] = EBusinessCase.bnt;\r\n                d.activations[0].creditDebitType = ECreditDebitType.postpaid;\r\n                d.customer.legitimation = { type: EIDCardType.german, id: '', authority: '' };\r\n                if(!d.customer.payment) {\r\n                    d.customer.payment =  {\r\n                        paymentType: EPaymentType.iban,\r\n                        addressType: EActionAddressType.sameAddress,\r\n                        address: new Address()\r\n                    };\r\n                };\r\n                d.activations[0].selection = new TreeItem('root');\r\n\r\n                // d.activations[0].availability.isCrossSelling = true;\r\n                // d.activations[0].availability = avl;\r\n               \r\n\r\n                d.isCrossSelling = true;\r\n\r\n                if (!this.props.parent.data.customer.mnp) {\r\n                    d.customer.mnp = { provider: '', network: '', differentCustomer: false, birthday: new Date() };\r\n                    d.customer.mnp.differentCustomer = false;\r\n                    d.customer.mnp.birthday = new Date();\r\n                    d.customer.mnp.cancellationDate = new Date();\r\n                    d.customer.mnp.contractEndDate = new Date();\r\n\r\n                } else {\r\n                    d.customer.mnp = this.props.parent.data.customer.mnp;\r\n                }\r\n\r\n                if (this.props.parent.data.customer.contracts && this.props.parent.data.customer.contracts[0].customerId) {\r\n                    d.activations[0].customerId = this.props.parent.data.customer.contracts[0].customerId;\r\n                }\r\n\r\n                StorageHelper.addOrder(d, () => {\r\n                    EasyRouter.route({ url: '/ordering/new/tariff/' + d.id, title: OrderingTexts.activation });\r\n                });\r\n            }}\r\n            block={{ title: '', transparent: true }} />\r\n\r\n        return inner;\r\n    };\r\n};\r\n\r\nexport default ExistingCustomerCrossSelling;","import * as React from 'react';\r\nimport * as linq from 'linq';\r\nimport CustomerScreen from '../../../screens/existing/customer';\r\nimport ExistingCustomerPayment from '../../existing/data/customerPayment';\r\nimport { IBaseComponentState, IApiResponse, EApiResponseStatus } from '../../../interfaces';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport BaseBlock from '../../page/block';\r\nimport { IContract } from '../../../models/existing/contract';\r\nimport { OrderingTexts, MainTexts, ActivationMessages } from '../../../utils/messages';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { EDocumentType } from '../../../models/ordering/order';\r\nimport * as d from '../../../models/existing/document';\r\nimport Download from './download';\r\nimport { LControl, LButton } from '../../page';\r\nimport { EControlType, EFormMode } from '../../../models';\r\nimport Global from '../../../utils/Global';\r\nimport * as m from '../../../models/index';\r\nimport { ConsentText, AddChanel, ConsentGet } from '../../../models/ordering/bew';\r\nimport * as page from '../../page/index';\r\nimport { IControlValue } from '../../../models/page/interfaces';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport { IPopupConfig, EPopupType } from '../../dialogs/popup';\r\nimport Api from '../../../utils/api';\r\n\r\nexport interface IExistingCustomerConsentProps {\r\n    parent: CustomerScreen;\r\n    collapsed: boolean;\r\n};\r\n\r\nexport interface IExistingCustomerConsentState {\r\n    mode: EFormMode,\r\n    changed: boolean,\r\n    activateAll: boolean,\r\n    deactivateAll: boolean,\r\n}\r\n\r\n\r\n\r\nexport class Consents {\r\n    email_EMA: AddChanel = { selected: false, ad_channel_type: \"\", change_date: new Date(), channel: \"\" };\r\n    emailLastChange: AddChanel = { selected: false, ad_channel_type: \"\", change_date: new Date(), channel: \"\" };\r\n    sms_mms_SMS: AddChanel = { selected: false, ad_channel_type: \"\", change_date: new Date(), channel: \"\" };\r\n    post_WHM: AddChanel = { selected: false, ad_channel_type: \"\", change_date: new Date(), channel: \"\" };\r\n    telefon_OBP: AddChanel = { selected: false, ad_channel_type: \"\", change_date: new Date(), channel: \"\" };\r\n    telefonContractExt_PVL: AddChanel = { selected: false, ad_channel_type: \"\", change_date: new Date(), channel: \"\" };\r\n    checkoutTerms: AddChanel = { selected: false, ad_channel_type: \"\", change_date: new Date(), channel: \"\" };\r\n    data_handling_terms: AddChanel = { selected: false, ad_channel_type: \"\", change_date: new Date(), channel: \"\" };\r\n}\r\n\r\nexport class ProtectionAndConsent extends React.Component<IExistingCustomerConsentProps, IExistingCustomerConsentState> {\r\n    private contract: IContract;\r\n    private customer: ICustomer;\r\n    private allConsents: Consents;\r\n    private collapsed?: boolean;\r\n    public static containerId: string = 'containerConsentsExisting';\r\n    private oneConsent: ConsentGet = { consent_date: new Date(), consent_type: \"\", not_selected_ad_channels: [], selected_ad_channels: [] };\r\n\r\n    private canPrint?: boolean = false;\r\n    private canSave?: boolean = false;\r\n    private printed: boolean = false;\r\n    private needPrint: boolean = false;\r\n\r\n    constructor(props: IExistingCustomerConsentProps) {\r\n        super(props);\r\n\r\n        this.collapse = this.collapse.bind(this);\r\n\r\n        this.collapsed = this.props.collapsed;\r\n\r\n        this.state = {\r\n            changed: false,\r\n            mode: EFormMode.view,\r\n            activateAll: false,\r\n            deactivateAll: false\r\n        }; \r\n\r\n        this.allConsents = new Consents();\r\n        this.customer = StorageHelper.getCustomer(this.props.parent.data.id);\r\n        this.contract = this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0] : {};\r\n    }; \r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = { \r\n            title: OrderingTexts.customerConsent,  \r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: '', \r\n            collapsible: true,\r\n            id: ProtectionAndConsent.containerId + \"-inner\",\r\n            collapsed: this.collapsed,\r\n            onCollapse: (collapsed)=>{\r\n                this.collapsed = collapsed;\r\n                this.setState({changed: true});\r\n            }\r\n        };\r\n\r\n        this.prepareConsents();\r\n\r\n        this.canPrint = false;\r\n        this.canSave = false;\r\n\r\n        if(this.customer.bew) {\r\n            if(this.customer.bew.consulting1 || this.customer.bew.consulting2) {\r\n                this.canPrint = true;\r\n            };\r\n\r\n            if(this.customer.bew.consulting1 && this.printed) {\r\n                this.canSave = true;\r\n            };\r\n\r\n            if(!this.customer.bew.consulting1 && !this.customer.bew.consulting2 && ((this.customer.bew.adChannels && this.customer.bew.adChannels.length == 0))) {\r\n                this.canSave = true;\r\n            };\r\n\r\n            if(!this.customer.bew.consulting1 && this.printed && this.customer.bew.consulting2) {\r\n                this.canSave = true;\r\n            };\r\n            \r\n            this.needPrint = false;\r\n            if(this.customer.bew.consulting1 || this.customer.bew.consulting2 || ((this.customer.bew.adChannels && this.customer.bew.adChannels.length == 0))) {\r\n                this.needPrint = true;\r\n            };\r\n\r\n            if(this.state.deactivateAll) {\r\n                this.needPrint = false;\r\n            };\r\n        };\r\n\r\n        let ctrl =\r\n            <Container >\r\n                {this.state.mode == EFormMode.view ? <>\r\n                    <Row>\r\n                        <Col xs={4} md={4}>\r\n                            <LControl preview={true}\r\n                                type={EControlType.text} style=\"merged\"\r\n                                label={MainTexts.email}\r\n                                id={\"\"}\r\n                                name={\"\"}\r\n                                value={Global.toGermanDate(this.allConsents.email_EMA.change_date)} />\r\n                        </Col>\r\n                        <Col xs={1} md={1}>\r\n                            <br/>\r\n                            <LControl type={EControlType.checkbox}\r\n                                hideTitle={true}\r\n                                checked={this.allConsents.email_EMA.selected}\r\n                                disabled={true}\r\n                                name=\"\"\r\n                                id={\"\"}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={2} md={2} />\r\n\r\n                        <Col xs={4} md={4}>\r\n                            <LControl preview={true}\r\n                                type={EControlType.text} style=\"merged\"\r\n                                label={MainTexts.sms_mms}\r\n                                id={\"\"}\r\n                                name={\"\"}\r\n                                value={Global.toGermanDate(this.allConsents.sms_mms_SMS.change_date)} />\r\n                        </Col>\r\n                        <Col xs={1} md={1}>\r\n                            <br/>\r\n                            <LControl type={EControlType.checkbox}\r\n                                hideTitle={true}\r\n                                style=\"merged\"\r\n                                checked={this.allConsents.sms_mms_SMS.selected}\r\n                                disabled={true}\r\n                                name=\"\"\r\n                                id={\"\"}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={4} md={4}>\r\n                            <LControl preview={true}\r\n                                type={EControlType.text} style=\"merged\"\r\n                                label={MainTexts.emailLastChange}\r\n                                id={\"\"}\r\n                                name={\"\"}\r\n\r\n                                value={Global.toGermanDate(this.allConsents.emailLastChange.change_date)} />\r\n                        </Col>\r\n                        <Col xs={1} md={1}>\r\n                            <br/>\r\n                            <LControl type={EControlType.checkbox}\r\n                                checked={this.allConsents.emailLastChange.selected}\r\n                                disabled={true}\r\n                                hideTitle={true}\r\n                                name=\"\"\r\n                                id={\"\"}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={2} md={2} />\r\n\r\n                        <Col xs={4} md={4}>\r\n                            <LControl preview={true}\r\n                                type={EControlType.text} style=\"merged\"\r\n                                label={MainTexts.phone}\r\n                                id={\"\"}\r\n                                name={\"\"}\r\n\r\n                                value={Global.toGermanDate(this.allConsents.telefon_OBP.change_date)} />\r\n                        </Col>\r\n                        <Col xs={1} md={1}>\r\n                            <br/>\r\n                            <LControl type={EControlType.checkbox}\r\n                                checked={this.allConsents.telefon_OBP.selected}\r\n                                disabled={true}\r\n                                hideTitle={true}\r\n                                name=\"\"\r\n                                id={\"\"}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n\r\n                        <Col xs={4} md={4}>\r\n                            <LControl preview={true}\r\n                                type={EControlType.text} style=\"merged\"\r\n                                label={MainTexts.post}\r\n                                id={\"\"}\r\n                                name={\"\"}\r\n\r\n                                value={Global.toGermanDate(this.allConsents.post_WHM.change_date)} />\r\n                        </Col>\r\n                        <Col xs={1} md={1}>\r\n                            <br/>\r\n                            <LControl type={EControlType.checkbox}\r\n                                checked={this.allConsents.post_WHM.selected}\r\n                                disabled={true}\r\n                                hideTitle={true}\r\n                                name=\"\"\r\n                                id={\"\"}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={2} md={2} />\r\n\r\n                        <Col xs={4} md={4}>\r\n                            <LControl preview={true}\r\n                                type={EControlType.text} style=\"merged\"\r\n                                label={MainTexts.phoneContractExtension}\r\n                                id={\"\"}\r\n                                name={\"\"}\r\n\r\n                                value={Global.toGermanDate(this.allConsents.telefonContractExt_PVL.change_date)} />\r\n                        </Col>\r\n                        <Col xs={1} md={1}>\r\n                            <br/>\r\n                            <LControl type={EControlType.checkbox}\r\n                                checked={this.allConsents.telefonContractExt_PVL.selected}\r\n                                disabled={true}\r\n                                hideTitle={true}\r\n                                name=\"\"\r\n                                id={\"\"}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n                    :\r\n                    <>\r\n                        <Row>\r\n                            <Col xs={12} md={12}  >\r\n                                <LControl type={EControlType.hint} label={\"Hier bestimmen Sie für Ihren Kunden ob und wie Sie zur Beratung kontaktiert werden dürfen.\"} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} >\r\n                                <LControl type={EControlType.hint} label={\"Mit den Checkboxen können Sie Ihre Beratungseinwilligung. geben und widerrufen und Ihr Widerspruchsrecht nutzen\"} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} >\r\n                                <LControl type={EControlType.hint} label={\"ACHTUNG: Im easy Portal können Sie die Einstellungen nur für alle Kommunikationswege vornehmen.\"} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={1} md={1} className=\"np\">\r\n                                <LControl type={EControlType.checkbox} onChange={() => {\r\n                                    this.selectAll();\r\n                                }} name=\"selectAll\" id=\"selectAllId\"\r\n                                    hideTitle={true} label=\"\"\r\n\r\n                                    checked={this.state.activateAll} />\r\n                            </Col>\r\n                            <Col xs={11} md={11} className=\"npr\">\r\n                                <LControl type={EControlType.hint} label={\"Alle Kommunikationskanäle aktivieren\"} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={1} md={1} className=\"np\">\r\n                                <page.LControl\r\n                                    type={EControlType.checkbox}\r\n                                    onChange={(e) => {\r\n                                        this.deselectAll()\r\n                                    }}\r\n                                    name=\"deactivateAll\"\r\n                                    id=\"deactivateAllId\"\r\n                                    hideTitle={true}\r\n                                    label=\"\"\r\n                                    checked={this.state.deactivateAll} />\r\n                            </Col>\r\n                            <Col xs={11} md={11} className=\"npr\">\r\n                                <LControl type={EControlType.hint} label={\"Alle Kommunikationskanäle deaktivieren\"} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <div className=\"spacer-medium\" />\r\n                                <div className=\"spacer-line\" />\r\n                                <div className=\"spacer-medium\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </>}\r\n\r\n                {this.state.deactivateAll ? <></> : <Row>\r\n                    <Col xs={1} md={1} className=\"np\">\r\n                        <LControl type={EControlType.checkbox} onChange={(v:IControlValue) => {\r\n                            if(this.customer.bew) {\r\n                                this.customer.bew.consulting1 = v.checked;\r\n                                this.printed = false;\r\n                                ////StorageHelper.updateCustomer(this.props.parent.data.id, this.customer);\r\n                            };                            \r\n                            // this.allConsents.checkoutTerms.selected = this.allConsents.checkoutTerms.selected ? false : true;\r\n                            this.setState({ changed: true });\r\n                        }} name=\"checkoutTerms\" id=\"checkoutTermsId\"\r\n                            hideTitle={true} label=\"\"\r\n                            disabled={this.state.mode == EFormMode.view}\r\n                            checked={this.customer.bew ? this.customer.bew.consulting1 : false} />\r\n                    </Col>\r\n                    <Col xs={11} md={11} className=\"npr\">\r\n                        <LControl type={EControlType.hint} label={this.customer.bew && this.customer.bew.consentExisting && this.customer.bew.consentExisting.ActualTexts.bew_checkout_terms !== undefined ? this.customer.bew.consentExisting.ActualTexts.bew_checkout_terms[0].text : \"n/a\"} />\r\n                    </Col>\r\n                </Row>}\r\n\r\n                <Row>\r\n                    <Col xs={1} md={1} className=\"np\">\r\n                        <LControl type={EControlType.checkbox} onChange={(v:IControlValue) => {\r\n                            if(this.customer.bew) {\r\n                                this.customer.bew.consulting2 = v.checked;\r\n\r\n                                this.printed = false;\r\n\r\n                                ////StorageHelper.updateCustomer(this.props.parent.data.id, this.customer);\r\n                            };\r\n                            this.setState({ changed: true })\r\n                        }} name=\"dataHandlingTerms\" id=\"dataHandlingTerms\"\r\n                            hideTitle={true} label=\"\"\r\n                            disabled={this.state.mode == EFormMode.view}\r\n                            checked={this.customer.bew ? this.customer.bew.consulting2 : false} />\r\n                    </Col>\r\n                    <Col xs={11} md={11} className=\"npr\">\r\n                        <LControl type={EControlType.hint} \r\n                            label={this.customer.bew && this.customer.bew.consentExisting && this.customer.bew.consentExisting.ActualTexts.data_handling_terms !== undefined ? this.customer.bew.consentExisting.ActualTexts.data_handling_terms[0].text : \"n/a\"} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {this.state.mode == EFormMode.edit ?\r\n                    <>\r\n                        <LButton type={m.ELButtonType.buttonWithIconRight}\r\n                            icon=\"print\"\r\n                            css=\"a1\"\r\n                            id=\"\"\r\n                            text={MainTexts.cancel}\r\n                            onClick={() => {\r\n                                this.printed = false;\r\n                                this.customer = StorageHelper.getCustomer(this.props.parent.data.id);\r\n                                this.setState({ mode: EFormMode.view, activateAll: false, deactivateAll: false })\r\n                            }} />\r\n\r\n                        {\r\n                            this.canPrint ? \r\n                            <LButton type={m.ELButtonType.buttonWithIconRight} //show only if at least one checkbox is selected\r\n                                icon=\"print\"\r\n                                css=\"a1 fr\"\r\n                                id=\"\"\r\n                                text={MainTexts.print}\r\n                                onClick={() => {\r\n                                    if(!this.canProcess()) {\r\n                                        return;\r\n                                    };\r\n\r\n                                    let update  = {\r\n                                        type: m.ERequestType.customerPrintBEW,\r\n                                        brandKey: BrandKeys.otelo,\r\n                                        id: this.props.parent.data.id,\r\n                                        bew: this.customer.bew\r\n                                    };\r\n\r\n                                    let cfg:IPopupConfig = {\r\n                                        props: {\r\n                                            id: 'dynamicPopup',\r\n                                            title: OrderingTexts.customerConsent,\r\n                                            visible: true,\r\n                                            closable: false,\r\n                                            type: EPopupType.pleaseWait\r\n                                        },\r\n                                        content: <div>{OrderingTexts.customerData}</div>,\r\n                                        callback: (api: IApiResponse)=>{\r\n\r\n                                        }\r\n                                    };\r\n                                    \r\n                                    this.props.parent.processCustomer(()=>{\r\n                                        Api.fetch('existing/printbew', update, 'post', (api)=>{\r\n                                            let msg: any = ActivationMessages.saveSuccess;\r\n                                            \r\n                                            if(api.status != EApiResponseStatus.ok) {\r\n                                                var sum = Api.parseSummary(api, undefined);\r\n                                                msg = sum.message;\r\n                                            } else {\r\n                                                msg = <div className=\"tal\">\r\n                                                    <span>Das Auftragsdokument zur BEW-Änderung wurde erstellt. Zum Download klicke auf den nachstehenden Link.</span>\r\n                                                    <br/> <br/>\r\n                                                    <div className=\"tac\">\r\n                                                        <LButton type={m.ELButtonType.buttonWithIconRight} //show only if at least one checkbox is selected\r\n                                                            icon=\"print\"\r\n                                                            css=\"a1\"\r\n                                                            id=\"\"\r\n                                                            text={\"Dokument anzeigen\"}\r\n                                                            onClick={() => {\r\n                                                                this.printed = true;\r\n                                                                this.setState({changed: true});\r\n                                                                Api.follow('environment/dd/?brand=' + this.props.parent.data.activations[0].brandKey + '&activationId=' + this.props.parent.data.activations[0].id + '&file=' + api.data.Binary);\r\n                                                                this.props.parent.resetDynamicPopup(undefined);\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            };\r\n\r\n                                            let cfg:IPopupConfig = {\r\n                                                props: {\r\n                                                    id: 'dynamicPopup',\r\n                                                    title:  OrderingTexts.customerConsent,\r\n                                                    visible: true,\r\n                                                    closable: true,\r\n                                                    type: EPopupType.custom\r\n                                                },\r\n                                                content: <div>{msg}</div>\r\n                                            };\r\n\r\n                                            this.props.parent.processCustomer(()=>{ },cfg)\r\n                                        });\r\n                                    },cfg);                                \r\n\r\n                                }} />                           \r\n                                : null\r\n                        }\r\n\r\n                        {\r\n                            this.canSave ? \r\n                            <LButton type={m.ELButtonType.buttonWithIconRight} //show only if at least one checkbox is selected\r\n                                icon=\"print\"\r\n                                css=\"a1 fr\"\r\n                                id=\"\"\r\n                                text={MainTexts.save}\r\n                                onClick={() => {\r\n                                    if(!this.canProcess()) {\r\n                                        return;\r\n                                    };\r\n                                    \r\n                                    if(this.needPrint) {\r\n                                        let cfgHint:IPopupConfig = {\r\n                                            props: {\r\n                                                id: 'dynamicPopup',\r\n                                                title:  OrderingTexts.customerConsent,\r\n                                                visible: true,\r\n                                                closable: true,\r\n                                                type: EPopupType.custom\r\n                                            },\r\n                                            content: <div>Bitte vergewissere dich, dass unser Kunde das Dokument zur Änderung seiner Beratungseinwilligung unterschrieben hat.</div>,\r\n                                            action: <>\r\n                                                <page.LButton text={MainTexts.next} css=\"fr\" icon=\"ok\"\r\n                                                    type={m.ELButtonType.buttonWithIconRight}\r\n                                                    onClick={() => { \r\n                                                        this.runSave();\r\n                                                    }} />\r\n                                            </>\r\n                                        };\r\n                                        \r\n                                        this.props.parent.processCustomer(()=>{ }, cfgHint);\r\n                                    } else {\r\n                                        this.runSave();\r\n                                    };\r\n                                }} />                            \r\n                            : null\r\n                        }\r\n\r\n                    </>\r\n\r\n                    : <LButton type={m.ELButtonType.buttonWithIconRight}\r\n                        icon=\"print\"\r\n                        css=\"a1 fr\"\r\n                        id=\"\"\r\n                        text={MainTexts.edit}\r\n                        onClick={() => {\r\n                            this.setState({ mode: EFormMode.edit })\r\n                        }} />\r\n                }\r\n            </Container>;\r\n\r\n        return <div id={ProtectionAndConsent.containerId}>\r\n            <BaseBlock config={cfg}>\r\n                {ctrl}\r\n            </BaseBlock>\r\n            </div>;\r\n    };\r\n\r\n\r\n\r\n    public collapse(state: boolean) {\r\n        this.collapsed = state;\r\n        this.setState({mode: EFormMode.view}, ()=>{\r\n            setTimeout(()=> {\r\n                this.setState({mode: EFormMode.view});\r\n                Global.FocusComponent('oecselectAllId');\r\n            }, 1000);\r\n        });\r\n    };\r\n\r\n    private runSave() {\r\n        this.props.parent.resetDynamicPopup(undefined); \r\n\r\n        let update  = {\r\n            type: m.ERequestType.customerUpdateConsents,\r\n            brandKey: BrandKeys.otelo,\r\n            id: this.props.parent.data.id,\r\n            bew: this.customer.bew\r\n        };\r\n\r\n        let cfg:IPopupConfig = {\r\n            props: {\r\n                id: 'dynamicPopup',\r\n                title:  OrderingTexts.customerConsent,\r\n                visible: true,\r\n                closable: false,\r\n                type: EPopupType.pleaseWait\r\n            },\r\n            content: <div>{OrderingTexts.customerData}</div>,\r\n            callback: (api: IApiResponse)=>{\r\n                let msg = ActivationMessages.saveSuccess;\r\n        \r\n\r\n                if(api.status != EApiResponseStatus.ok) {\r\n                    var sum = Api.parseSummary(api, undefined);\r\n                    msg = sum.message;\r\n                } else {\r\n                    StorageHelper.updateCustomer(this.props.parent.data.id, this.customer);\r\n                    this.setState({ mode: EFormMode.view })\r\n                };\r\n                \r\n                let cfg:IPopupConfig = {\r\n                    props: {\r\n                        id: 'dynamicPopup',\r\n                        title:  OrderingTexts.customerConsent,\r\n                        visible: true,\r\n                        closable: true,\r\n                        type: EPopupType.pleaseWait\r\n                    },\r\n                    content: <div>{msg}</div>,\r\n                    action: <>\r\n                    <page.LButton text={MainTexts.close} css=\"fr\" icon=\"ok\"\r\n                        type={m.ELButtonType.buttonWithIconRight}\r\n                        onClick={() => { \r\n                            this.props.parent.resetDynamicPopup(undefined); \r\n                        }}/>\r\n                    </>\r\n                };\r\n\r\n            this.props.parent.processCustomer(()=>{ },cfg)\r\n            }\r\n        };\r\n        \r\n        this.props.parent.processCustomer(()=>{\r\n            Global.hub.send(JSON.stringify(update),\r\n            m.ERequestType.customerUpdateConsents,\r\n                undefined);\r\n        },cfg);                                \r\n\r\n        Global.hub.send(JSON.stringify(update),\r\n                        m.ERequestType.customerUpdateConsents,\r\n                        undefined);        \r\n    };\r\n\r\n    private prepareConsents() {\r\n        this.allConsents.email_EMA.selected = false;\r\n        this.allConsents.emailLastChange.selected = false;\r\n        this.allConsents.sms_mms_SMS.selected = false;\r\n        this.allConsents.telefon_OBP.selected = false;\r\n        this.allConsents.telefonContractExt_PVL.selected = false;\r\n        this.allConsents.post_WHM.selected = false;\r\n\r\n        if (this.customer.bew && this.customer.bew.consentExisting) {\r\n            //let sel = this.customer.bew.adChannels ? this.customer.bew.adChannels.length > 0 : false;\r\n            this.customer.bew.consentExisting.consents.forEach(consent => {\r\n                if (consent.consent_type = \"BEW\") {\r\n                        if (consent.hasOwnProperty(\"selected_ad_channels\") && consent.selected_ad_channels && consent.selected_ad_channels.length > 0) {\r\n                            this.allConsents.checkoutTerms.selected = true;\r\n                            if(consent.selected_ad_channels){\r\n                            consent.selected_ad_channels.forEach(channel => {\r\n                                let sel = true;\r\n                                //if(channel.selected) {\r\n                                //    sel = true;\r\n                                //};\r\n                                switch (channel.ad_channel_type) {\r\n                                    case \"EMA\":\r\n                                        this.allConsents.email_EMA.selected = sel;\r\n                                        this.allConsents.email_EMA.change_date = channel.change_date;\r\n                                        break;\r\n                                    case \"ECU\":\r\n                                        this.allConsents.emailLastChange.selected = sel;\r\n                                        this.allConsents.emailLastChange.change_date = channel.change_date;\r\n                                        break;\r\n                                    case \"SMS\":\r\n                                        this.allConsents.sms_mms_SMS.selected = sel;\r\n                                        this.allConsents.sms_mms_SMS.change_date = channel.change_date;\r\n                                        break;\r\n                                    case \"OBP\":\r\n                                        this.allConsents.telefon_OBP.selected = sel;\r\n                                        this.allConsents.telefon_OBP.change_date = channel.change_date;\r\n                                        break;\r\n                                    case \"PVL\":\r\n                                        this.allConsents.telefonContractExt_PVL.selected = sel;\r\n                                        this.allConsents.telefonContractExt_PVL.change_date = channel.change_date;\r\n                                        break;\r\n                                    case \"WHM\":\r\n                                        this.allConsents.post_WHM.selected = sel;\r\n                                        this.allConsents.post_WHM.change_date = channel.change_date;\r\n                                        break;\r\n                                }\r\n                            \r\n                            });\r\n                        }\r\n                    } \r\n                }\r\n                if (consent.consent_type == \"DAT\") {\r\n                    this.allConsents.data_handling_terms.selected = true;\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    private selectAll() {\r\n        this.printed = false;\r\n\r\n        if(this.customer.bew && this.customer.bew.consentExisting) {\r\n            this.customer.bew.adChannels = [];\r\n            let bew = linq.from<ConsentGet | any>(this.customer.bew.consentExisting.consents).where(x=>x.consent_type == 'BEW').firstOrDefault();\r\n            let idx = this.customer.bew.consentExisting.consents.indexOf(bew);\r\n            if(bew) {\r\n                if(this.customer.bew.consentExisting) {\r\n\r\n                    bew.selected_ad_channels = bew.not_selected_ad_channels;\r\n                    bew.not_selected_ad_channels = [];\r\n\r\n                    if(!bew.selected_ad_channels || bew.selected_ad_channels.length == 0) {\r\n                        bew.selected_ad_channels = [\r\n                            {ad_channel_type: 'EMA', channel: 'RET', change_date: new Date()},\r\n                            {ad_channel_type: 'ECU', channel: 'RET', change_date: new Date()},\r\n                            {ad_channel_type: 'SMS', channel: 'RET', change_date: new Date()},\r\n                            {ad_channel_type: 'OBP', channel: 'RET', change_date: new Date()},\r\n                            {ad_channel_type: 'PVL', channel: 'RET', change_date: new Date()},\r\n                            {ad_channel_type: 'WHM', channel: 'RET', change_date: new Date()},\r\n                        ];\r\n                    };\r\n\r\n                    if(bew.selected_ad_channels) {\r\n                        bew.selected_ad_channels.map((i)=>{\r\n                            i.change_date = new Date();\r\n                            i.selected = true;\r\n                            if(this.customer.bew && this.customer.bew.adChannels) {\r\n                                this.customer.bew.adChannels.push(i.ad_channel_type);\r\n                            }\r\n                        });\r\n                    };\r\n\r\n                    this.customer.bew.consentExisting.consents[idx] = bew;\r\n                };                \r\n\r\n            }\r\n        };\r\n\r\n        ////StorageHelper.updateCustomer(this.props.parent.data.id, this.customer);\r\n         \r\n        this.setState({ changed: true, activateAll: true, deactivateAll: false });\r\n    };\r\n\r\n    private deselectAll() {\r\n        this.printed = false;\r\n        if(this.customer.bew) {\r\n            this.customer.bew.adChannels = [];\r\n            this.customer.bew.consulting1 = false;\r\n            if(this.customer.bew.consentExisting) {\r\n                let bew = linq.from<ConsentGet>(this.customer.bew.consentExisting.consents).where(x=>x.consent_type == 'BEW').firstOrDefault();\r\n                let idx = this.customer.bew.consentExisting.consents.indexOf(bew);\r\n                if(bew) {\r\n                    bew.not_selected_ad_channels = bew.selected_ad_channels;\r\n                    if(bew.not_selected_ad_channels) {\r\n                        bew.not_selected_ad_channels.map((i)=>{\r\n                            i.selected = false;\r\n                        });\r\n                    };\r\n                    bew.selected_ad_channels = [];\r\n                };\r\n                this.customer.bew.consentExisting.consents[idx] = bew;\r\n            };\r\n        };\r\n\r\n        ////StorageHelper.updateCustomer(this.props.parent.data.id, this.customer);\r\n\r\n        this.setState({ changed: true, activateAll: false, deactivateAll: true });\r\n\r\n    };\r\n\r\n    private canProcess() : boolean {\r\n        if(this.customer.bew) {\r\n            if(this.customer.bew.consulting1 && this.customer.bew.adChannels && this.customer.bew.adChannels.length > 0) {\r\n                return true;\r\n            } else if (this.state.deactivateAll) {\r\n                return true;                \r\n            } else if (!this.customer.bew.consulting1 && this.customer.bew.consulting2 && this.customer.bew.adChannels && this.customer.bew.adChannels.length == 0) {\r\n                return true;\r\n            } else if (!this.customer.bew.consulting1 && !this.customer.bew.consulting2 && this.customer.bew.adChannels && this.customer.bew.adChannels.length == 0) {\r\n                return true;\r\n            };\r\n        };\r\n\r\n        if(this.customer.bew) {\r\n            if(!this.customer.bew.consulting1 && this.customer.bew.adChannels && this.customer.bew.adChannels.length > 0) {\r\n                let cfg:IPopupConfig = {\r\n                    props: {\r\n                        id: 'dynamicPopup',\r\n                        title:  OrderingTexts.customerConsent,\r\n                        visible: true,\r\n                        closable: true,\r\n                        type: EPopupType.custom\r\n                    },\r\n                    content: <div>Sie müssen die Beratungseinwilligung bestätigen.</div>,\r\n                    action: <>\r\n                        <page.LButton text={MainTexts.ok} css=\"fr\" icon=\"ok\"\r\n                            type={m.ELButtonType.buttonWithIconRight}\r\n                            onClick={() => { \r\n                                this.props.parent.resetDynamicPopup(undefined); \r\n                            }} />\r\n                    </>\r\n                };\r\n        \r\n                this.props.parent.processCustomer(()=>{ },cfg);\r\n\r\n                return false;\r\n            };\r\n        };\r\n\r\n        let cfg:IPopupConfig = {\r\n            props: {\r\n                id: 'dynamicPopup',\r\n                title:  OrderingTexts.customerConsent,\r\n                visible: true,\r\n                closable: true,\r\n                type: EPopupType.custom\r\n            },\r\n            content: <div>Bitte wähle alle Kommunikationskanäle aus, bevor du das Dokument ausdruckst und speicherst.</div>,\r\n            action: <>\r\n                <page.LButton text={MainTexts.ok} css=\"fr\" icon=\"ok\"\r\n                    type={m.ELButtonType.buttonWithIconRight}\r\n                    onClick={() => { \r\n                        this.props.parent.resetDynamicPopup(undefined); \r\n                    }} />\r\n            </>\r\n        };\r\n\r\n        this.props.parent.processCustomer(()=>{ },cfg);\r\n\r\n        return false;\r\n    };\r\n};\r\n\r\nexport default ProtectionAndConsent;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { EControlType, EFormMode, ELButtonType, ERequestType } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { IContract } from '../../../models/existing/contract';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { ECustomerEmailStatus, ERequestStatus } from '../../../models/page/diverse';\r\nimport CustomerScreen from '../../../screens/existing/customer';\r\nimport { ValidationWrapper } from '../../../utils';\r\nimport Api from '../../../utils/api';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { MainTexts, OrderingTexts, ValidationMessages } from '../../../utils/messages';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport { EPopupType, IPopupConfig } from '../../dialogs/popup';\r\nimport { LControl } from '../../page';\r\nimport BaseBlock from '../../page/block';\r\nimport * as page from '../../page/index';\r\nimport ProtectionAndConsent from './protectionAndConsent';\r\n\r\n\r\nexport interface IExistingCustomerDataState extends IBaseComponentState {\r\n    mode: EFormMode;\r\n    modePassword: EFormMode;\r\n}\r\n\r\nexport interface IExistingCustomerDataProps {\r\n    parent: CustomerScreen;\r\n\r\n};\r\n\r\nexport class ExistingCustomerData extends React.Component<IExistingCustomerDataProps, IExistingCustomerDataState> {\r\n    private contract: IContract;\r\n    private customer: ICustomer;\r\n    private password: string = '';\r\n    private password2: string = '';\r\n    public static containerId: string = 'existingCustomerData';\r\n    private emailStatusControl: JSX.Element;\r\n    private emailStatus: ECustomerEmailStatus;\r\n\r\n    constructor(props: IExistingCustomerDataProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false,\r\n            modePassword: EFormMode.view,\r\n            mode: EFormMode.view\r\n        };\r\n\r\n        this.onInput = this.onInput.bind(this);\r\n        this.switchMode = this.switchMode.bind(this);\r\n\r\n        this.customer = JSON.parse(JSON.stringify(this.props.parent.data.customer));\r\n        this.contract = this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0] : {};\r\n\r\n        this.emailStatus = this.props.parent.data.customer.emailStatus ? this.props.parent.data.customer.emailStatus : ECustomerEmailStatus.UNDEFIEND;\r\n        this.emailStatusControl = <></>;\r\n\r\n        if (this.props.parent.data.customer.contracts && this.props.parent.data.customer.contracts[0].brandKey == BrandKeys.otelo) {\r\n            if (this.emailStatus == ECustomerEmailStatus.CREATED) {\r\n                this.showEMailStatusPopup();\r\n                this.emailStatusControl = <span className=\"orange\">{MainTexts.customerEMailCreated}</span>;\r\n            } else if (this.emailStatus == ECustomerEmailStatus.VALIDATED) {\r\n                this.emailStatusControl = <span className=\"green\">{MainTexts.customerEMailValidated}</span>;\r\n                this.showConsentPopup();\r\n            } else {\r\n                this.showEMailStatusPopup();\r\n                this.emailStatusControl = <span className=\"red\">{MainTexts.customerEMailNotValidated}</span>;\r\n            };\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.customerData,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: '',\r\n            collapsible: true,\r\n            collapsed: false\r\n        };\r\n\r\n        const preview = this.state.mode === EFormMode.view;\r\n        let canEdit = this.props.parent.data.customer.contracts && this.props.parent.data.customer.contracts[0].brandKey === BrandKeys.otelo ? true : false;\r\n\r\n        let ctrl =\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <LControl preview={true}\r\n                                type={EControlType.text} style=\"merged\"\r\n                                title={MainTexts.firstname}\r\n                                id={\"firstname\"}\r\n                                name={\"firstname\"}\r\n                                onChange={this.onInput}\r\n                                value={this.customer.firstname} />\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <LControl \r\n                                preview={true} \r\n                                type={EControlType.text} \r\n                                style=\"merged\"\r\n                                title={MainTexts.surname}\r\n                                id={\"surname\"}\r\n                                name={\"surname\"}\r\n                                onChange={this.onInput}\r\n                                value={this.customer.surname} />\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <LControl preview={true} \r\n                                style=\"merged\"\r\n                                type={EControlType.text}\r\n                                title={MainTexts.dateOfBirth}\r\n                                id={\"birthday\"}\r\n                                name={\"birthday\"}\r\n                                value={Global.toGermanDate(this.customer.birthday)} />\r\n                        </Col>                        \r\n                        <Col md={8}>\r\n                            <LControl preview={preview} \r\n                                type={EControlType.text} style=\"merged\"\r\n                                title={MainTexts.email}\r\n                                id={\"email\"}\r\n                                name={\"email\"}\r\n                                onChange={this.onInput}\r\n                                value={this.customer.email} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col md={12} className=\"subtitle\">{MainTexts.address}</Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <LControl preview={preview} type={EControlType.text} style=\"merged\"\r\n                                title={MainTexts.street}\r\n                                id={\"street\"}\r\n                                name={\"address.street\"}\r\n                                onChange={this.onInput}\r\n                                value={this.customer.address ? this.customer.address.street : MainTexts.na} />\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <LControl preview={preview} type={EControlType.text} style=\"merged\"\r\n                                id={\"nr\"}\r\n                                name={\"address.nr\"}\r\n                                onChange={this.onInput}\r\n                                title={MainTexts.houseNumber}\r\n                                value={this.customer.address ? this.customer.address.nr : MainTexts.na} />\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <LControl preview={preview} type={EControlType.text} style=\"merged\"\r\n                                id={\"city\"}\r\n                                name={\"address.city\"}\r\n                                onChange={this.onInput}\r\n                                title={MainTexts.city}\r\n                                value={this.customer.address ? this.customer.address.city : MainTexts.na} />\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <LControl\r\n                                preview={preview}\r\n                                id={\"zip\"}\r\n                                name={\"address.zip\"}\r\n                                onChange={this.onInput}\r\n                                type={EControlType.text} style=\"merged\" title={MainTexts.zip}\r\n                                value={this.customer.address ? this.customer.address.zip : MainTexts.na} />\r\n                        </Col>\r\n                        <Col md={4}></Col>\r\n                        <Col xs={12} md={12} >\r\n                            {\r\n                                canEdit ?\r\n                                    <>\r\n                                        {this.state.mode === EFormMode.view ?\r\n                                            <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                                css=\"a1 fr\"\r\n                                                id=\"buttonEditCustomer\"\r\n                                                text={MainTexts.edit}\r\n                                                onClick={() => {\r\n                                                    this.setState({ mode: EFormMode.edit });\r\n                                                }} /> :\r\n                                            <>\r\n                                                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                                    css=\"a1 fr\"\r\n                                                    id=\"buttonRequestContract\"\r\n                                                    text={MainTexts.save}\r\n                                                    onClick={() => {\r\n                                                        let cfg: IPopupConfig = {\r\n                                                            props: {\r\n                                                                id: 'dynamicPopup',\r\n                                                                title: 'Kundendaten ändern',\r\n                                                                visible: true,\r\n                                                                closable: false,\r\n                                                                type: EPopupType.pleaseWait\r\n                                                            },\r\n                                                            content: <div>{OrderingTexts.customerData}</div>\r\n                                                        };\r\n\r\n                                                        let t = {\r\n                                                            type: ERequestType.customerChangeData,\r\n                                                            brandKey: this.customer.contracts ? this.customer.contracts[0].brandKey : '',\r\n                                                            id: this.props.parent.data.id,\r\n                                                            data: this.customer\r\n                                                        };\r\n                                                        this.props.parent.processCustomer(() => {\r\n                                                            Global.hub.send(JSON.stringify(t),\r\n                                                                ERequestType.customerChangeData,\r\n                                                                undefined);\r\n                                                        }, cfg);\r\n                                                    }} />\r\n                                                <page.LButton type={ELButtonType.linkSimple}\r\n                                                    css=\"action3 fr\"\r\n                                                    id=\"buttonCancel\"\r\n                                                    text={MainTexts.cancel}\r\n                                                    onClick={() => {\r\n                                                        this.setState({ mode: EFormMode.view });\r\n                                                    }} />\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        this.customer.contracts && this.customer.contracts[0].brandKey === BrandKeys.otelo ?\r\n                            <>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"title\">{MainTexts.customerEMailValidation}</div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"\">Status: {this.emailStatusControl}</div>\r\n                                    </Col>\r\n                                </Row>\r\n                                {\r\n                                    this.emailStatus == ECustomerEmailStatus.VALIDATED ? null :\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                                    css=\"a1 fr\"\r\n                                                    id=\"buttonExecRequestEmail\"\r\n                                                    text={MainTexts.request}\r\n                                                    onClick={() => {\r\n\r\n                                                        let cfg: IPopupConfig = {\r\n                                                            props: {\r\n                                                                id: 'dynamicPopup',\r\n                                                                title: 'E-Mail Validierung',\r\n                                                                visible: true,\r\n                                                                closable: true,\r\n                                                                type: EPopupType.pleaseWait\r\n                                                            },\r\n                                                            content: <div>{OrderingTexts.customerData}</div>\r\n                                                        };\r\n\r\n                                                        let t = {\r\n                                                            type: ERequestType.customerValidateEMail,\r\n                                                            brand: this.customer.contracts ? this.customer.contracts[0].brandKey : '',\r\n                                                            id: this.props.parent.data.id\r\n                                                        };\r\n\r\n                                                        this.props.parent.processCustomer(() => {\r\n                                                            Api.fetch('existing/ValidateEmail', t, 'post', (api) => {\r\n                                                                var sum = Api.parseSummary(api, undefined);\r\n\r\n                                                                if (sum.status == ERequestStatus.done) {\r\n                                                                    this.props.parent.data.customer.emailStatus = ECustomerEmailStatus.CREATED;\r\n                                                                    StorageHelper.addOrder(this.props.parent.data);\r\n                                                                    this.setState({ changed: true });\r\n                                                                };\r\n\r\n                                                                cfg.props.type = EPopupType.custom;\r\n                                                                cfg.content = <div>{sum.message}</div>;\r\n\r\n                                                                this.props.parent.processCustomer(() => { }, cfg);\r\n                                                            });\r\n                                                        }, cfg);\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                }\r\n                            </>\r\n                            : null\r\n                    }\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"title\">Passwort</div>\r\n                            {\r\n                                this.state.modePassword === EFormMode.view ?\r\n                                    <LControl preview={true}\r\n                                        type={EControlType.text}\r\n                                        style=\"merged\"\r\n                                        title={MainTexts.customerPassword}\r\n                                        id={\"password\"}\r\n                                        name={\"password\"}\r\n                                        value={\"******\"} />\r\n                                    :\r\n                                    <Container id=\"passwordContainer\">\r\n                                        <Row>\r\n                                            <Col md={6} className=\"np\">\r\n                                                <LControl preview={false} type={EControlType.password} style=\"merged\"\r\n                                                    title={MainTexts.customerPassword}\r\n                                                    id={\"password\"}\r\n                                                    name={\"password\"}\r\n                                                    onChange={(e) => {\r\n                                                        this.password = e.value;\r\n                                                        this.setState({ changed: true });\r\n                                                    }}\r\n                                                    value={this.password}\r\n                                                    validationOptions={[\r\n                                                        new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                                        new ValidationOption({ type: EValidationOption.password, message: ValidationMessages.errorPassword })\r\n                                                    ]} />\r\n                                            </Col>\r\n                                            <Col md={6}>\r\n                                                <LControl preview={false} type={EControlType.password} style=\"merged\"\r\n                                                    title={MainTexts.passwordRepeat}\r\n                                                    id={\"password2\"}\r\n                                                    name={\"password2\"}\r\n                                                    onChange={(e) => {\r\n                                                        this.password2 = e.value;\r\n                                                        this.setState({ changed: true });\r\n                                                    }}\r\n                                                    value={this.password2}\r\n                                                    validationOptions={[\r\n                                                        new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                                        new ValidationOption({ type: EValidationOption.password, message: ValidationMessages.errorPassword }),\r\n                                                        new ValidationOption({ type: EValidationOption.match, message: ValidationMessages.errorPasswordMatch, targetControl: 'password' })\r\n                                                    ]} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                            }\r\n                        </Col>\r\n                        <Col xs={12} md={12} >\r\n                            {\r\n                                canEdit ?\r\n                                    <>\r\n                                        {this.state.modePassword === EFormMode.view ?\r\n                                            <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                                css=\"a1 fr\"\r\n                                                id=\"buttonEditPassword\"\r\n                                                text={MainTexts.edit}\r\n                                                onClick={() => {\r\n                                                    this.password2 = this.password = '';\r\n                                                    this.setState({ modePassword: EFormMode.edit });\r\n                                                }} /> :\r\n                                            <>\r\n                                                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                                    css=\"a1 fr\"\r\n                                                    id=\"buttonExecChangePassword\"\r\n                                                    text={MainTexts.save}\r\n                                                    onClick={() => {\r\n                                                        let res = ValidationWrapper.validateFormular(undefined, true, \"passwordContainer\", undefined);\r\n\r\n                                                        if (!res) {\r\n                                                            return;\r\n                                                        };\r\n\r\n                                                        let cfg: IPopupConfig = {\r\n                                                            props: {\r\n                                                                id: 'dynamicPopup',\r\n                                                                title: 'Passwort ändern',\r\n                                                                visible: true,\r\n                                                                closable: false,\r\n                                                                type: EPopupType.pleaseWait\r\n                                                            },\r\n                                                            content: <div>{OrderingTexts.customerData}</div>\r\n                                                        };\r\n\r\n                                                        let t = {\r\n                                                            type: ERequestType.customerChangePassword,\r\n                                                            brandKey: this.customer.contracts ? this.customer.contracts[0].brandKey : '',\r\n                                                            id: this.props.parent.data.id,\r\n                                                            ecpassword: this.password\r\n                                                        };\r\n\r\n                                                        this.props.parent.processCustomer(() => {\r\n                                                            Global.hub.send(JSON.stringify(t),\r\n                                                                ERequestType.customerChangePassword,\r\n                                                                undefined);\r\n                                                        }, cfg);\r\n                                                    }} />\r\n                                                <page.LButton type={ELButtonType.linkSimple}\r\n                                                    css=\"action3 fr\"\r\n                                                    id=\"buttonCancelPassword\"\r\n                                                    text={MainTexts.cancel}\r\n                                                    onClick={() => {\r\n                                                        this.setState({ modePassword: EFormMode.view });\r\n                                                    }} />\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>;\r\n\r\n        ctrl = <div id={ExistingCustomerData.containerId}>\r\n            <BaseBlock config={cfg}>\r\n                {ctrl}\r\n            </BaseBlock>\r\n        </div>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public switchMode(newMode: EFormMode) {\r\n        this.setState({ mode: newMode, modePassword: newMode });\r\n    };\r\n\r\n    private onInput(target: any) {\r\n        Global.onInput(this.customer, target, () => {\r\n            this.setState({ changed: true });\r\n        });\r\n    };\r\n\r\n    private showEMailStatusPopup() {\r\n        let msg = MainTexts.customerEMailNotValidatedText;\r\n        if (this.props.parent.data.customer) {\r\n            msg = msg.replace('$email', this.props.parent.data.customer.email ? this.props.parent.data.customer.email : 'k.A');\r\n        };\r\n\r\n        let cfg: IPopupConfig = {\r\n            props: {\r\n                id: 'dynamicPopupEMail',\r\n                title: MainTexts.customerEMailNotValidatedTitle,\r\n                visible: true,\r\n                closable: false,\r\n                type: EPopupType.custom,\r\n                textPositive: MainTexts.next\r\n            },\r\n            action: <>\r\n                <page.LButton text={MainTexts.next} css=\"fr\" icon=\"ok\"\r\n                    type={ELButtonType.buttonWithIconRight}\r\n                    onClick={() => {\r\n                        this.props.parent.resetDynamicPopup(undefined);\r\n\r\n                        this.showConsentPopup();\r\n                    }} />\r\n            </>,\r\n            content: <div dangerouslySetInnerHTML={{ __html: msg }}></div>\r\n        };\r\n\r\n        let t = {\r\n            type: ERequestType.customerChangePassword,\r\n            brandKey: this.customer.contracts ? this.customer.contracts[0].brandKey : '',\r\n            id: this.props.parent.data.id,\r\n            ecpassword: this.password\r\n        };\r\n\r\n        this.props.parent.processCustomer(() => { }, cfg);\r\n    };\r\n\r\n    private showConsentPopup() {\r\n        if (\r\n            (this.customer.bew && this.customer.bew.consulting1)\r\n            || (this.customer.contracts && this.customer.contracts[0].brandKey != BrandKeys.otelo)) {\r\n            return <></>\r\n        };\r\n\r\n        let msg = '<div class=\"tal\">Bitte beraten Sie Ihren Kunden bezüglich der Vorteile der Beratungseinwilligung (BEW) Nur dann ist es möglich:<ul><li>aktives Bestandskundenmanagement für die Zukunft zu gestalten.</li><li>Kundenroutings z.B. über Elsbeth durchzuführen.</li><li>Ihrem Kunden besondere Angebote zu machen.</li><li>Tarife auf dem aktuellsten Stand zu halten.</li></ul><div>';\r\n\r\n        let cfg: IPopupConfig = {\r\n            props: {\r\n                id: 'dynamicPopupBEW',\r\n                title: 'Hinweis Beratungseinwilligung',\r\n                visible: this.props.parent.brand.id.toLowerCase() === BrandKeys.otelo ? true : false,\r\n                closable: false,\r\n                type: EPopupType.custom,\r\n                textPositive: MainTexts.next,\r\n                height: 300\r\n            },\r\n            action: <>\r\n                <page.LButton text={'Beratungseinwilligung anpassen'} css=\"fl\" icon=\"ok\"\r\n                    type={ELButtonType.buttonWithIconRight}\r\n                    onClick={() => {\r\n                        this.props.parent.resetDynamicPopup(() => {\r\n                            let cont = Global.GetComponent<ProtectionAndConsent>(ProtectionAndConsent.containerId);\r\n                            Global.FocusComponent(ProtectionAndConsent.containerId);\r\n                            cont.collapse(false);\r\n                        });\r\n                    }} />\r\n                <page.LButton text={'Nein jetzt nicht'} css=\"fr\" icon=\"ok\"\r\n                    type={ELButtonType.linkSimple}\r\n                    onClick={() => { this.props.parent.resetDynamicPopup(undefined); }} />\r\n            </>,\r\n            content: <div dangerouslySetInnerHTML={{ __html: msg }}></div>\r\n        };\r\n\r\n\r\n\r\n        let t = {\r\n            type: ERequestType.customerChangePassword,\r\n            brandKey: this.customer.contracts ? this.customer.contracts[0].brandKey : '',\r\n            id: this.props.parent.data.id,\r\n            ecpassword: this.password\r\n        };\r\n\r\n        this.props.parent.processCustomer(() => { }, cfg);\r\n    };\r\n};\r\n\r\nexport default ExistingCustomerData;","import * as React from 'react';\r\nimport CustomerScreen from '../../../screens/existing/customer';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport BaseBlock from '../../page/block';\r\nimport { IContract } from '../../../models/existing/contract';\r\nimport { LControl } from '../../page';\r\nimport { EControlType, OrderDataWrapper, ICustomerAction, ECustomerActionType, ECustomerActionPurchase, ERequestType, ICustomerNba } from '../../../models';\r\nimport { MainTexts, OrderingTexts, ActionTexts, Hints } from '../../../utils/messages';\r\nimport BrandThumb, { EBrandThumbType, EBrandThumbStatus } from '../../ordering/brandThumb';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport * as linq from 'linq';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport Global from '../../../utils/Global';\r\nimport TariffThumb from '../../ordering/tariffThumb';\r\nimport EasyRouter from '../../../utils/router';\r\nimport { EActivationType, EBonusType, EBusinessCase, EIDCardType } from '../../../models/ordering/order';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport { IPopupConfig, EPopupType } from '../../dialogs/popup';\r\nimport IProduct from '../../../models/ordering/product';\r\nimport IService from '../../../models/ordering/service';\r\n\r\nexport interface IExistingCustomerNbaProps {\r\n    parent: CustomerScreen;\r\n    brand: IBrand;\r\n};\r\n\r\nexport interface IExistingCustomerNbaState extends IBaseComponentState {\r\n};\r\n\r\nexport class ExistingCustomerNba extends React.Component<IExistingCustomerNbaProps, IExistingCustomerNbaState> {\r\n    private contract: IContract;\r\n    constructor(props: IExistingCustomerNbaProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n\r\n        this.contract = this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0] : {};\r\n    };\r\n\r\n    public render() {\r\n        if(!this.contract.nba || this.contract.nba!.length == 0) {\r\n            return <></>\r\n        };\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.nba,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: '',\r\n            collapsible: true,\r\n            collapsed: false\r\n        };\r\n\r\n        let act: JSX.Element = <></>;\r\n\r\n        if (this.contract.nba) {\r\n            let aa = linq.from<ICustomerAction>(this.contract.nba!)\r\n                .toArray();\r\n\r\n            act = (\r\n                <>\r\n                    {aa.map((i, idx) =>\r\n                        (<TariffThumb\r\n                            text={i.title! }\r\n                            id={'nba-' + (i.nbaId)}\r\n                            idx={idx}\r\n                            key={idx}\r\n                            tooltip={this.getTooltip(i)}\r\n                            cssStyle={\"thumb-w2 nba-\" + i.category }\r\n                            brandKey={''}\r\n                            selected={false}\r\n                            styleBrand={true}\r\n                            onClick={()=>{this.selectActivity(i)}} />)\r\n                    )}\r\n                </>\r\n            );\r\n        };\r\n\r\n        let ctrl =\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12} className=\"np\">\r\n                        {act}\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>;\r\n\r\n        ctrl = <BaseBlock config={cfg}>\r\n            {ctrl}\r\n        </BaseBlock>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private getTooltip(nba: ICustomerNba) : string {\r\n        let p = linq.from<IProduct>(this.props.brand.products).where(x=>x.id == nba.product).first();\r\n        let html = '';\r\n\r\n        if(nba.services && nba.services.length > 0) {\r\n            nba.services.map((i, idx)=>{\r\n                let s = linq.from<IService>(this.props.brand.services).where(x=>x.id == i).first();\r\n                if(s) {\r\n                    let fee = s.monthlyFee && s.monthlyFee.price ? s.monthlyFee : s.activationFee;\r\n                    let price = fee.price != 0 ? Global.feeToString(fee) : '';\r\n                    html += '<div class=\\\\\\\"bl text-h2 tar\\\\\\\">' + price + ' ' + s.familyName + '</div>'; \r\n                };\r\n            })\r\n            \r\n        }\r\n\r\n        html = p.tooltip.replace('<div class=\\\\\\\"nba dn\\\\\\\">$</div>', '<div class=\\\\\\\"nba\\\\\\\">' + html + '</div>');\r\n\r\n        return html;\r\n    };\r\n\r\n    private selectActivity = (value: ICustomerAction) => {\r\n        if (this.contract && this.contract.actions) {\r\n            let d = OrderDataWrapper.createProcess(EBusinessCase.vvl, EActivationType.existingCustomer, this.props.parent.data, value);\r\n            this.props.parent.refresh();\r\n            EasyRouter.route({ url: '/customer/tariff/' + d.id, title: value.title + ' ' + OrderDataWrapper.getMsisdnFromContract(d) });\r\n        }\r\n    };\r\n};\r\n\r\nexport default ExistingCustomerNba;","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport * as page from '../../../components/page/index';\r\nimport { EApiResponseStatus, IApiResponse, IApiSummary, IProcessStatus, ISocketPushModel } from '../../../interfaces';\r\nimport { EFormMode, ELButtonType, OrderDataWrapper } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport * as m from '../../../models/index';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport { EActivationType, EBusinessCase, EServiceType } from '../../../models/ordering/order';\r\nimport IProduct, { ISubConfig, ISubServiceConfig } from '../../../models/ordering/product';\r\nimport IService from '../../../models/ordering/service';\r\nimport CustomerScreen from '../../../screens/existing/customer';\r\nimport Api from '../../../utils/api';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport GlobalJSX from '../../../utils/GlobalJSX';\r\nimport { ActionTexts, MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport EasyRouter from '../../../utils/router';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport { EPopupType, IPopupConfig, IPopupProps } from '../../dialogs/popup';\r\nimport TariffThumb from '../../ordering/tariffThumb';\r\nimport { LClear } from '../../page';\r\nimport BaseBlock from '../../page/block';\r\n\r\nexport interface IExistingCustomerServicesProps {\r\n    parent: CustomerScreen;\r\n};\r\n\r\nexport interface IServiceConfig {\r\n    id: string;\r\n    name: string;\r\n    booked: boolean;\r\n    tooltip: string;\r\n    mandatory?: boolean;\r\n    disabled?: boolean;\r\n};\r\n\r\nexport interface ILinkConfig {\r\n    text: string;\r\n    onClick: any;\r\n};\r\n\r\nexport class ServiceConfigUpdate {\r\n    booked: IServiceConfig[] = [];\r\n    bookable: IServiceConfig[] = [];\r\n\r\n    add: string[] = [];\r\n    remove: string[] = [];\r\n\r\n    public canUpdate() {\r\n        return this.add.length > 0 || this.remove.length > 0;\r\n    };\r\n};\r\n\r\nexport interface IServiceUpdate {\r\n    id: string;\r\n    brandKey: string;\r\n    addServices: string[];\r\n    removeServices: string[];\r\n    type: m.ERequestType;\r\n};\r\n\r\nexport interface IExistingCustomerServicesState {\r\n    changed: boolean;\r\n    status: m.ERequestStatus;\r\n    confirmAddRemove: boolean;\r\n    mode: EFormMode;\r\n};\r\n\r\nexport class ExistingCustomerServices extends React.Component<IExistingCustomerServicesProps, IExistingCustomerServicesState> {\r\n    public static containerId = 'existingCustomerServices';\r\n    //private brandKey: string;\r\n    private lastApi?: IApiResponse;\r\n    private activtion: m.IActivation;\r\n    private serviceUpdate: ServiceConfigUpdate = new ServiceConfigUpdate();\r\n    private removedBookableOptions: string[] = [];\r\n\r\n    constructor(props: IExistingCustomerServicesProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false,\r\n            status: m.ERequestStatus.undefined,\r\n            confirmAddRemove: false,\r\n            mode: EFormMode.view\r\n        };\r\n\r\n        this.addRemoveService = this.addRemoveService.bind(this);\r\n        this.onDismissPopup = this.onDismissPopup.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n        this.socketCallback = this.socketCallback.bind(this);\r\n        this.renderPopupConfirmService = this.renderPopupConfirmService.bind(this);\r\n        this.onConfirm = this.onConfirm.bind(this);\r\n        this.switchMode = this.switchMode.bind(this);\r\n\r\n        this.activtion = this.props.parent.data.activations[0];\r\n\r\n        this.serviceUpdate = this.prepareServices();\r\n    };\r\n\r\n    public render() {\r\n        this.activtion = this.props.parent.data.activations[0];\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.services,\r\n            id: ExistingCustomerServices.containerId,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: '',\r\n            collapsible: true,\r\n            collapsed: false\r\n        };\r\n\r\n        let ctrl =\r\n            <div >\r\n                {this.renderPopup()}\r\n                {this.renderPopupConfirmService()}\r\n                <Container>\r\n                    <Row>\r\n                        <Col md={12} className=\"np\">\r\n                            {this.renderServices()}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>;\r\n\r\n        ctrl = <BaseBlock config={cfg}>\r\n            {ctrl}\r\n        </BaseBlock>\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public switchMode(newMode: EFormMode) {\r\n        this.setState({ mode: newMode });\r\n    };\r\n\r\n    private renderServices(): JSX.Element {\r\n        let ctrl: JSX.Element = <></>;\r\n        //let serviceConfig = this.prepareServices();\r\n\r\n        ctrl = (\r\n\r\n            <Container className=\"container-action\">\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div className=\"subtitle\">{MainTexts.bookedServices}</div>\r\n                        <div>\r\n                            {\r\n                                this.serviceUpdate.booked.map((i, idx) => (this.renderThumb(i, this.addRemoveService, this.isSelected(i.id), idx, true)))\r\n                            }\r\n                            <LClear />\r\n                        </div>\r\n                        <div className=\"spacer\" />\r\n                        {\r\n                            this.props.parent.data.customer.contracts ? // && this.props.parent.data.customer.contracts[0].brandKey === BrandKeys.otelo ? \r\n                                <>\r\n                                    <div className=\"subtitle\">{MainTexts.bookableServices}</div>\r\n                                    <div>\r\n                                        {\r\n                                            this.serviceUpdate.bookable.map((i, idx) => (this.renderThumb(i, this.addRemoveService, this.isSelected(i.id), idx, false)))\r\n                                        }\r\n                                        <LClear />\r\n                                    </div>\r\n                                </>\r\n                                : null\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n\r\n                {\r\n                    this.props.parent.data.customer.contracts ? // && this.props.parent.data.customer.contracts[0].brandKey === BrandKeys.otelo ?                \r\n                        <Row>\r\n                            <Col xs={12} md={12} >\r\n                                {\r\n                                    this.state.mode === EFormMode.view ?\r\n                                        <page.LButton\r\n                                            onClick={() => {\r\n                                                this.setState({ mode: EFormMode.edit });\r\n                                            }}\r\n                                            text={MainTexts.change}\r\n                                            type={ELButtonType.buttonWithIconRight}\r\n                                            css=\"action fr\"\r\n                                            icon=\"arrow-right\" />\r\n                                        :\r\n                                        <>\r\n                                            <page.LButton\r\n                                                text={MainTexts.saveOptions}\r\n                                                onClick={this.onConfirm}\r\n                                                type={ELButtonType.buttonWithIconRight}\r\n                                                css={\"action fr\"}\r\n                                                icon=\"arrow-right\" />\r\n\r\n                                            <page.LButton\r\n                                                onClick={() => {\r\n                                                    this.serviceUpdate = this.prepareServices();\r\n                                                    this.setState({ mode: EFormMode.view });\r\n                                                    //this.setState({changed: true});\r\n                                                }}\r\n                                                text={MainTexts.cancel}\r\n                                                type={ELButtonType.linkSimple}\r\n                                                css=\"action3 fr\"\r\n                                                icon=\"chevron\" />\r\n                                        </>\r\n                                }\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        : null\r\n                }\r\n            </Container>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderThumb(service: IServiceConfig, clickHandler: any, selected: boolean, idx: number, booked: boolean): JSX.Element {\r\n        let link: ILinkConfig | undefined = {\r\n            text: selected ? MainTexts.remove : MainTexts.book, onClick: (t) => {\r\n                //this.addRemoveService(t.props.id);\r\n                //this.setState({changed: true});\r\n                //t.preventDefault();\r\n                //t.stopPropagation();\r\n                //return false;\r\n            }\r\n        };\r\n\r\n        let css: string = selected ? ' sel ' : '';\r\n\r\n        css += (this.state.mode === EFormMode.view ? '' : 'thumb-service');\r\n\r\n        //configure thumb\r\n        if (this.activtion.brandKey === BrandKeys.vodafone) {\r\n            if (booked) {\r\n                //booked services cannot be removed for vodafone\r\n                link = undefined;\r\n                css = ' sel ';\r\n            };\r\n        };\r\n\r\n        //links not visible in view mode\r\n        if (this.state.mode === EFormMode.view) {\r\n            link = undefined;\r\n        };\r\n\r\n        let ctrl: JSX.Element = service.disabled ? <></> : <TariffThumb\r\n            key={service.id + '_' + Global.getUniqueId()}\r\n            idx={idx}\r\n            text={service.name}\r\n            tooltip={service.tooltip}\r\n            tooltipModel={service}\r\n            selected={selected}\r\n            id={service.id}\r\n            brandKey={this.activtion.brandKey}\r\n            styleBrand={false}\r\n            cssStyle={css}\r\n            action={link}\r\n            onClick={(e) => {\r\n                this.addRemoveService(e);\r\n                this.setState({ changed: true });\r\n            }} />\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private isSelected(e: any): boolean {\r\n        let bookedAll: string[] = linq.from<IServiceConfig>(this.serviceUpdate.booked).select(x => x.id).toArray();\r\n        let toAdd: boolean = this.serviceUpdate.add.indexOf(e) >= 0;\r\n        let toRemove: boolean = this.serviceUpdate.remove.indexOf(e) >= 0;\r\n        let booked: boolean = bookedAll.indexOf(e) >= 0;\r\n\r\n        return (toAdd || booked) && (!toRemove);\r\n    };\r\n\r\n    private onConfirm() {\r\n        if (this.activtion.brandKey === BrandKeys.vodafone) {\r\n            let c = this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0] : {};\r\n            this.props.parent.data.activations[0].activationType = EActivationType.bookService;\r\n            this.props.parent.data.activations[0].productId = c.bookedProduct ? c.bookedProduct.id : '';\r\n            this.props.parent.data.activations[0].sub = c.bookedProduct ? c.bookedProduct.sub : '';\r\n            this.props.parent.data.activations[0].services = this.serviceUpdate.add;\r\n\r\n            let d = OrderDataWrapper.createProcess(EBusinessCase.bookService, EActivationType.bookService, this.props.parent.data, undefined);\r\n            this.props.parent.onNext(d);\r\n            //this.props.parent.refresh();\r\n\r\n            EasyRouter.route({ url: '/customer/done/' + d.id, title: 'Dienste aendern ' + OrderDataWrapper.getMsisdnFromContract(d) });\r\n            return;\r\n        };\r\n\r\n        this.setState({ confirmAddRemove: true });\r\n    };\r\n\r\n    private onSave() {\r\n        let cfg: IPopupConfig = {\r\n            props: {\r\n                id: 'dynamicPopup',\r\n                title: 'Dienste ändern',\r\n                visible: true,\r\n                closable: false,\r\n                type: EPopupType.pleaseWait\r\n            },\r\n            content: <div>{OrderingTexts.customerData}</div>\r\n        };\r\n\r\n        let update: IServiceUpdate = {\r\n            type: m.ERequestType.customerChangeAddRemoveServices,\r\n            brandKey: this.activtion.brandKey,\r\n            id: this.props.parent.data.id,\r\n            addServices: this.serviceUpdate.add,\r\n            removeServices: this.serviceUpdate.remove\r\n        };\r\n\r\n        this.props.parent.processCustomer(() => {\r\n            Global.hub.send(JSON.stringify(update),\r\n                m.ERequestType.customerChangeAddRemoveServices,\r\n                undefined);\r\n        }, cfg);\r\n    };\r\n\r\n    private onDismissPopup() {\r\n        this.lastApi = undefined;\r\n        this.setState({ status: m.ERequestStatus.undefined });\r\n    };\r\n\r\n    private addRemoveService(e: any) {\r\n        if (this.state.mode === EFormMode.view) { return };\r\n\r\n        let bookedAll: string[] = linq.from<IServiceConfig>(this.serviceUpdate.booked).select(x => x.id).toArray();\r\n        let toAdd: boolean = this.serviceUpdate.add.indexOf(e) >= 0;\r\n        let toRemove: boolean = this.serviceUpdate.remove.indexOf(e) >= 0;\r\n        let booked: boolean = bookedAll.indexOf(e) >= 0;\r\n\r\n\r\n        //remove vf services disabled\r\n        if (booked && this.props.parent.data.activations[0].brandKey == BrandKeys.vodafone) {\r\n            return;\r\n        };\r\n        \r\n        //element is in added array so remove it\r\n        if (toAdd) {\r\n            Global.removeElementFromArray(this.serviceUpdate.add, e);\r\n        } else if (!toAdd && !booked) {\r\n            this.serviceUpdate.add.push(e);\r\n        } else if (booked && !toRemove) {\r\n            this.serviceUpdate.remove.push(e);\r\n        } else if (booked && toRemove) {\r\n            Global.removeElementFromArray(this.serviceUpdate.remove, e);\r\n        };\r\n\r\n        let svcExc = this.props.parent.dataWrapper.getAllExcludesForSelectedServices(BrandKeys.vodafone, [e]);\r\n\r\n        if (svcExc) {\r\n            if (!toAdd && !booked) {\r\n                svcExc.forEach(x => {\r\n                    let index = this.serviceUpdate.bookable.findIndex(y => y.id == x);\r\n                    if (index !== -1) {\r\n                        this.serviceUpdate.bookable[index].disabled = true;\r\n                    }\r\n                })\r\n            } else if (toAdd) {\r\n                this.serviceUpdate.bookable.forEach(x => {\r\n                    x.disabled = false;\r\n                })\r\n            }\r\n\r\n        }\r\n        //this.setState({changed: true});\r\n    };\r\n\r\n    private prepareServices(): ServiceConfigUpdate {\r\n        let res: ServiceConfigUpdate = new ServiceConfigUpdate();\r\n\r\n        let brand = linq.from<IBrand>(StorageHelper.getBrands())\r\n            .where(x => x.id == this.activtion.brandKey)\r\n            .first();\r\n\r\n        if (this.props.parent.data.customer.contracts\r\n            && this.props.parent.data.customer.contracts[0].bookedProduct\r\n            && this.props.parent.data.customer.contracts[0].bookedProduct.services) {\r\n            let prodId = this.props.parent.data.customer.contracts[0].bookedProduct.id;\r\n            let subId = this.props.parent.data.customer.contracts[0].bookedProduct.sub;\r\n            let bookableServices: string[] = this.props.parent.data.customer.contracts[0].bookableServices || [];\r\n\r\n            let bookedServices = this.props.parent.data.customer.contracts[0].bookedProduct.services;\r\n            let prod = linq.from<IProduct>(brand.products)\r\n                .where(x => x.id == prodId)\r\n                .firstOrDefault();\r\n\r\n            let bookable: IServiceConfig[] = [];\r\n            /*product not fonund so its old otelo tarif - so product is not found*/\r\n            if (prod) {\r\n                let sub = linq.from<ISubConfig>(prod.subs).where(x => x.id === subId).firstOrDefault();\r\n\r\n\r\n\r\n                if (brand.id == BrandKeys.vodafone) {\r\n                    sub = linq.from<ISubConfig>(prod.subs).where(x => x.id === subId && x.b == EBusinessCase.bookService).firstOrDefault();\r\n\r\n                };\r\n\r\n                if (sub) {\r\n                    let svcIds = linq.from<IService>(brand.services)\r\n                        .where(x => x.type === EServiceType.option)\r\n                        .select(x => x.id)\r\n                        .toArray();\r\n\r\n                    bookable = linq.from<ISubServiceConfig>(sub.sl)\r\n                        .where(x => bookedServices.indexOf(x.id) == -1 && bookableServices.indexOf(x.id) >= 0)\r\n                        .select(x => {\r\n                            let svc = linq.from<IService>(brand.services)\r\n                                .where(y => y.id == x.id) // && !x.m)\r\n                                .first();\r\n\r\n                            let s: IServiceConfig = {\r\n                                id: svc.id,\r\n                                name: svc.name,\r\n                                booked: false,\r\n                                mandatory: svc.mandatory,\r\n                                tooltip: svc && svc.tooltip ? svc.tooltip : ''\r\n                            };\r\n\r\n                            return s;\r\n                        })\r\n                        .where(x => !x.mandatory)\r\n                        .toArray();\r\n\r\n                    /** */\r\n                    if (brand.id === BrandKeys.vodafone) {\r\n\r\n                        let selected = this.props.parent.data.customer.contracts && this.props.parent.data.customer.contracts[0].bookedProduct ?\r\n                            this.props.parent.data.customer.contracts[0].bookedProduct.services : [];\r\n\r\n                        let svc64 = linq.from<ISubServiceConfig>(sub.sl).select(x => x.id).toArray();\r\n                        let svcExc = this.props.parent.dataWrapper.getAllExcludesForSelectedServices(BrandKeys.vodafone, selected);\r\n\r\n                        //  bookable = linq.from<IServiceConfig>(bookable).where(x=>svc64.indexOf(x.id)>=0).toArray();\r\n                        if (svc64) {\r\n                            svc64.forEach(x => {\r\n                                if (selected.indexOf(x) == -1 && svcExc.indexOf(x) == -1) {\r\n\r\n                                    let svc = linq.from<IService>(brand.services)\r\n                                        .where(y => y.id == x)\r\n                                        .firstOrDefault() || {name: '', tooltip: ''};\r\n\r\n                                    let temp: IServiceConfig = {\r\n                                        id: x,\r\n                                        name: svc ? svc.name : x,\r\n                                        booked: false,\r\n                                        tooltip: svc.tooltip ? svc.tooltip : ''\r\n                                    };\r\n\r\n                                    bookable.push(temp)\r\n                                }\r\n                            })\r\n                        }\r\n\r\n                        //  bookable = linq.from<IServiceConfig>(bookable).where(x=>svcExc.indexOf(x.id)<0).toArray();\r\n                    };\r\n                };\r\n            }\r\n\r\n            bookedServices.map((i, idx) => {\r\n                let svc = linq.from<IService>(brand.services)\r\n                    .where(x => x.id == i)\r\n                    .firstOrDefault();\r\n\r\n                let temp: IServiceConfig = {\r\n                    id: i,\r\n                    name: svc ? svc.name : i,\r\n                    booked: true,\r\n                    tooltip: svc && svc.tooltip ? svc.tooltip : ''\r\n                };\r\n\r\n                res.booked.push(temp);\r\n            });\r\n\r\n            if (brand.id === BrandKeys.otelo && !prod) {\r\n                bookable = linq.from<IService>(brand.services)\r\n                    .where(x => bookedServices.indexOf(x.id) == -1 && bookableServices.indexOf(x.id) >= 0)\r\n                    .select(x => {\r\n                        let s: IServiceConfig = {\r\n                            id: x.id,\r\n                            name: x.name,\r\n                            booked: false,\r\n                            mandatory: x.mandatory,\r\n                            tooltip: x && x.tooltip ? x.tooltip : ''\r\n                        };\r\n\r\n                        return s;\r\n                    })\r\n                    .where(x => !x.mandatory)\r\n                    .toArray();\r\n            };\r\n\r\n            bookable.map((i, idx) => {\r\n                res.bookable.push(i);\r\n            });\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    private renderPopup(): JSX.Element {\r\n        let cfg: IPopupProps = {\r\n            title: ActionTexts.requestInProcess,\r\n            closable: this.state.status !== m.ERequestStatus.running,\r\n            visible: this.state.status !== m.ERequestStatus.undefined && this.state.status !== m.ERequestStatus.done,\r\n            id: \"existingCustomerServiceUpdate\",\r\n            type: EPopupType.pleaseWait,\r\n            onDismiss: this.onDismissPopup\r\n        };\r\n\r\n        let content: JSX.Element = <></>;\r\n\r\n        if (this.lastApi && this.lastApi.status != EApiResponseStatus.ok) {\r\n            let pr: IProcessStatus = JSON.parse(this.lastApi.data);\r\n            let sum: IApiSummary = Api.parseSummary(this.lastApi, pr);\r\n\r\n            cfg.closable = true;\r\n            cfg.visible = true;\r\n            cfg.type = EPopupType.info;\r\n            content = <div>{sum.message}</div>\r\n        };\r\n\r\n        let ctrl = GlobalJSX.GetPopup(cfg, content, undefined);\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderPopupConfirmService(): JSX.Element {\r\n        let cfg: IPopupProps = {\r\n            title: MainTexts.serviceAddRemove,\r\n            closable: true,\r\n            id: \"addRemoveServicesPopup\",\r\n            visible: false,\r\n            height: 200,\r\n            textPositive: MainTexts.yes,\r\n            textNegative: MainTexts.no,\r\n            type: EPopupType.confirmCustom,\r\n            onDismiss: () => {\r\n                this.setState({ confirmAddRemove: false })\r\n            },\r\n            onNegative: () => {\r\n                this.setState({ confirmAddRemove: false })\r\n            },\r\n            onPositive: () => {\r\n                if (this.serviceUpdate.canUpdate()) {\r\n                    this.setState({ confirmAddRemove: false }, () => {\r\n                        this.onSave();\r\n                    });\r\n                } else {\r\n                    this.setState({ confirmAddRemove: false })\r\n                };\r\n            }\r\n        };\r\n\r\n        let content: JSX.Element = <div>Buchen von Optionen ist Kostenpflichtig.</div>;\r\n\r\n        if (!this.serviceUpdate.canUpdate()) {\r\n            cfg.textPositive = \"OK\";\r\n            cfg.textNegative = '';\r\n            content = <div>Keine Korrekturen</div>;\r\n        };\r\n\r\n        if (this.state.confirmAddRemove) {\r\n            cfg.visible = true;\r\n        };\r\n\r\n        let ctrl = GlobalJSX.GetPopup(cfg, content, undefined);\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public socketCallback(sock: ISocketPushModel) {\r\n        let api: IApiResponse = JSON.parse(sock.data);\r\n        this.lastApi = api;\r\n        let inner = api.data;\r\n\r\n        if (api.error) {\r\n            this.setState({ status: m.ERequestStatus.failed });\r\n            return;\r\n        };\r\n\r\n        if (inner == null) {\r\n            return;\r\n        };\r\n\r\n        let wrapper = JSON.parse(inner.data);\r\n\r\n        let customer = JSON.parse(wrapper.steps[0].message);\r\n\r\n        StorageHelper.addOrder(this.props.parent.data);\r\n\r\n        this.setState({ status: m.ERequestStatus.done });\r\n    };\r\n};\r\n\r\nexport default ExistingCustomerServices;","import * as React from 'react';\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { LControl } from '../..';\r\nimport { MainTexts, OrderingTexts, OrderStages, Hints } from '../../../utils/messages';\r\nimport BaseBlock from '../../page/block';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { EControlType, ELButtonType, ERequestType, IActivationSim } from '../../../models';\r\nimport * as page from '../../page/index';\r\nimport TariffThumb from '../../ordering/tariffThumb';\r\nimport { CustomerScreen } from '../../../screens/insex';\r\nimport { EPopupType, IPopupConfig } from '../../dialogs/popup';\r\nimport Global from '../../../utils/Global';\r\nimport { IContract } from '../../../models/existing/contract';\r\n\r\nexport interface ISimReplacementProps {\r\n    parent: CustomerScreen;\r\n};\r\n\r\nexport interface ISimReplacementState {\r\n    simSelected: boolean,\r\n    actByCustomer: boolean,\r\n    actUponReceipt: boolean,\r\n    procedeButtonState: boolean\r\n}\r\n\r\nexport class SimReplacement extends React.Component<ISimReplacementProps, ISimReplacementState> {\r\n    private current: IActivationSim = { activateByCustomer: 1, name: '', price: { price: 0, unit: '' }, id: '' };\r\n    private priceFormated: string = \"\";\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            simSelected: false,\r\n            actByCustomer: false,\r\n            actUponReceipt: true,\r\n            procedeButtonState: true\r\n\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        var contracts: any = this.props.parent.data.customer.contracts;\r\n\r\n        let a: JSX.Element = <>\r\n            <page.LButton type={ELButtonType.linkSimple}\r\n                text={MainTexts.backToCustomerDataSheet}\r\n                css=\"action3 fr\"\r\n                onClick={() => {\r\n                    this.props.parent.onBackToCustomer(false);\r\n                }} />\r\n        </>;\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.orderReplacementSIM,\r\n            transparent: false,\r\n            style: '',\r\n            collapsible: false,\r\n            collapsed: false,\r\n            action: a\r\n        };\r\n\r\n        let ctr = <></>;\r\n        let cssStyle = \"a1 fr\";\r\n\r\n        if(this.state.procedeButtonState===true){\r\n            cssStyle += \" disabled\"\r\n        }else{\r\n            cssStyle = \"ai fr\"\r\n        }\r\n\r\n        ctr = (\r\n            <div>\r\n                <BaseBlock config={cfg}>\r\n                    {\r\n                        <Container >\r\n                            <Row>\r\n                                <Col md={4}>\r\n                                    <LControl type={EControlType.info} style=\"merged\"\r\n                                        label={MainTexts.pleaseSelectSIM} />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={4}>\r\n                                    {contracts.map((i, idx) => (\r\n                                        this.renderSim(i)))}\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={10}>\r\n                                    <page.LControl type={EControlType.textArea}\r\n                                        name=\"\"\r\n                                        id=\"\"\r\n                                        style={\"black\"}\r\n                                    />\r\n                                    <page.LControl type={EControlType.info}\r\n                                        label={Hints.simReplaceHint} isHtml={true} />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <page.LControl type={EControlType.radio}\r\n                                        onChange={(e) => { this.activationChange(e) }}\r\n                                        name=\"\"\r\n                                        id=\"ByCustomer\"\r\n                                        value={''}\r\n                                        checked={this.state.actByCustomer}\r\n                                        label={MainTexts.activationByCustomerUponReceipt} />\r\n                                </Col>\r\n\r\n                                <Col md={4}>\r\n                                    <page.LControl type={EControlType.radio}\r\n                                        onChange={(e) => { this.activationChange(e) }}\r\n                                        name=\"\"\r\n                                        id=\"byOperator\"\r\n                                        value={''}\r\n                                        checked={this.state.actUponReceipt}\r\n                                        label={MainTexts.cardActivatedSent} />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={10}>\r\n                                    <page.LControl type={EControlType.textArea}\r\n                                        name=\"\"\r\n                                        id=\"\"\r\n                                        style={\"black\"}\r\n                                    /> {'Hinweis:'}<br />{'Durch diese Auswahl wird die aktuelle Sim-Karte des Kunden nach Bestellung sofort gesperrt.'}\r\n                                    <br />{'Diese Auswahl ist empfehlenswert bei Diebstahl oder Verlust der Sim-Karte.'}\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={12} >\r\n                                    <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                        css={cssStyle}\r\n                                        id=\"buttonOrderSim\"\r\n                                        text={MainTexts.orderReplForaFee}\r\n                                        onClick={() => {\r\n                                            let cfg: IPopupConfig = {\r\n                                                props: {\r\n                                                    id: 'dynamicPopup',\r\n                                                    title: 'SIM Karte wird verarbeitet',\r\n                                                    visible: true,\r\n                                                    closable: false,\r\n                                                    type: EPopupType.pleaseWait\r\n                                                },\r\n                                                content: <div>{OrderingTexts.customerData}</div>\r\n                                            };\r\n\r\n                                            if (this.props.parent.data.customer !== undefined) {\r\n                                                if (this.props.parent.data.customer.contracts !== undefined) {\r\n                                                    if (this.props.parent.data.customer.contracts[0].simCards !== undefined) {\r\n                                                        this.props.parent.data.customer.contracts[0].simCards[0] = this.current;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n\r\n                                            this.props.parent.processCustomer(() => {\r\n                                                Global.hub.send('{ \"type\": ' + ERequestType.customerOrderSim + ', \"sim\": {\"sim\": \"' + this.current.id + '\",\"activated\": \"' + (this.current.activateByCustomer == 1 ? 1 : 2) + '\"}' + ', \"brandKey\": \"' + (this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0].brandKey : '') + '\", \"id\": \"' + this.props.parent.data.id + '\"  }',\r\n                                                    ERequestType.customerOrderSim,\r\n                                                    undefined);\r\n                                            }, cfg);\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Container>\r\n                    }\r\n                </BaseBlock>\r\n            </div>\r\n        );\r\n        return ctr;\r\n    }\r\n\r\n    private renderSim(contract: IContract): JSX.Element {\r\n        var simCards: any = contract.simCards;\r\n        let ctr = <></>;\r\n\r\n        for (let index = 0; index < simCards.length; index++) {\r\n            const element = simCards[index];\r\n\r\n            let beforeDecimal = element.price.price.toString().substring(1,2);\r\n            let afterDecimal = element.price.price.toString().substring(1,3);\r\n            let finalPrice = beforeDecimal+\".\"+afterDecimal+\" \"+element.price.unit;\r\n            this.priceFormated = finalPrice;\r\n            \r\n        }\r\n\r\n        simCards.map((i, idx) => (\r\n          \r\n\r\n            ctr = (\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <TariffThumb\r\n                            key={i.id}\r\n                            id={i.id}\r\n                            text={i.name +'\\n\\xa0'+ this.priceFormated}\r\n                            tooltip={'Bitte wählen Sie eine SIM Karte aus.'}\r\n                            tooltipModel={''}\r\n                            idx={idx}\r\n                            brandKey={''}\r\n                            selected={this.state.simSelected}\r\n                            styleBrand={false}\r\n                            cssStyle={this.state.simSelected ? 'selected' : ''}\r\n                            onClick={() => this.simChange(i)} />\r\n                    </Col>\r\n                </Row>\r\n            )\r\n        ));\r\n        return ctr;\r\n    }\r\n\r\n    private activationChange(event: any) {\r\n        if (event.id === 'ByCustomer') {\r\n            this.current.activateByCustomer = 1;\r\n            this.setState({ actByCustomer: true,actUponReceipt: false});\r\n        } else {\r\n            this.current.activateByCustomer = 2;\r\n            this.setState({ actByCustomer: false,actUponReceipt: true });\r\n        }\r\n    }\r\n\r\n    private simChange(sim: IActivationSim) {\r\n        this.current.id = sim.id;\r\n\r\n        if (this.state.simSelected === false) {\r\n\r\n            if (this.props.parent.data.customer !== undefined) {\r\n                if (this.props.parent.data.customer.contracts !== undefined) {\r\n                    if (this.props.parent.data.customer.contracts[0].simCards !== undefined) {\r\n                        this.current = this.props.parent.data.customer.contracts[0].simCards[0];\r\n                        this.current.activateByCustomer = 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.setState({ simSelected: true,procedeButtonState: false });\r\n\r\n        } else {\r\n            this.current = ({ activateByCustomer: 1, name: '', price: { price: 0, unit: '' }, id: '' });\r\n            this.setState({ simSelected: false,procedeButtonState: true });\r\n        }\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default SimReplacement;","export class OteloStatic {\r\n    public static simOnly: string = 'SIM';\r\n};\r\n\r\n\r\nexport default OteloStatic;","import linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport * as page from '../../../src/components/page/index';\r\nimport { EPopupType, IPopupConfig } from '../../components/dialogs/popup';\r\nimport ExistingCustomerActivities from '../../components/existing/data/activities';\r\nimport BelatedPorting from '../../components/existing/data/Belatedporting';\r\nimport ExistingCustomerBills from '../../components/existing/data/bills';\r\nimport Cancellation from '../../components/existing/data/Cancellation';\r\nimport ExistingCustomerContract from '../../components/existing/data/contract';\r\nimport ExistingContractData from '../../components/existing/data/contractData';\r\nimport ExistingCustomerCrossSelling from '../../components/existing/data/crossSelling';\r\nimport ExistingCustomerData from '../../components/existing/data/customerData';\r\nimport ExistingCustomerPayment from '../../components/existing/data/customerPayment';\r\nimport ExistingCustomerNba from '../../components/existing/data/nba';\r\nimport ProtectionAndConsent from '../../components/existing/data/protectionAndConsent';\r\nimport ExistingCustomerServices from '../../components/existing/data/services';\r\nimport SimReplacement from '../../components/existing/data/simReplacement';\r\nimport * as cmp from '../../components/index';\r\nimport { CustomerConsent } from '../../components/ordering/customer';\r\nimport PreviewContract from '../../components/ordering/preview/contract';\r\nimport { ActivationHardware, ActivationProgress } from '../../components/ordering/process';\r\nimport TariffConfiguration from '../../components/process/tariffConfiguration';\r\nimport { IApiSummary, ISocketPushModel } from '../../interfaces';\r\nimport * as i from '../../interfaces/index';\r\nimport IProcessNewSelection from '../../interfaces/ordering/IProcessNewSelection';\r\nimport * as m from '../../models/index';\r\nimport { EFormMode, IOrderData, OrderDataWrapper } from '../../models/index';\r\nimport { ActivationWrapper } from '../../models/ordering/activation';\r\nimport IBrand from '../../models/ordering/brand';\r\nimport { EActivationType, EBusinessCase, ECreditDebitType, ECustomerType, EOrderProcessView } from '../../models/ordering/order';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport Api from '../../utils/api';\r\nimport { BrandKeys } from '../../utils/Defaults';\r\nimport Global from '../../utils/Global';\r\nimport GlobalJSX from '../../utils/GlobalJSX';\r\nimport * as u from '../../utils/index';\r\nimport { ActionTexts, MainTexts, OrderStages, ValidationMessages } from '../../utils/messages';\r\nimport EasyRouter from '../../utils/router';\r\nimport StorageHelper from '../../utils/storage';\r\nimport ImeiScreen, { ImeiUploadType } from '../am/imei';\r\nimport ErrorScreen, { IErrorScreenData } from '../global/error';\r\n\r\nexport interface ICustomerScreenProps {\r\n    id: string;\r\n    dataMode: EExistingCustomerMode;\r\n};\r\n\r\nexport enum EExistingCustomerMode {\r\n    main = 0,\r\n    sim = 1,\r\n    imei = 2,\r\n    belatedPorting = 3,\r\n    cancellation = 4\r\n};\r\n\r\nexport interface ICustomerScreenState {\r\n    changed: boolean;\r\n    processing: boolean;\r\n    loading: boolean;\r\n    closablePopup: boolean;\r\n    apiMessage: string;\r\n    clear: boolean;\r\n    dataMode: EExistingCustomerMode;\r\n    showConsentPopUp: boolean;\r\n};\r\n\r\nexport class CustomerScreen extends React.Component<ICustomerScreenProps, ICustomerScreenState> {\r\n    public static containerId = 'existingCustomer';\r\n    public static uri: string = '/customer/dashboard/';\r\n    public modelState: u.ModelStete = new u.ModelStete();\r\n    public data: IOrderData;\r\n    public dataWrapper: OrderDataWrapper;\r\n    public brand: IBrand;\r\n    private processId: string = '';\r\n    private parentId: string = '';\r\n    private progress: EOrderProcessView = EOrderProcessView.tariff;\r\n    private lastApi?: i.IApiResponse;\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n    private dynamicPopup: IPopupConfig | undefined;\r\n\r\n    constructor(props: ICustomerScreenProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false,\r\n            processing: false,\r\n            loading: false,\r\n            closablePopup: false,\r\n            apiMessage: '',\r\n            clear: false,\r\n            dataMode: props.dataMode,\r\n            showConsentPopUp: false\r\n        };\r\n\r\n        this.onConfigurationChanged = this.onConfigurationChanged.bind(this);\r\n        this.onChangeHardware = this.onChangeHardware.bind(this);\r\n        this.onNext = this.onNext.bind(this);\r\n        this.onBack = this.onBack.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.onBackToCustomer = this.onBackToCustomer.bind(this);\r\n        this.onDismissProcessPopup = this.onDismissProcessPopup.bind(this);\r\n        this.onDismissValidation = this.onDismissValidation.bind(this);\r\n        this._imeiCancel = this._imeiCancel.bind(this);\r\n        this.openImei = this.openImei.bind(this);\r\n\r\n        this.data = StorageHelper.getOrder(this.props.id);\r\n        //StorageHelper.cleanAndPreserve(this.props.id);\r\n        this.dataWrapper = new OrderDataWrapper(this.data);\r\n\r\n        this.brand = linq.from<IBrand>(StorageHelper.getBrands())\r\n            .where(x => x.id === this.data.activations[0].brandKey)\r\n            .first();\r\n    };\r\n\r\n    public componentWillReceiveProps(next: ICustomerScreenProps) {\r\n        this.processId = next.id;\r\n\r\n        this.setState({ clear: true }, () => {\r\n            this.setState({ changed: true, clear: false });\r\n        });\r\n    };\r\n\r\n    public render() {\r\n        if (this.state.clear) {\r\n            return <></>;\r\n        };\r\n\r\n        this.processId = this.props.id;\r\n\r\n        this.data = StorageHelper.getOrder(this.processId);\r\n        this.dataWrapper = new OrderDataWrapper(this.data);\r\n\r\n        let ord = StorageHelper.getOrders();\r\n        let d: IErrorScreenData = { code: 404 };\r\n\r\n        Global.easyApp.setTitle(MainTexts.existingCustomerActivation);\r\n        OrderDataWrapper.ensure(this.data);\r\n\r\n        this.brand = linq.from<IBrand>(StorageHelper.getBrands())\r\n            .where(x => x.id === this.data.activations[0].brandKey)\r\n            .first();\r\n\r\n        if (this.data.customer.action) {\r\n            Global.easyApp.setTitle(this.data.customer.action.name);\r\n        };\r\n\r\n        this.parentId = this.data.parentId ? this.data.parentId : '';\r\n\r\n        let dyn: JSX.Element = <></>\r\n       \r\n        if (this.dynamicPopup) {\r\n            this.dynamicPopup.props.onDismiss = () => {\r\n                this.dynamicPopup = undefined;\r\n                this.setState({ changed: true, processing: false, closablePopup: false });\r\n            };\r\n\r\n            dyn = GlobalJSX.GetPopup(this.dynamicPopup.props, this.dynamicPopup.content, this.dynamicPopup.action);\r\n        };\r\n\r\n        let ctrl =\r\n            <div id={CustomerScreen.containerId}>\r\n                <page.Inner1C style=\"   \">\r\n                    <page.Inner2CLeft>\r\n                        {this.data.activations[0].processId === \"undefined Process\" ? <ErrorScreen data={d} /> :\r\n                            <>\r\n                                {dyn}\r\n                                {/* {this.renderPopup()} */}\r\n                                {this.renderProgress()}\r\n                            </>}\r\n                    </page.Inner2CLeft>\r\n                    <></>\r\n                </page.Inner1C>\r\n            </div>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public getCurrent() {\r\n        return this.data;\r\n    };\r\n\r\n    public refresh() {\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public getProgress() {\r\n        if (window.location.href.indexOf('/' + OrderStages.done + '/') > 0) {\r\n            return EOrderProcessView.done;\r\n        } else if (window.location.href.indexOf('/' + OrderStages.tariff + '/') > 0) {\r\n            return EOrderProcessView.tariff;\r\n        } else {\r\n            return EOrderProcessView.dashboard;\r\n        };\r\n    };\r\n\r\n    public socketCallback(sock: ISocketPushModel) {\r\n\r\n        let data: any = sock.data;\r\n\r\n        let api: i.IApiResponse = typeof data == 'string' ? JSON.parse(data) : data;\r\n\r\n        this.lastApi = api;\r\n\r\n\r\n        let sum: IApiSummary = Api.parseSummary(api, undefined);\r\n        if (api && !api.error) {\r\n            if (this.dynamicPopup) {\r\n\r\n                if (this.dynamicPopup.closeOnDone) {\r\n                    this.dynamicPopup.props.visible = false;\r\n                };\r\n                this.dynamicPopup.props.closable = true;\r\n                this.dynamicPopup.props.type = EPopupType.info;\r\n                this.dynamicPopup.content = <div>Erfolgreich ausgeführt</div>\r\n\r\n                if (!this.dynamicPopup.callback) {\r\n                    try {\r\n\r\n                        let pr = JSON.parse(api.data.data);\r\n\r\n                        this.data = JSON.parse(pr.steps[0].message);\r\n\r\n                    } catch {\r\n                        this.data = api.data;\r\n                    };\r\n\r\n                    StorageHelper.addOrder(this.data);\r\n                };\r\n\r\n                if (sock.type === m.ERequestType.customerGetCanellation) {\r\n                    this.lastApi = undefined;\r\n                    let d = OrderDataWrapper.createProcess(EBusinessCase.cancel, EActivationType.cancellation, this.data, undefined);\r\n                    EasyRouter.route({ url: '/customer/cancellation/' + d.id, title: ActionTexts.cancel });\r\n                } else if (sock.type === m.ERequestType.customerChangePayment) {\r\n                    let receiver = Global.GetComponent<ExistingCustomerPayment>(ExistingCustomerPayment.containerId);\r\n                    receiver.switchMode(EFormMode.view);\r\n                } else if (sock.type === m.ERequestType.customerChangeData || sock.type === m.ERequestType.customerChangePassword) {\r\n                    let receiver = Global.GetComponent<ExistingCustomerData>(ExistingCustomerData.containerId);\r\n                    ////console.log(receiver);\r\n                    receiver.switchMode(EFormMode.view);\r\n                } else if (sock.type === m.ERequestType.customerChangeRemoveService\r\n                    || sock.type === m.ERequestType.customerChangeAddService\r\n                    || sock.type === m.ERequestType.customerChangeAddRemoveServices) {\r\n                    let receiver = Global.GetComponent<ExistingCustomerServices>(ExistingCustomerServices.containerId);\r\n                    receiver.switchMode(EFormMode.view);\r\n                } else if (this.dynamicPopup.callback) {\r\n                    this.dynamicPopup.callback(this.lastApi);\r\n                }\r\n\r\n                if (this.dynamicPopup.closeOnDone) {\r\n                    this.dynamicPopup = undefined;\r\n                };\r\n\r\n                this.setState({ processing: false, closablePopup: (this.dynamicPopup != undefined), apiMessage: sum.message });\r\n\r\n                return;\r\n            };\r\n\r\n            let actionName = this.data.customer.action ? this.data.customer.action.name : '';\r\n\r\n            StorageHelper.updateActivation(api.data.activations[0]);\r\n\r\n            EasyRouter.routeUrl({ url: '/customer/' + OrderStages.done + '/' + this.processId, title: actionName + ' ' + OrderDataWrapper.getMsisdnFromContract(this.data) });\r\n\r\n            this.setState({ changed: true, processing: false });\r\n        } else {\r\n            if (this.dynamicPopup) {\r\n                this.dynamicPopup.props.closable = true;\r\n                this.dynamicPopup.props.type = EPopupType.info;\r\n                this.dynamicPopup.content = <div dangerouslySetInnerHTML={{__html:sum.message}}></div>\r\n            };\r\n            this.processPopupState = EPopupType.custom;\r\n            this.setState({ processing: false, closablePopup: true, apiMessage: sum.message });\r\n\r\n            if (api.validation) {\r\n                Api.applyValidation(api);\r\n            };\r\n        }\r\n    };\r\n\r\n    public applyAvailability() {\r\n        this.setState({changed: true});\r\n    };\r\n\r\n    public processCustomer(todo: any, config: IPopupConfig) {\r\n        this.dynamicPopup = config;\r\n\r\n        config.props.onDismiss = () => {\r\n            this.dynamicPopup = undefined;\r\n\r\n        };\r\n\r\n        this.setState({ changed: true }, () => {\r\n            todo();\r\n        });\r\n    };\r\n\r\n    public resetDynamicPopup(callback: any) {\r\n        this.dynamicPopup = undefined;\r\n        this.setState({changed: true});\r\n        if(callback) {callback()};\r\n    };\r\n\r\n    public openImei(msisdn?: string) {\r\n        EasyRouter.route({ url: '/customer/imei/' + this.data.id, title: MainTexts.imei });\r\n    }\r\n\r\n    public onBackToCustomer(external: boolean = true) {\r\n        if (external) {\r\n            StorageHelper.removeOrder(this.data.id, () => {\r\n                EasyRouter.route({ url: '/customer/dashboard/' + this.data.parentId, title: MainTexts.existingCustomerActivation });\r\n            });\r\n        } else {\r\n            EasyRouter.route({ url: '/customer/dashboard/' + this.data.id, title: MainTexts.existingCustomerActivation });\r\n        };\r\n    };\r\n\r\n    private renderProgress(): JSX.Element {\r\n        this.progress = this.getProgress();\r\n\r\n        if (this.progress !== EOrderProcessView.dashboard) {\r\n            let actProgress: JSX.Element = <ActivationProgress progress={this.progress} states={[OrderStages.tariff, OrderStages.done]} />;\r\n\r\n            if (Global.easyApp.head) {\r\n                Global.easyApp.head.appendSub(actProgress);\r\n            }\r\n        };\r\n\r\n        if (this.props.dataMode === EExistingCustomerMode.sim) {\r\n            return this.renderSimReplace();\r\n        } else if (this.props.dataMode === EExistingCustomerMode.cancellation) {\r\n            return this.renderCancellation();\r\n        } else if (this.props.dataMode === EExistingCustomerMode.belatedPorting) {\r\n            return this.renderBelatedportingReplace();\r\n        } else if (this.props.dataMode === EExistingCustomerMode.imei) {\r\n            return this.renderImei();\r\n        }\r\n        else {\r\n            /**\r\n             * process is VVL/TW and activation is done,\r\n             * force user to use BackTocustomer\r\n             */\r\n            if (this.data.type != EBusinessCase.bnt) {\r\n                if (this.dataWrapper.getAllActivationsDone()) {\r\n                    this.progress = EOrderProcessView.done;\r\n                };\r\n            };\r\n\r\n\r\n            if (this.progress === EOrderProcessView.dashboard) {\r\n                return this.rednerDashboard();\r\n            } else if (this.progress === EOrderProcessView.done) {\r\n                return this.renderDone();\r\n            } else {\r\n                return this.renderTariff();\r\n            }\r\n        }\r\n    };\r\n\r\n    private _imeiCancel = () => {\r\n        this.setState({ dataMode: EExistingCustomerMode.main });\r\n    };\r\n\r\n    private rednerDashboard(): JSX.Element {\r\n        return <>\r\n            <ExistingCustomerContract parent={this} />\r\n            <ExistingContractData parent={this} />\r\n            <ExistingCustomerActivities parent={this} />\r\n            <ExistingCustomerNba parent={this} brand={this.brand}/>\r\n            <ExistingCustomerCrossSelling parent={this} />\r\n            <ExistingCustomerData parent={this} />\r\n            <ExistingCustomerServices parent={this} />\r\n            {\r\n                this.brand.id === BrandKeys.otelo ? <ExistingCustomerBills parent={this} /> : null\r\n            }\r\n            {\r\n                this.brand.id === BrandKeys.otelo ? <ProtectionAndConsent parent={this} collapsed={false}/> : null\r\n            }\r\n        </>;\r\n    };\r\n\r\n    private renderImei(): JSX.Element {\r\n        const msisdn = OrderDataWrapper.getMsisdnFromContract(this.data);\r\n        return <>\r\n            <ExistingCustomerContract parent={this} />\r\n            <ImeiScreen uploadType={ImeiUploadType.Manual} parent={this} msisdn={msisdn} onCancel={this._imeiCancel} />\r\n        </>;\r\n    };\r\n\r\n    private renderSimReplace(): JSX.Element {\r\n        return <>\r\n            <ExistingCustomerContract parent={this} />\r\n            <SimReplacement parent={this} />\r\n        </>;\r\n    };\r\n\r\n    private renderCancellation(): JSX.Element {\r\n        return <>\r\n            <ExistingCustomerContract parent={this} />\r\n            <Cancellation onChange={true} parent={this} />\r\n        </>;\r\n    };\r\n\r\n    private renderBelatedportingReplace(): JSX.Element {\r\n        return <>\r\n            <ExistingCustomerContract parent={this} />\r\n            <BelatedPorting onChange={true} parent={this} />\r\n        </>;\r\n    };\r\n\r\n    private renderDone(): JSX.Element {\r\n        let a: m.IActivation = OrderDataWrapper.ensureActivationIsObject(this.data.activations[0]);\r\n\r\n        let aw = new ActivationWrapper(this.dataWrapper.data);\r\n\r\n        return <>\r\n            {\r\n               // a.activationType == EActivationType.bookService ? null :\r\n                    <CustomerConsent\r\n                        customer={this.dataWrapper.data.customer}\r\n                        parentRefresh={() => {\r\n                            StorageHelper.addOrder(this.dataWrapper.data);\r\n                            this.setState({ changed: true });\r\n                        }} />\r\n            }\r\n\r\n            <PreviewContract\r\n                key={\"pc-\" + a.id}\r\n                bc={EBusinessCase.vvl}\r\n                ah={aw.items[0]}\r\n                customer={this.data.customer}\r\n                preview={false}\r\n                refreshParent={() => {\r\n                    this.setState({ changed: true });\r\n                }} />\r\n\r\n            {this.renderAction()}\r\n        </>;\r\n    };\r\n\r\n    private renderTariff(): JSX.Element {\r\n        let tarif = this.data.customer.contracts && this.data.customer.contracts[0].bookedProduct\r\n            ? this.data.customer.contracts[0].bookedProduct.id : '';\r\n\r\n        let selection: IProcessNewSelection = {\r\n            businessCase: EBusinessCase.vvl,\r\n            creditDebitType: ECreditDebitType.postpaid,\r\n            activationType: EActivationType.actDefault,\r\n            customerType: ECustomerType.personal\r\n        };\r\n\r\n        return <>\r\n            <cmp.Popup\r\n                type={this.processPopupState}\r\n                visible={this.state.processing || this.state.closablePopup}\r\n                closable={this.state.closablePopup}\r\n                id=\"wait\"\r\n                title={MainTexts.pleaseWait}\r\n                height={200}\r\n                onDismiss={this.onDismissProcessPopup}>\r\n                <cmp.PopupBody>\r\n                    <div>{this.state.apiMessage}</div>\r\n                    <></>\r\n                </cmp.PopupBody>\r\n                <></>\r\n            </cmp.Popup>\r\n\r\n            <cmp.Popup\r\n                type={EPopupType.custom}\r\n                visible={!this.modelState.isValid()}\r\n                closable={true}\r\n                id=\"validate\"\r\n                title={ValidationMessages.titleValidationError}\r\n                height={200}\r\n                onDismiss={this.onDismissValidation}>\r\n                <cmp.PopupBody>\r\n                    <div>{this.modelState.errorMessage}</div>\r\n                    <page.LClear />\r\n                </cmp.PopupBody>\r\n                <></>\r\n            </cmp.Popup>\r\n\r\n            <ExistingCustomerContract parent={this} />\r\n\r\n            <TariffConfiguration\r\n                brand={this.brand}\r\n                businessCase={this.data.customer.action ? this.data.customer.action.bc : EBusinessCase.vvl}\r\n                activation={this.data.activations[0]}\r\n                selection={selection}\r\n                selectedTariff={tarif}\r\n                action={this.data.customer.action}\r\n                backToCustomer={this.onBackToCustomer}\r\n                availableProducts={OrderDataWrapper.getAvailableProducts(this.brand, this.data.customer.action, this.data.customer, this.data.customer.action ? this.data.customer.action.bc : EBusinessCase.vvl)}\r\n                onConfigurationChanged={this.onConfigurationChanged} />\r\n\r\n            <ActivationHardware preview={false}\r\n                activation={this.data.activations[0]}\r\n                onChange={this.onChangeHardware} />\r\n\r\n            {this.renderAction()}\r\n        </>;\r\n    };\r\n\r\n    private onConfigurationChanged() {\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private onDismissProcessPopup() {\r\n        this.setState({ processing: false, closablePopup: false });\r\n    };\r\n\r\n    private onDismissValidation() {\r\n        this.modelState.reset();\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private onChangeHardware(val: IControlValue) {\r\n        this.data.activations[0].imei = val.value;\r\n        StorageHelper.updateActivation(this.data.activations[0]);\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public onNext(external: IOrderData | undefined) {\r\n        if (!this.validate()) {\r\n            return;\r\n        }\r\n        let d = JSON.parse(JSON.stringify(this.data)) as IOrderData;\r\n        d.customer.contracts = [];\r\n        d.customer.contracts!.map((i)=>{\r\n            i.actions = [];\r\n        });\r\n        \r\n        Global.hub.send(JSON.stringify(external ? external : d), m.ERequestType.createCustomerProcess, undefined);\r\n\r\n        this.setState({ processing: true, apiMessage: '' });\r\n    };\r\n\r\n    private validate(): boolean {\r\n        this.modelState.reset();\r\n\r\n        this.modelState = u.ValidationWrapper.startExistingProcessValidation(this.data.activations[0]);\r\n\r\n        if (!this.modelState.isValid()) {\r\n            this.setState({ changed: true });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    private onBack() {\r\n        let pr = this.getProgress();\r\n\r\n        let actionName = this.data.customer.action ? this.data.customer.action.name : '';\r\n\r\n        if (this.data.activations[0].activationType == EActivationType.bookService) {\r\n            StorageHelper.removeOrder(this.processId, () => {\r\n                EasyRouter.route({ url: '/customer/' + OrderStages.dashboard + '/' + this.parentId, title: MainTexts.existingCustomerActivation });\r\n            });\r\n            return;\r\n        };\r\n\r\n        if (pr == EOrderProcessView.done) {\r\n            EasyRouter.route({ url: '/customer/' + OrderStages.tariff + '/' + this.processId, title: actionName + ' ' + OrderDataWrapper.getMsisdnFromContract(this.data) });\r\n        } else if (pr === EOrderProcessView.tariff) {\r\n            StorageHelper.removeOrder(this.processId, () => {\r\n                EasyRouter.route({ url: '/customer/' + OrderStages.dashboard + '/' + this.parentId, title: MainTexts.existingCustomerActivation });\r\n            });\r\n        };\r\n\r\n        //this.setState({changed: true});\r\n    };\r\n\r\n    private renderAction(): JSX.Element {\r\n        let pr = this.getProgress();\r\n\r\n        if (this.data.type != EBusinessCase.bnt && this.dataWrapper.getAllActivationsDone()) {\r\n            return <></>;\r\n        };\r\n\r\n        let ctrl = (\r\n            <Container className=\"container-action\">\r\n                <Row>\r\n                    {\r\n                        this.data.activations[0].isActivated() ?\r\n                            <Col xs={4} md={4}>\r\n                                <page.LButton text={MainTexts.backToCustomer}\r\n                                    onClick={this.onBackToCustomer}\r\n                                    type={m.ELButtonType.linkSimple}\r\n                                    css=\"action3\"\r\n                                    icon=\"chevron\" />\r\n                            </Col>\r\n                            :\r\n                            <Col xs={4} md={4}>\r\n                                <page.LButton text={MainTexts.back}\r\n                                    onClick={this.onBack}\r\n                                    type={m.ELButtonType.linkSimple}\r\n                                    css=\"action3\"\r\n                                    icon=\"chevron\" />\r\n                            </Col>\r\n                    }\r\n                    {\r\n                        pr != EOrderProcessView.done ?\r\n                            <Col xs={8} md={8} className=\"toright\">\r\n                                <page.LButton text=\"WEITER ZUR ÜBERSICHT\"\r\n                                    onClick={this.onNext}\r\n                                    css=\"fr\"\r\n                                    type={m.ELButtonType.buttonWithIconRight}\r\n                                    icon=\"arrow-right\" />\r\n                            </Col>\r\n                            : null\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default CustomerScreen;\r\n","import * as React from 'react';\r\nimport * as linq from 'linq';\r\nimport IBrand from '../../models/ordering/brand';\r\nimport { ECreditDebitType, EServiceType, ECustomerType, EActivationType, EBusinessCase } from '../../models/ordering/order';\r\nimport IProduct, {  ISubConfig, ISubServiceConfig } from '../../models/ordering/product';\r\nimport OrderingHelper from '../../utils/OrderingHelper';\r\nimport TariffThumb from '../ordering/tariffThumb';\r\nimport * as page from '../page/index';\r\nimport IProcessNewSelection from '../../interfaces/ordering/IProcessNewSelection';\r\nimport { EControlType, IActivation, OrderDataWrapper, ICustomerAction, ELButtonType, IOrderData } from '../../models';\r\nimport { MainTexts, OrderingTexts } from '../../utils/messages';\r\nimport ProductWrapper from '../../models/ordering/productWrapper';\r\nimport IService from '../../models/ordering/service';\r\nimport { BrandKeys, ConstantKeys } from '../../utils/Defaults';\r\nimport StorageHelper from '../../utils/storage';\r\nimport Global from '../../utils/Global';\r\nimport { IAvailabilityBrand, AvailabilityProduct } from '../../models/ordering/availability';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport BlockBase from '../page/block';\r\nimport { ActivationServiceSelector } from '../ordering/process';\r\nimport OteloStatic from '../../utils/static';\r\nimport ISub from '../../models/ordering/sub';\r\nimport { runInThisContext } from 'vm';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport {ECustomerActionType} from '../../models/ordering/customerAction';\r\nimport { ICustomer } from '../../models/ordering/customer';\r\n\r\nexport interface ITariffConfigurationProps {\r\n    brand: IBrand;\r\n    onConfigurationChanged: any;\r\n    availableProducts: IProduct[];\r\n    selectedTariff: string;\r\n    activation: IActivation;\r\n    //customer: ICustomer;\r\n    businessCase: EBusinessCase;\r\n    selection: IProcessNewSelection;\r\n    action?: ICustomerAction;\r\n    backToCustomer?: any;\r\n};\r\n\r\nexport interface ITariffConfigurationState {\r\n    selection: IProcessNewSelection;\r\n    changed: boolean;\r\n    canChangeProduct: boolean;\r\n    canChangeSub: boolean;\r\n};\r\n\r\nexport class TariffConfiguration extends React.Component<ITariffConfigurationProps, ITariffConfigurationState> {\r\n    private current: IProduct | any;\r\n    private businessCase: EBusinessCase;\r\n    private processParent: IOrderData | any;\r\n    private availableProducts: IProduct[];\r\n\r\n    constructor(props:ITariffConfigurationProps) {\r\n        super(props);\r\n\r\n        this.onSelectTariff = this.onSelectTariff.bind(this);\r\n        this.onSelectOption = this.onSelectOption.bind(this);\r\n        this.onSelectSub = this.onSelectSub.bind(this);\r\n\r\n        this.businessCase = this.props.businessCase;\r\n\r\n        this.processParent = OrderDataWrapper.getParentOfProcess(this.props.activation.processId);\r\n\r\n        /** 2019-09-24\r\n         * All VF VVL Products and Subs delivered by the SubHandy are being displayed\r\n         * Services are filtered bei the respective businessCase\r\n         */\r\n        if(this.props.activation.activationType === EActivationType.existingCustomer \r\n            && this.props.activation.brandKey === BrandKeys.vodafone) {\r\n            this.businessCase = EBusinessCase.bnt;\r\n        };\r\n\r\n        /**\r\n         * 2020-03-17 the real businessCase for EC is stored inside the action\r\n         */\r\n        //if(this.props.action) {\r\n        //    this.businessCase = this.props.action.bc;\r\n        //};        \r\n\r\n        /** 2020-02-24 \r\n         * if gigakombi buchung then only one product\r\n        */\r\n       this.availableProducts = this.props.availableProducts;\r\n       if(this.props.activation.activationType === EActivationType.bookService) {\r\n            this.availableProducts = linq.from<IProduct>(this.props.brand.products)\r\n                .where(x=>x.id === this.props.activation.productId)\r\n                .toArray();\r\n       }\r\n\r\n        this.state = {\r\n            selection: this.props.selection,\r\n            changed: false,\r\n            canChangeProduct: !(this.props.activation.activationType === EActivationType.bookService),\r\n            canChangeSub: !(this.props.activation.activationType === EActivationType.bookService)\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let a: JSX.Element = <>\r\n            <page.LButton type={ELButtonType.linkSimple}\r\n                text={MainTexts.backToCustomerDataSheet}\r\n                css=\"action3 fr\"\r\n                onClick={() => {\r\n                    if(this.props.backToCustomer) {\r\n                        this.props.backToCustomer();\r\n                    }\r\n                }} />\r\n        </>;\r\n\r\n        let cfg: IBlockConfiguration = { title: OrderingTexts.activationBNTTariff, \r\n            transparent: false ,\r\n            action: a\r\n        }; \r\n        \r\n        let preselectedServices: string[] = [];\r\n\r\n        //todo: check of VVL/tw\r\n        if(this.processParent.customer.contracts && this.processParent.customer.contracts[0].bookedProduct) {\r\n            preselectedServices = this.processParent.customer.contracts[0].bookedProduct.services;\r\n        };\r\n\r\n        this.current = linq.from(this.availableProducts)\r\n            .where(x=>x.id === this.props.activation.productId)\r\n            .firstOrDefault();\r\n\r\n        let ctrl = (\r\n            <BlockBase config={cfg}>\r\n                <></>\r\n                {\r\n                    this.props.activation.brandKey === BrandKeys.vodafone ? \r\n                    <>\r\n                        {this.renderCurrent(this.props.action)}\r\n                        <div className=\"spacer-big clear\"></div>\r\n                    </>\r\n                    : <></>\r\n                }\r\n                {this.renderGroups()}\r\n                {\r\n                    this.props.activation.inCurrent ? <></> : \r\n                    <>\r\n                        <div className=\"spacer-big clear\"></div>\r\n                        {\r\n                            (\r\n                                (this.current && this.current.creditDebitType)\r\n                                ||\r\n                                this.props.activation.activationType === EActivationType.bookService\r\n                            ) ? \r\n                            this.renderSub() : <></>\r\n                        }\r\n\r\n                        <div className=\"spacer-big clear\"></div>\r\n                        {\r\n                            this.props.brand.id === BrandKeys.vodafone ?\r\n                                <ActivationServiceSelector \r\n                                    activation={this.props.activation} \r\n                                    bc={EBusinessCase.vvl}\r\n                                    preselected={preselectedServices}\r\n                                    blockAddRemove={this.props.activation.activationType == EActivationType.bookService ? true : false}\r\n                                    canEdit={true}\r\n                                    onChanged={()=>{ this.props.onConfigurationChanged() }}\r\n                                    brand={this.props.brand}/> :\r\n                            <>\r\n                                {\r\n                                    this.props.activation && this.props.activation.brandKey != BrandKeys.kabel ?\r\n                                    this.renderPromotions()\r\n                                    : null\r\n                                }\r\n\r\n                                <div className=\"spacer-big clear\"></div>\r\n                                {this.renderOptions()}\r\n                                <div className=\"spacer-big clear\"></div>\r\n                            </>\r\n                        } \r\n                    </>\r\n                }\r\n\r\n\r\n            </BlockBase>\r\n        );        \r\n        \r\n        return ctrl;\r\n    };\r\n\r\n    private renderCurrent(a: ICustomerAction | undefined ) : JSX.Element {\r\n        if(a && (a.type != ECustomerActionType.STD || a.name.toLowerCase().indexOf(\"tarifwechsel\")>=0)) {\r\n            return <></>\r\n        }   \r\n\r\n        if(this.processParent.customer.contracts && this.processParent.customer.contracts[0].bookedProduct && this.processParent.customer.contracts[0].bookedProduct.sub == 'OS') {\r\n            return <></>\r\n        };        \r\n\r\n        let ctrl = <div>\r\n                <TariffThumb\r\n                        key={'current-tar'}\r\n                        id={ConstantKeys.current} \r\n                        text={OrderingTexts.prolongateCurrentTariff}\r\n                        idx={0}\r\n                        brandKey={this.props.brand.id} \r\n                        selected={this.props.activation.inCurrent ? true : false} \r\n                        styleBrand={false}\r\n                        cssStyle={this.props.activation.inCurrent ? 'selected' : ''}\r\n                        onClick={this.onSelectTariff}/>\r\n        </div>\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderSub() : JSX.Element {\r\n        if(!this.current || !this.current.subs) { return <></> }\r\n\r\n        let subs: string[] = linq.from<ISubConfig>(this.current.subs)\r\n            .join(this.props.brand.subs, cs=>cs.id, bs=>bs.id, (cs,bs)=>{ return {CS:cs, BS:bs}})\r\n            .orderBy(x=>x.BS.sort)\r\n            .select(x=>x.CS.id).toArray();\r\n\r\n        if(this.props.activation.isNba()) {\r\n            subs = [this.props.activation.sub];\r\n        };\r\n\r\n        if(this.props.activation.brandKey === BrandKeys.otelo \r\n            && this.props.selection \r\n            && this.props.businessCase === EBusinessCase.bnt\r\n            && this.props.selection.creditDebitType === ECreditDebitType.postpaid ) {\r\n            if(linq.from<string>(subs).where(x=>x === OteloStatic.simOnly).count() === 0) {\r\n                subs.push(OteloStatic.simOnly);\r\n            }\r\n        };\r\n\r\n        //vf gigskombi\r\n        if(this.props.activation.activationType === EActivationType.bookService) {\r\n            subs = [this.props.activation.sub];\r\n        };\r\n\r\n        let subList : JSX.Element[] = [];\r\n\r\n        subs = linq.from<string>(subs).distinct().toArray();\r\n\r\n        if(this.props.activation.brandKey === BrandKeys.vodafone && this.props.action && this.props.action.type == ECustomerActionType.STD) {\r\n            subs.splice(0, 0, 'OS');\r\n        };\r\n\r\n        subs.map((i,idx)=> {\r\n            let tt = linq.from<ISub>(this.props.brand.subs).where(x=>x.id === i).first();\r\n \r\n            let s = <TariffThumb \r\n                id={i} \r\n                text={OrderingHelper.getSub(this.props.brand, i).name}\r\n                key={idx}\r\n                idx={idx}\r\n                tooltip={ tt.tooltip }\r\n                tooltipModel={i}                    \r\n                brandKey={this.props.brand.id} \r\n                selected={false} \r\n                styleBrand={false}\r\n                cssStyle={this.props.activation.sub === i ? 'selected sub ' + this.props.brand.id : 'sub ' + this.props.brand.id}\r\n                onClick={this.onSelectSub}/>\r\n                subList.push(s);\r\n        });\r\n\r\n        let ctrl = (\r\n            <>\r\n            <div className=\"subtitle\">{OrderingTexts.sub}</div>\r\n            {subList}\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderGroups() : JSX.Element {\r\n        let pt = this.state.selection.creditDebitType// : ECreditDebitType.postpaid;\r\n        let ct = this.state.selection.customerType// : ECustomerType.personal;\r\n        let at = this.state.selection.activationType// : EActivationType.actDefault;\r\n        //let bc = this.state.selection.businessCase;\r\n\r\n        let plist = linq.from(this.availableProducts).select(x=>x.id).toArray();\r\n\r\n        var groups = linq.from<IProduct>(OrderingHelper.filterProducts(this.props.brand.id, this.props.brand.products, this.businessCase))\r\n            .where(x=>(x.creditDebitType & pt) === pt && x.bookable && (x.customerType & ct) === ct && (x.activationType & at) === at)\r\n            .where(x=>plist.indexOf(x.id) >= 0)\r\n            .select(x=> {return {familyName: x.familyName, familySort:x.familySort}} )\r\n            .distinct()\r\n            .orderBy(x=>x.familySort)\r\n            .select(x=>x.familyName)\r\n            .distinct()\r\n            .toArray();\r\n\r\n\r\n        //vf gigskombi\r\n        if(this.props.activation.activationType === EActivationType.bookService) {\r\n            groups = linq.from<IProduct>(this.props.brand.products)\r\n                .where(x=>x.id === this.props.activation.productId)\r\n                .select(x=> {return {familyName: x.familyName, familySort:x.familySort}} )\r\n                .distinct()\r\n                .orderBy(x=>x.familySort)\r\n                .select(x=>x.familyName)\r\n                .distinct()\r\n                .toArray();\r\n        };\r\n\r\n        let ctrl = (\r\n            <>\r\n                {groups.map((i,idx)=>\r\n                    (this.renderGroup(i,idx))\r\n                )}\r\n                \r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderGroup(name: string, idx: number) {\r\n        let pt = this.state.selection? this.state.selection.creditDebitType : ECreditDebitType.postpaid;\r\n        let ct = this.state.selection? this.state.selection.customerType : ECustomerType.personal;\r\n        let at = this.state.selection? this.state.selection.activationType : EActivationType.actDefault;\r\n\r\n        let plist = linq.from(this.availableProducts).select(x=>x.id).toArray();\r\n\r\n        var products = linq.from<IProduct>(OrderingHelper.filterProducts(this.props.brand.id, this.props.brand.products, this.businessCase))\r\n            .where(x=>x.familyName === name && (x.creditDebitType & pt) === pt && x.bookable && (x.customerType & ct) === ct && (x.activationType & at) === at)\r\n            .where(x=>plist.indexOf(x.id) >= 0)\r\n            .orderBy(x=>x.sort)\r\n            .toArray();\r\n\r\n        if(this.props.activation.isNba()) {\r\n            products = linq.from<IProduct>(products).where(x=>x.id == this.props.activation.productId).toArray();\r\n        };\r\n\r\n        //vf gigskombi\r\n        if(this.props.activation.activationType === EActivationType.bookService) {\r\n            var products = linq.from<IProduct>(this.props.brand.products)\r\n                .where(x=>x.id === this.props.activation.productId)\r\n                .toArray();  \r\n        };\r\n\r\n        //no products found so return empty\r\n        if(products.length === 0) {\r\n            return <></>;\r\n        };\r\n\r\n        let ctrl = (\r\n            <div key={idx}>\r\n                <div className=\"subtitle\">{name}</div>\r\n                {products.map((i,idx)=>  \r\n                    (<TariffThumb\r\n                        key={idx}\r\n                        id={i.id} \r\n                        text={i.name}\r\n                        tooltip={i.tooltip}\r\n                        tooltipModel={i}\r\n                        idx={idx}\r\n                        brandKey={this.props.brand.id} \r\n                        selected={i.id === this.props.activation.productId && !this.props.activation.inCurrent} \r\n                        styleBrand={false}\r\n                        cssStyle={this.props.activation.productId === i.id && !this.props.activation.inCurrent? 'selected' : ''}\r\n                        onClick={this.onSelectTariff}/>)\r\n                    )}\r\n                \r\n                <page.LClear/>\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };    \r\n\r\n    private renderPromotions() : JSX.Element {\r\n        let ctrl = (\r\n            <div className=\"subtitle\">{MainTexts.noPromotions}</div>\r\n        );  \r\n\r\n        if(this.current) {\r\n            //this.current = linq.from<IProduct>(this.availableProducts).firstOrDefault(x=>x.id == (this.current ? this.current.id : ''));\r\n\r\n            let pw = new ProductWrapper(this.props.brand.id, this.current);\r\n            let sub = linq.from<ISubConfig>(this.current.subs)\r\n                .where(x=>x.id == this.props.activation.sub)\r\n                .firstOrDefault();\r\n\r\n            let svc = linq.from(pw.getServices(this.props.activation, this.props.businessCase, false))\r\n                .toArray();\r\n\r\n            if(svc.length > 0) {\r\n                let all: JSX.Element[] = [];\r\n                for(let i = 0; i < sub!.sl.length; i++) {\r\n                    let data = linq.from<IService>(this.props.brand.services)\r\n                        .where(x=>x.id === sub!.sl[i].id && x.type == EServiceType.promotion ) // && ((x.businessCase & EBusinessCase.bnt) === EBusinessCase.bnt))\r\n                        .firstOrDefault();\r\n\r\n                    if(data) {\r\n                        all.push(<page.LControl type={EControlType.checkbox} \r\n                            label={data.name} \r\n                            key={i} id={data.id} \r\n                            onChange={this.onSelectOption}\r\n                            hideHint={true} hideTitle={false}/>);\r\n                    }\r\n                }\r\n\r\n                ctrl = \r\n                    <>\r\n                        <div className=\"subtitle\">Optionale Promotion</div>\r\n                        {all}\r\n                    </>\r\n            }\r\n        }\r\n        \r\n        return ctrl;\r\n    };\r\n\r\n    private renderOptions() : JSX.Element {\r\n        let ctrl = (\r\n            <div className=\"subtitle\">{MainTexts.noOptions}</div>\r\n        );  \r\n\r\n        if(this.current) {\r\n            let selectable:string[] = this.getSelectableServices();\r\n\r\n            if(this.props.activation) {\r\n                let pw = new ProductWrapper(this.props.activation.brandKey, \r\n                    this.current);\r\n\r\n                //kabel services are not bound to hardware\r\n                let svc: string[] = [];\r\n\r\n                if(this.businessCase === EBusinessCase.bnt) {\r\n                    svc = this.props.activation.brandKey == BrandKeys.kabel ? selectable\r\n                        : linq.from(pw.getServices(this.props.activation, this.businessCase, false))\r\n                            .where(x=>selectable.indexOf(x)>=0)\r\n                            .toArray(); \r\n                } else {\r\n                    svc = selectable;\r\n                }\r\n\r\n                this.props.activation.availability = StorageHelper.getAvailability();\r\n\r\n                if(svc.length > 0) {\r\n                    let brandServices = this.props.brand.services;\r\n                    let all: JSX.Element[] = [];\r\n                    for(let i = 0; i < svc.length; i++) {\r\n                        let data = linq.from(brandServices)\r\n                            .where(x=>x.id == svc[i] && x.type === EServiceType.option)\r\n                            .firstOrDefault();\r\n\r\n                        if(data) {                            \r\n                            if(this.current \r\n                                && this.props.activation \r\n                                && this.props.activation.availability \r\n                                && this.props.brand.id === BrandKeys.dsl) {\r\n                                var brandProducts = linq.from<IAvailabilityBrand>(this.props.activation.availability.brands)\r\n                                    .where(x=>x.key === this.props.activation.brandKey)\r\n                                    .first();\r\n\r\n                                var avprod = linq.from<AvailabilityProduct>(brandProducts.products)\r\n                                    .where(x=>x.productId === (this.current ? this.current.id : ''))\r\n                                    .firstOrDefault();\r\n\r\n                                /**\r\n                                 * comfort option only if provided in the availability\r\n                                 */\r\n                                if(avprod) {\r\n                                    if(!avprod.hasComfort && data.id === \"svc_dsl_comfort\") {\r\n                                        continue;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            let text = data.name + \r\n                                ''; //(data.monthlyFee ? '( ' + Global.formatNumber(data.monthlyFee.price, 2, 2, data.monthlyFee.unit) + ' ' + data.id + ')' : '');\r\n                            let name = 'cb-' + data.id;\r\n\r\n                            all.push(<page.LControl  \r\n                                type={EControlType.checkbox} \r\n                                disabled={this.serviceDisabled(data.id)} \r\n                                name={name } \r\n                                label={text + ':' + data.id} \r\n                                key={i} \r\n                                id={data.id} \r\n                                hideHint={true} \r\n                                checked={this.props.activation.services.indexOf(data.id) >= 0}\r\n                                onChange={this.onSelectOption}/>);\r\n                        } \r\n                    }\r\n                    ctrl = \r\n                    (\r\n                        <>\r\n                        {all}\r\n                        </>\r\n                    );\r\n                    \r\n                    return ctrl;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return ctrl;\r\n    };    \r\n\r\n    private getSelectableServices() : string[] {\r\n        let res: string[] = [];\r\n        /*\r\n                - BNT get the services from helper\r\n                - VVL get them from curren action product\r\n        */\r\n        if(this.businessCase === EBusinessCase.bnt) {\r\n           res = OrderingHelper.filterServices(this.props.brand, \r\n               this.props.activation ? this.props.activation : new IActivation(this.props.brand.id), \r\n               EServiceType.option);\r\n        } else if (this.props.action) {\r\n           let prod = linq.from<IProduct>(this.props.action.products)\r\n               .where(x=>x.id === this.props.activation.productId)\r\n               .first()\r\n            \r\n            let sub = linq.from<ISubConfig>(prod.subs)\r\n                .where(x=>x.id === this.props.activation.sub)\r\n                .firstOrDefault();\r\n\r\n            if(sub) {\r\n                res = linq.from<ISubServiceConfig>(sub.sl).select(x=>x.id).toArray();\r\n            }\r\n        };\r\n\r\n        return res;\r\n    };\r\n\r\n    private onSelectTariff(value: string) {     \r\n        if(!this.state.canChangeProduct) { return;};\r\n\r\n        if(this.props.activation.isNba()) { return; }\r\n\r\n        this.props.activation.servicesRemove = [];\r\n        this.props.activation.productId = value;\r\n        this.current = linq.from(this.availableProducts)\r\n            .where(x=>x.id === this.props.activation.productId)\r\n            .firstOrDefault();           \r\n        \r\n        this.props.activation.resetSeetedsubsAndServices();\r\n\r\n        if(value == ConstantKeys.current) {\r\n            if(this.processParent.customer.contracts && this.processParent.customer.contracts[0].bookedProduct) {\r\n                this.props.activation.productId = this.processParent.customer.contracts[0].bookedProduct.id;\r\n                this.props.activation.sub = this.processParent.customer.contracts[0].bookedProduct.sub;\r\n                this.props.activation.inCurrent = true;\r\n            }\r\n        } else {\r\n            this.props.activation.inCurrent = false;\r\n        }\r\n\r\n        StorageHelper.updateActivation(this.props.activation);\r\n\r\n        if(this.props.onConfigurationChanged) {\r\n            this.props.onConfigurationChanged(value);\r\n        };\r\n\r\n        this.setState({changed: true});\r\n    };   \r\n    \r\n    private onSelectSub(value: string) {\r\n        if(!this.state.canChangeSub) { return;};\r\n\r\n        this.props.activation.servicesRemove = [];\r\n        this.props.activation.sub = value;\r\n        StorageHelper.updateActivation(this.props.activation);\r\n        //this.setState({changed: true});\r\n        if(this.props.onConfigurationChanged) {\r\n            this.props.onConfigurationChanged(value);\r\n        };\r\n    }; \r\n\r\n    private onSelectOption(e: IControlValue) {\r\n        if(e.checked) {\r\n            if(this.props.activation) {\r\n                this.props.activation.addService(e.id, undefined);\r\n            }\r\n        } else {\r\n            if(this.props.activation) {\r\n                this.props.activation.removeService(e.id,undefined);\r\n            }\r\n        }\r\n        \r\n        StorageHelper.updateActivation(this.props.activation);\r\n        this.setState({changed: true});\r\n    };\r\n\r\n    private serviceDisabled(id: string) : boolean {\r\n        return this.props.activation.validateService(id);\r\n    };    \r\n};\r\n\r\nexport default TariffConfiguration;","export interface AppState {\r\n    popup: any;\r\n    screen: any;\r\n};\r\n\r\nexport const  OPEN_POPUP = 'OPEN_POPUP';\r\nexport const  OPEN_SCREEN = 'OPEN_SCREEN';","import { AppState, OPEN_POPUP, OPEN_SCREEN } from \"./types\";\r\n\r\nconst appState: AppState = {\r\n    popup: null,\r\n    screen: null\r\n};\r\n\r\nexport function appReducer(state = appState, { type, payload }: any): AppState {\r\n    switch (type) {\r\n      case OPEN_POPUP: {\r\n        return {\r\n          ...state,\r\n          popup: payload\r\n        };\r\n      }\r\n      case OPEN_SCREEN: {\r\n        return {\r\n          ...state,\r\n          screen: payload\r\n        };\r\n      }      \r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  }","import { OPEN_POPUP, OPEN_SCREEN } from \"./types\";\r\n\r\nexport const openPopup = (jsx: any) => {  \r\n  console.log('action1!!!!');\r\n  return {\r\n    type: OPEN_POPUP,\r\n    payload: jsx\r\n  }\r\n};\r\n\r\nexport const openScreen = (jsx: any) => {  \r\n  console.log('action2!!!!');\r\n  return {\r\n    type: OPEN_SCREEN,\r\n    payload: jsx\r\n  }\r\n};","import thunkMiddleware from 'redux-thunk';\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { appReducer } from './app/reducers';\r\nimport { openPopup, openScreen } from '../store/app/actions';\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer\r\n});  \r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport const mapStateToProps = (state: RootState) => ({\r\n    app: state.app\r\n});\r\n  \r\nexport function mapDispatchToProps(dispatch: any) {\r\n    return {\r\n        openPopup: (container: any) => dispatch(openPopup(container)),\r\n        openScreen: (container: any) => dispatch(openScreen(container)),\r\n    };\r\n};\r\n\r\nexport default function configureStore() {\r\n    const middlewares = [thunkMiddleware];\r\n    \r\n    const middleWareEnhancer = applyMiddleware(...middlewares);\r\n  \r\n    const store = createStore(rootReducer, composeWithDevTools(middleWareEnhancer));\r\n  \r\n    return store;\r\n};","import { ETelType } from \"../page/diverse\";\r\n\r\nexport class Tel {\r\n    public id?: string = '';\r\n    public countryCode?: string = '';\r\n    public prefix: string = '';\r\n    public number: string = '';\r\n    public telType: ETelType = ETelType.mobile;\r\n};\r\n\r\nexport default Tel;","import { EBusinessCase } from \"./order\";\r\nimport IProduct, { ISubConfig } from \"./product\";\r\nimport { MobileNumber } from \"../global/mobileNumber\";\r\nimport * as linq from 'linq';\r\nimport IFee from \"./fee\";\r\n\r\nexport enum ECustomerActionPurchase\r\n{\r\n    undefined = 0,\r\n    rot = 1,\r\n    gelb = 2,\r\n    gruen = 3,\r\n    addedRuntime = 4\r\n};\r\n\r\nexport enum EFormMode {\r\n    undefined= 0,\r\n    view= 1,\r\n    edit= 2\r\n};\r\n\r\nexport enum ECustomerActionType\r\n{\r\n    undefined = 0,\r\n    ART = 1,\r\n    STD = 2\r\n};\r\n\r\nexport enum ENbaCategory\r\n{\r\n    undefined = 0,\r\n    high = 1,\r\n    low = 2\r\n}\r\n\r\nexport enum ECustomerStatus\r\n{\r\n    undefined = 0,\r\n    silver = 1,\r\n    gold = 2,\r\n    platinum = 3\r\n};\r\n\r\nexport interface IActivationSim\r\n{\r\n    name: string;\r\n    price: IFee;\r\n    id:string;\r\n    activateByCustomer: number;\r\n};\r\n\r\nexport interface ICustomerStatus {\r\n    status: ECustomerStatus;\r\n    statusStart:Date;\r\n    statusEnd: Date;\r\n};\r\n\r\nexport class CustomerGroup {\r\n    groupId:string = '';\r\n\r\n    numberOfOwner:number = 0;\r\n\r\n    numberOfMember:number = 0; \r\n\r\n    groupName:string = '';\r\n\r\n    groupStatus:string = '';\r\n\r\n    groupType:string = '';\r\n\r\n    marketCode:string = '';\r\n\r\n    effectiveDate:Date = new Date();\r\n\r\n    members: IGroupMember[] = [];\r\n\r\n    public static createInstanceFromJson(gr:CustomerGroup) : CustomerGroup {\r\n        return Object.assign(new CustomerGroup(), gr);\r\n    };\r\n\r\n    public getOwner() : IGroupMember {\r\n        let m = linq.from<IGroupMember>(this.members)\r\n            .where(x=>x.type === EGroupMemeberType.owner)\r\n            .firstOrDefault();\r\n        \r\n        return m ? m : {};\r\n    };\r\n\r\n    public getMembers() : IGroupMember[] {\r\n        return linq.from<IGroupMember>(this.members)\r\n            .where(x=>x.type === EGroupMemeberType.partner)\r\n            .toArray();\r\n    };    \r\n};\r\n\r\nexport enum ECardType {\r\n    partner = 0,\r\n    multicard = 1\r\n};\r\n\r\nexport enum EGroupMemeberType{\r\n    undefined = 0,\r\n    owner = 1,\r\n    partner = 2\r\n};\r\n\r\nexport interface IGroupMember {\r\n    ban?:string;\r\n\r\n    type?:EGroupMemeberType;\r\n\r\n    memberType?: string;\r\n\r\n    subscriberNumber?:MobileNumber;\r\n\r\n    effectiveDate?:Date;\r\n\r\n    groupTariffType?:string;\r\n\r\n    skeletonContractNumber?:string;\r\n\r\n    tariffOption?: string;\r\n};\r\n\r\nexport class ICancellation {\r\n    public vvlCancelable: boolean = false;\r\n    public twCancelable: boolean = false;\r\n    public bntCancelable: boolean = false;\r\n    public bntReasons: string[] = [];\r\n\r\n    public cancellationTypeId: number = 7;\r\n    public cancellationSpecialTypeId: number = 1;\r\n    public reasonId: number= 1;\r\n    public reason: string = '';\r\n    public employeeName: string ='';\r\n    public provisionRenounce:boolean = false;\r\n};\r\n\r\nexport interface ICustomerNba {\r\n    nbaId?: number;\r\n    product?: string;\r\n    sub?: string;\r\n    services?: string[];\r\n    title?: string;\r\n    uiHint?: string;\r\n\r\n    category: ENbaCategory;\r\n};\r\n\r\nexport interface ICustomerAction extends ICustomerNba\r\n{\r\n    name:string;\r\n    active:boolean;\r\n    type:ECustomerActionType;\r\n    purchase: ECustomerActionPurchase;\r\n    possibleFrom:Date;\r\n\r\n    bc: EBusinessCase;\r\n    products: IProduct[];\r\n};\r\n\r\nexport interface ICustomerActionProduct {\r\n    id: string;\r\n    hashw: boolean;\r\n    bc: EBusinessCase;\r\n    subs: ISubConfig[];\r\n};","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { EPopupType } from '../../components/dialogs/popup';\r\nimport * as cmp from '../../components/index';\r\nimport { Inner1C } from '../../components/index';\r\nimport BaseBlock from '../../components/page/block';\r\nimport * as page from '../../components/page/index';\r\nimport { IApiResponse, IApiSummary } from '../../interfaces';\r\nimport { EControlType, ELButtonType, ERequestType } from '../../models';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport Api from '../../utils/api';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts, ValidationMessages } from '../../utils/messages';\r\nimport ValidationOption, { EValidationOption } from '../../utils/validation/validationOption';\r\nimport CustomerScreen from '../existing/customer';\r\n\r\nexport enum ImeiUploadType {\r\n    Manual,\r\n    List\r\n}\r\n\r\nexport interface ImeiScreenProps {\r\n    msisdn?: string;\r\n    onCancel?: any;\r\n    parent?: CustomerScreen;\r\n    uploadType: ImeiUploadType;\r\n}\r\n\r\nexport interface IImeiScreenState {\r\n    msisdn: string;\r\n    imei: string;\r\n    file?: any;\r\n\r\n    popupTitle: string;\r\n    processing: boolean;\r\n    closblePopup: boolean;\r\n    apiMessage: string;\r\n}\r\n\r\nexport class ImeiScreen extends React.Component<ImeiScreenProps, IImeiScreenState> {\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n    public static containerId: string = 'imeiScreen';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            msisdn: this.props.msisdn || '', imei: '',\r\n            closblePopup: false, apiMessage: '',\r\n            processing: false, popupTitle: ''\r\n        };\r\n\r\n        if(this.props.uploadType === ImeiUploadType.List) {\r\n            Global.easyApp.setTitle(MainTexts.imeiPageTitle);\r\n        }\r\n\r\n        this._onChange = this._onChange.bind(this);\r\n        this._onFileChange = this._onFileChange.bind(this);\r\n        this._onSave = this._onSave.bind(this);\r\n        this._showPopup = this._showPopup.bind(this);\r\n        this._onDismissProcessPopup = this._onDismissProcessPopup.bind(this);\r\n    }\r\n\r\n    render() {\r\n        let a: JSX.Element = <></>;\r\n\r\n        if (this.props.parent) {\r\n            a = <page.LButton type={ELButtonType.linkSimple}\r\n                text={MainTexts.backToCustomerDataSheet}\r\n                css=\"action3 fr\"\r\n                onClick={() => {\r\n                    if (this.props.parent) {\r\n                        this.props.parent.onBackToCustomer(false);\r\n                    }\r\n                }} />;\r\n        }\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: this.props.uploadType === ImeiUploadType.List ? MainTexts.imeiListUpload : MainTexts.imeiPageTitle,\r\n            transparent: false,\r\n            styleContainer: '',\r\n            action: a\r\n        };\r\n\r\n        let ctrl = <></>;\r\n\r\n        if (this.props.uploadType === ImeiUploadType.List) {\r\n            ctrl = this._renderList(cfg);\r\n        } else {\r\n            ctrl = this._renderManual(cfg);\r\n        }\r\n\r\n        return ctrl;\r\n    }\r\n\r\n    socketCallback(res: IApiResponse) {\r\n        this._onDismissProcessPopup();\r\n\r\n        if (res.error) {\r\n            let sum: IApiSummary = Api.parseSummary(res, undefined);\r\n            this.processPopupState = EPopupType.custom;\r\n\r\n            this._showPopup(EPopupType.custom, '', sum.message, false, true);\r\n        } else {\r\n            this._showPopup(EPopupType.info, MainTexts.saveSuccess, '', true, true);\r\n        }\r\n    }\r\n\r\n    private _renderManual = (cfg: IBlockConfiguration) => {\r\n        return <div id={ImeiScreen.containerId}>\r\n            <BaseBlock config={cfg}>\r\n                <cmp.Popup\r\n                    type={this.processPopupState}\r\n                    visible={this.state.processing || this.state.closblePopup}\r\n                    closable={this.state.closblePopup}\r\n                    id=\"wait\"\r\n                    title={this.state.popupTitle}\r\n                    height={200}\r\n                    onDismiss={this._onDismissProcessPopup}>\r\n                    <cmp.PopupBody>\r\n                        <div>{this.state.apiMessage}</div>\r\n                        <></>\r\n                    </cmp.PopupBody>\r\n                    <></>\r\n                </cmp.Popup>\r\n                <Container className=\"container-action\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <page.LControl type={EControlType.hint} label={MainTexts.imeiManualDesc} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={6} md={6}>\r\n                            <page.LControl type={EControlType.text}\r\n                                value={this.state.msisdn}\r\n                                validationOptions={\r\n                                    [\r\n                                        new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError })\r\n                                    ]\r\n                                }\r\n                                onChange={this._onChange}\r\n                                name=\"msisdn\" id=\"msisdn\"\r\n                                label={MainTexts.msisdn} />\r\n                        </Col>\r\n                        <Col xs={6} md={6}>\r\n                            <page.LControl type={EControlType.text}\r\n                                value={this.state.imei}\r\n                                validationOptions={\r\n                                    [\r\n                                        new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError })\r\n                                    ]\r\n                                }\r\n                                onChange={this._onChange}\r\n                                name=\"imei\" id=\"imei\"\r\n                                label={MainTexts.imei} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={6} md={6} >\r\n\r\n                        </Col>\r\n                        <Col xs={6} md={6} >\r\n                            <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                css=\"ai fr\"\r\n                                id=\"buttonSave\"\r\n                                text={MainTexts.save}\r\n                                onClick={this._onSave} />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        </div>;\r\n    }\r\n\r\n    private _renderList = (cfg: IBlockConfiguration) => {\r\n        return <div id={ImeiScreen.containerId}>\r\n            <Inner1C>\r\n                <BaseBlock config={cfg}>\r\n                    <cmp.Popup\r\n                        type={this.processPopupState}\r\n                        visible={this.state.processing || this.state.closblePopup}\r\n                        closable={this.state.closblePopup}\r\n                        id=\"wait\"\r\n                        title={this.state.popupTitle}\r\n                        height={200}\r\n                        onDismiss={this._onDismissProcessPopup}>\r\n                        <cmp.PopupBody>\r\n                            <div>{this.state.apiMessage}</div>\r\n                            <></>\r\n                        </cmp.PopupBody>\r\n                        <></>\r\n                    </cmp.Popup>\r\n                    <Container className=\"container-action\">\r\n                        <Row>\r\n                            <Col xs={12} md={12}>\r\n                                <page.LControl type={EControlType.hint} label={MainTexts.imeiListUploadDesc} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col xs={12} md={12}>\r\n                                <input type=\"file\" name=\"file\" id=\"file\" accept=\".csv\" onChange={this._onFileChange} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={6} md={6} >\r\n\r\n                            </Col>\r\n                            <Col xs={6} md={6} >\r\n                                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                    css=\"ai fr\"\r\n                                    id=\"buttonSave\"\r\n                                    text={MainTexts.save}\r\n                                    onClick={this._onSave} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <page.LClear />\r\n                </BaseBlock>\r\n            </Inner1C>\r\n        </div>;\r\n    }\r\n\r\n    private _onChange(e: IControlValue) {\r\n        let st = this.state;\r\n        Global.onInput(st, e, () => {\r\n            this.setState(st);\r\n        });\r\n    }\r\n\r\n    private getBase64(file) {\r\n        const promise = new Promise<string | ArrayBuffer | null>((resolve, reject) => {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () {\r\n                resolve(reader.result)\r\n            };\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            };\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    private _onSave() {\r\n        this._showPopup(EPopupType.pleaseWait, '', '', true, false);\r\n        if (this.props.uploadType === ImeiUploadType.Manual) {\r\n            const model = { msisdn: this.state.msisdn, imei: this.state.imei };\r\n            Global.hub.send(JSON.stringify(model),\r\n                ERequestType.saveImei,\r\n                undefined);\r\n        } else { // upload imei file\r\n            this.getBase64(this.state.file).then(result => {\r\n                const model = { file: result, fileName: this.state.file.name };\r\n                Global.hub.send(JSON.stringify(model),\r\n                    ERequestType.saveImeiList,\r\n                    undefined);\r\n            });\r\n        }\r\n    }\r\n\r\n    private _showPopup(type: EPopupType, title: string, message: string, inprocess: boolean, closblePopup: boolean) {\r\n        this.processPopupState = type;\r\n        this.setState({\r\n            apiMessage: message,\r\n            closblePopup: closblePopup,\r\n            processing: inprocess,\r\n            popupTitle: title\r\n        });\r\n    }\r\n\r\n    private _onDismissProcessPopup() {\r\n        this.setState({ processing: false, closblePopup: false });\r\n    }\r\n\r\n    _onFileChange = event => {\r\n        this.setState({ file: event.target.files[0] });\r\n    }\r\n}\r\n\r\nexport default ImeiScreen;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { LControl, Popup, PopupBody } from '../..';\r\nimport { EApiResponseStatus, IApiResponse } from '../../../interfaces';\r\nimport { EControlType, ELButtonType, ERequestType, IMnp } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { ESalutation } from '../../../models/ordering/order';\r\nimport { CustomerScreen } from '../../../screens/insex';\r\nimport '../../../screens/test/progressBar.scss';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { ActivationMessages, MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport { EPopupType } from '../../dialogs/popup';\r\nimport { CustomerMnp } from '../../ordering/customer';\r\nimport BaseBlock from '../../page/block';\r\nimport * as page from '../../page/index';\r\n\r\nexport enum EPortingTime {\r\n    Now = 1,\r\n    AfterContractEnd = 2\r\n}\r\n\r\nexport interface BelatedPortingModel {\r\n    salutationId: number;\r\n    firstname: string;\r\n    surname: string;\r\n    birthday: Date;\r\n    customerNumber: string;\r\n    toBePorted: string;\r\n    customer: ICustomer;\r\n    consent: boolean;\r\n    portingTime: number;\r\n    mnp: IMnp;\r\n}\r\n\r\nexport interface IBelatedPortingProps {\r\n    onChange: any;\r\n    parent: CustomerScreen;\r\n}\r\n\r\nexport interface IBelatedPortingState {\r\n    model: BelatedPortingModel;\r\n    popupTitle: string;\r\n    processing: boolean;\r\n    closablePopup: boolean;\r\n    apiMessage: string;\r\n}\r\n\r\nexport class BelatedPorting extends React.Component<IBelatedPortingProps, IBelatedPortingState> {\r\n    public static containerId: string = 'belatedPortingScreen';\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n\r\n    readonly cfg2: IBlockConfiguration = {\r\n        title: OrderingTexts.dataOfLastContract,\r\n        transparent: false,\r\n        styleContainer: '',\r\n        collapsible: false,\r\n        collapsed: false\r\n    };\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        let data = this.props.parent.data;\r\n        let customer = data.customer;\r\n        const mnp = customer.mnp || { provider: '', network: '', differentCustomer: false };\r\n\r\n        this.state = {\r\n            processing: false, closablePopup: false, apiMessage: '', popupTitle: '',\r\n            model: {\r\n                mnp: { network: mnp.network, provider: mnp.provider, differentCustomer: false },\r\n                salutationId: customer.salutation ? (customer.salutation as number) : (ESalutation.mr as number),\r\n                firstname: customer.firstname || '',\r\n                surname: customer.surname || '',\r\n                birthday: customer.birthday || new Date(),\r\n                customerNumber: customer.telMobile ? customer.telMobile.number : '',\r\n                toBePorted: customer.contracts ? customer.contracts[0].msisdn || '' : '',\r\n                portingTime: EPortingTime.Now,\r\n                customer: customer,\r\n                consent: false\r\n            }\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this._onDismissProcessPopup = this._onDismissProcessPopup.bind(this);\r\n    }\r\n\r\n    render() {\r\n        let a: JSX.Element = <page.LButton type={ELButtonType.linkSimple}\r\n            text={MainTexts.backToCustomerDataSheet}\r\n            css=\"action3 fr\"\r\n            onClick={() => {\r\n                this.props.parent.onBackToCustomer(false);\r\n            }} />;\r\n\r\n        const cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.activationBNTCustomer,\r\n            transparent: false,\r\n            styleContainer: '',\r\n            collapsible: false,\r\n            collapsed: false,\r\n            action: a\r\n        };\r\n\r\n        if (Global.easyApp.head) {\r\n            Global.easyApp.head.setTitle(MainTexts.belatedPortingTitle);\r\n        }\r\n\r\n        const { model } = this.state;\r\n\r\n        return <div id={BelatedPorting.containerId}>\r\n            <br /><br /><br />\r\n            <Popup\r\n                type={this.processPopupState}\r\n                visible={this.state.processing || this.state.closablePopup}\r\n                closable={this.state.closablePopup}\r\n                id=\"wait\"\r\n                title={this.state.popupTitle}\r\n                height={200}\r\n                onDismiss={this._onDismissProcessPopup}>\r\n                <PopupBody>\r\n                    <div>{this.state.apiMessage}</div>\r\n                    <></>\r\n                </PopupBody>\r\n                <></>\r\n            </Popup>\r\n            <BaseBlock config={cfg}>\r\n                {\r\n                    <Container >\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <page.LControl type={EControlType.radio}\r\n                                    checked={model.salutationId === (ESalutation.mr as number)}\r\n                                    onChange={this.onChange}\r\n                                    name=\"salutationId\"\r\n                                    id={\"salutationId_\" + (ESalutation.mr as number).toString()}\r\n                                    label={MainTexts.mr} title={MainTexts.salutation} />\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <page.LControl type={EControlType.radio}\r\n                                    checked={model.salutationId === (ESalutation.mrs as number)}\r\n                                    onChange={this.onChange}\r\n                                    name=\"salutationId\"\r\n                                    id={\"salutationId_\" + (ESalutation.mrs as number).toString()}\r\n                                    label={MainTexts.mrs} title={MainTexts.salutation} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <LControl type={EControlType.text} style=\"merged\"\r\n                                    name=\"firstname\"\r\n                                    value={model.firstname}\r\n                                    onChange={this.onChange}\r\n                                    label={MainTexts.firstname} />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <LControl type={EControlType.text} style=\"merged\"\r\n                                    name=\"surname\"\r\n                                    value={model.surname}\r\n                                    onChange={this.onChange}\r\n                                    label={MainTexts.surname} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <page.LDate\r\n                                    value={model.birthday}\r\n                                    datePicker={false}\r\n                                    onChange={this.onChange}\r\n                                    name=\"birthday\"\r\n                                    id=\"birthday\" \r\n                                    title={MainTexts.dateOfBirth} />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <LControl type={EControlType.text} style=\"merged\"\r\n                                    value={model.customerNumber}\r\n                                    onChange={this.onChange}\r\n                                    name=\"customerNumber\"\r\n                                    label={MainTexts.customerNumber} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <LControl type={EControlType.text} style=\"merged\"\r\n                                    value={model.toBePorted}\r\n                                    onChange={this.onChange}\r\n                                    name=\"toBePorted\"\r\n                                    label={MainTexts.numberToBePorted} />\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <page.LControl type={EControlType.radio}\r\n                                    onChange={this.onChange}\r\n                                    name=\"portingTime\"\r\n                                    id={\"portingTime_\" + (EPortingTime.Now as number).toString()}\r\n                                    checked={model.portingTime === EPortingTime.Now}\r\n                                    label={MainTexts.immediately}\r\n                                    title={MainTexts.portingTime} />\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <page.LControl type={EControlType.radio}\r\n                                    onChange={this.onChange}\r\n                                    name=\"portingTime\"\r\n                                    id={\"portingTime_\" + (EPortingTime.AfterContractEnd as number).toString()}\r\n                                    checked={model.portingTime === EPortingTime.AfterContractEnd}\r\n                                    label={MainTexts.afterContractEnds} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                }\r\n            </BaseBlock>\r\n\r\n            <div className=\"spacer\"></div>\r\n\r\n            <BaseBlock config={this.cfg2}>\r\n                <Container>\r\n                    <CustomerMnp parent={this} customer={this.state.model.customer} onChange={this.onChange} preview={false} />\r\n                    <Row>\r\n                        <Col md={1}>\r\n                            <page.LControl type={EControlType.checkbox}\r\n                                onChange={this.onChange}\r\n                                name=\"consent\"\r\n                                id=\"consent\"\r\n                                value={true}\r\n                                checked={model.consent} />\r\n                        </Col>\r\n                        <Col md={10}>\r\n                            <page.LControl type={EControlType.textArea}\r\n                                name=\"\"\r\n                                id=\"\"\r\n                                style={\"black\"}\r\n                            /> {OrderingTexts.dataLastContract}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        this.state.model.consent ? \r\n                        <Row>\r\n                            <Col xs={12} md={12} >\r\n                                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                    css=\"a1 fr\"\r\n                                    id=\"save\"\r\n                                    text={MainTexts.save}\r\n                                    onClick={this._onSave} />\r\n                            </Col>\r\n                        </Row> : null\r\n                    }\r\n                </Container>\r\n            </BaseBlock>\r\n        </div >;\r\n    }\r\n\r\n    onChange(target: any) {\r\n        let model = this.state.model;\r\n  \r\n        Global.onInput(model, target, () => {\r\n            this.setState({ model: model });\r\n        });\r\n    }\r\n\r\n    socketCallback(res: IApiResponse) {\r\n       \r\n        const data = res.data;\r\n        if (data.status != EApiResponseStatus.ok) {\r\n            //res.error = data.data;\r\n            this.processPopupState = EPopupType.custom;\r\n\r\n            //let sum: IApiSummary = Api.parseSummary(res, undefined);\r\n\r\n            this.setState({ apiMessage: data.data.Text, closablePopup: true, processing: false });\r\n        } else {\r\n            this.processPopupState = EPopupType.custom;\r\n            this.setState({ apiMessage: ActivationMessages.execSuccess, closablePopup: true, processing: false });\r\n            /*\r\n            if (data.status === 2) {\r\n                this.setState({ apiMessage: 'Error', closablePopup: true, processing: false });\r\n            } else if (data.status === 1) {\r\n                this.setState({ apiMessage: 'Ok', closablePopup: true, processing: false });\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    _onSave = () => {\r\n        this.setState({ processing: true });\r\n\r\n        const { model } = this.state;\r\n\r\n        const mnp = model.mnp;\r\n\r\n        const portingModel = {\r\n            id: this.props.parent.data.id,\r\n            salutationId: model.salutationId,\r\n            firstname: model.firstname,\r\n            surname: model.surname,\r\n            birthday: model.birthday,\r\n\r\n            customerNumber: model.customerNumber,\r\n            msisdn: model.toBePorted,\r\n\r\n            brandKey: BrandKeys.otelo,\r\n            toBePorted: model.toBePorted,\r\n            portingTime: model.portingTime,\r\n\r\n            mnp: {\r\n                networkKey: mnp ? mnp.network : '',\r\n                providerKey: mnp ? mnp.provider : '',\r\n            },\r\n\r\n            consent: model.consent\r\n        };\r\n\r\n        Global.hub.send(JSON.stringify(portingModel), ERequestType.belatedPortation, () => { });\r\n    }\r\n\r\n    _onDismissProcessPopup = () => {\r\n        this.processPopupState = EPopupType.pleaseWait;\r\n        this.setState({ closablePopup: false, processing: false, apiMessage: '' });\r\n    }\r\n}\r\n\r\nexport default BelatedPorting;","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { EBusinessCase } from '../../models/ordering/order';\r\nimport IProduct from '../../models/ordering/product';\r\nimport Global from '../../utils/Global';\r\nimport OrderingHelper from '../../utils/OrderingHelper';\r\n\r\nexport interface IBrandTariffsListProps {\r\n    brandKey: string;\r\n    products: IProduct[];\r\n    block: IBlockConfiguration;\r\n    onClick: any;\r\n    style?: string;\r\n    styleContainer?: string;\r\n};\r\n\r\nexport interface IBrandTariffsListState {\r\n    selected: string;\r\n};\r\n\r\nexport class BrandTariffsList extends React.Component<IBrandTariffsListProps, IBrandTariffsListState> {\r\n    constructor(props: IBrandTariffsListProps) {\r\n        super(props);\r\n\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.onClickBlister = this.onClickBlister.bind(this);\r\n\r\n        this.state = {\r\n            selected: ''\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        if(!Global.categoryWrapper.availableBrands || Global.categoryWrapper.availableBrands.length == 0) {\r\n            return <></>\r\n        };\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: this.props.block.title,\r\n            transparent: true,\r\n            styleContainer: this.props.styleContainer,\r\n            action: this.props.block.action\r\n        };\r\n\r\n        let prod: IProduct[] = OrderingHelper.filterProducts(this.props.brandKey,\r\n            this.props.products,\r\n            EBusinessCase.bnt);\r\n\r\n        prod = prod.filter(x => x.sortFocus! !== 0);\r\n\r\n        prod = prod.sort((a, b) => a.sortFocus! - b.sortFocus!);\r\n\r\n        prod = linq.from<IProduct>(prod).take(4).toArray();\r\n\r\n        let thumbs: JSX.Element[] = [];\r\n\r\n        prod.map((i, idx) => {\r\n            let pr = i.monthlyFee.price.toString();\r\n\r\n            let html = <div key={'btl-' + idx} onClick={this.onClickBlister} dangerouslySetInnerHTML={{ __html: i.blister }} />\r\n            thumbs.push(html);\r\n        })\r\n\r\n        let ctrl = (\r\n            <div>\r\n                <BaseBlock config={cfg}>\r\n                    {thumbs}\r\n                </BaseBlock>\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private onClickBlister(e) {\r\n        let dom: any;\r\n        if (e.target) { dom = e.target; } else { dom = e; }\r\n        if (!dom) { return; };\r\n\r\n        if (dom.classList.contains('thumb-blister')) {\r\n            this.onSelect(e.getAttribute('blister-action'));\r\n            return;\r\n        } else {\r\n            this.onClickBlister(dom.parentNode);\r\n        }\r\n    };\r\n\r\n    private onSelect(key: string) {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(key);\r\n        }\r\n    };\r\n\r\n    private onClick(e: any) {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(e);\r\n        }\r\n    };\r\n};\r\n\r\nexport default BrandTariffsList;","import * as React from 'react';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { ELButtonType, OrderDataWrapper } from '../../models';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { IOrderData } from '../../models/ordering/data';\r\nimport { CatKeys } from '../../utils/Defaults';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts, OrderingTexts } from '../../utils/messages';\r\nimport EasyRouter from '../../utils/router';\r\nimport { LButton, LClear } from '../page';\r\nimport { Category, ECategoryStatus } from '../tools/categoryWrapper';\r\nimport BrandTariffList from './brandTariffs';\r\nimport BrandThumb, { EBrandThumbStatus, EBrandThumbType } from './brandThumb';\r\n\r\nexport interface IBrandsListProps {\r\n    block: IBlockConfiguration;\r\n    //brands: IBrand[];\r\n    withTariffs?: boolean;\r\n    selected: string;\r\n    style?: string;\r\n    thumbType: EBrandThumbType;\r\n    thumbSelectable: boolean;\r\n    clickHandler?: any;\r\n    hideProducts?: boolean;\r\n    needSelection?: boolean;\r\n    forceVisible?: boolean;\r\n    crossSelling?: boolean;\r\n    checkAvailabilityProductsUponClick?: boolean;\r\n};\r\n\r\nexport interface IBrandsListState {\r\n    selected?: string;\r\n    changed: boolean;\r\n};\r\n\r\nexport class BrandsList extends React.Component<IBrandsListProps, IBrandsListState> {\r\n    private current: Category | any;\r\n    private onlyOne: boolean;\r\n    private oneClick: boolean = false;\r\n\r\n    constructor(props: IBrandsListProps) {\r\n        super(props);\r\n\r\n        let sel = this.props.selected;\r\n\r\n        this.onlyOne = Global.categoryWrapper.onlyOneBrandAvailable();\r\n\r\n        this.current = Global.categoryWrapper.getSelected();\r\n\r\n        this.state = {\r\n            changed: true,\r\n            selected: Global.categoryWrapper.cat\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IBrandsListProps) {\r\n\r\n        if (!this.oneClick) {\r\n            this.setState({ selected: next.selected });\r\n        } \r\n    };\r\n\r\n    public render() {\r\n        this.current = Global.categoryWrapper.getSelected();\r\n\r\n        if(!this.current) { return <></> }\r\n\r\n        let subtitle: string = '';\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: this.onlyOne ? '' : this.props.block.title,\r\n            transparent: this.props.block.transparent,\r\n            style: this.props.block.style,\r\n            styleContainer: window.location.pathname == '/' ? 'middle' : ''\r\n        };\r\n\r\n        Global.categoryWrapper.reset();\r\n\r\n        let act = <div>\r\n            <LButton text={MainTexts.allTariffs}\r\n                onClick={this.onSelectProduct}\r\n                css=\"fr uc text-h2\"\r\n                type={ELButtonType.linkSimple}\r\n                icon=\"arrow-right\" />\r\n            <LClear />\r\n        </div>;\r\n\r\n        this.current.id === CatKeys.vodafone || this.current.id === CatKeys.fn || this.current.id === CatKeys.tv ? act : act = <></>\r\n\r\n        let cats = this.props.crossSelling ?\r\n            Global.categoryWrapper.getCrossSellingCats()\r\n            :\r\n            Global.categoryWrapper.availableCats;\r\n\r\n        let ctrl = (\r\n            <>\r\n                <BaseBlock config={cfg}>\r\n                    {cats.map((i, idx) =>\r\n                        this.renderThumb(i, idx)\r\n                    )}\r\n                </BaseBlock>\r\n                {this.props.withTariffs && cats.length > 0 ?\r\n                    <BrandTariffList\r\n                        products={Global.categoryWrapper.getCategoryBrandProducts(true)}\r\n                        key=\"xxx\"\r\n                        styleContainer={window.location.pathname == '/' ? 'middle' : ''}\r\n                        brandKey={this.current.id}\r\n                        onClick={this.onSelectProduct}\r\n                        block={{ title: MainTexts.favoriteTariffs, subTitle: subtitle, transparent: true, action: act }}\r\n                    />\r\n                    : null\r\n                }\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderThumb(cat: Category, idx: number): JSX.Element {\r\n        if (\r\n            cat.status != ECategoryStatus.available\r\n            && cat.status != ECategoryStatus.inProcess\r\n            && !this.props.forceVisible) { return <></>; }\r\n\r\n        let sta: EBrandThumbStatus = EBrandThumbStatus.undefined;\r\n\r\n        if (!this.props.thumbSelectable) {\r\n            sta = sta | EBrandThumbStatus.inactive;\r\n        }\r\n        //console.log('selected:' + cat.id + '(' + cat.status + ')=' + this.current.id);\r\n        if (cat.id === this.current.id) {\r\n            sta = sta | EBrandThumbStatus.selected;\r\n        }\r\n\r\n        if (cat.status == ECategoryStatus.inProcess) {\r\n            sta = sta | EBrandThumbStatus.loading;\r\n        }\r\n        //console.log('brand thumb ' + cat.id + ' = ' + cat.status);\r\n        let ctrl = (\r\n            <BrandThumb\r\n                key={'bt-' + idx}\r\n                ckey={'bt-' + idx}\r\n                item={cat}\r\n                status={sta}\r\n                type={this.props.thumbType}\r\n                onClick={(k) => {\r\n                    if (cat.status != ECategoryStatus.available) { return; };\r\n                    this.onSelectCat(k);\r\n                }} />\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private onSelectCat = (key: string) => {\r\n        Global.categoryWrapper.switchCat(key);\r\n\r\n        if (this.props.clickHandler) {\r\n            this.props.clickHandler(key);\r\n        } else {\r\n            this.setState({ changed: true })\r\n        }\r\n    };\r\n\r\n    private onSelectProduct = (key: string) => {\r\n        if (!this.current) { return; };\r\n\r\n        if (!Global.easyApp.checkDefCon()) {\r\n            return;\r\n        };\r\n\r\n        //all tarifs\r\n        if (!key) {\r\n            key = Global.categoryWrapper.getFirstProductInCategory();\r\n        };\r\n\r\n        let order: IOrderData = OrderDataWrapper.createOrder(Global.getUniqueId(), this.current.id,\r\n            Global.categoryWrapper.getBrandByProduct(key),\r\n            key);\r\n\r\n        let processUrl: string = '/ordering/new/tariff/' + order.id;\r\n\r\n        EasyRouter.route({ url: processUrl, title: OrderingTexts.activation + \": \" + OrderingTexts.activationBNTTariff });\r\n    };\r\n};\r\n\r\nexport default BrandsList;","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { EPopupType } from '../../components/dialogs/popup';\r\nimport * as cmp from '../../components/index';\r\nimport { LControl } from '../../components/index';\r\nimport BaseBlock from '../../components/page/block';\r\nimport * as page from '../../components/page/index';\r\nimport { IApiResponse } from '../../interfaces';\r\nimport IAppDefinition from '../../interfaces/app/IAppDefinition';\r\nimport { EControlType, ELButtonType, ERequestType } from '../../models';\r\nimport { UserRole } from '../../models/am/userRole';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport { Roles } from '../../utils/Defaults';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport StorageHelper from '../../utils/storage';\r\n\r\nexport interface BaseStruct {\r\n    id: string,\r\n    text: string;\r\n    value: string;\r\n    selected: boolean;\r\n}\r\n\r\nexport class UserData {\r\n    constructor() {\r\n        this.id = '';\r\n        this.firstname = '';\r\n        this.surname = '';\r\n        this.email = '';\r\n        this.mobilePhone = '';\r\n        this.birthDate = undefined;\r\n        this.voId = '';\r\n        this.portalStatus = '';\r\n\r\n        this.salutationId = 0;\r\n        this.positionId = 0;\r\n        this.newsletterId = 0;\r\n\r\n        this.salutations = [];\r\n        this.roles = [];\r\n        this.positions = [];\r\n        this.newsletters = [];\r\n        this.portalStatuses = [];\r\n    }\r\n\r\n    id: string;\r\n    firstname: string;\r\n    surname: string;\r\n    email: string;\r\n    mobilePhone: string;\r\n    birthDate?: Date;\r\n    voId: string;\r\n    portalStatus: string;\r\n\r\n    salutationId: number;\r\n    positionId: number;\r\n    newsletterId: number;\r\n\r\n    salutations: Array<BaseStruct>;\r\n    roles: Array<UserRole>;\r\n    positions: Array<BaseStruct>;\r\n    newsletters: Array<BaseStruct>;\r\n    portalStatuses: Array<BaseStruct>;\r\n}\r\n\r\nenum UserActivationStatus {\r\n    Unknown,\r\n    Active,\r\n    InActive\r\n}\r\n\r\nexport interface IUserScreenProps {\r\n    contactId: number;\r\n}\r\n\r\nexport interface IUserScreenState {\r\n    contactId: number;\r\n    popupTitle: string;\r\n    processing: boolean;\r\n    closblePopup: boolean;\r\n    apiMessage: string;\r\n    model: UserData;\r\n    cancelRequest: boolean;\r\n    userActivationStatus: UserActivationStatus;\r\n}\r\n\r\nexport class EditUserScreen extends React.Component<IUserScreenProps, IUserScreenState> {\r\n    public static containerId: string = 'editUserScreen';\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n\r\n    readonly globalCfg: IAppDefinition = Global.getConfiguration();\r\n    readonly cfg: IBlockConfiguration = {\r\n        title: MainTexts.edit,\r\n        transparent: false,\r\n        styleContainer: ''\r\n    };\r\n    readonly cfgConfiguration: IBlockConfiguration = {\r\n        title: MainTexts.configuration,\r\n        transparent: false,\r\n        styleContainer: ''\r\n    };\r\n    readonly cfgRoles: IBlockConfiguration = {\r\n        title: MainTexts.roles,\r\n        transparent: false,\r\n        styleContainer: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onDismissProcessPopup = this.onDismissProcessPopup.bind(this);\r\n        this._onChange = this._onChange.bind(this);\r\n        this._onSave = this._onSave.bind(this);\r\n        this.loadUserCallback = this.loadUserCallback.bind(this);\r\n        this.saveUserCallback = this.saveUserCallback.bind(this);\r\n\r\n        this._activateUser = this._activateUser.bind(this);\r\n        this._deactivateUser = this._deactivateUser.bind(this);\r\n        this._reload = this._reload.bind(this);\r\n\r\n        this.state = { contactId: this.props.contactId, processing: true, closblePopup: false, apiMessage: '', popupTitle: '', model: new UserData(), cancelRequest: false, userActivationStatus: UserActivationStatus.Unknown };\r\n\r\n        Global.hub.send(JSON.stringify({ id: this.state.contactId }),\r\n            ERequestType.loadContact,\r\n            undefined);\r\n    }\r\n\r\n    render() {\r\n        const { model } = this.state;\r\n        let user = StorageHelper.getUser();\r\n\r\n        \r\n\r\n     \r\n        let activationDeactivation = <></>;\r\n\r\n        if (Global.checkAccessRoles([Roles.XTND_ShopManager,Roles.XTND_Nutzerverwaltung]) && this.state.contactId !== 0 && model !== undefined) { // we show activate or deactivate button\r\n            if (this.state.userActivationStatus === UserActivationStatus.Active) {\r\n                activationDeactivation = <Col xs={4} md={4} >\r\n                    {/* <page.LButton\r\n                                        text={MainTexts.save}\r\n                                        onClick={this._onSave}\r\n                                        type={ELButtonType.buttonWithIconRight}\r\n                                        css={\"action fr\"}\r\n                                        icon=\"chevron\" /> */}\r\n                    <page.LButton\r\n                        text={MainTexts.deactivate}\r\n                        onClick={() => this._deactivateUser(this.state.contactId)}\r\n                        type={ELButtonType.buttonWithIconRight}\r\n                        css={\"action fr\"} />\r\n                </Col>;\r\n            } else if (this.state.userActivationStatus === UserActivationStatus.InActive) {\r\n                activationDeactivation = <Col xs={4} md={4} >\r\n                    <page.LButton\r\n                        text={MainTexts.activate}\r\n                        onClick={() => this._activateUser(this.state.contactId)}\r\n                        type={ELButtonType.buttonWithIconRight}\r\n                        css={\"action fr\"} />\r\n                </Col>;\r\n            }\r\n        }\r\n\r\n        return <div id={EditUserScreen.containerId}>\r\n            <page.Inner1C>\r\n                <div>\r\n                    <cmp.Popup\r\n                        type={this.processPopupState}\r\n                        visible={this.state.processing || this.state.closblePopup}\r\n                        closable={this.state.closblePopup}\r\n                        id=\"wait\"\r\n                        title={this.state.popupTitle}\r\n                        height={200}\r\n                        onDismiss={this.onDismissProcessPopup}>\r\n                        <cmp.PopupBody>\r\n                            <div>{this.state.apiMessage}</div>\r\n                            <></>\r\n                        </cmp.PopupBody>\r\n                        <></>\r\n                    </cmp.Popup>\r\n                    <BaseBlock config={this.cfg}>\r\n                        <Container className=\"container-action\">\r\n                            <Row>\r\n                                <Col xs={6} md={6}>\r\n                                    <LControl type={EControlType.dropdown}\r\n                                        value={model.salutationId}\r\n                                        onChange={this._onChange}\r\n                                        id='salutationId'\r\n                                        name='salutationId'\r\n                                        title={MainTexts.salutation}\r\n                                        options={this.structToKeyTexts(model.salutations)} />\r\n                                </Col>\r\n                                <Col xs={6} md={6}>\r\n                                    <LControl type={EControlType.text}\r\n                                        value={model.email}\r\n                                        onChange={this._onChange}\r\n                                        id='email'\r\n                                        name='email'\r\n                                        title={MainTexts.email} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={6} md={6}>\r\n                                    <LControl type={EControlType.text}\r\n                                        value={model.firstname}\r\n                                        onChange={this._onChange}\r\n                                        id='firstname'\r\n                                        name='firstname'\r\n                                        title={MainTexts.firstname} />\r\n                                </Col>\r\n                                <Col xs={6} md={6}>\r\n                                    <LControl type={EControlType.text}\r\n                                        value={model.mobilePhone}\r\n                                        onChange={this._onChange}\r\n                                        id='mobilePhone'\r\n                                        name='mobilePhone'\r\n                                        title={MainTexts.mobilePhoneNumber} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={6} md={6}>\r\n                                    <LControl type={EControlType.text}\r\n                                        value={model.surname}\r\n                                        onChange={this._onChange}\r\n                                        id='surname'\r\n                                        name='surname'\r\n                                        title={MainTexts.surname} />\r\n                                </Col>\r\n                                <Col xs={6} md={6}>\r\n                                    <page.LDate onChange={this._onChange}\r\n                                        datePicker={false}\r\n                                        value={model.birthDate}\r\n                                        name=\"birthDate\" id=\"birthDate\" title={MainTexts.dateOfBirth} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </BaseBlock>\r\n\r\n                    <BaseBlock config={this.cfgConfiguration}>\r\n                        <Container className=\"container-action\">\r\n                            <Row>\r\n                                <Col xs={6} md={6}>\r\n                                    <LControl type={EControlType.text}\r\n                                        value={model.voId}\r\n                                        id='void'\r\n                                        title={'VOID'}\r\n                                        preview={true} />\r\n                                </Col>\r\n                                <Col xs={6} md={6}>\r\n                                    <LControl type={EControlType.dropdown}\r\n                                        value={model.positionId}\r\n                                        onChange={this._onChange}\r\n                                        id='positionId'\r\n                                        name='positionId'\r\n                                        title='Position'\r\n                                        options={this.structToKeyTexts(model.positions)} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={6} md={6}>\r\n                                    <LControl type={EControlType.text}\r\n                                        value={model.portalStatus}\r\n                                        id='portalStatus'\r\n                                        name='portalStatus'\r\n                                        title='Portal Status'\r\n                                        preview={true} />\r\n                                </Col>\r\n                                <Col xs={6} md={6}>\r\n                                    <LControl type={EControlType.dropdown}\r\n                                        value={model.newsletterId}\r\n                                        onChange={this._onChange}\r\n                                        id='newsletterId'\r\n                                        name='newsletterId'\r\n                                        title='Newsletter'\r\n                                        options={this.structToKeyTexts(model.newsletters)} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </BaseBlock>\r\n\r\n                    <BaseBlock config={this.cfgRoles}>\r\n                        <Container className=\"container-action\">\r\n                            <Row>\r\n                                <Col xs={12} md={12}>\r\n                                    {model.roles.map((r, i) => {\r\n                                        if (r.isVisible) {\r\n                                            //please do not change\r\n                                            if (r.name === Roles.Stornofreigabe && user && user.accountLevel === 2) {\r\n                                                return <></>;\r\n                                            } else {\r\n\r\n                                                return <LControl type={EControlType.checkbox}\r\n                                                    value={r.id}\r\n                                                    checked={r.selected ? true : false}\r\n                                                    onChange={this._onChange}\r\n                                                    id={'roles-' + i}\r\n                                                    name={'roles[' + i + '].selected'}\r\n                                                    key={'roles-' + i}\r\n                                                    disabled={!r.isSelectable}\r\n                                                    label={r.text} />;\r\n                                            }\r\n                                        }\r\n                                    })}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={4} md={4} >\r\n                                    <page.LButton\r\n                                        text={MainTexts.cancel}\r\n                                        onClick={() => window.location.href = '/am/administration'}\r\n                                        type={ELButtonType.linkSimple}\r\n                                        css={\"fl\"}\r\n                                        icon=\"chevron\" />\r\n                                </Col>\r\n                                {activationDeactivation}\r\n                                <Col xs={4} md={4} >\r\n                                    <page.LButton\r\n                                        text={MainTexts.save}\r\n                                        onClick={this._onSave}\r\n                                        type={ELButtonType.buttonWithIconRight}\r\n                                        css={\"action fr\"} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </BaseBlock>\r\n                </div>\r\n            </page.Inner1C>\r\n        </div>;\r\n    }\r\n\r\n    loadUserCallback(api: IApiResponse) {\r\n        let model = api.data.data as UserData;\r\n\r\n        let actStatus = UserActivationStatus.Unknown;\r\n\r\n        if (model.portalStatus === 'Active') {\r\n            actStatus = UserActivationStatus.Active;\r\n        } else if (model.portalStatus === 'Inactive') {\r\n            actStatus = UserActivationStatus.InActive;\r\n        }\r\n\r\n        this.setState({ model, processing: false, userActivationStatus: actStatus });\r\n    }\r\n    saveUserCallback(api: IApiResponse) {\r\n        if (!this.state.cancelRequest) {\r\n            this.processPopupState = EPopupType.info;\r\n\r\n            if (api.error) {\r\n                // this.showPopup(EPopupType.info, MainTexts.textError, api.error.message, false);\r\n                this.setState({\r\n                    apiMessage: api.error.message,\r\n                    closblePopup: true,\r\n                    processing: false,\r\n                    popupTitle: MainTexts.textError,\r\n                    userActivationStatus: UserActivationStatus.Unknown\r\n                });\r\n            } else {\r\n                const cntId = api.data.data;\r\n\r\n                this._reload(cntId);\r\n            }\r\n        }\r\n    }\r\n\r\n    activateUserCallback(api: IApiResponse) {\r\n        this._reload(this.state.contactId);\r\n    }\r\n    deactivateUserCallback(api: IApiResponse) {\r\n        this._reload(this.state.contactId);\r\n    }\r\n\r\n    _activateUser = (contactId: number) => {\r\n        this.setState({\r\n            processing: true, closblePopup: false\r\n        });\r\n\r\n        Global.hub.send(JSON.stringify({ id: this.state.contactId }),\r\n            ERequestType.activateUser,\r\n            undefined);\r\n    }\r\n    _deactivateUser = (contactId: number) => {\r\n        this.setState({\r\n            processing: true, closblePopup: false\r\n        });\r\n\r\n        Global.hub.send(JSON.stringify({ id: this.state.contactId }),\r\n            ERequestType.deactivateUser,\r\n            undefined);\r\n    }\r\n\r\n    _reload = (contactId: number) => {\r\n        // after save reload so we can obtain the portal status of the user\r\n        this.setState({\r\n            contactId: contactId, processing: true, closblePopup: false, apiMessage: '', popupTitle: '', model: new UserData(), cancelRequest: false, userActivationStatus: UserActivationStatus.Unknown\r\n        });\r\n\r\n        Global.hub.send(JSON.stringify({ id: contactId }),\r\n            ERequestType.loadContact,\r\n            undefined);\r\n    }\r\n\r\n    private _onChange(e: IControlValue) {\r\n\r\n        let model = this.state.model;\r\n\r\n        let path = e.name;\r\n\r\n        if (path && path[0] !== '[') {\r\n            path = '.' + path;\r\n        }\r\n\r\n        let val = e.value;\r\n\r\n        if (e.type === EControlType.date) {\r\n            val = e.dateValue;\r\n        } else if (e.type === EControlType.checkbox) {\r\n            val = e.checked;\r\n        }\r\n\r\n        eval(\"model\" + path + '=val');\r\n\r\n        this.setState({ model });\r\n    }\r\n\r\n    private structToKeyTexts(struct: BaseStruct[]) {\r\n        return linq.from<BaseStruct>(struct)\r\n            .select((x, i) => {\r\n                return { key: x.id, text: x.text };\r\n            })\r\n            .toArray();\r\n    }\r\n\r\n    private onDismissProcessPopup() {\r\n        this.processPopupState = EPopupType.pleaseWait\r\n        this.setState({ processing: false, closblePopup: false, cancelRequest: true, apiMessage: '', popupTitle: '' });\r\n    }\r\n\r\n    private _onSave() {\r\n        const { model } = this.state;\r\n\r\n        this.setState({ processing: true, closblePopup: true, cancelRequest: false });\r\n\r\n        model.firstname = model.firstname.trim();\r\n        model.surname = model.surname.trim();\r\n\r\n        Global.hub.send(JSON.stringify(model),\r\n            ERequestType.saveContact,\r\n            undefined);\r\n    }\r\n}","export enum EAppTheme {\r\n    light = 0,\r\n    dark = 1\r\n};\r\n\r\nexport interface IAppSettings {\r\n    expanded: boolean;\r\n    theme: EAppTheme;\r\n};","import linq from 'linq';\r\nimport { IApiResponse, IApiStep, ISocketPushModel } from \"../interfaces\";\r\nimport { EAppTheme, IAppSettings } from '../interfaces/app/IAppSettings';\r\nimport { Address, ERequestStatus, ERequestType, IActivation, IDefCon, OrderDataWrapper } from \"../models\";\r\nimport { IUser } from '../models/environment/user';\r\nimport Availability, { AvailabilityProduct, EElementType, IAvailabilityBrand, PriceWrapper } from \"../models/ordering/availability\";\r\nimport { IBrand } from '../models/ordering/brand';\r\nimport { ICustomer } from \"../models/ordering/customer\";\r\nimport { IOrderData, IOrderProductViewModel } from \"../models/ordering/data\";\r\nimport IProduct from '../models/ordering/product';\r\nimport IService from '../models/ordering/service';\r\nimport ISub from '../models/ordering/sub';\r\nimport { CombiWrapper, ISupportWrapper } from '../models/support/ISupportWrapper';\r\nimport { TreeItem } from \"../models/support/tree\";\r\nimport { BrandKeys, CatKeys, StorageKeys } from \"./Defaults\";\r\nimport Global from \"./Global\";\r\n\r\nexport class StorageHelper {\r\n    public static user?: IUser;\r\n\r\n    public static getOrders(): IOrderData[] {\r\n        let data = sessionStorage.getItem(StorageKeys.keyOrders);\r\n        let items: IOrderData[] = [];\r\n        if (data != null) {\r\n            items = JSON.parse(data);\r\n        } else {\r\n            items = [];\r\n            StorageHelper.set(StorageKeys.keyOrders, items);\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    public static updateActivation(act: IActivation) {\r\n        let order = StorageHelper.getOrder(act.processId);\r\n\r\n        var st = linq.from<IActivation>(order.activations)\r\n            .where(x => x.id == act.id)\r\n            .firstOrDefault();\r\n\r\n        if (st) {\r\n            order.activations[order.activations.indexOf(st)] = act;\r\n\r\n        } else {\r\n            order.activations.push(act);\r\n        };\r\n\r\n        StorageHelper.addOrder(order);\r\n    };\r\n\r\n    public static updateCustomer(processId: string, cust: ICustomer) {\r\n        console.log('update c', cust);\r\n        let order = StorageHelper.getOrder(processId);\r\n\r\n        order.customer = cust;\r\n\r\n\r\n        StorageHelper.addOrder(order);\r\n\r\n    };\r\n\r\n    public static getCustomer(processId: string): ICustomer {\r\n        let order = StorageHelper.getOrder(processId);\r\n\r\n        return order.customer;\r\n    };\r\n\r\n    public static resetStep(act: IActivation, type: ERequestType, status: ERequestStatus) {\r\n        let step = linq.from<IApiStep>(act.processStatus.steps)\r\n            .where(x => x.type == type)\r\n            .firstOrDefault();\r\n        if (step) {\r\n            step.status = status;\r\n            step.message = '';\r\n            StorageHelper.updateActivation(act);\r\n        }\r\n    };\r\n\r\n    public static getOrder(id: string): IOrderData {\r\n        let orders: IOrderData[] = StorageHelper.getOrders();\r\n        let order = linq.from<IOrderData>(orders)\r\n            .where(x => x.id.toLowerCase() == id.toLowerCase())\r\n            .firstOrDefault();\r\n\r\n        //todo remove in prod\r\n        //   if(!order) {\r\n        //       order = OrderDataWrapper.createOrder(\"undefined Process\", BrandKeys.vodafone, 'SM2S');\r\n        // };\r\n\r\n        if(!order) {\r\n            //window.location.href = '/error/404';\r\n            return OrderDataWrapper.createOrder(\"undefined Process\", CatKeys.vodafone, BrandKeys.vodafone, 'SM2S');;\r\n        };\r\n\r\n        OrderDataWrapper.ensure(order);\r\n\r\n        return order;\r\n    };\r\n\r\n    public static removeOther(id: string) {\r\n        //console.log('removeOther' + id);\r\n\r\n        let o: IOrderData[] = [];\r\n\r\n        o.push(StorageHelper.getOrder(id));\r\n\r\n        StorageHelper.set(StorageKeys.keyOrders, o);\r\n    };\r\n\r\n    public static getParentOfProcess(id: string): IOrderData {\r\n        let orders: IOrderData[] = StorageHelper.getOrders();\r\n        let order = linq.from<IOrderData>(orders)\r\n            .where(x => x.id == id)\r\n            .first();\r\n\r\n        return StorageHelper.getOrder(order.parentId ? order.parentId : '');\r\n    };\r\n\r\n    public static toActivation(a: IActivation): IActivation {\r\n        let newOne: IActivation = Object.assign(new IActivation(a.brandKey), a);\r\n        return newOne;\r\n    };\r\n\r\n    public static addOrder(order: IOrderData, callback?: any) {\r\n        if (!order['Id'] && !order.id) { return; }\r\n\r\n        if (order['Id']) { order.id = order['Id']; }\r\n\r\n        let ord = StorageHelper.getOrders();\r\n        let found = linq.from<IOrderData>(ord)\r\n            .where(x => x.id == order.id)\r\n            .firstOrDefault();\r\n\r\n        //services should be an array\r\n        order.activations.map((i, idx) => {\r\n            if (!i.selection) {\r\n                i.selection = new TreeItem('root');\r\n                if (order.customer.contracts && !order.isCrossSelling) {\r\n                    i.catKey = i.brandKey == BrandKeys.vodafone ? CatKeys.vodafone :\r\n                        i.brandKey == BrandKeys.otelo ? CatKeys.otelo : CatKeys.fn;\r\n                    i.selection.add(order.customer.contracts![0].bookedProduct!.id);\r\n                } else {\r\n                    let bpm = Global.categoryWrapper.getCategoryBrandMapByProduct(i.productId);\r\n                    i.catKey = bpm.catKey;\r\n                    i.brandKey = i.brandKey;\r\n                    i.selection.add(i.productId);\r\n                }\r\n            };\r\n\r\n            if (!i.catKey) {\r\n                i.catKey = Global.categoryWrapper.getCategoryKeyByProduct(i.selection.children[0].id)\r\n            };\r\n\r\n            if (!i.services) {\r\n                i.services = [];\r\n            };\r\n\r\n            if (!i.servicesRemove) {\r\n                i.servicesRemove = [];\r\n            };\r\n        });\r\n\r\n        //catkey is not stored in BE so get it\r\n        if (!order.currentCat && order.activations.length > 0) {\r\n            order.currentCat = order.activations[0].catKey;\r\n        };\r\n        if (!order.currentBrand && order.activations.length > 0) {\r\n            order.currentBrand = order.activations[0].brandKey;\r\n        };\r\n\r\n        if (found) {\r\n            let idx = ord.indexOf(found);\r\n            \r\n            ord[idx] = order;\r\n        } else {\r\n            ord.push(order);\r\n        }\r\n\r\n        StorageHelper.set(StorageKeys.keyOrders, ord);\r\n\r\n        if (callback) {\r\n            callback();\r\n        };\r\n    };\r\n\r\n    public static addOrderProducts(order: IOrderProductViewModel) {\r\n\r\n        StorageHelper.set(StorageKeys.keyOrdersProducts, order);\r\n    };\r\n\r\n    public static resetAvailability(adr: Address | undefined,\r\n        targetStatus: ERequestStatus) {\r\n        let avl = StorageHelper.getAvailability();\r\n        avl.brands = [\r\n            { id: BrandKeys.kabel, key: BrandKeys.kabel, products: [], data: '' },\r\n            { id: BrandKeys.dsl, key: BrandKeys.dsl, products: [], data: '' },\r\n        ];\r\n\r\n        avl.id = Global.getUniqueId();\r\n        avl.executed = targetStatus;\r\n        if (adr) {\r\n            avl.address = adr;\r\n        }\r\n\r\n        StorageHelper.set(StorageKeys.keyAvailability, avl);\r\n\r\n        return avl;\r\n    };\r\n\r\n    public static parseAvailability(sock: ISocketPushModel) {\r\n        let api: IApiResponse = JSON.parse(sock.data);\r\n\r\n        let inner = api.data;\r\n\r\n        if (api.error != null) {\r\n            return;\r\n        };\r\n\r\n        if (inner == null) {\r\n            return;\r\n        };\r\n\r\n        try {\r\n            let step: IApiStep = inner.steps[0];// ActivationApi.processStep(api, state);\r\n\r\n            if (step.status == ERequestStatus.done || step.status == ERequestStatus.tempResult) {\r\n                let avl: Availability = JSON.parse(step.message);\r\n                let avlStore = StorageHelper.getAvailability();\r\n\r\n                avl.brands.map((i) => {\r\n                    //todo: in separated availability the request is delivered as allbrands id\r\n                    avl.id = i.id || '';\r\n                    let data = JSON.parse(i.data);\r\n                    if (data && data.products) {\r\n                        i.products = JSON.parse(i.data).products\r\n                    }\r\n                });\r\n\r\n                avl.executed = step.status; // == ERequestStatus.done;\r\n                avl.address = avlStore.address;\r\n\r\n                StorageHelper.set(StorageKeys.keyAvailability, avl);\r\n            } else if (step.status === ERequestStatus.corrected) {\r\n\r\n            } else if (step.status === ERequestStatus.failed || step.status === ERequestStatus.invalid) {\r\n\r\n            };\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    public static addOrderAndReset(order: IOrderData) {\r\n        StorageHelper.resetOrders();\r\n        StorageHelper.addOrder(order);\r\n    };\r\n\r\n    public static removeOrder(id: string, callback: any) {\r\n        let ord = StorageHelper.getOrders();\r\n        let other = linq.from<IOrderData>(ord)\r\n            .where(x => x.id != id)\r\n            .toArray();\r\n\r\n        StorageHelper.set(StorageKeys.keyOrders, other);\r\n\r\n        if (callback) {\r\n            callback();\r\n        };\r\n    };\r\n\r\n    public static cleanAndPreserve(id: string) {\r\n        let ord = StorageHelper.getOrders();\r\n        let cur = linq.from<IOrderData>(ord)\r\n            .where(x => x.id === id)\r\n            .toArray();\r\n\r\n        StorageHelper.set(StorageKeys.keyOrders, cur);\r\n    };\r\n\r\n    public static resetOrders() {\r\n        let ord: IOrderData[] = [];\r\n        StorageHelper.set(StorageKeys.keyOrders, ord);\r\n    };\r\n\r\n    public static clear() {\r\n        sessionStorage.clear();\r\n        if (StorageHelper.user) {\r\n            StorageHelper.user = undefined;\r\n        };\r\n    };\r\n\r\n    public static set(key: string, model: any) {\r\n        if (key === StorageKeys.keyUser) {\r\n            let cfg = Global.getConfiguration();\r\n            if (cfg.debug) {\r\n                sessionStorage.setItem(key, JSON.stringify(model));\r\n            } else {\r\n                StorageHelper.user = model;\r\n            }\r\n        } else {\r\n            sessionStorage.setItem(key, JSON.stringify(model));\r\n\r\n            if(key == StorageKeys.keyBrands) {\r\n                let avl = StorageHelper.getAvailability();\r\n                StorageHelper.syncAvailabilityPrices(avl);\r\n            };\r\n        }\r\n    };\r\n\r\n    //** some brands have dynamic prices so we need to sync them with the local brands array */\r\n    public static syncAvailabilityPrices(model: any) {\r\n        var data = model as Availability;\r\n        let brands = StorageHelper.getBrands();\r\n        \r\n        if(data && data.brands) {\r\n            data.brands.map((i)=>{\r\n                if(i.products && (i.key == BrandKeys.unity || i.key == BrandKeys.kabel)) {\r\n                    let b = linq.from<IBrand>(brands).where(x=>x.id == i.key).first();\r\n \r\n                    i.products.map((j)=>{ \r\n                        let p = linq.from<IProduct>(b.products).where(x=>x.id == j.productId).firstOrDefault();\r\n                        if(p) {\r\n                            var pw = PriceWrapper.createInstance(p.id, i.key, j, EElementType.product);\r\n                            //console.log('found p: ' + p.id + ' (' + p.name + ') (' + i.key + ')' + pw.getMonthlyFee().price + ' === ' + j.price);\r\n                            p.monthlyFee = pw.getMonthlyFee(); //.price == 0 ? {price: (j.price || 0), unit: Defaults.currencyUnit} : pw.getMonthlyFee();\r\n                        };\r\n\r\n                        /*deactivated for unity*/\r\n                        if(i.key != BrandKeys.unity && j.subs) {\r\n                            j.subs.map((k)=>{\r\n                                let s = linq.from<ISub>(b.subs).where(x=>x.id == k.id).firstOrDefault();\r\n                                if(s) {\r\n                                    //console.log('found s: ' + s.id + ' ' + s.activationFee.price + ' === ' + k.price);\r\n                                    //bundles does not have prices\r\n                                    //s.monthlyFee = {price: (k.price || 0), unit: Defaults.currencyUnit};\r\n                                };\r\n\r\n                                if(k.options) {\r\n                                    k.options.map((l)=>{\r\n                                        let o = linq.from<IService>(b.services).where(x=>x.id == l.id).firstOrDefault();\r\n                                        if(o) {\r\n                                            var pw = PriceWrapper.createInstance(o.id, i.key, l, EElementType.service);\r\n                                            //console.log('found o: ' + o.id + ' ' + o.activationFee.price + ' === ' + l.price);\r\n                                            o.monthlyFee = pw.getMonthlyFee(); //{price: (l.price || 0), unit: Defaults.currencyUnit}; \r\n                                            o.activationFee = pw.getActivationFee();\r\n                                        };\r\n                                    });\r\n                                };\r\n                            });\r\n                        };\r\n                    });\r\n                };\r\n            });\r\n\r\n            //store direct to preven cycle\r\n            sessionStorage.setItem(StorageKeys.keyBrands, JSON.stringify(brands));\r\n        };\r\n    };\r\n\r\n    public static remove(key: string, model: any) {\r\n        if (key === StorageKeys.keyUser) {\r\n            let cfg = Global.getConfiguration();\r\n            if (cfg.debug) {\r\n                sessionStorage.removeItem(key);\r\n            } else {\r\n                StorageHelper.user = undefined;\r\n            }\r\n        } else {\r\n            sessionStorage.removeItem(key);\r\n        }\r\n    };\r\n\r\n    public static removeOrderAndGotoParent() {\r\n\r\n    };\r\n\r\n    public static getAppSettings(): IAppSettings {\r\n        let tmp = sessionStorage.getItem(StorageKeys.keyApp);\r\n        let set: IAppSettings | undefined = undefined;\r\n        if (!tmp) {\r\n            set = { expanded: false, theme: EAppTheme.light };\r\n            StorageHelper.set(StorageKeys.keyApp, set)\r\n        } else {\r\n            set = JSON.parse(tmp) as IAppSettings;\r\n        };\r\n\r\n        return set;\r\n    };\r\n\r\n    public static getBrands(): IBrand[] {\r\n        let data = sessionStorage.getItem(StorageKeys.keyBrands);\r\n        let items: IBrand[] = [];\r\n        if (data != null) {\r\n            items = JSON.parse(data);\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    public static getCombis(): CombiWrapper {\r\n        let data = sessionStorage.getItem(StorageKeys.keyCombis);\r\n        let cw: CombiWrapper = new CombiWrapper();\r\n        if (data != null) {\r\n            cw.items = JSON.parse(data);\r\n        }\r\n\r\n        return cw;\r\n    };\r\n\r\n    public static getBrand(id: string): IBrand {\r\n        let data = StorageHelper.getBrands();\r\n\r\n        return linq.from<IBrand>(data).where(x => x.id === id).first();\r\n    };\r\n\r\n    public static getDefCon(): IDefCon {\r\n        let sup: IDefCon = new IDefCon();\r\n\r\n        try {\r\n            let data = sessionStorage.getItem(StorageKeys.keyDefCon);\r\n\r\n            if (data != null) {\r\n                sup = JSON.parse(data);\r\n            }\r\n        }\r\n        catch (e) { }\r\n\r\n        sup = Object.assign(new IDefCon(), sup);\r\n\r\n        // sup.brands.map((i)=>{\r\n        //     i.available = true;\r\n        // });\r\n\r\n        // StorageHelper.set(StorageKeys.keyDefCon, sup);\r\n\r\n        return sup;\r\n    };\r\n\r\n    public static oteloOnlyBookable(): boolean {\r\n        let dc = StorageHelper.getDefCon();\r\n\r\n        if (!dc || !dc.brands) {\r\n            return false;\r\n        };\r\n\r\n        let ot = linq.from<IBrand>(dc.brands).where(x => x.id == BrandKeys.otelo && x.available).firstOrDefault();\r\n\r\n        if (!ot) {\r\n            return false;\r\n        } else {\r\n            let cnt = linq.from<IBrand>(dc.brands).where(x => x.available).count();\r\n\r\n            return cnt == 1;\r\n        };\r\n    };\r\n\r\n    public static needAvailability(dc: IDefCon) {\r\n        let avl = linq.from<IBrand>(dc.brands).where(x => x.available).toArray();\r\n\r\n        let dsl = linq.from<IBrand>(avl).where(x => x.id == BrandKeys.dsl).firstOrDefault();\r\n        let cab = linq.from<IBrand>(avl).where(x => x.id == BrandKeys.kabel).firstOrDefault();\r\n\r\n        if (dsl || cab) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    public static getSupport(): ISupportWrapper {\r\n        let data = sessionStorage.getItem(StorageKeys.keySupport);\r\n        let sup: ISupportWrapper = {\r\n            countries: [],\r\n            networks: [],\r\n            fields: [],\r\n            boxes: []\r\n        };\r\n\r\n        if (data != null) {\r\n            sup = JSON.parse(data);\r\n        }\r\n\r\n        return sup;\r\n    };\r\n\r\n    public static getAvailability(): Availability {\r\n        let data = sessionStorage.getItem(StorageKeys.keyAvailability);\r\n        let items: Availability = new Availability();\r\n        if (data != null) {\r\n            items = JSON.parse(data);\r\n\r\n            items = Object.assign(new Availability(), items);\r\n\r\n            items.brands.map((i) => {\r\n                if (i.data) {\r\n                    i.products = JSON.parse(i.data).products;\r\n                };\r\n            });\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    public static updateAvailability(brand: string, avl: IAvailabilityBrand) {\r\n        let data = this.getAvailability();\r\n\r\n        for (let i: number = 0; i < data.brands.length; i++) {\r\n            if (data.brands[i].key == brand) {\r\n                data.brands[i] = avl;\r\n                data.brands[i].key = brand;\r\n                break;\r\n            };\r\n        };\r\n\r\n        StorageHelper.syncAvailabilityPrices(data);\r\n\r\n        this.set(StorageKeys.keyAvailability, data);\r\n    };\r\n\r\n    public static getAvailabilityForBrand(brand: string): IAvailabilityBrand {\r\n        let data = StorageHelper.getAvailability();\r\n\r\n        if (data != null) {\r\n            return linq.from<IAvailabilityBrand | any>(data.brands).where(x => x.key === brand).firstOrDefault();\r\n        }\r\n\r\n        return { key: brand, products: [], data: '' };\r\n    };\r\n\r\n    public static getAvailabilityProduct(brand: string, productId: string): AvailabilityProduct | undefined {\r\n        let data = StorageHelper.getAvailabilityForBrand(brand);\r\n\r\n        if (data != null && data.products != null) {\r\n            var p = linq.from<AvailabilityProduct>(data.products).where(x => x.productId === productId).firstOrDefault();\r\n\r\n            return p;\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n\r\n    public static getUser(): IUser | undefined {\r\n        let cfg = Global.getConfiguration();\r\n        if (cfg.debug) {\r\n            let data = sessionStorage.getItem(StorageKeys.keyUser);\r\n            let items: IUser | undefined;\r\n            if (data != null) {\r\n                items = JSON.parse(data);\r\n            }\r\n\r\n            return items;\r\n        }\r\n\r\n        return StorageHelper.user;\r\n    };\r\n};\r\n\r\nexport default StorageHelper;","import {IBrand} from '../ordering/brand';\r\nimport * as linq from 'linq';\r\nimport { BrandKeys } from '../../utils/Defaults';\r\nimport Global from '../../utils/Global';\r\nimport StorageHelper from '../../utils/storage';\r\n\r\nexport enum EAppState\r\n{\r\n    undefined = 0,\r\n    ok = 1,\r\n    okDb = 2,\r\n    bookingAllowed = 4,\r\n    warningVisible = 8,\r\n    blockScreen = 16\r\n};\r\n\r\nexport class IDefCon {\r\n    state: EAppState = EAppState.ok;\r\n    isAvailable?: boolean;\r\n    brands: IBrand[] = [];\r\n    voidAllowed?: string[];\r\n    notification?: string;\r\n\r\n    canRunAvailability() {\r\n        var cab = linq.from<IBrand>(this.brands).where(x=>x.id == BrandKeys.kabel).firstOrDefault();\r\n        var dsl = linq.from<IBrand>(this.brands).where(x=>x.id == BrandKeys.dsl).firstOrDefault();\r\n        if(\r\n            (!cab || (cab && !cab.available))\r\n            &&\r\n            (!dsl || (dsl && !dsl.available))\r\n         ) {\r\n            return false;\r\n         }\r\n\r\n         return true;\r\n    };\r\n\r\n    canAccess() {\r\n        if(this.state != EAppState.ok && (this.state & EAppState.bookingAllowed) != EAppState.bookingAllowed) {\r\n            let usr = StorageHelper.getUser();\r\n\r\n            if(this.voidAllowed && usr) {\r\n                return this.voidAllowed.indexOf(usr.voId) >= 0;\r\n            };\r\n        };\r\n\r\n        return true;\r\n    };\r\n\r\n    public static ensure(source: IDefCon) : IDefCon {\r\n        return Object.assign(new IDefCon(), source);\r\n    };\r\n};","import Api from './api';\r\nimport Global from './Global';\r\nimport linq from 'linq';\r\nimport * as i from '../interfaces/index';\r\nimport { HttpMethods } from './Defaults';\r\nimport IActivation from '../models/ordering/activation';\r\nimport { ERequestStatus, ERequestType } from '../models/page/diverse';\r\n\r\n\r\nexport class ActivationApi  {\r\n    public static runAction(step: ERequestType, model: any, callback: any) {\r\n        let app = Global.getConfiguration();\r\n        let url = app.apiUrl + 'activation/';\r\n        let m: any = model;\r\n\r\n        if(step === ERequestType.create) {\r\n            url+='create';\r\n        } else if (step === ERequestType.print) {\r\n            url+='print/' + model.id;\r\n            m = undefined;\r\n        } else if (step === ERequestType.status) {\r\n            url+='status/' + model.id;\r\n            m = undefined;\r\n        } else if (step === ERequestType.statusRequest) {\r\n            url+='statusrequest/' + model.id;            \r\n            m = undefined;\r\n        } else if (step === ERequestType.activation) {\r\n            url+='activate/' + model.id;;\r\n            m = undefined;\r\n        } \r\n\r\n        Api.fetch(url, \r\n            m,\r\n            HttpMethods.post,\r\n            (a:i.IApiResponse) => {\r\n                Api.parseResponse(a, (api: i.IApiResponse)=>{\r\n                    if(callback) { callback(api); }\r\n                });                \r\n            });        \r\n    };\r\n\r\n    public static processStep(api: i.IApiResponse, type: ERequestType) : i.IApiStep {\r\n        let result:i.IApiStep = { type: ERequestType.undefined, status: ERequestStatus.failed, message: 'Fehler'};\r\n\r\n        if(api && ! api.error) {\r\n            if(api && !api.error && api.data && api.data.steps) {\r\n                let step:i.IApiStep = linq.from<i.IApiStep | any>(api.data.steps)\r\n                    .where(x=>x.type == type)\r\n                    .firstOrDefault();\r\n                \r\n                    result = step;\r\n            }\r\n        } \r\n        \r\n        if (api && api.error){\r\n            result.message = api.error.message;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    public static getSteps(api: i.IApiResponse) : i.IApiStep[] {\r\n        let result:i.IApiStep = { type: ERequestType.undefined, status: ERequestStatus.failed, message: 'Fehler'};\r\n\r\n        if(api && ! api.error) {\r\n            if(api && !api.error && api.data && api.data.steps) {\r\n                let step:i.IApiStep[] = linq.from<i.IApiStep>(api.data.steps)\r\n                    .toArray();\r\n                \r\n                    return step;\r\n            }\r\n        } \r\n        \r\n        if (api && api.error){\r\n            result.message = api.error.message;\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    public static download(act: IActivation, \r\n        file: string,\r\n        callback: any) {\r\n        let app = Global.getConfiguration();\r\n\r\n        let url = app.apiUrl + 'activation/download/' + act.id + '?file=' + file;\r\n\r\n        window.open(url, \"_blank\");\r\n    };\r\n};\r\n\r\nexport default ActivationApi;","import { EHomeType, EHouseLocation, ELRPosition } from \"./order\";\r\nimport Tel from \"./tel\";\r\n\r\nexport class House {\r\n    public homeType: EHomeType = EHomeType.appartmentHouse;\r\n    public homeLocation: EHouseLocation = EHouseLocation.front;\r\n    public homePosition: ELRPosition = ELRPosition.left;\r\n    public details: string = '';\r\n    public techDetails: string = '';\r\n    //todo: list Values\r\n    public entranceLocation: string = '';\r\n    public appartmentLocation: string = '';\r\n    public floor: string = '';\r\n\r\n    public previousFirstname: string = '';\r\n    public previousSurname: string = '';\r\n\r\n    public tel: Tel = new Tel();\r\n};","export enum ERAPIAction {\r\n    undefined = 0,\r\n    follow = 1,\r\n    login = 2\r\n};\r\n\r\nexport interface IApiAction \r\n{\r\n    type: ERAPIAction;\r\n    url: string;\r\n};\r\n//export default IApiAction;","import LControl from '../../components/page/control';\r\nimport { IActivation, IOrderData } from '../../models';\r\nimport { ICustomer } from '../../models/ordering/customer';\r\nimport { ECreditDebitType, EIDCardType } from '../../models/ordering/order';\r\nimport { EControlType } from '../../models/page/diverse';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport Global from '../Global';\r\nimport StorageHelper from '../storage';\r\n\r\nexport enum EValidationOption {\r\n    undefined = 0,\r\n    required = 1,\r\n    minLength = 2,\r\n    exactLength = 3,\r\n    maxLength = 4,\r\n    notBefore = 5,\r\n    notAfter = 6,\r\n    notEqual = 7,\r\n    email = 8,\r\n    inRange = 9,\r\n    numeric = 10,\r\n    exactValue = 11,\r\n    match = 12,\r\n    password = 13,\r\n    regEx = 14,\r\n    bdayValidation = 15,\r\n    inputRange = 16,\r\n    number = 17,\r\n    oneOf = 18,\r\n    monthRange = 19,\r\n    yearFieldValidity = 20,\r\n    dateMax = 21,\r\n    dateMin = 22,\r\n    nationalityError = 23,\r\n    errorDeliveryDate = 24,\r\n    bdayValidationVeryPrecise = 25,\r\n    alphanumeric = 26,\r\n    alphanumericWithoutGermanChars = 27,\r\n    germanIBAN = 28,\r\n    validateNames = 29,\r\n    leftAndRightTrim = 30,\r\n    validateSurname = 31,\r\n    validateSurnameDSL = 32,\r\n    passwordOutsideCustomerData = 33\r\n\r\n};\r\n\r\nexport interface IValidationOption {\r\n    type: EValidationOption;\r\n    minValue?: number;\r\n    maxValue?: number;\r\n    minLength?: number;\r\n    maxLength?: number;\r\n    targetValue?: any;\r\n    targetMatch?: string;\r\n    targetControl?: string;\r\n    message: string;\r\n    nullable?: boolean;\r\n    source?: any;\r\n    blockInputOnError?: boolean;\r\n};\r\n\r\nexport interface IValidationOptionControl {\r\n    id: string;\r\n    options: ValidationOption[];\r\n};\r\n\r\nexport class ValidationOption {\r\n    public option: IValidationOption;\r\n\r\n    constructor(op: IValidationOption) {\r\n        this.option = op;\r\n    };\r\n\r\n    public isValid(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n\r\n        if (this.option) {\r\n            if (this.option.nullable && !val.value) {\r\n                return '';\r\n            };\r\n\r\n            if (this.option.nullable && !val.value) {\r\n                return '';\r\n            };\r\n\r\n            if (this.option.type === EValidationOption.required) {\r\n                return this.isValidRequired(ctrl);\r\n            } else if (this.option.type === EValidationOption.exactLength) {\r\n                return this.isValidExactLength(ctrl);\r\n            } else if (this.option.type === EValidationOption.maxLength) {\r\n                return this.isValidMaxLength(ctrl);\r\n            } else if (this.option.type === EValidationOption.minLength) {\r\n                return this.isValidMinLength(ctrl);\r\n            } else if (this.option.type === EValidationOption.numeric) {\r\n                return this.isValidNumeric(ctrl);\r\n            } else if (this.option.type === EValidationOption.exactValue) {\r\n                return this.isExactValue(ctrl);\r\n            } else if (this.option.type === EValidationOption.notEqual) {\r\n                return this.isNotEqual(ctrl);\r\n            } else if (this.option.type === EValidationOption.email) {\r\n                return this.isEmail(ctrl);\r\n            } else if (this.option.type === EValidationOption.match) {\r\n                return this.isMatch(ctrl);\r\n            } else if (this.option.type === EValidationOption.password) {\r\n                return this.isPassword(ctrl);\r\n            } else if (this.option.type === EValidationOption.bdayValidation) {\r\n                return this.isDateValid(ctrl);\r\n            } else if (this.option.type === EValidationOption.inputRange) {\r\n                return this.isInputInRange(ctrl);\r\n            } else if (this.option.type === EValidationOption.oneOf) {\r\n                return this.isOneOf(ctrl);\r\n            } else if (this.option.type === EValidationOption.monthRange) {\r\n                return this.isMonthInRange(ctrl);\r\n            } else if (this.option.type === EValidationOption.yearFieldValidity) {\r\n                return this.isYearInRange(ctrl);\r\n            } else if (this.option.type === EValidationOption.dateMax || this.option.type === EValidationOption.dateMin) {\r\n                return this.isDateMinMaxValid(ctrl);\r\n            } else if (this.option.type === EValidationOption.nationalityError) {\r\n                return this.isNationalitySameAsIDcard(ctrl);\r\n            }\r\n            else if (this.option.type === EValidationOption.errorDeliveryDate) {\r\n                return this.deliveryDateValidation(ctrl);\r\n            } else if (this.option.type === EValidationOption.bdayValidationVeryPrecise) {\r\n                return this.validateBdayPrecise(ctrl)\r\n            } else if (this.option.type === EValidationOption.alphanumeric) {\r\n                return this.validateAlphanumeric(ctrl)\r\n            }else if (this.option.type === EValidationOption.alphanumericWithoutGermanChars) {\r\n                return this.validateAlphanumericWithoutGermanChars(ctrl)\r\n            }else if (this.option.type === EValidationOption.germanIBAN) {\r\n                return this.validateGermanIBAN(ctrl)\r\n            }else if (this.option.type === EValidationOption.validateNames) {\r\n                return this.validateNames(ctrl)\r\n            }else if (this.option.type === EValidationOption.leftAndRightTrim) {\r\n                return this.trimWhitespaces(ctrl)\r\n            }else if (this.option.type === EValidationOption.validateSurname) {\r\n                return this.validateSurname(ctrl)\r\n            }else if (this.option.type === EValidationOption.validateSurnameDSL) {\r\n                return this.validateSurnameDSL(ctrl)\r\n            }else if (this.option.type === EValidationOption.passwordOutsideCustomerData) {\r\n                return this.passwordOutsideCustomerData(ctrl)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return '';\r\n    };\r\n\r\n    // ^[^\\s]+(\\s+[^\\s]+)*$\r\n    private isOneOf(ctrl: LControl): string {\r\n\r\n        if (ctrl.props) {\r\n            if (ctrl.props.id) {\r\n                let field = this.option.targetControl ? this.option.targetControl : '---';\r\n                let val = this.option.source ? this.option.source[field] : '';\r\n\r\n                if (this.option.targetValue && this.option.targetValue.indexOf(val.toString()) < 0) {\r\n                    return this.option.message;\r\n                };\r\n            }\r\n        }\r\n        return '';\r\n    };\r\n\r\n    private validateAlphanumeric(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        const regex = new RegExp('^[A-Z][a-zA-Z0-9ÄäÖöÜüß ]*$');\r\n        let m = regex.test(val.value);\r\n\r\n        if (!m) {\r\n            return this.option.message.replace('$0', val.name);\r\n\r\n        };\r\n\r\n        return '';\r\n    };\r\n\r\n    private trimWhitespaces(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        const regex = new RegExp('^[^\\s]+(\\s+[^\\s]+)*$');\r\n        let m = regex.test(val.value);\r\n\r\n        if (!m) {\r\n            return this.option.message.replace('$0', val.name);\r\n\r\n        };\r\n\r\n        return '';\r\n    };\r\n\r\n    private validateNames(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        const regex = new RegExp('^[A-Z][a-zA-ZÄäÖöÜüß -]{1,}/*$');\r\n       \r\n        let m = regex.test(val.value);\r\n\r\n        if (!m) {\r\n            return this.option.message.replace('$0', val.name);\r\n\r\n        };\r\n\r\n        return '';\r\n    };\r\n\r\n    private validateSurname(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        const regex = new RegExp('^[a-zA-ZÄäÖöÜüß -]{2,}/*$');\r\n       \r\n        let m = regex.test(val.value);\r\n\r\n        if (!m) {\r\n            return this.option.message.replace('$0', val.name);\r\n\r\n        };\r\n\r\n        return '';\r\n    };\r\n\r\n    private validateSurnameDSL(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        const regex = new RegExp('^[A-Z][A-Za-zÄäÖöÜüß -]{2,}/*$');\r\n       \r\n        let m = regex.test(val.value);\r\n\r\n        if (!m) {\r\n            return this.option.message.replace('$0', val.name);\r\n\r\n        };\r\n\r\n        return '';\r\n    };\r\n\r\n    private validateGermanIBAN(ctrl: LControl): string{\r\n        let val: IControlValue = ctrl.getValue();\r\n        const regex = new RegExp('^DE\\d{2}\\s?([0-9a-zA-Z]{4}\\s?){4}[0-9a-zA-Z]{2}$');\r\n        let m = regex.test(val.value);\r\n\r\n        if (!m) {\r\n            return this.option.message.replace('$0', val.name);\r\n\r\n        };\r\n\r\n        return '';\r\n    }\r\n\r\n    private validateAlphanumericWithoutGermanChars(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        const regex = new RegExp('^[a-zA-Z0-9]*$');\r\n        let m = regex.test(val.value);\r\n\r\n        if (!m) {\r\n            return this.option.message.replace('$0', val.name);\r\n\r\n        };\r\n\r\n        return '';\r\n    };\r\n\r\n\r\n    private isDateMinMaxValid(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        if (\r\n            ((ctrl.props.type === EControlType.date)\r\n                && (val.value === undefined || val.value === '' || val.value.length === 0))\r\n        ) {\r\n            return this.option.message;\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    private validateBdayPrecise(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        let orders: IOrderData[] = StorageHelper.getOrders();\r\n        let ageNeeded: number = 18;\r\n\r\n          let oteloFound: boolean = false;\r\n\r\n            StorageHelper.getOrders().forEach(or => {\r\n                if (or.currentBrand === \"otelo\") {\r\n                    if (or.activations[0].creditDebitType === ECreditDebitType.prepaid) {\r\n                        oteloFound = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            let minimumAgeNeeded: number = oteloFound ? 16 : 18;\r\n            let maximumAgeNeeded: number = 200;\r\n            let order: IOrderData[] = StorageHelper.getOrders();\r\n            if (order.length !== 0) {\r\n\r\n                order[0].activations.forEach(act => {\r\n                    if (act.brandKey === 'vf') {\r\n                        act.services.forEach(ser => {\r\n                            // if (ser === 'YOUABIAGE') {\r\n                            //    maximumAgeNeeded = 17;\r\n                            //    minimumAgeNeeded = 17;\r\n                            if (ser === 'YOUAGEVAL') {\r\n                                maximumAgeNeeded = 27;\r\n                                minimumAgeNeeded = 18;\r\n                            }\r\n                        })\r\n                    } else if (act.brandKey === 'otelo') {\r\n                        if (act.familyId === 8) {\r\n                            maximumAgeNeeded = 27;\r\n                            minimumAgeNeeded = 18;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n            let age = Global.getAgeFromDate(val.value!);\r\n            \r\n            if (age < minimumAgeNeeded) {\r\n\r\n                return `Das Alter des Kunden darf nicht unter ${minimumAgeNeeded} Jahren liegen.`;\r\n            } else if (age > maximumAgeNeeded) {\r\n                return `Das Alter des Kunden darf nicht über ${maximumAgeNeeded} Jahren liegen.`\r\n            }\r\n            else {\r\n                return '';\r\n            }\r\n    }\r\n\r\n    private deliveryDateValidation(ctrl: LControl) {\r\n        let val: IControlValue = ctrl.getValue();\r\n        let order: IOrderData[] = StorageHelper.getOrders();\r\n        let orderKabel: IOrderData | undefined = order.find(x => x.currentBrand === 'kabel');\r\n        let activation: IActivation | undefined;\r\n        let activationDate: Date;\r\n\r\n        if (orderKabel) {\r\n            activation = orderKabel.activations.find(x => x.brandKey === 'kabel')\r\n        }\r\n\r\n        if (val.value !== undefined && order.length !== 0 && activation !== undefined) {\r\n            activationDate = new Date(activation.activationDate);\r\n\r\n            var howManyMonths = this.monthDiff(activationDate, val.value)\r\n\r\n            if (howManyMonths > 6) {\r\n                return this.option.message;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private monthDiff(d1, d2) {\r\n\r\n        var months;\r\n        months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n        months -= d1.getMonth();\r\n        months += d2.getMonth();\r\n        return months <= 0 ? 0 : months;\r\n    }\r\n\r\n    private isNationalitySameAsIDcard(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        let orders: IOrderData[] = StorageHelper.getOrders();\r\n        let customer: ICustomer;\r\n        if (orders !== undefined) {\r\n            customer = orders[0].customer;\r\n            if (customer.legitimation && customer.legitimation.type == EIDCardType.foreign && customer.nationality && customer.nationality == 'DEU') {\r\n                return this.option.message;\r\n            } else if (customer.legitimation && customer.legitimation.type == EIDCardType.german && customer.nationality && customer.nationality !== 'DEU') {\r\n                return this.option.message;\r\n            }\r\n        }\r\n\r\n\r\n        return '';\r\n    }\r\n\r\n    private isValidRequired(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n\r\n        if (\r\n            ((ctrl.props.type === EControlType.password || ctrl.props.type === EControlType.text || ctrl.props.type === EControlType.dropdown)\r\n                && (!val || !val.value || val.value.toString().trim().length === 0))\r\n        ) {\r\n            return this.option.message;\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    private isValidExactLength(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        if (\r\n            (ctrl.props.type === EControlType.text && (val.value === undefined || val.value.length != this.option.targetValue))\r\n        ) {\r\n            return this.option.message.replace('$0', val.name).replace('$1', (this.option.targetValue ? this.option.targetValue : 0).toString());\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    private isValidMaxLength(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        if (\r\n            (ctrl.props.type === EControlType.text && (val.value === undefined || val.value.length > (this.option.maxLength ? this.option.maxLength : 1)))\r\n        ) {\r\n            return this.option.message.replace('$0', val.name).replace('$1', (this.option.maxLength ? this.option.maxLength : 0).toString());\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    private isValidMinLength(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n\r\n        if (\r\n            (ctrl.props.type === EControlType.text && (val.value === undefined || val.value.length < (this.option.minLength ? this.option.minLength : 1)))\r\n        ) {\r\n            return this.option.message.replace('$0', val.name).replace('$1', (this.option.minLength ? this.option.minLength : 0).toString());\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    private isValidNumeric(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        let regexp = new RegExp('^\\\\d+$');\r\n\r\n        let test = regexp.test(val.value ? val.value : '');\r\n\r\n        if (\r\n            (val.value === undefined || !test)\r\n        ) {\r\n            if (this.option.blockInputOnError) {\r\n                this.blockInput(ctrl);\r\n            };\r\n\r\n            return this.option.message.replace('$0', val.name);\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    private isInputInRange(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n\r\n        const regex = new RegExp('^[0-9].{' + (this.option.minLength ? this.option.minLength - 1 : 0) + ',' + (this.option.maxLength ? this.option.maxLength - 1 : 0) + '}$'); ///^[0-9_@].{4,8}$/gm;\r\n\r\n        let m = regex.test(val.value);\r\n\r\n        if (!m) {\r\n            return this.option.message.replace('$0', val.name);\r\n\r\n        };\r\n\r\n        return '';\r\n    };\r\n\r\n    private isYearInRange(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        let valueToCompare: string = new Date().getFullYear().toString().substring(2, 4);\r\n        if (Number(val.value) >= 20 && Number(val.value) <= 99) {\r\n            return '';\r\n        } else {\r\n            return this.option.message;\r\n        }\r\n    };\r\n\r\n    private blockInput(ctrl: LControl) {\r\n        let val: IControlValue = ctrl.getValue();\r\n\r\n        let svalue: string = val.value ? val.value : '';\r\n\r\n        if (svalue.length > 0) {\r\n            ctrl.setValue(svalue.substring(0, svalue.length - 1));\r\n        }\r\n    };\r\n\r\n    private isMonthInRange(ctrl: LControl) {\r\n        let val: IControlValue = ctrl.getValue();\r\n        const regex = /0[1-9]|1[0-2]/gm;\r\n        let m = regex.exec(val.value);\r\n\r\n        if (m !== null) {\r\n            return '';\r\n        } else {\r\n            return this.option.message;\r\n        }\r\n\r\n    }\r\n\r\n    private isMatch(ctrl: LControl): string {\r\n        //let source = StorageHelper.getOrder\r\n        let val: IControlValue = ctrl.getValue();\r\n\r\n        //let match = Global.getValueByPath(source, this.option.targetMatch ? this.option.targetMatch : '___');\r\n        let match = '';\r\n\r\n        if (this.option.targetValue) {\r\n            match = this.option.targetValue;\r\n        } else if (this.option.targetControl) {\r\n            let ctrl = Global.GetComponent<LControl>(this.option.targetControl);\r\n            if (ctrl) {\r\n                match = ctrl.getValue().value;\r\n            };\r\n        } else {\r\n            match = Global.getValueByPath(this.option.source, this.option.targetMatch ? this.option.targetMatch : '___');\r\n        };\r\n        //console.log('match:' + val.value + '=' + match);\r\n        if (\r\n            (val && match) && (val.value == undefined || (match.toString() != val.value.toString()))\r\n        ) {\r\n            return this.option.message;\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    private isEmail(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        if (\r\n            (!val.value || !re.test(val.value.toLowerCase()))\r\n        ) {\r\n            return this.option.message.replace('$0', val.name);\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    private isPassword(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        var re = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[A-Z])(?!äöüÖÄÜß)[A-Za-z\\d_@.\\/#%&-]{8,10}$/gm;\r\n\r\n        if (\r\n            (!val.value || !re.test(val.value))\r\n        ) {\r\n            return this.option.message.replace('$0', val.name);\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    private passwordOutsideCustomerData(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*?[;,])(?!.*?[äöüÖÄÜß]).{8,30}$/gm;\r\n\r\n        if (\r\n            (!val.value || !re.test(val.value))\r\n        ) {\r\n            return this.option.message.replace('$0', val.name);\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    private isDateValid(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n\r\n        if (val.id === \"bdaydropdownfulldate\") {\r\n            let tempDate: Date = val.value;\r\n\r\n            val.value = ('0' + tempDate.getDate()).slice(-2) + '/'\r\n                + ('0' + (tempDate.getMonth() + 1)).slice(-2) + '/'\r\n                + tempDate.getFullYear();\r\n        }\r\n\r\n        const regex = /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.](19|20)\\d\\d$/gm;\r\n        let m = regex.exec(val.value);\r\n        if (m !== null) {\r\n            var dateParts = val.value.replace(/\\//gm, \".\").split(\".\");\r\n\r\n            // month is 0-based, that's why we need dataParts[1] - 1\r\n            var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n            if (val.id === \"bdaydropdownfulldate\") {\r\n                val.value = dateObject;\r\n            }\r\n\r\n            var dateFromValue = dateObject;\r\n            let oteloFound: boolean = false;\r\n\r\n            StorageHelper.getOrders().forEach(or => {\r\n                if (or.currentBrand === \"otelo\") {\r\n                    if (or.activations[0].creditDebitType === ECreditDebitType.prepaid) {\r\n                        oteloFound = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            let minimumAgeNeeded: number = oteloFound ? 16 : 18;\r\n            let maximumAgeNeeded: number = 200;\r\n            let order: IOrderData[] = StorageHelper.getOrders();\r\n            if (order.length !== 0) {\r\n\r\n                order[0].activations.forEach(act => {\r\n                    if (act.brandKey === 'vf') {\r\n                        act.services.forEach(ser => {\r\n                            // if (ser === 'YOUABIAGE') {\r\n                            //    maximumAgeNeeded = 17;\r\n                            //    minimumAgeNeeded = 17;\r\n                            if (ser === 'YOUAGEVAL') {\r\n                                maximumAgeNeeded = 27;\r\n                                minimumAgeNeeded = 18;\r\n                            }\r\n                        })\r\n                    } else if (act.brandKey === 'otelo') {\r\n                        if (act.familyId === 8) {\r\n                            maximumAgeNeeded = 27;\r\n                            minimumAgeNeeded = 18;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n            let age = Global.getAgeFromDate(dateObject);\r\n\r\n            if (age < minimumAgeNeeded) {\r\n\r\n                return `Das Alter des Kunden darf nicht unter ${minimumAgeNeeded} Jahren liegen.`;\r\n            } else if (age > maximumAgeNeeded) {\r\n                return `Das Alter des Kunden darf nicht über ${maximumAgeNeeded} Jahren liegen.`\r\n            }\r\n            else {\r\n                return '';\r\n            }\r\n\r\n        } else {\r\n            return \"Geben Sie ein gültiges Format ein\";\r\n        }\r\n    };\r\n\r\n    private isExactValue(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n\r\n        if (\r\n            val.value == undefined || (this.option.targetValue != undefined && this.option.targetValue.toString() != val.value.toString())\r\n        ) {\r\n            return this.option.message;\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    private isNotEqual(ctrl: LControl): string {\r\n        let val: IControlValue = ctrl.getValue();\r\n        if (\r\n            (ctrl.props.type === EControlType.dropdown && (!val.value || val.value != this.option.targetValue))\r\n        ) {\r\n            return this.option.message;\r\n        }\r\n\r\n        return '';\r\n    };\r\n};\r\n\r\nexport default ValidationOption;","export class ApiProcess {\r\n    id: string = '';\r\n};\r\n\r\nexport default ApiProcess;","export class InfoItem {\r\n    id: string = '';\r\n    text?: string;\r\n    css?: string;\r\n\r\n    visible?: boolean;\r\n    loading?: boolean;\r\n};\r\n\r\n// export default IInfoItem;","import * as React from 'react';\r\n\r\nexport interface IPopupBodyProps {\r\n    children?: JSX.Element[];\r\n};\r\n\r\nexport class PopupBody extends React.Component<IPopupBodyProps, any> {\r\n    constructor(props: IPopupBodyProps) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        let ctrl:JSX.Element =\r\n        (\r\n        <div>\r\n            {this.props.children}\r\n        </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default PopupBody;","import * as React from 'react';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport * as page from '../../page/index';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport { ProcessNewScreen } from '../../../screens/insex';\r\nimport { IControlValue } from '../../../models/page/interfaces';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { MainTexts } from '../../../utils/messages';\r\n\r\nexport interface ICustomerConsentProps {\r\n    //parent: ProcessNewScreen;\r\n    customer: ICustomer;\r\n    parentRefresh: any;\r\n    //onChange: any;\r\n};\r\n\r\nexport interface ICustomerConsentState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class CustomerConsent extends React.Component<ICustomerConsentProps, ICustomerConsentState> {\r\n    public static containerId: string = 'customerConsentContainer';\r\n    constructor(props: ICustomerConsentProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            id: CustomerConsent.containerId,\r\n            title: MainTexts.letterOfAceptance,\r\n            transparent: false\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={1} md={1} className=\"np\">\r\n                            <page.LControl type={EControlType.checkbox} onChange={(v:IControlValue)=>{\r\n                                this.props.customer.bew!.consent = v.checked ? v.checked : false;\r\n                                if(this.props.parentRefresh) {\r\n                                    this.props.parentRefresh();\r\n                                };\r\n                                //StorageHelper.addOrder(this.props.parent.data);\r\n                                //this.props.parent.refresh();\r\n                            }} name=\"consent\" id=\"consent_true\" \r\n                            hideTitle={true} label=\"\" \r\n                            checked={this.props.customer.bew ? this.props.customer.bew.consent : false}/>\r\n                        </Col>\r\n                        <Col xs={11} md={11} className=\"npr\">\r\n                            <page.LControl type={EControlType.hint} label=\"Bestandteil des Vertrages sind die Allgemeinen Geschäftsbedingungen der Vodafone GmbH sowie die Preisliste für otelo Mobilfunkdienstleistungen. <br/><br/>Vodafone Kabel Deutschland/Vodafone tauscht Ihre personenbezogenen Daten zur Durchführung von Bonitätsprüfungen („Bonitätsdaten“) vor Auftragsannahme mit der Schufa GmbH sowie mit sonstigen Auskunfteien gem. Ziff. 7 der Datenschutz-Hinweise aus.\"/>\r\n                        </Col>                        \r\n                    </Row>\r\n\r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };    \r\n};\r\n\r\nexport default CustomerConsent;","import * as React from 'react';\r\nimport '../../../screens/test/ProgressBar.tsx';\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { LControl } from '../..';\r\nimport { MainTexts, OrderingTexts, OrderStages, ActivationMessages, ValidationMessages } from '../../../utils/messages';\r\nimport BaseBlock from '../../page/block';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { EControlType, ELButtonType, ICancellation, ERequestType, ERequestStatus } from '../../../models';\r\nimport * as page from '../../page/index';\r\n\r\nimport Global from '../../../utils/Global';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { ActivationProgress } from '../../ordering/process';\r\nimport { EOrderProcessView } from '../../../models/ordering/order';\r\nimport { CustomerScreen } from '../../../screens/insex';\r\nimport { IControlValue, IKeyText, IKeyTextNumber } from '../../../models/page/interfaces';\r\nimport { IPopupConfig, EPopupType } from '../../dialogs/popup';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport { EPreviewState } from '../../ordering/preview/contract';\r\nimport { IProcessStatus, IApiStep, IApiSummary } from '../../../interfaces';\r\nimport * as linq from 'linq';\r\nimport { IContract } from '../../../models/existing/contract';\r\nimport Api from '../../../utils/api';\r\nimport ActivationApi from '../../../utils/apiActivation';\r\nimport { ECancellationType, EValueType } from '../../../models/page/diverse';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport IUser from '../../../models/environment/user';\r\n\r\nexport interface ICancellationProps {\r\n    onChange: any;\r\n    parent: CustomerScreen;\r\n};\r\n\r\nexport interface ICancellationState {\r\n    changed: boolean;\r\n    progress: EOrderProcessView;\r\n};\r\n\r\n//Ihre ausserordentliche Stornierung wird an den Vertrieb zu prüfung weitergeleitet. Den aktuellen Status können sie jederzeit über den otelo-EASY Auftragsmanger abrufen.\r\n\r\nexport class Cancellation extends React.Component<ICancellationProps, ICancellationState> {\r\n    private cancel: ICancellation= new ICancellation();\r\n    private readonly: boolean = false;\r\n    private viewState: EPreviewState = EPreviewState.undefined;\r\n    private processStatus:IProcessStatus = {steps: []};\r\n    private contract:IContract;\r\n    private printedDocument: string = '';\r\n    private printed: boolean = false;\r\n    private user?:IUser;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n           changed: false,\r\n           progress: EOrderProcessView.cancellation\r\n        };\r\n\r\n        this.user = StorageHelper.getUser();\r\n\r\n        this.contract = this.props.parent.data.customer.contracts?this.props.parent.data.customer.contracts[0] : {};\r\n\r\n        if(this.contract.cancel) {\r\n            this.cancel = this.contract.cancel;\r\n        };\r\n\r\n        this.cancel.cancellationTypeId = 7;\r\n        this.cancel.cancellationSpecialTypeId = 1;\r\n        this.cancel.reasonId = 1;\r\n        this.cancel.provisionRenounce = false; \r\n        this.cancel.employeeName = this.user ?  this.user.firstname + ' ' + this.user.surname : '';\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    };\r\n\r\n    public render() {\r\n        this.parseStatus();\r\n\r\n        let a: JSX.Element = <>\r\n            <page.LButton type={ELButtonType.linkSimple}\r\n                text={MainTexts.backToCustomerDataSheet}\r\n                css=\"action3 fr\"\r\n                onClick={() => {\r\n                    this.props.parent.onBackToCustomer(true);\r\n                }} />\r\n        </>;\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.cancellation,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: '',\r\n            collapsible: false,\r\n            collapsed: false,\r\n            action: a\r\n        };\r\n\r\n        let title: JSX.Element = <h3>{OrderingTexts.cancellation}</h3>;\r\n\r\n        let cancelProgress: JSX.Element = \r\n            <ActivationProgress \r\n                progress={this.state.progress} \r\n                states={[OrderStages.cancellation,OrderStages.overview,OrderStages.summary]} />;\r\n\r\n        if(Global.easyApp.head) {\r\n            Global.easyApp.head.setTitle(OrderingTexts.cancellation.toUpperCase());\r\n            Global.easyApp.head.appendSub(cancelProgress);\r\n        }\r\n\r\n        let ctr = <></>;\r\n\r\n        if(this.viewState === EPreviewState.activationDone) {\r\n            let step = linq.from<IApiStep>(this.processStatus.steps).where(x=>x.type === ERequestType.activation).first();\r\n            ctr = (\r\n                <BaseBlock config={cfg}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={12} md={12} >\r\n                                {step.message}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </BaseBlock>\r\n            )\r\n        } else {\r\n            ctr = (\r\n                <BaseBlock config={cfg}>\r\n                        {\r\n                            <Container >\r\n                                <Row>\r\n                                    <Col md={4}>\r\n                                        <page.LControl type={EControlType.dropdown} \r\n                                            value={this.cancel.cancellationTypeId}\r\n                                            onChange={this.onChange} \r\n                                            valueType={EValueType.numberInt}\r\n                                            preview={this.state.progress === EOrderProcessView.overview}\r\n                                            name=\"cancellationTypeId\" id=\"cancellationTypeId\" title={MainTexts.orderType}\r\n                                            options={this.getOrderType(this.contract)} />\r\n                                    </Col>\r\n                                    {\r\n                                        this.cancel.cancellationTypeId == ECancellationType.extraordinary ? \r\n                                        <Col md={6}>\r\n                                            <page.LControl type={EControlType.dropdown} \r\n                                                value={this.cancel.cancellationSpecialTypeId}\r\n                                                onChange={this.onChange} \r\n                                                valueType={EValueType.numberInt}\r\n                                                preview={this.state.progress === EOrderProcessView.overview}\r\n                                                name=\"cancellationSpecialTypeId\" \r\n                                                id=\"cancellationSpecialTypeId\" \r\n                                                title={MainTexts.extraordinaryCancellation}\r\n                                                options={this.getExtraodrinaryCancellation()} />\r\n                                        </Col>                                        \r\n                                        : null\r\n                                    }\r\n                                </Row>\r\n                                \r\n                                <Row>\r\n                                    <Col md={12} className=\"title\">{MainTexts.reasoningPOS}</Col>\r\n                                </Row>\r\n                                \r\n                                <Row>\r\n                                    <Col md={4}>\r\n                                        <page.LControl type={EControlType.dropdown} \r\n                                            value={this.cancel.reasonId}\r\n                                            valueType={EValueType.numberInt}\r\n                                            preview={this.state.progress === EOrderProcessView.overview}\r\n                                            onChange={this.onChange} name=\"reasonId\" id=\"reasonId\" \r\n                                            title={MainTexts.typeOfCancellation}\r\n                                            options={this.getCancellationReasons()} />\r\n                                    </Col>\r\n                                    <Col md={4}></Col>\r\n                                </Row>\r\n                                \r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <LControl hint={\"Mind. 80 und Max. 140 Zeichen\"} \r\n                                            type={EControlType.text} \r\n                                            style=\"merged\"\r\n                                            id=\"reason\"\r\n                                            name=\"reason\"\r\n                                            preview={this.state.progress === EOrderProcessView.overview}\r\n                                            value={this.cancel.reason}\r\n                                            onChange={this.onChange}\r\n                                            label={MainTexts.reason} \r\n                                            validationOptions={ \r\n                                                [\r\n                                                    new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                                    new ValidationOption({type: EValidationOption.minLength, targetValue: 80, message: 'Min 80' }),\r\n                                                    new ValidationOption({type: EValidationOption.maxLength, targetValue: 120, message: 'Max 120' })\r\n                                                ]\r\n                                            }   \r\n                                            />\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                                <Row>\r\n                                    <Col md={12} className=\"title\">{MainTexts.dealerInfo}</Col>\r\n                                </Row>\r\n                                \r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <LControl type={EControlType.text} style=\"merged\" \r\n                                            id=\"employeeName\"\r\n                                            name=\"employeeName\"    \r\n                                            preview={this.state.progress === EOrderProcessView.overview}                                \r\n                                            value={this.cancel.employeeName}\r\n                                            onChange={this.onChange}                                    \r\n                                            label={MainTexts.dealerName} />\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                                {\r\n                                    this.state.progress === EOrderProcessView.overview ? \r\n                                    <Row>\r\n                                        <Col md={12}> \r\n                                            <LControl type={EControlType.checkbox} \r\n                                                style=\"merged tal\" \r\n                                                id=\"provisionRenounce\"\r\n                                                name=\"provisionRenounce\"    \r\n                                                preview={this.state.progress === EOrderProcessView.overview}                                \r\n                                                checked={this.cancel.provisionRenounce}\r\n                                                onChange={this.onChange} \r\n                                                label={'Mit dieser Auftragsstornierung verzichten wir auf unsere Provision für die <br/>ausgewählten Neuaufträge bzw. Vertragsverlängerungen.'} />\r\n                                        </Col>\r\n                                        <Col md={12}> \r\n                                            <div className=\"text-sub\">\r\n                                                <br/><br/>Achtung: Bei Formularausdruck öffnet sich eine neuer Reiter un Ihrem Broeser. Nach dem Ausdruck, müssen Sie den Button \"Absenden\" drücken. Formular vom Kunden unterzeichnet für mögliche Rückfragen durch Vodafone oder Ihren L1 Händelr lokal archivieren.\r\n                                            </div>\r\n                                        </Col>                                    \r\n                                    </Row>\r\n                                    : null\r\n                                }\r\n\r\n                                <Row>\r\n                                    <Col xs={12} md={12} >\r\n                                        {this.renderAction()}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        }\r\n                    </BaseBlock>\r\n            )\r\n        };\r\n\r\n        return ctr;\r\n    };\r\n\r\n    private parseStatus() {\r\n        this.viewState = EPreviewState.requestNeeded;\r\n\r\n        if(this.processStatus.steps && this.processStatus.steps.length > 0) {\r\n            let prStep = linq.from<IApiStep>(this.processStatus.steps).where(x=>x.type === ERequestType.print).first();\r\n            let acStep = linq.from<IApiStep>(this.processStatus.steps).where(x=>x.type === ERequestType.activation).first();\r\n\r\n            if(prStep.status === ERequestStatus.done) {\r\n\r\n                this.viewState = EPreviewState.printNeeded;\r\n                this.printedDocument = prStep.message\r\n            };\r\n\r\n            if(this.printed) {\r\n                this.viewState = EPreviewState.printReady;\r\n            };\r\n\r\n            if(acStep.status === ERequestStatus.done) {\r\n                this.viewState = EPreviewState.activationDone;\r\n            };\r\n        };        \r\n    };\r\n\r\n    private renderAction() : JSX.Element {\r\n        let ctrl:JSX.Element = <></>;\r\n\r\n        if(this.viewState === EPreviewState.activationDone) {\r\n            return ctrl;\r\n        };\r\n\r\n        if(this.state.progress === EOrderProcessView.cancellation) {\r\n            ctrl = <>\r\n                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                    css=\"a1 fr\"\r\n                    id=\"\"\r\n                    text={MainTexts.next}\r\n                    onClick={() => {\r\n                        if(this.props.parent.data.customer.contracts) {\r\n                            this.props.parent.data.customer.contracts[0].cancel = this.cancel;\r\n                            StorageHelper.addOrder(this.props.parent.data);\r\n                        };\r\n\r\n                        let cfg:IPopupConfig = {\r\n                            props: {\r\n                                id: 'dynamicPopup',\r\n                                title: 'Stornoprozess wird vorbereitet',\r\n                                visible: true,\r\n                                closable: false,\r\n                                type: EPopupType.pleaseWait\r\n                            },\r\n                            closeOnDone: true,\r\n                            content: <div>{OrderingTexts.customerData}</div>,\r\n                            callback: (d)=>{\r\n                                this.setState({progress: EOrderProcessView.overview});\r\n                                this.processStatus = d;\r\n                                this.setState({changed: true});\r\n                            }\r\n                        };\r\n\r\n                        this.props.parent.processCustomer(()=>{\r\n                            Global.hub.send(JSON.stringify(this.props.parent.data),\r\n                                ERequestType.createCancellationProcess,\r\n                                undefined);\r\n                        },cfg);\r\n                    }} />        \r\n            </>\r\n        } else if(this.state.progress === EOrderProcessView.overview) {\r\n            ctrl = <>\r\n                {\r\n                    this.viewState === EPreviewState.requestNeeded ?\r\n                    <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                        css=\"action3 fr\"\r\n                        id=\"\"\r\n                        text={ActivationMessages.requestContract}\r\n                        onClick={() => {\r\n                            StorageHelper.addOrder(this.props.parent.data);\r\n\r\n                            this.printed = false;\r\n                            let cfg:IPopupConfig = {\r\n                                props: {\r\n                                    id: 'dynamicPopup',\r\n                                    title: 'Ausdruck wird vorbereitet',\r\n                                    visible: true,\r\n                                    closable: false,\r\n                                    type: EPopupType.pleaseWait\r\n                                },\r\n                                callback: (api)=>{ \r\n                                    this.processStatus = api;\r\n                                    this.setState({changed: true});\r\n                                },\r\n                                content: <div>{OrderingTexts.customerData}</div>\r\n                            };\r\n    \r\n                            let t = {\r\n                                innerType: ERequestType.customerSetCancellation,\r\n                                brandKey: this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0].brandKey : '',\r\n                                id: this.props.parent.data.id,\r\n                                orderId: this.props.parent.data.activations[0].id,\r\n                                receiverId: CustomerScreen.containerId\r\n                            };\r\n\r\n                            this.props.parent.processCustomer(()=>{\r\n                                Global.hub.send(JSON.stringify(t),\r\n                                    ERequestType.print,\r\n                                    undefined);\r\n                            },cfg);\r\n                        }} />  \r\n                    : null\r\n                }         \r\n                {\r\n                    this.viewState === EPreviewState.printReady ?\r\n                    <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                        css=\"action3 fr\"\r\n                        id=\"\"\r\n                        text={ActivationMessages.run}\r\n                        onClick={() => {\r\n                            StorageHelper.addOrder(this.props.parent.data);\r\n\r\n                            let cfg:IPopupConfig = {\r\n                                props: {\r\n                                    id: 'dynamicPopup',\r\n                                    title: 'Stornierung wird ausgeführt',\r\n                                    visible: true,\r\n                                    closable: false,\r\n                                    type: EPopupType.pleaseWait\r\n                                },\r\n                                callback: (api)=>{\r\n                                    this.setState({progress: EOrderProcessView.summary});\r\n                                    this.processStatus = api;\r\n                                    this.setState({changed: true});\r\n                                },\r\n                                closeOnDone: true,\r\n                                content: <div>{OrderingTexts.customerData}</div>\r\n                            };\r\n    \r\n                            let t = {\r\n                                innerType: ERequestType.customerSetCancellation,\r\n                                brandKey: this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0].brandKey : '',\r\n                                id: this.props.parent.data.id,\r\n                                orderId: this.props.parent.data.activations[0].id,\r\n                                receiverId: CustomerScreen.containerId\r\n                            };\r\n\r\n                            this.props.parent.processCustomer(()=>{\r\n                                Global.hub.send(JSON.stringify(t),\r\n                                    ERequestType.activation,\r\n                                    undefined);\r\n                            },cfg);\r\n                        }} />  \r\n                    : null\r\n                }                   \r\n                {\r\n                    this.viewState === EPreviewState.printNeeded || this.viewState === EPreviewState.printReady ?\r\n                    <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                        css=\"action3 fr\"\r\n                        id=\"\"\r\n                        text={ActivationMessages.print}\r\n                        onClick={() => {\r\n                            let prStep = linq.from<IApiStep>(this.processStatus.steps).where(x=>x.type === ERequestType.print).first();\r\n                            let doc = JSON.parse(prStep.message);\r\n                            ActivationApi.download(this.props.parent.data.activations[0], '', null);\r\n                            this.viewState = EPreviewState.printReady;\r\n                            this.printed = true;\r\n                            this.setState({changed: true});\r\n                        }} />  \r\n                    : null\r\n                }                                \r\n            </>\r\n        }\r\n\r\n        return ctrl;\r\n    };\r\n \r\n    private onChange(e: IControlValue) {\r\n        Global.setValueByPath(this.cancel, e.name, e.type === EControlType.checkbox ? e.checked : e.value);\r\n        \r\n        if(this.props.parent.data.customer.contracts) {\r\n            this.props.parent.data.customer.contracts[0].cancel = this.cancel;\r\n            StorageHelper.addOrder(this.props.parent.data);\r\n        };        \r\n\r\n        this.setState({changed: true});\r\n    };\r\n\r\n    private getOrderType(contract: IContract): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n\r\n        if(this.user && this.user.accountLevel === 1) {\r\n            if(contract.cancel && contract.cancel.bntCancelable) {\r\n                op.push({ key: 1, text: \"Neuvertrag \" });\r\n            };\r\n            if(contract.cancel && contract.cancel.vvlCancelable) {\r\n                op.push({ key: 2, text: \"VVL\" });\r\n            };        \r\n            if(contract.cancel && contract.cancel.twCancelable) {\r\n                op.push({ key: 3, text: \"TW\" });\r\n            };\r\n        } else {\r\n            if(contract.cancel && contract.cancel.bntCancelable) {\r\n                op.push({ key: 4, text: \"Neuvertrag (Freigabe Level 1 erforderlich)\" });\r\n            };\r\n            if(contract.cancel && contract.cancel.vvlCancelable) {\r\n                op.push({ key: 5, text: \"VVL (Freigabe Level 1 erforderlich)\" });\r\n            };        \r\n            if(contract.cancel && contract.cancel.twCancelable) {\r\n                op.push({ key: 6, text: \"TW (Freigabe Level 1 erforderlich)\" });\r\n            };\r\n        }\r\n\r\n        op.push({ key: 7, text: \"Ausserordenliche Stornierung\" });\r\n        return op;\r\n    };\r\n\r\n    private getExtraodrinaryCancellation(): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n        op.push({ key: 1, text: \"Neuvertrag (NV)\" });\r\n        op.push({ key: 2, text: \"Neuvertrag mit Portierung (NMP)\" });\r\n        op.push({ key: 3, text: \"Tarifwechsel (TW)\" });\r\n        op.push({ key: 4, text: \"Vertragsverlängerung (VVL)\" });\r\n        op.push({ key: 5, text: \"Bitte auswählen\" });\r\n\r\n        return op;\r\n    };\r\n\r\n    private getCancellationReasons(): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n        op.push({ key: 1, text: \"Storno mit Provisionsverzicht\" });\r\n        op.push({ key: 2, text: \"Widerruf mit Provisionsverzicht\" });\r\n        return op;\r\n    };    \r\n};\r\n\r\nexport default Cancellation;","import * as React from 'react';\r\nimport linq from 'linq';\r\nimport { ErrorMessages } from '../../utils/messages';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { LClear } from '../../components';\r\nimport * as page from '../../components/page/index';\r\nimport { IDefCon, ELButtonType } from '../../models';\r\nimport Global from '../../utils/Global';\r\nimport StorageHelper from '../../utils/storage';\r\nimport ReactDOMServer from 'react-dom/server';\r\n\r\nexport interface IErrorScreenData {\r\n    title?: string;\r\n    message?: string;\r\n    code?: number;\r\n    dc?: IDefCon;\r\n    isContent?: boolean;\r\n    content?: any;\r\n};\r\n\r\nexport interface IErrorScreenProps {\r\n    data: IErrorScreenData;\r\n};\r\n\r\nexport interface IErrorScreenState {\r\n};\r\n\r\nexport class ErrorScreen extends React.Component<IErrorScreenProps, IErrorScreenState> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let d = this.prepare();\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: d.isContent? '' : d.title,\r\n            transparent: false\r\n        };\r\n\r\n        let msg:string[] = [];\r\n        \r\n        d.message ? d.message.split('\\n').map((i,idx)=>( msg.push('<p>' + i + '</p>'))) : '';\r\n\r\n        let ctrl = (\r\n            <page.Inner1C>\r\n                <page.Inner2CLeft>\r\n                    <>            \r\n                    <BaseBlock config={cfg}>\r\n                        <div className=\"spacer-big\"/>\r\n                        <Container>\r\n                            <Row>\r\n                                {\r\n                                    d.isContent ? \r\n                                    <Col xs={12} md={12} className=\"tac\">\r\n                                        <div className=\"title\">{d.title}</div>\r\n                                        <br/>\r\n                                        {d.content}\r\n                                    </Col>\r\n                                    :\r\n                                    <Col xs={12} md={12} className=\"np text tac\" dangerouslySetInnerHTML={{__html: msg.join('')}}></Col>\r\n                                }\r\n                            </Row>\r\n                        </Container>\r\n                        <LClear />\r\n                    </BaseBlock>\r\n                    </>\r\n                </page.Inner2CLeft>\r\n                <></>\r\n            </page.Inner1C>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private prepare() : IErrorScreenData {\r\n        let data: IErrorScreenData = this.props.data;\r\n\r\n        if(data.code) {\r\n            if(data.code === 404) {\r\n                data.message = ErrorMessages.message404;\r\n                data.title = ErrorMessages.title404;\r\n            } else if (data.code == 403) {\r\n                data.message = ErrorMessages.message403;\r\n                data.title = ErrorMessages.title403;\r\n            }  else if (data.code == 403.1) {\r\n                let usr = StorageHelper.getUser();\r\n                data.message = ErrorMessages.message4031;\r\n                \r\n                data.isContent = true;\r\n                data.content = <page.LButton type={ELButtonType.buttonWithIconRight} css=\"aicon\" text=\"Zum VB-Tool\" onClick={()=>{\r\n                    window.open('https://bo.vf-easy.de',  \"_blank\");\r\n                }}/>\r\n\r\n                if(usr) {\r\n                    data.title = ErrorMessages.title4031.replace('$user', usr.firstname + ' ' + usr.surname);\r\n                };\r\n            };\r\n        }\r\n\r\n        if(data.dc) {\r\n            data.message = ErrorMessages.message403;\r\n            data.title = ErrorMessages.title403;    \r\n        };\r\n\r\n        return data;\r\n    };\r\n};\r\n\r\nexport default ErrorScreen;","import * as React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport IInnerProps from './IInnerProps';\r\n\r\nexport class Inner1C extends React.Component<IInnerProps, any>{\r\n    constructor(props: IInnerProps){\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        let css : string = \"c1\";\r\n        if(this.props.style) { css += ' ' + this.props.style; };\r\n\r\n        const child = this.props.children instanceof Array ? this.props.children[0] : this.props.children;\r\n\r\n        let ctrl = ( \r\n            <Container className={css} id=\"container-main\">\r\n                {this.props.title ?\r\n                    (\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <h1>{this.props.title}</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    ) : null \r\n                }\r\n                <Row>\r\n                    <Col xs={12} md={12}>\r\n                        {child}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n        return ctrl;\r\n    }\r\n};\r\n\r\nexport default Inner1C;","import * as React from 'react';\r\nimport { Action, PopupBody } from '..';\r\nimport { any } from 'prop-types';\r\nimport GlobalJSX from '../../utils/GlobalJSX';\r\nimport { LButton } from '../page';\r\nimport { ELButtonType } from '../../models/page/diverse';\r\nimport { MainTexts, ErrorMessages } from '../../utils/messages';\r\nimport Global from '../../utils/Global';\r\nimport ReactDOMServer from 'react-dom/server';\r\n\r\nexport interface IPopupProps {\r\n    id: string;\r\n    visible: boolean;\r\n    closable: boolean;\r\n    title?: string;\r\n    style?: string;\r\n    children?: JSX.Element[];\r\n    width?: number | string;\r\n    height?: number | string;\r\n    onDismiss?: any;\r\n    onPositive?: any;\r\n    onNegative?: any;\r\n    type: EPopupType;\r\n\r\n    textPositive?: string;\r\n    textNegative?: string;\r\n};\r\n\r\nexport interface IPopupConfig {\r\n    props: IPopupProps;\r\n    action?: JSX.Element;\r\n    content: JSX.Element;\r\n    callback?: any;\r\n    closeOnDone?: boolean;\r\n};\r\n\r\nexport interface IPopupState {\r\n    visible: boolean;\r\n    closable: boolean;\r\n    type: EPopupType;\r\n\r\n    content?: JSX.Element;\r\n};\r\n\r\nexport enum EPopupType {\r\n    info = 0,\r\n    pleaseWait = 1,\r\n    confirm = 2,\r\n    custom = 3,\r\n    confirmCustom = 4\r\n};\r\n\r\nexport class Popup extends React.Component<IPopupProps, IPopupState> {\r\n    private hasAction: boolean = false;\r\n    private title: string = '';\r\n\r\n    constructor(props: IPopupProps) {\r\n        super(props);\r\n\r\n        this.onDismiss = this.onDismiss.bind(this);\r\n        this.confirmNegative = this.confirmNegative.bind(this);\r\n        this.confirmPositive = this.confirmPositive.bind(this);\r\n        this.clickOverlay = this.clickOverlay.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n\r\n        this.state = {\r\n            visible: this.props.visible,\r\n            type: this.props.type,\r\n            closable: this.props.closable\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IPopupProps) {\r\n        this.setState({ visible: next.visible, closable: next.closable, type: next.type });\r\n    };\r\n\r\n    public render() {\r\n        if (!this.state.visible) { return <></> };\r\n\r\n        let s: string = this.props.id + '-over';\r\n        let cssover: string = 'popup-overlay dn';\r\n        let css: string = 'popup';\r\n        let styles: any = {};\r\n        this.title  = this.props.title ? this.props.title : '';\r\n\r\n        if (this.props.type === EPopupType.confirm && !this.title) {\r\n            this.title = 'Bitte bestätigen';\r\n        } else if (this.props.type === EPopupType.pleaseWait && !this.title) {\r\n            this.title = MainTexts.pleaseWait;\r\n        }\r\n\r\n        if (this.state.visible) {\r\n            cssover = 'popup-overlay';\r\n        }\r\n\r\n        let a = this.renderAction();\r\n        \r\n        if (!this.hasAction) {\r\n            css += ' noact';\r\n        };\r\n\r\n        if (this.props.width) {\r\n            if (typeof this.props.height === \"number\") {\r\n                styles['width'] = this.props.width + 'px';\r\n            } else {\r\n                styles['width'] = this.props.width;\r\n            }\r\n        };\r\n\r\n        if (this.props.height) {\r\n            if (typeof this.props.height === \"number\") {\r\n                let h: number = this.props.height === 200 ? 300 : this.props.height;\r\n                styles['height'] = h + 'px';\r\n            } else {\r\n                styles['height'] = this.props.height;\r\n            }\r\n        };\r\n\r\n        if (this.props.style) {\r\n            css += ' ' + this.props.style;\r\n        };\r\n\r\n        let content = this.renderContent();\r\n\r\n        let ctrl = (\r\n            <div id={this.props.id}>\r\n                <div id={s} className={cssover} onClick={this.clickOverlay}></div>\r\n                <div className={css} id={this.props.id} style={styles}>\r\n                    <div className=\"inner\">\r\n                        {\r\n                            this.props.onDismiss && this.state.closable ? <div className=\"close\" onClick={this.onDismiss} /> : null\r\n                        }\r\n                        <div className=\"title\">{this.title}</div>\r\n                        {/* <div className=\"sep\"/> */}\r\n                        {content}\r\n                        {a ?\r\n                            (\r\n                                <div className=\"action-container\">\r\n                                    {/* <div className=\"sep\"/> */}\r\n                                    <div className=\"popup-action\">\r\n                                        {a}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public refresh(visible: boolean,\r\n        closable: boolean,\r\n        type: EPopupType,\r\n        content?: JSX.Element) {\r\n        \r\n        this.setState({\r\n            visible: visible,\r\n            closable: closable,\r\n            type: type,\r\n            content: content\r\n        });\r\n    };\r\n\r\n    private renderContent(): JSX.Element {\r\n        let css: string = 'content text-body';\r\n        //console.log('rendercontent', this.props.children)\r\n        //todo: not working in prod, tempfix [0]\r\n        let b = this.props.children ? this.props.children[0] : <div>error</div>; //this.getChild<PopupBody>('cmp.PopupBody');\r\n\r\n        if (this.state.type == EPopupType.pleaseWait) {\r\n            css += ' center';\r\n            b = GlobalJSX.GetLoaderWithText(\"Die Anfrage wird verarbeitet ... \");\r\n        } else if (this.state.type == EPopupType.confirm) {\r\n            css += ' center';\r\n            b = <div>Sind Sie sicher?</div>\r\n        } else if (this.state.type == EPopupType.custom) {\r\n            css += ' center';\r\n\r\n            if(this.state.content) {\r\n                b = this.state.content;\r\n            }\r\n        };\r\n\r\n        let bs = ReactDOMServer.renderToString(b);\r\n        if(bs.indexOf('answerError') > 0) {\r\n            this.title = ErrorMessages.general;\r\n        };\r\n\r\n        let ctrl =\r\n            (\r\n                <div className={css}>\r\n                    {b}\r\n                </div>\r\n            );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderAction(): JSX.Element {\r\n        let a = this.props.children && this.props.children.length > 0 ?\r\n            this.props.children[this.props.children.length - 1] : null;\r\n\r\n        let ctrl: JSX.Element = <></>;\r\n\r\n        this.hasAction = a !== undefined;\r\n\r\n        if (this.props.type === EPopupType.confirm || this.props.type === EPopupType.confirmCustom) {\r\n            ctrl = (\r\n                <Action>\r\n                    <LButton text={this.props.textNegative ? this.props.textNegative : MainTexts.cancel}\r\n                        css=\"fl\" icon=\"cancel\" type={ELButtonType.linkWithIconLeft} onClick={this.confirmNegative} />\r\n                    <LButton text={this.props.textPositive ? this.props.textPositive : MainTexts.ok}\r\n                        css=\"fr\" icon=\"ok\" type={ELButtonType.buttonWithIconRight} onClick={this.confirmPositive} />\r\n                </Action>\r\n            );\r\n        } else {\r\n            if (a) {\r\n                ctrl = a;\r\n            }\r\n        }\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private clickOverlay() {\r\n        if (this.props.closable) {\r\n            this.setState({ visible: false });\r\n            this.onDismiss();\r\n        };\r\n    };\r\n\r\n    private identify<T>(arg: T): T {\r\n        return arg;\r\n    };\r\n\r\n    private onDismiss() {\r\n        if (this.props.onDismiss) {\r\n            this.props.onDismiss();\r\n        }\r\n    };\r\n\r\n    private confirmPositive() {\r\n        if (this.props.onPositive) {\r\n            this.props.onPositive();\r\n        };\r\n    };\r\n\r\n    private confirmNegative() {\r\n        if (this.props.onNegative) {\r\n            this.props.onNegative();\r\n        };\r\n    };\r\n};\r\n\r\nexport default Popup;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { Inner1C, LButton, LClear, LControl, PopupBody } from '../../components';\r\nimport Popup, { EPopupType } from '../../components/dialogs/popup';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { IApiResponse, IApiSummary } from '../../interfaces';\r\nimport { EControlType, ELButtonType, ERequestType } from '../../models';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport Api from '../../utils/api';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts } from '../../utils/messages';\r\n\r\n\r\nexport interface IMnpStatusProps {\r\n}\r\n\r\nexport interface IMnpStatusState {\r\n    msisdn: string;\r\n    statusMsg?: string;\r\n\r\n    popupTitle: string;\r\n    processing: boolean;\r\n    closblePopup: boolean;\r\n    apiMessage: string;\r\n}\r\n\r\nexport class MnpStatusScreen extends React.Component<IMnpStatusProps, IMnpStatusState> {\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n    public static containerId: string = 'mnpStatusScreen';\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        // if (Global.validateAccessRoles([Roles.XTND_Nutzerverwaltung])) {\r\n\r\n        // }\r\n\r\n        Global.easyApp.setTitle(MainTexts.mnpStatusPageTitle);\r\n\r\n        this._loadData = this._loadData.bind(this);\r\n        this._onMsisdnChange = this._onMsisdnChange.bind(this);\r\n\r\n        this.state = {\r\n            msisdn: '',\r\n            processing: false,\r\n            closblePopup: false,\r\n            popupTitle: '',\r\n            apiMessage: ''\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const cfg: IBlockConfiguration = {\r\n            title: MainTexts.mnpStatus,\r\n            transparent: false,\r\n            styleContainer: ''\r\n        };\r\n\r\n        const cfg2: IBlockConfiguration = {\r\n            title: 'Status',\r\n            transparent: false,\r\n            styleContainer: ''\r\n        };\r\n\r\n        const statusDataHtml =\r\n            <LControl type={EControlType.hint}\r\n                value={MainTexts.status}\r\n                preview={true}\r\n                name=\"status\" id=\"status\"\r\n                label={this.state.statusMsg || ''} />;\r\n\r\n        return <div id={MnpStatusScreen.containerId}>\r\n            <Inner1C>\r\n                <div>\r\n                    <Popup\r\n                        type={this.processPopupState}\r\n                        visible={this.state.processing || this.state.closblePopup}\r\n                        closable={this.state.closblePopup}\r\n                        id=\"wait\"\r\n                        title={this.state.popupTitle}\r\n                        height={200}\r\n                        onDismiss={this._onDismissProcessPopup}>\r\n                        <PopupBody>\r\n                            <div>{this.state.apiMessage}</div>\r\n                            <></>\r\n                        </PopupBody>\r\n                        <></>\r\n                    </Popup>\r\n\r\n                    <BaseBlock config={cfg}>\r\n                        <Container className=\"container-action\">\r\n                            <Row>\r\n                                <Col xs={6} md={6} >\r\n                                    <LControl type={EControlType.text}\r\n                                        value={this.state.msisdn}\r\n                                        onChange={this._onMsisdnChange}\r\n                                        preview={false}\r\n                                        name=\"msisdn\" id=\"msisdn\"\r\n                                        label={MainTexts.msisdn} />\r\n                                </Col>\r\n                                <Col xs={6} md={6} >\r\n                                    <LButton type={ELButtonType.buttonWithIconRight}\r\n                                        css=\"ai fr\"\r\n                                        id=\"buttonSearch\"\r\n                                        text={MainTexts.mnpStatus}\r\n                                        onClick={this._loadData} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                        <LClear />\r\n                    </BaseBlock>\r\n\r\n                    <BaseBlock config={cfg2}>\r\n                        <Container className=\"container-action\">\r\n                            <Row>\r\n                                <Col xs=\"12\" md=\"12\">\r\n                                    {statusDataHtml}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </BaseBlock>\r\n                </div>\r\n            </Inner1C>\r\n        </div>;\r\n    }\r\n\r\n    socketCallback(res: IApiResponse) {\r\n        if (res.error) {\r\n            let sum: IApiSummary = Api.parseSummary(res, undefined);\r\n            this.processPopupState = EPopupType.custom;\r\n            this.setState({ processing: false, apiMessage: sum.message, closblePopup: true });\r\n        } else if (res.data) {\r\n            this.setState({ processing: false, statusMsg: res.data.data });\r\n        }\r\n    };\r\n\r\n    _loadData = () => {\r\n        this.processPopupState = EPopupType.pleaseWait;\r\n\r\n        this.setState({\r\n            processing: true\r\n        });\r\n\r\n        const model = { id: this.state.msisdn };\r\n\r\n        Global.hub.send(JSON.stringify(model),\r\n            ERequestType.loadPortingStatus,\r\n            undefined);\r\n    }\r\n\r\n    _onDismissProcessPopup = () => {\r\n        this.setState({\r\n            processing: false\r\n        });\r\n\r\n    }\r\n\r\n    _onMsisdnChange = (e: IControlValue) => {\r\n        this.setState({ msisdn: e.value });\r\n    }\r\n}","import * as React from 'react';\r\nimport CustomerScreen from '../../../screens/existing/customer';\r\nimport { IBaseComponentState, ISocketPushModel, IApiResponse, EApiResponseStatus, IProcessStatus, IApiSummary, IApiStep } from '../../../interfaces';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport * as i from '../../../interfaces/index';\r\nimport * as m from '../../../models/index';\r\nimport { IContract } from '../../../models/existing/contract';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport * as linq from 'linq';\r\nimport * as page from '../../page/index';\r\nimport ActivationResponseStatus from '../../ordering/process/activationResponseStatus';\r\nimport Status, { EStatusState } from '../../support/status';\r\nimport Global from '../../../utils/Global';\r\nimport { IPopupProps, EPopupType } from '../../dialogs/popup';\r\nimport { MainTexts, ActionTexts } from '../../../utils/messages';\r\nimport GlobalJSX from '../../../utils/GlobalJSX';\r\nimport Api from '../../../utils/api';\r\nimport { PartnerCardGet, CustomerGroup, IGroupMember, EGroupMemeberType, MobileNumber, TariffAndSub } from '../../../models/index';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport ProductWrapper from '../../../models/ordering/productWrapper';\r\n\r\nexport interface IExistingPartnerCardProps {\r\n    parent: CustomerScreen;\r\n};\r\n\r\nexport interface IExistingPartnerCardState {\r\n    status: m.ERequestStatus;\r\n};\r\n\r\nexport class ExistingPartnerCard extends React.Component<IExistingPartnerCardProps, IExistingPartnerCardState> {\r\n    private contract:IContract;\r\n    private lastApi?: i.IApiResponse;\r\n    private process?: i.IProcessStatus;\r\n    private apiState: EStatusState = EStatusState.undefined;\r\n    private current: m.PartnerCardGet = new m.PartnerCardGet();\r\n    public static containerId: string = 'partnerCard';\r\n    private brand: IBrand;\r\n\r\n    constructor(props:IExistingPartnerCardProps) {\r\n        super(props);\r\n\r\n        this.onStart = this.onStart.bind(this);\r\n        this.onDismissPopup = this.onDismissPopup.bind(this);\r\n        this.socketCallback = this.socketCallback.bind(this);\r\n\r\n        this.state = {\r\n            status: m.ERequestStatus.undefined\r\n        };\r\n\r\n        this.current.id = this.props.parent.data.id;\r\n        this.current.brandKey = BrandKeys.vodafone;\r\n\r\n        this.brand = StorageHelper.getBrand(BrandKeys.vodafone);\r\n\r\n        this.contract = this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0] : {};\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = <div id={ExistingPartnerCard.containerId}>\r\n            {this.renderControl()}\r\n        </div>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private onStart(type: m.ERequestType) {\r\n        this.process = { steps: [] };\r\n        this.apiState = EStatusState.inprocessTimer;\r\n        this.lastApi = undefined;\r\n\r\n        this.current.type = type;\r\n\r\n        Global.hub.send(JSON.stringify(this.current), \r\n            type,\r\n            undefined);\r\n\r\n        this.setState({status: m.ERequestStatus.running}, ()=>{       \r\n        });\r\n    };\r\n\r\n    private onDismissPopup() {\r\n        this.lastApi = undefined;\r\n        this.setState({status: m.ERequestStatus.undefined});\r\n    };\r\n\r\n    private renderPopup() : JSX.Element {\r\n        let cfg:IPopupProps = {\r\n            title: ActionTexts.requestInProcess,\r\n            closable: this.state.status !== m.ERequestStatus.running,\r\n            visible: this.state.status !== m.ERequestStatus.undefined && this.state.status !== m.ERequestStatus.done,\r\n            id: \"partnerCardLoaderPopup\",\r\n            type: EPopupType.pleaseWait,\r\n            onDismiss: this.onDismissPopup\r\n        };\r\n\r\n        let content:JSX.Element = <></>;\r\n\r\n        if(this.lastApi && this.lastApi.status != EApiResponseStatus.ok) {\r\n            let pr: IProcessStatus = JSON.parse(this.lastApi.data);\r\n            let sum: IApiSummary = Api.parseSummary(this.lastApi, pr);\r\n\r\n            cfg.closable = true;\r\n            cfg.visible = true;\r\n            cfg.type = EPopupType.info;\r\n            content = <div>{sum.message}</div>\r\n        };\r\n\r\n        let ctrl = GlobalJSX.GetPopup(cfg, content, undefined);\r\n\r\n        return ctrl;\r\n    };    \r\n\r\n    private renderGroups() : JSX.Element {\r\n        let gr = this.props.parent.data.customer.contracts ? this.props.parent.data.customer.contracts[0].groups : [];\r\n        let jsx : JSX.Element[] = [];\r\n\r\n        if(gr && gr.length > 0) {\r\n            gr.map((i,idx)=>{\r\n                jsx.push(this.renderGroup(i, idx));\r\n            });\r\n        };\r\n\r\n        return <div className=\"\">\r\n            {jsx}\r\n        </div>;\r\n    };\r\n\r\n    private renderGroup(group: CustomerGroup, idx: number) : JSX.Element {\r\n        let gr = CustomerGroup.createInstanceFromJson(group);\r\n        let owner = gr.getOwner();\r\n        let members = gr.getMembers();\r\n        //let m1: IGroupMember = JSON.parse(JSON.stringify(owner));\r\n        //m1.type = EGroupMemeberType.partner;\r\n        //members.push(m1);\r\n\r\n        let ctrl = <div className={\"group\"} key={\"group-\" + idx}>\r\n                <div className=\"text-sub uc\">{MainTexts.group + ' ' + group.groupName}</div>\r\n                <div className=\"spacer\"/>\r\n                {\r\n                    this.renderMember(owner)\r\n                }\r\n\r\n                {\r\n                    members && members.length > 0 ?\r\n                    members.map((i, idx)=>(\r\n                        this.renderMember(i)\r\n                    ))\r\n                    : null\r\n                }\r\n            </div>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderMember(m: IGroupMember) : JSX.Element {\r\n        let mobile:MobileNumber = MobileNumber.createInstanceFromJson(m.subscriberNumber);\r\n        let css = (m.type === EGroupMemeberType.owner ? 'cardowner' : 'cardmember');\r\n        \r\n        //m.tariffOption = 'RED4SH30';\r\n        let pr = TariffAndSub.createInstanceFromId(this.brand, m.tariffOption ? m.tariffOption : '');\r\n\r\n        return <div className=\"group-member\">\r\n            <Container>\r\n                <Row>\r\n                    <Col md={1}>\r\n                        <div className={\"icon32 icon \" + css}></div>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <div className={\"text-tiny uc group-text \" + css}>{m.type === EGroupMemeberType.owner ? MainTexts.owner : MainTexts.member}</div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <div className={\"text-body uc group-text group-text-big \" + css}>{mobile.toString()}</div>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <div className={\"text-body uc group-text group-text-big \" + css}>{pr.productName}</div>\r\n                    </Col>                    \r\n                    {/* <Col md={2}>\r\n                        <div className={\"text-body uc group-text group-text-big \" + css}>{Global.toGermanDate(m.effectiveDate)}</div>\r\n                    </Col>                                         */}\r\n                </Row>\r\n            </Container>\r\n        </div>;\r\n    };\r\n\r\n    private renderControl() : JSX.Element {\r\n        let ctrl = \r\n            <>\r\n            <Container>\r\n                <Row>\r\n                    {\r\n                        this.state.status !== m.ERequestStatus.running ? \r\n                        <>\r\n                            {/* <page.LButton text=\"gruppeninformation abrufen\" \r\n                                onClick={()=>{this.onStart(m.ERequestType.customerGroupGet);}} \r\n                                css=\"fr\"\r\n                                type={m.ELButtonType.buttonWithIconRight} \r\n                                icon=\"arrow-right\"/> */}\r\n                            {\r\n                                !this.props.parent.dataWrapper.hasPartnerGroups() ? \r\n                                <>\r\n                                    <Col md={9}>Der Kunde besitzt keine Gruppenzugehörigkeit. <br/>* Um Partnerkarten (RED+) zu buchen, muss der Kunde einer Gruppe angehören.</Col>\r\n                                    <Col md={3}>\r\n                                        <page.LButton text=\"Gruppe erstellen\" \r\n                                            onClick={()=>{this.onStart(m.ERequestType.customerGroupCreate);}} \r\n                                            css=\"fr\"\r\n                                            type={m.ELButtonType.buttonWithIconRight} \r\n                                            icon=\"arrow-right\"/>\r\n                                    </Col>\r\n                                </>\r\n                                : null\r\n                            }\r\n                        </>\r\n                            :\r\n                        null\r\n                    }    \r\n                </Row>      \r\n                                     \r\n                <Row>\r\n                    <Col md={12} className=\"np\">\r\n                        {this.renderGroups()}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            { this.renderPopup() }\r\n\r\n            </>;      \r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public socketCallback(sock: ISocketPushModel) {\r\n        let api: IApiResponse = JSON.parse(sock.data);\r\n        this.lastApi = api;\r\n        let inner = api.data;\r\n\r\n        if(api.error) {\r\n            this.setState({status: m.ERequestStatus.failed});\r\n            return;\r\n        };\r\n\r\n        if(inner == null ) {\r\n            return;\r\n        };\r\n\r\n        let wrapper = JSON.parse(inner.data);\r\n\r\n        let customer  = JSON.parse(wrapper.steps[0].message);\r\n\r\n        this.props.parent.data.customer = customer;\r\n\r\n        StorageHelper.addOrder(this.props.parent.data);\r\n\r\n        this.setState({status: m.ERequestStatus.done});\r\n\r\n        this.props.parent.refresh();\r\n    };\r\n};\r\n\r\nexport default ExistingPartnerCard;","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { EApiResponseStatus, IApiResponse, IApiStep, IApiSummary, IProcessStatus, ISocketPushModel } from '../../interfaces/index';\r\nimport * as m from '../../models/index';\r\nimport { IDefCon } from '../../models/index';\r\nimport IBrand from '../../models/ordering/brand';\r\nimport { EControlType, ERequestStatus } from '../../models/page/diverse';\r\nimport { IControlValue, IKeyTextNumber } from '../../models/page/interfaces';\r\nimport * as s from '../../screens/insex';\r\nimport { ValidationWrapper } from '../../utils';\r\nimport Api from '../../utils/api';\r\nimport { BrandKeys } from '../../utils/Defaults';\r\nimport Global from '../../utils/Global';\r\nimport GlobalJSX from '../../utils/GlobalJSX';\r\nimport { MainTexts, ValidationMessages } from '../../utils/messages';\r\nimport EasyRouter from '../../utils/router';\r\nimport StorageHelper from '../../utils/storage';\r\nimport ValidationOption, { EValidationOption } from '../../utils/validation/validationOption';\r\nimport { EPopupType, IPopupProps } from '../dialogs/popup';\r\nimport * as page from '../page/index';\r\n\r\n\r\nexport interface IToolSearchExistingState {\r\n    type: m.EExistingCustomerLoginMode;\r\n    loading: boolean;\r\n    queryAvailability?: boolean;\r\n    changed: boolean;\r\n    input: string;\r\n};\r\n\r\nexport interface IToolSearchExistingProps {\r\n    parent: s.MainScreen;\r\n};\r\n\r\nexport class ToolSearchExisting extends React.Component<IToolSearchExistingProps, IToolSearchExistingState> {\r\n    public static uri = 'existing/';\r\n    public static containerId = 'searchExisting';\r\n    private valoptIdCard: ValidationOption[];\r\n\r\n    private canceled: boolean = false;\r\n    private model: m.ExistingCustomerLogin = new m.ExistingCustomerLogin();\r\n    private lastApi?: IApiResponse;\r\n    private valopt: ValidationOption[];\r\n    private valoptNumber: ValidationOption[];\r\n    private valoptPrefix: ValidationOption[];\r\n    private options: IKeyTextNumber[] = Global.getPrefixes();\r\n    private dc: IDefCon = new IDefCon();\r\n    private errorMessage: string = 'MSISDN muss 7 Ziffern lang sein';\r\n    private hintVF: string = '7-Stellige MSISDN eingeben';\r\n    private msisdnLength: number = 7;\r\n\r\n    constructor(props: IToolSearchExistingProps) {\r\n        super(props);\r\n\r\n        this.switchState = this.switchState.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.startSearch = this.startSearch.bind(this);\r\n        this.socketCallback = this.socketCallback.bind(this);\r\n        this.changeBrand = this.changeBrand.bind(this);\r\n        this.onDismissPopup = this.onDismissPopup.bind(this);\r\n        this.onCancelPopup = this.onCancelPopup.bind(this);\r\n\r\n        this.model.mode = m.EExistingCustomerLoginMode.password;\r\n        this.model.brandKey = '';//BrandKeys.vodafone;\r\n\r\n        this.dc = StorageHelper.getDefCon();\r\n\r\n        this.valopt = [\r\n            new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError })\r\n        ];\r\n\r\n        this.valoptIdCard = [\r\n            new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n            new ValidationOption({type: EValidationOption.minLength, minLength: 2, message: 'Bitte, geben Sie die fünf letzten Buchstaben aus dem Personalausweis ein' }),\r\n            new ValidationOption({type: EValidationOption.alphanumericWithoutGermanChars, message: 'Bitte, geben Sie die fünf letzten Buchstaben aus dem Personalausweis ein'})\r\n\r\n            // new ValidationOption({ type: EValidationOption.alphanumericWithoutGermanChars, message: ValidationMessages.alphanumericNoUmlauts }),\r\n\r\n\r\n        ];\r\n\r\n        this.valoptPrefix = [\r\n            new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n            new ValidationOption({ type: EValidationOption.numeric, message: 'Bitte geben Sie die Rufnummer in folgendem Format ein: 0173', blockInputOnError: true }),\r\n        ];\r\n\r\n        this.valoptNumber = this.getNumberValidation()\r\n\r\n        this.state = {\r\n            type: m.EExistingCustomerLoginMode.password,\r\n            loading: false,\r\n            changed: false,\r\n            input: ''\r\n        };\r\n    };\r\n\r\n    public componentDidMount() {\r\n        ValidationWrapper.validateFormular(undefined, false, ToolSearchExisting.containerId);\r\n    };\r\n\r\n    public render() {\r\n        if (!Global.isDelaer(false)) { return <div id={ToolSearchExisting.containerId}></div> }\r\n\r\n        let dc = StorageHelper.getDefCon();\r\n\r\n        let oteloVisible = linq.from<IBrand>(dc.brands).where(x => x.available && x.id == BrandKeys.otelo).count() == 1;\r\n        let vfVisible = linq.from<IBrand>(dc.brands).where(x => x.available && x.id == BrandKeys.vodafone).count() == 1;\r\n        let dslVisible = linq.from<IBrand>(dc.brands).where(x => x.available && x.id == BrandKeys.dsl).count() == 1;\r\n\r\n        if (this.model.brandKey == '') {\r\n            if (vfVisible) {\r\n                this.model.brandKey = BrandKeys.vodafone;\r\n            } else if (oteloVisible) {\r\n                this.model.brandKey = BrandKeys.otelo;\r\n            } else if (dslVisible) {\r\n                this.model.brandKey = BrandKeys.dsl;\r\n            }\r\n        }\r\n\r\n        let ctrl = (\r\n            <div id={ToolSearchExisting.containerId}>\r\n                {this.renderPopup()}\r\n                {\r\n                    this.dc.canRunAvailability() && this.model.brandKey != BrandKeys.otelo && this.renderPopupAvailability()\r\n                }\r\n\r\n                <div className=\"tool\">\r\n                    <form autoComplete=\"smartystreets\">\r\n                        <input autoComplete=\"false\" name=\"hidden\" type=\"text\" className=\"dn\"></input>\r\n                        <div className=\"info\">\r\n                            <div className=\"icon icon.big profile\"></div>\r\n                            <div className=\"title\">{MainTexts.searchExisting}</div>\r\n                        </div>\r\n\r\n                        <div className=\"\">\r\n                            {\r\n                                vfVisible ?\r\n                                    <div title=\"Vodafone\" className={'brandi selector vf ' + (this.model.brandKey == BrandKeys.vodafone ? 'selected' : '')} onClick={() => { this.changeBrand('vf') }}>\r\n                                        <div className=\"desc\">Mobilfunk</div>\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                oteloVisible ?\r\n                                    <div title=\"otelo\" className={'brandi selector otelo ' + (this.model.brandKey == BrandKeys.otelo ? 'selected' : '')} onClick={() => { this.changeBrand('otelo') }}>\r\n                                        <div className=\"desc\">Mobilfunk</div>\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                dslVisible ?\r\n                                    <div title=\"DSL\" className={'brandi selector dsl ' + (this.model.brandKey == BrandKeys.dsl ? 'selected' : '')} onClick={() => { this.changeBrand('dsl') }}>\r\n                                        <div className=\"desc\">DSL</div>\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n\r\n                        <page.LClear />\r\n\r\n                        {\r\n                            this.renderLogin()\r\n                        }\r\n\r\n                        <div className=\"spacer clear\" />\r\n\r\n                        <div className=\"col-md-5\">\r\n                            <page.LButton text={MainTexts.searchExisting}\r\n                                css=\"fl\"\r\n                                icon=\"arrow-right\"\r\n                                type={m.ELButtonType.buttonWithIconRight}\r\n                                onClickEvent={(e) => {\r\n                                    this.preSearch(e);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    //dont delete will handle direct ActivationProcess Push\r\n    public socketCallbackPush(sock: ISocketPushModel) {\r\n        if (this.canceled) {\r\n            this.canceled = false;\r\n            this.lastApi = undefined;\r\n            return;\r\n        };\r\n\r\n        let api = JSON.parse(sock.data);\r\n\r\n        if (!api.error) {\r\n            //let inner = api.data; \r\n\r\n            //let proc  = JSON.parse(inner.data);\r\n            //let step:IApiStep = proc.steps[0];\r\n\r\n            //if(step.status === ERequestStatus.done) {\r\n            let process = api.data; //JSON.parse(step.message);\r\n\r\n            StorageHelper.addOrderAndReset(process);\r\n\r\n            this.lastApi = undefined;\r\n            this.setState({ loading: false });\r\n\r\n            this.model.reset();\r\n\r\n            EasyRouter.route({ url: '/customer/dashboard/' + process.id, title: MainTexts.existingCustomerActivation });\r\n            //} \r\n        }\r\n\r\n        {\r\n            this.lastApi = api;\r\n            this.setState({ loading: false });\r\n        }\r\n    };\r\n\r\n    public socketCallback(sock: ISocketPushModel) {\r\n        if (this.canceled) {\r\n            this.canceled = false;\r\n            this.lastApi = undefined;\r\n            return;\r\n        };\r\n\r\n        let api = JSON.parse(sock.data);\r\n\r\n        if (!api.error) {\r\n            let inner = api.data;\r\n\r\n            let proc = JSON.parse(inner.data);\r\n            let step: IApiStep = proc.steps[0];\r\n\r\n            if (step.status === ERequestStatus.done) {\r\n                let process = JSON.parse(step.message);\r\n\r\n                StorageHelper.addOrderAndReset(process);\r\n\r\n                this.lastApi = undefined;\r\n                this.setState({ loading: false });\r\n\r\n                this.model.reset();\r\n\r\n                EasyRouter.route({ url: '/customer/dashboard/' + process.id, title: MainTexts.existingCustomerActivation });\r\n            }\r\n        }\r\n\r\n        {\r\n            this.lastApi = api;\r\n            this.setState({ loading: false, input: this.options[0].text });\r\n        }\r\n    };\r\n\r\n    private renderLogin(): JSX.Element {\r\n        if (this.model.brandKey === BrandKeys.dsl) {\r\n            return this.renderDsl();\r\n        } else if (this.model.brandKey === BrandKeys.otelo) {\r\n            return this.renderOtelo();\r\n        } else if (this.model.brandKey === BrandKeys.vodafone) {\r\n            return this.renderVodafone();\r\n        };\r\n\r\n        return <></>;\r\n    };\r\n\r\n    private renderOtelo(): JSX.Element {\r\n        let ctrl = <>\r\n            <div className=\"input-round\">\r\n                <page.LControl onChange={this.onChange}\r\n                    hideHint={false}\r\n                    type={EControlType.text} hideTitle={true} style=\"\"\r\n                    controlStlye=\"form-control\"\r\n                    name=\"ecusername\" id=\"ecUsername\"\r\n                    autoComplete=\"nope1\"\r\n                    placeholder=\"Mobilfunknummer (MSISDN)\"\r\n                    hideLabel={true}\r\n                    validationOptions={this.valoptNumber}\r\n                    value={this.model.ecusername}\r\n                    checked={this.model.mode == m.EExistingCustomerLoginMode.password} />\r\n            </div>\r\n            <page.LClear />\r\n            <div className=\"info\">\r\n                <div className=\"icon icon.big lock\"></div>\r\n                <div className=\"title row\">\r\n                    <div className=\"col-md-5\">\r\n                        <page.LControl onChange={this.switchState} hideHint={true}\r\n                            type={EControlType.radio} hideTitle={true} style=\"\"\r\n                            name=\"loginType\" id=\"loginType_0\" label=\"Kennwort\"\r\n                            value={m.EExistingCustomerLoginMode.password}\r\n                            checked={this.model.mode == m.EExistingCustomerLoginMode.password} />\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                        <page.LControl onChange={this.switchState}\r\n                            hideHint={true}\r\n                            type={EControlType.radio} hideTitle={true}\r\n                            value={m.EExistingCustomerLoginMode.birthday}\r\n                            name=\"loginType\" id=\"loginType_1\" label=\"Geburtsdatum\"\r\n                            checked={this.model.mode == m.EExistingCustomerLoginMode.birthday} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                this.model.mode === m.EExistingCustomerLoginMode.password ?\r\n                    <div className=\"input-round\">\r\n                        <page.LControl onChange={this.onChange}\r\n                            onEnter={this.preSearch}\r\n                            hideHint={false}\r\n                            type={EControlType.password} hideTitle={true} style=\"\"\r\n                            controlStlye=\"form-control\"\r\n                            name=\"ecpassword\" id=\"ecPassword\"\r\n                            autoComplete=\"nope1\"\r\n                            hideLabel={true}\r\n                            validationOptions={this.valopt}\r\n                            value={this.model.ecpassword}\r\n                            placeholder=\"Kennwort\" />\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        <div className=\"input-round\">\r\n                            <page.LControl onChange={this.onChange}\r\n                                onEnter={this.preSearch}\r\n                                hideHint={false}\r\n                                type={EControlType.text} hideTitle={true} style=\"\"\r\n                                controlStlye=\"form-control\"\r\n                                name=\"birthday\" id=\"ecBirthday\"\r\n                                autoComplete=\"nope1\"\r\n                                hideLabel={true}\r\n                                validationOptions={this.valopt}\r\n                                value={this.model.birthday}\r\n                                placeholder={MainTexts.dateOfBirth} />\r\n                        </div>\r\n                        <div className=\"spacer clear\" />\r\n                        <div className=\"input-round\">\r\n                            <page.LControl onChange={this.onChange}\r\n                                onEnter={this.preSearch}\r\n                                hideHint={false}\r\n                                type={EControlType.text} hideTitle={true} style=\"\"\r\n                                controlStlye=\"form-control\"\r\n                                name=\"additional\" id=\"ecAdditional\"\r\n                                autoComplete=\"nope1\"\r\n                                maxLength={5}\r\n                                hideLabel={true}\r\n                                validationOptions={this.valoptIdCard}\r\n                                value={this.model.additional}\r\n                                placeholder=\"Die fünf letzten Buchstaben des Ausweises\" />\r\n                        </div>\r\n                    </>\r\n            }\r\n        </>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderVodafone(): JSX.Element {\r\n\r\n        if (this.model.temp1 === '') {\r\n            this.model.temp1 = this.options[0].text;\r\n        };\r\n\r\n        let ctrl = <>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={5} className=\"np\">\r\n\r\n                        <select name={'temp1'} id={'temp1'} value={this.state.input} onChange={event => { this.onChangeDropDown(event) }} style={{ borderRadius: '15px', height: '32px', width: '110px', backgroundColor: '#E0E0E0', borderColor: '#f8f9fa' }}>\r\n                            {this.renderOptions()}\r\n                        </select>\r\n\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        <div className=\"input-round\">\r\n                            <page.LControl onChange={this.onChange}\r\n                                hint={this.hintVF}\r\n                                type={EControlType.text}\r\n                                hideTitle={true} style=\"\"\r\n                                controlStlye=\"form-control\"\r\n                                name=\"temp2\" id=\"temp2\"\r\n                                autoComplete=\"nope1\"\r\n                                placeholder=\"Nummer\"\r\n                                hideLabel={true}\r\n                                validationOptions={this.valoptNumber}\r\n                                value={this.model.temp2} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <page.LClear />\r\n\r\n            <div className=\"input-round\">\r\n                <page.LControl onChange={this.onChange}\r\n                    onEnter={this.preSearch}\r\n                    hideHint={false}\r\n                    type={EControlType.password} hideTitle={true} style=\"\"\r\n                    controlStlye=\"form-control\"\r\n                    name=\"ecpassword\" id=\"ecPassword\"\r\n                    autoComplete=\"nope1\"\r\n                    hideLabel={true}\r\n                    validationOptions={this.valopt}\r\n                    value={this.model.ecpassword}\r\n                    placeholder=\"Kennwort\" />\r\n            </div>\r\n        </>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderDsl(): JSX.Element {\r\n        let ctrl = <>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={5} className=\"np\">\r\n                        <div className=\"input-round\">\r\n                            <page.LControl onChange={this.onChange}\r\n                                hideHint={false}\r\n                                type={EControlType.text} hideTitle={true} style=\"\"\r\n                                controlStlye=\"form-control\"\r\n                                name=\"temp1\" id=\"temp1\"\r\n                                autoComplete=\"nope1\"\r\n                                placeholder=\"Vorwahl\"\r\n                                hideLabel={true}\r\n                                validationOptions={this.valoptPrefix}\r\n                                value={this.model.temp1} />\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        <div className=\"input-round\">\r\n                            <page.LControl onChange={this.onChange}\r\n                                hint={'(Min.4 Ziffern, Max. 9 Ziffern)'}\r\n                                type={EControlType.text}\r\n                                hideTitle={true} style=\"\"\r\n                                controlStlye=\"form-control\"\r\n                                name=\"temp2\"\r\n                                id=\"temp2\"\r\n                                autoComplete=\"nope1-dsl\"\r\n                                placeholder=\"Nummer\"\r\n                                hideLabel={true}\r\n                                validationOptions={this.valoptNumber}\r\n                                value={this.model.temp2} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <page.LClear />\r\n            <div className=\"info\">\r\n                <div className=\"icon icon.big lock\"></div>\r\n                <div className=\"title row\">\r\n                    <div className=\"col-md-5\">\r\n                        <page.LControl onChange={this.switchState} hideHint={true}\r\n                            type={EControlType.radio} hideTitle={true} style=\"\"\r\n                            name=\"loginType\" id=\"loginType_0\" label=\"Kennwort\"\r\n                            value={m.EExistingCustomerLoginMode.password}\r\n                            checked={this.model.mode == m.EExistingCustomerLoginMode.password} />\r\n                    </div>\r\n                    {<div className=\"col-md-7\">\r\n                        <page.LControl onChange={this.switchState}\r\n                            hideHint={true}\r\n                            type={EControlType.radio} hideTitle={true}\r\n                            value={m.EExistingCustomerLoginMode.birthday}\r\n                            name=\"loginType\" id=\"loginType_1\" label={MainTexts.dateOfBirth}\r\n                            checked={this.model.mode == m.EExistingCustomerLoginMode.birthday} />\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"spacer clear\" />\r\n\r\n            {\r\n                this.model.mode === m.EExistingCustomerLoginMode.password ?\r\n                    <>\r\n                        <div className=\"input-round\">\r\n                            <page.LControl onChange={this.onChange}\r\n                                onEnter={this.preSearch}\r\n                                hideHint={false}\r\n                                type={EControlType.password} hideTitle={true} style=\"\"\r\n                                controlStlye=\"form-control\"\r\n                                name=\"ecpassword\" id=\"ecPassword\"\r\n                                autoComplete=\"nope1\"\r\n                                hideLabel={true}\r\n                                validationOptions={this.valopt}\r\n                                value={this.model.ecpassword}\r\n                                placeholder={MainTexts.customerPassword} />\r\n                        </div>\r\n                        <div className=\"spacer clear\" />\r\n                        <div className=\"input-round\">\r\n                            <page.LControl onChange={this.onChange}\r\n                                onEnter={this.preSearch}\r\n                                hideHint={false}\r\n                                type={EControlType.text} hideTitle={true} style=\"\"\r\n                                controlStlye=\"form-control\"\r\n                                name=\"additional\" id=\"ecAdditional\"\r\n                                autoComplete=\"nope1\"\r\n                                hideLabel={true}\r\n                                validationOptions={this.valopt}\r\n                                value={this.model.additional}\r\n                                placeholder={MainTexts.customerId} />\r\n                        </div>\r\n                    </>\r\n                    : <>\r\n                        {<div className=\"input-round\">\r\n                            <page.LControl onChange={this.onChange}\r\n                                onEnter={this.preSearch}\r\n                                hideHint={false}\r\n                                type={EControlType.text} hideTitle={true} style=\"\"\r\n                                controlStlye=\"form-control\"\r\n                                name=\"birthday\" id=\"ecBirthday\"\r\n                                autoComplete=\"nope1\"\r\n                                hideLabel={true}\r\n                                validationOptions={this.valopt}\r\n                                value={this.model.birthday}\r\n                                placeholder={MainTexts.dateOfBirth} />\r\n                        </div>}\r\n                    </>\r\n            }\r\n        </>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private getNumberValidation(): ValidationOption[] {\r\n        if (this.model.brandKey == BrandKeys.vodafone) {\r\n            if (this.model.temp1 === '0151' || this.model.temp1 === '0160' || this.model.temp1 === '0176') {\r\n                if (this.model.temp2.startsWith('9') && this.model.temp1 === '0160') {\r\n                    this.errorMessage = 'MSISDN muss 8 Ziffern lang sein';\r\n                    this.msisdnLength = 8;\r\n                } else if (!this.model.temp2.startsWith('9') && this.model.temp1 === '0160') {\r\n                    this.errorMessage = 'MSISDN muss 7 Ziffern lang sein';\r\n                    this.msisdnLength = 7;\r\n                }\r\n\r\n            } else {\r\n                this.errorMessage = 'MSISDN muss 7 Ziffern lang sein';\r\n                this.msisdnLength = 7;\r\n            }\r\n\r\n\r\n            return [\r\n                new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                new ValidationOption({ type: EValidationOption.numeric, message: 'Bitte geben Sie die Rufnummer in folgendem Format ein: 1234567', blockInputOnError: true }),\r\n                new ValidationOption({ type: EValidationOption.inputRange, minLength: this.msisdnLength, maxLength: this.msisdnLength, message: this.errorMessage }),\r\n            ];\r\n        } else if (this.model.brandKey == BrandKeys.dsl) {\r\n            return [\r\n                new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                new ValidationOption({ type: EValidationOption.numeric, message: 'Bitte geben Sie die Rufnummer in folgendem Format ein: 1234567', blockInputOnError: true }),\r\n                new ValidationOption({ type: EValidationOption.inputRange, minLength: 4, maxLength: 9, message: \"Bitte korrigieren Sie Ihre Eingabe dsl\" }),\r\n            ];\r\n        } else if (this.model.brandKey == BrandKeys.otelo) {\r\n            return [\r\n                new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                new ValidationOption({ type: EValidationOption.numeric, message: 'Bitte geben Sie die Rufnummer in folgendem Format ein: 1234567', blockInputOnError: true }),\r\n            ];\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    private onCancelPopup() {\r\n        this.lastApi = undefined;\r\n        this.canceled = true;\r\n        this.setState({ loading: false });\r\n    };\r\n\r\n    private onDismissPopup() {\r\n        this.lastApi = undefined;\r\n        this.setState({ loading: false, queryAvailability: false });\r\n    };\r\n\r\n    private renderPopup(): JSX.Element {\r\n        let cfg: IPopupProps = {\r\n            title: 'Anmeldung wird ausgeführt',\r\n            closable: false,\r\n            visible: this.state.loading,\r\n            id: \"existingLoaderPopup\",\r\n            type: EPopupType.pleaseWait,\r\n            onDismiss: this.onDismissPopup,\r\n            height: 260\r\n        };\r\n\r\n        let content: JSX.Element = <div></div>;\r\n\r\n        if (this.lastApi && this.lastApi.status != EApiResponseStatus.ok) {\r\n            let pr: IProcessStatus = JSON.parse(this.lastApi.data);\r\n            let sum: IApiSummary = Api.parseSummary(this.lastApi, pr);\r\n\r\n            cfg.title = 'Anmeldung fehlgeschlagen';\r\n            cfg.closable = true;\r\n            cfg.visible = true;\r\n            cfg.type = EPopupType.info;\r\n            content = <div>{sum.message}</div>\r\n        };\r\n\r\n        let act: JSX.Element = <div>\r\n            <page.LButton\r\n                onClick={() => {\r\n                    this.onCancelPopup()\r\n                }}\r\n                type={m.ELButtonType.buttonWithIconRight}\r\n                css={\"aicon fr\"}\r\n                icon=\"\"\r\n                text={MainTexts.cancel} />\r\n        </div>\r\n\r\n        let ctrl = GlobalJSX.GetPopup(cfg, content, act);\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderPopupAvailability(): JSX.Element {\r\n        let cfg: IPopupProps = {\r\n            title: MainTexts.availabilityCheck,\r\n            closable: true,\r\n            visible: this.state.queryAvailability || false,\r\n            id: \"existingAvailabilityPopup\",\r\n            type: EPopupType.custom,\r\n            onDismiss: this.onDismissPopup,\r\n            height: 320\r\n        };\r\n\r\n        let content: JSX.Element = <div className=\"tal\">Sichere Deinem Kunden noch mehr Vorteile:<br />Hat dein Kunde Interesse an den Festnetz oder TV Produkten von Vodafone? Du kannst dir die Verfügbarkeit für weitere Giga Kombi fähige Produkte innerhalb seines Kontos anzeigen lassen. <br /><br />Möchtest du die Verfügbarkeitsabfrage an der Adresse des Kunden durchführen?</div>;\r\n\r\n        let act: JSX.Element = <div>\r\n            <page.LButton\r\n                onClick={(e) => {\r\n                    this.model.withAvailability = 0;\r\n                    StorageHelper.resetAvailability(new m.Address(), ERequestStatus.undefined);\r\n                    this.startSearch(e, undefined);\r\n                }}\r\n                type={m.ELButtonType.linkSimple}\r\n                css={\"aicon fl\"}\r\n                icon=\"\"\r\n                text={MainTexts.no} />\r\n            <page.LButton\r\n                onClick={(e) => {\r\n                    this.model.withAvailability = 1;\r\n                    StorageHelper.resetAvailability(new m.Address(), ERequestStatus.running);\r\n                    this.startSearch(e, undefined);\r\n                }}\r\n                type={m.ELButtonType.buttonWithIconRight}\r\n                css={\"aicon fr\"}\r\n                icon=\"\"\r\n                text={MainTexts.yes} />\r\n        </div>\r\n\r\n        let ctrl = GlobalJSX.GetPopup(cfg, content, act);\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderOptions(): JSX.Element[] {\r\n        let elements: JSX.Element[] = [];\r\n\r\n        this.options.forEach(option => {\r\n            elements.push(<option key={'op-' + option.key} value={option.text}>{option.text}</option>)\r\n        })\r\n\r\n        return elements;\r\n    };\r\n\r\n    private onChangeDropDown(e: any) {\r\n        this.model.temp1 = e.target.value;\r\n        if (this.model.temp1 === '0160') {\r\n            this.hintVF = '7 oder 8 Stellige MSISDN eingeben'\r\n            this.errorMessage = 'MSISDN muss 8 Ziffern lang sein';\r\n            this.msisdnLength = 8;\r\n        } else if (this.model.temp1 === '0151' || this.model.temp1 === '0176') {\r\n            this.hintVF = '8-Stellige MSISDN eingeben';\r\n            this.errorMessage = 'MSISDN muss 8 Ziffern lang sein';\r\n            this.msisdnLength = 8;\r\n        } else {\r\n            this.hintVF = '7-Stellige MSISDN eingeben';\r\n            this.errorMessage = 'MSISDN muss 7 Ziffern lang sein';\r\n            this.msisdnLength = 7;\r\n        }\r\n\r\n        this.valoptNumber = this.getNumberValidation();\r\n\r\n        this.setState({ changed: true, input: e.target.value });\r\n    }\r\n\r\n    private onChange(e: IControlValue) {\r\n        let v = e.value;\r\n\r\n        if (e.type === EControlType.date) {\r\n            v = e.dateValue;\r\n        };\r\n\r\n        if (this.model.brandKey === BrandKeys.dsl) {\r\n            this.model.ecusername = this.model.temp1 + '-' + this.model.temp2;\r\n        };\r\n\r\n        Global.setValueByPath(this.model, e.name, v);\r\n        this.valoptNumber = this.getNumberValidation();\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private preSearch = (e) => {\r\n        if (this.model.brandKey == BrandKeys.dsl || !this.dc.canRunAvailability()) {\r\n            this.startSearch(e, undefined);\r\n        } else if (this.model.brandKey == BrandKeys.otelo) {\r\n            this.startSearch(e, undefined);\r\n        } else if (this.model.brandKey == BrandKeys.otelo) {\r\n            this.startSearch(e, undefined);\r\n        } else {\r\n\r\n            let res = ValidationWrapper.validateFormular(undefined, true, ToolSearchExisting.containerId);\r\n\r\n            if (!res) {\r\n                e.preventDefault();\r\n                return;\r\n            } else {\r\n                this.setState({ queryAvailability: true });\r\n                e.preventDefault();\r\n            }\r\n        };\r\n    };\r\n\r\n    private startSearch(ev: any, model: any) {\r\n        if (ev) {\r\n            ev.preventDefault();\r\n        };\r\n\r\n        if (!Global.easyApp.checkDefCon()) {\r\n            return;\r\n        };\r\n\r\n        if (this.model.brandKey !== BrandKeys.otelo) {\r\n            this.model.ecusername = this.model.temp1 + \"-\" + this.model.temp2;\r\n        }\r\n\r\n        if (this.model.brandKey == BrandKeys.vodafone || this.model.brandKey == BrandKeys.dsl) {\r\n            this.model.ecpassword = this.model.ecpassword.toUpperCase();\r\n        }\r\n\r\n        let res = ValidationWrapper.validateFormular(undefined, true, ToolSearchExisting.containerId);\r\n\r\n        this.canceled = false;\r\n\r\n        if (!res) {\r\n            return;\r\n        };\r\n\r\n        this.lastApi = undefined;\r\n        this.model.id = Global.getUniqueId();\r\n      \r\n        Global.hub.send(JSON.stringify(this.model), m.ERequestType.loadCustomer, undefined);\r\n\r\n        this.setState({ loading: true, queryAvailability: false });\r\n    };\r\n\r\n    private switchState(val: IControlValue) {\r\n\r\n        this.model.mode = Number.parseInt(val.id.replace('loginType_', ''));\r\n        this.setState({ type: this.model.mode });\r\n    };\r\n\r\n    private changeBrand(value: string) {\r\n        this.model.brandKey = value;\r\n        this.model.mode = m.EExistingCustomerLoginMode.password;\r\n        this.model.ecusername = '';\r\n        this.valoptNumber = this.getNumberValidation();\r\n        this.setState({ changed: true });\r\n\r\n        ValidationWrapper.validateFormular(undefined, false, ToolSearchExisting.containerId);\r\n    };\r\n};\r\n\r\nexport default ToolSearchExisting;","import * as React from 'react';\r\nimport '../errorMessage/errorMessage.scss';\r\n\r\nexport interface IErrorMessageProps {\r\n    visible: boolean;\r\n    text: string;\r\n};\r\n\r\n\r\n\r\n\r\nexport class ErrorMessage extends React.Component<IErrorMessageProps> {\r\n    private hasAction: boolean = false;\r\n    constructor(props: IErrorMessageProps) {\r\n        super(props);\r\n\r\n\r\n\r\n        this.state = {\r\n            visible: this.props.visible,\r\n            text: this.props.text\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IErrorMessageProps) {\r\n        this.setState({ visible: next.visible });\r\n    };\r\n\r\n    public render() {\r\n\r\n\r\n        let ctrl = <></>;\r\n\r\n        this.props.visible? ctrl=(<div className=\"errorMessageContainer\"><h3 >{this.props.text}</h3></div>) : ctrl=<></>\r\n\r\n        return ctrl;\r\n    };\r\n\r\n\r\n\r\n\r\n};\r\n\r\nexport default ErrorMessage;","import * as React from 'react';\r\nimport html2canvas from 'html2canvas';\r\n\r\n\r\n\r\nexport interface IScreenshotProps {\r\n    // onStartCapture: any;\r\n    onEndCapture: (screenCapture: string)=> void;\r\n};\r\n\r\nexport interface IScreenshotState {\r\n    on: boolean,\r\n    startX: any,\r\n    startY: any,\r\n    endX: any,\r\n    endY: any,\r\n    crossHairsTop: any,\r\n    crossHairsLeft: any,\r\n    isMouseDown: boolean,\r\n    windowWidth: any,\r\n    windowHeight: any,\r\n    borderWidth: any,\r\n    cropPositionTop: any,\r\n    cropPositionLeft: any,\r\n    cropWidth: any,\r\n    cropHeigth: any,\r\n    imageURL: any\r\n};\r\n\r\n\r\nexport default class ScreenCapture extends React.Component<IScreenshotProps, IScreenshotState>  {\r\n    private mouse: any;\r\n\r\n    static defaultProps = {\r\n        onStartCapture: () => null,\r\n         onEndCapture: (screenCapture: string) => null\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            on: false,\r\n            startX: 0,\r\n            startY: 0,\r\n            endX: 0,\r\n            endY: 0,\r\n            crossHairsTop: 0,\r\n            crossHairsLeft: 0,\r\n            isMouseDown: false,\r\n            windowWidth: 0,\r\n            windowHeight: 0,\r\n            borderWidth: 0,\r\n            cropPositionTop: 0,\r\n            cropPositionLeft: 0,\r\n            cropWidth: 0,\r\n            cropHeigth: 0,\r\n            imageURL: ''\r\n        }\r\n\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.handleWindowResize()\r\n        window.addEventListener('resize', this.handleWindowResize)\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        window.removeEventListener('resize', this.handleWindowResize)\r\n    }\r\n\r\n    handleWindowResize = () => {\r\n        const windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n        const windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n\r\n        this.setState({\r\n            windowWidth,\r\n            windowHeight\r\n        })\r\n    }\r\n\r\n    handStartCapture = () => this.setState({ on: true })\r\n\r\n    handleMouseMove = (e) => {\r\n        this.mouse = e;\r\n\r\n        const { isMouseDown, windowWidth, windowHeight, startX, startY, borderWidth } = this.state\r\n\r\n        let cropPositionTop = startY\r\n        let cropPositionLeft = startX\r\n        const endX = e.clientX\r\n        const endY = e.clientY\r\n        const isStartTop = endY >= startY\r\n        const isStartBottom = endY <= startY\r\n        const isStartLeft = endX >= startX\r\n        const isStartRight = endX <= startX\r\n        const isStartTopLeft = isStartTop && isStartLeft\r\n        const isStartTopRight = isStartTop && isStartRight\r\n        const isStartBottomLeft = isStartBottom && isStartLeft\r\n        const isStartBottomRight = isStartBottom && isStartRight\r\n        let newBorderWidth = borderWidth\r\n        let cropWidth = 0\r\n        let cropHeigth = 0\r\n\r\n        if (isMouseDown) {\r\n            if (isStartTopLeft) {\r\n                newBorderWidth = `${startY}px ${windowWidth - endX}px ${windowHeight - endY}px ${startX}px`\r\n                cropWidth = endX - startX\r\n                cropHeigth = endY - startY\r\n            }\r\n\r\n            if (isStartTopRight) {\r\n                newBorderWidth = `${startY}px ${windowWidth - startX}px ${windowHeight - endY}px ${endX}px`\r\n                cropWidth = startX - endX\r\n                cropHeigth = endY - startY\r\n                cropPositionLeft = endX\r\n            }\r\n\r\n            if (isStartBottomLeft) {\r\n                newBorderWidth = `${endY}px ${windowWidth - endX}px ${windowHeight - startY}px ${startX}px`\r\n                cropWidth = endX - startX\r\n                cropHeigth = startY - endY\r\n                cropPositionTop = endY\r\n            }\r\n\r\n            if (isStartBottomRight) {\r\n                newBorderWidth = `${endY}px ${windowWidth - startX}px ${windowHeight - startY}px ${endX}px`\r\n                cropWidth = startX - endX\r\n                cropHeigth = startY - endY\r\n                cropPositionLeft = endX\r\n                cropPositionTop = endY\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            crossHairsTop: e.clientY,\r\n            crossHairsLeft: e.clientX,\r\n            borderWidth: newBorderWidth,\r\n            cropWidth,\r\n            cropHeigth,\r\n            cropPositionTop: cropPositionTop,\r\n            cropPositionLeft: cropPositionLeft\r\n        })\r\n    }\r\n\r\n    handleMouseDown = (e) => {\r\n        const startX = e.clientX\r\n        const startY = e.clientY\r\n\r\n        this.setState((prevState) => ({\r\n            startX,\r\n            startY,\r\n            cropPositionTop: startY,\r\n            cropPositionLeft: startX,\r\n            isMouseDown: true,\r\n            borderWidth: `${prevState.windowWidth}px ${prevState.windowHeight}px`\r\n        }))\r\n    }\r\n\r\n    handleMouseUp = (e) => {\r\n        this.handleClickTakeScreenShot(e)\r\n        this.setState({\r\n            on: false,\r\n            isMouseDown: false,\r\n            borderWidth: 0\r\n        })\r\n\r\n    }\r\n\r\n    handleClickTakeScreenShot = (e) => {\r\n        const { cropPositionTop, cropPositionLeft, cropWidth, cropHeigth } = this.state\r\n        \r\n        const elementerror =  document.querySelector(\"body\");\r\n        \r\n        if (elementerror !== null) {\r\n           \r\n\r\n            html2canvas(elementerror).then(canvas => {\r\n\r\n                // document.body.appendChild(canvas);\r\n                let croppedCanvas = document.createElement('canvas')\r\n                let croppedCanvasContext = croppedCanvas.getContext('2d')\r\n\r\n                croppedCanvas.width = cropWidth;\r\n                croppedCanvas.height = cropHeigth;\r\n                \r\n                //console.log('crop:'+ cropPositionLeft +'x'+cropPositionTop+'x'+cropWidth+'x'+cropHeigth);\r\n\r\n                if (croppedCanvasContext !== null) {\r\n                    croppedCanvasContext.drawImage(canvas, cropPositionLeft, cropPositionTop, cropWidth, cropHeigth, 0, 0, cropWidth, cropHeigth);\r\n                }\r\n\r\n                 this.props.onEndCapture(croppedCanvas.toDataURL());\r\n            },reason=>{\r\n            });\r\n\r\n            this.setState({\r\n                crossHairsTop: 0,\r\n                crossHairsLeft: 0\r\n              });\r\n          \r\n\r\n        }\r\n    }\r\n\r\n    renderChild = () => {\r\n        const { children } = this.props\r\n\r\n        const props = {\r\n            onStartCapture: this.handStartCapture\r\n        }\r\n\r\n        if (typeof children === 'function') return children(props)\r\n        return children\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            on,\r\n            crossHairsTop,\r\n            crossHairsLeft,\r\n            borderWidth,\r\n            isMouseDown,\r\n            imageURL\r\n        } = this.state\r\n\r\n        if (!on) return this.renderChild()\r\n\r\n        return (\r\n            <div\r\n                onMouseMove={this.handleMouseMove}\r\n                onMouseDown={this.handleMouseDown}\r\n                onMouseUp={this.handleMouseUp}\r\n            >\r\n                {this.renderChild()}\r\n                <div\r\n                    className={`overlay ${isMouseDown && 'highlighting'}`}\r\n                    style={{ borderWidth }}\r\n                />\r\n                <div\r\n                    className=\"crosshairs\"\r\n                    style={{ position: 'fixed', left: (crossHairsLeft) + 'px', top: (crossHairsTop) + 'px' }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport * as page from '../../../src/components/page/index';\r\nimport { EPopupType, IPopupConfig } from '../../components/dialogs/popup';\r\nimport * as cmp from '../../components/index';\r\nimport { EStatusState } from '../../components/support/status';\r\nimport { EApiResponseStatus, IApiSummary } from '../../interfaces';\r\nimport IUser from '../../models/environment/user';\r\nimport * as m from '../../models/index';\r\nimport Api from '../../utils/api';\r\nimport Global from '../../utils/Global';\r\nimport GlobalJSX from '../../utils/GlobalJSX';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport StorageHelper from '../../utils/storage';\r\nimport ScreenCapture from './ScreenshotTool/Screenshot';\r\nimport './ScreenshotTool/style.css';\r\n\r\n\r\n\r\n\r\n// import html2canvas from 'html2canvas';\r\n\r\nexport interface IUserFeedbackProps {\r\n    // onChange: any;\r\n    // parent: any;\r\n    // processId: any;\r\n\r\n    summary: IApiSummary;\r\n    parent?: any;\r\n}\r\n\r\nexport interface IUserFeedbackState {\r\n    changed: boolean;\r\n    hideShowArea: boolean;\r\n    screenCapture: string;\r\n    successFeedback: boolean;\r\n    screenCaptureVisibility: boolean;\r\n    canvas: boolean;\r\n    screenshotStarted: boolean;\r\n\r\n\r\n}\r\n\r\nexport interface IFeedback {\r\n    orderId: string;\r\n    notes: string;\r\n    screenshot: string;\r\n    username: string;\r\n    error_message: string;\r\n}\r\n\r\nexport class UserFeedback extends React.Component<IUserFeedbackProps, IUserFeedbackState> {\r\n    public static containerId: string = 'userFeedback';\r\n    private processPopupState: EPopupType = EPopupType.custom;\r\n    public user?: IUser;\r\n    public model: IFeedback;\r\n\r\n    readonly cfg = Global.getConfiguration();\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.user = StorageHelper.getUser();\r\n        let ord = StorageHelper.getOrders();\r\n        this.model = { orderId: ord !== undefined && ord.length >0 ? ord[0].id : '', notes: '', screenshot: '', username: this.user ? this.user.username : '', error_message: this.props.summary.message };\r\n\r\n        this.state = {\r\n            hideShowArea: false,\r\n            changed: false,\r\n            screenCapture: '',\r\n            successFeedback: false,\r\n            screenCaptureVisibility: false,\r\n            canvas: false,\r\n            screenshotStarted: false\r\n        };\r\n    };\r\n\r\n    public render() {\r\n\r\n        let ctrl =\r\n            (\r\n            \r\n                <>\r\n                    {this.state.successFeedback ? this.renderThankYouPopUp() : null}\r\n                    {this.renderBugReporter()}\r\n                   \r\n                    <ScreenCapture onEndCapture={this.handleScreenCapture}>\r\n                        {({ onStartCapture }) => (  \r\n                           this.state.screenCaptureVisibility?  this.screenShotTool(onStartCapture) : <></>\r\n                        ) }\r\n                    </ScreenCapture>\r\n                </>\r\n            )\r\n        return ctrl;\r\n    };\r\n\r\n    private renderBugReporter(): JSX.Element {\r\n        let ctrl = (\r\n            <Container className=\"full\">\r\n                <Row>\r\n                    <Col xs={12} md={12} className=\"np\">\r\n                        <h2 className=\"text-muted font-weight-bold\" >Es ist ein Fehler aufgetreten</h2>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={10} md={10}>\r\n                        <div id={\"capture\"}>\r\n                            {\r\n                                this.props.summary.answerError ?\r\n                                    <>\r\n                                        <Row>\r\n                                            <Col xs={8} md={8}>\r\n                                                <h4 className=\"text-muted font-weight-bolder mb-0\">Das ist passiert:</h4>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={8} md={8}>\r\n                                                <p className=\"text-muted font-weight-lighter mt-0\">\r\n                                                    {this.props.summary.answerError.message}\r\n                                                </p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </>\r\n                                    :\r\n                                    <Row>\r\n                                        <Col xs={8} md={8}>\r\n                                            <p id=\"errorcanvas\" className=\"text-muted font-weight-lighter mt-0\">\r\n                                                {this.props.summary.message}\r\n                                            </p>\r\n                                        </Col>\r\n                                    </Row>\r\n                            }\r\n                        </div>\r\n\r\n                        {\r\n                            this.props.summary.answerError ?\r\n                                <>\r\n                                    <Row>\r\n                                        <Col xs={8} md={8}>\r\n                                            <h4 className=\"text-muted font-weight-bolder mb-0\">Was kannst du tun?</h4>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs={8} md={8}>\r\n                                            <p className=\"text-muted font-weight-lighter mt-0\">\r\n                                                {this.props.summary.answerError.suggestion}\r\n                                            </p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                : null\r\n                        }\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col xs={2} md={2}>\r\n                                <cmp.Status status={EStatusState.failed} id=\"stfail\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={12} md={12} className=\"np\">\r\n                        <page.LButton\r\n                            type={m.ELButtonType.linkWithIconRight}\r\n                            css=\"action4 right\"\r\n                            icon={this.state.hideShowArea ? 'chevron-up-small' : 'chevron-down-small'}\r\n                            text=\"Fehler melden\"\r\n                            onClick={() => {\r\n                                this.setState({ hideShowArea: !this.state.hideShowArea });\r\n                            }} />\r\n                        {/* <h5 className=\"mb-0\">\r\n                            <button className=\"btn btn-link\" data-toggle=\"collapse\" style={{ color: \"#9400D3\" }} onClick={() => { this.setState({ hideShowArea: this.state.hideShowArea === 'show' ? 'hide' : 'show' }) }} data-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\">\r\n                                Fehler melden! {this.state.hideShowArea === \"show\" ? '△' : '▽'}\r\n                            </button>\r\n                        </h5> */}\r\n                    </Col>\r\n\r\n                    {\r\n                        this.state.hideShowArea ?\r\n                            <div id=\"collapseOne\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\r\n                                <div className=\"\">\r\n                                    Nutze unsere Meldefunktion, wenn dir unser Tip nicht helfen konnte. Nehme einen Screenshot auf und füge deine Beschreibung an. Wir schauen uns deinen Fehler schnellstmöligch an.\r\n                            </div>\r\n                                <Row className=\"justify-content-md-left\">\r\n                                    <Col xs={12} md={12} >\r\n                                        <page.LButton type={m.ELButtonType.buttonWithIconRight}\r\n                                            css=\"a1 fr\"\r\n                                            id=\"\"\r\n                                            text={\"Fehler melden\"}\r\n                                            onClick={() => {\r\n                                                this.setState({ screenCaptureVisibility: true })\r\n                                            }} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n\r\n\r\n                                </Row>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </Row>\r\n\r\n\r\n            </Container>\r\n        )\r\n\r\n        return <div id={UserFeedback.containerId}>\r\n            {ctrl}\r\n        </div>;\r\n    }\r\n\r\n\r\n\r\n    private screenShotTool(onStartCapture: any): JSX.Element {\r\n\r\n        const { screenCapture, screenCaptureVisibility } = this.state\r\n\r\n        // let cfg: IBlockConfiguration = {\r\n        //     title: \"\",\r\n        //     transparent: false,\r\n        //     style: '',\r\n        //     styleContainer: '',\r\n        //     collapsible: false,\r\n        //     id: \"\",\r\n        //     collapsed: false,\r\n        // };\r\n\r\n        // return <div id={UserFeedback.containerId}>\r\n        //     <BaseBlock config={cfg}>\r\n        //         {ctrl}\r\n        //     </BaseBlock>\r\n        // </div>;       \r\n\r\n\r\n        let ctrl = (\r\n            <Container className=\"full tal\">\r\n                <Row>\r\n                    <Col xs={12} md={12}>\r\n                        <p className=\"text-muted font-weight-lighter mt-0\">Ein Screenshot von deinem Bildschirm wurde erfolreich aufgenommen.</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={12}>\r\n\r\n\r\n                        <page.LButton\r\n                            type={m.ELButtonType.linkWithIconRight}\r\n                            css=\"action4 right\"\r\n                            text=\"Screenshot anzeigen\"\r\n                            onClick={onStartCapture} />\r\n                        {/* <button className=\"btn btn-link \" style={{ color: \"#9400D3\", textAlign: \"left\" }} onClick={this.screenshot} >\r\n                            Screenshot anzeigen\r\n                        </button> */}\r\n\r\n                        <img src={this.state.screenCapture !== null ? this.state.screenCapture : ''}></img>\r\n\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={12} md={12}>\r\n                        <p className=\"text-muted font-weight-lighter mt-0\">Beschreibung:</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12} xs={12}>\r\n                        <div className=\"form-group\">\r\n                            <textarea id='notes' style={{ backgroundColor: '#DCDCDC', borderRadius: '15px' }}\r\n                                onChange={(e) => { this.model.notes = e.target.value }}\r\n                                className=\"form-control\"\r\n                                rows={5}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n\r\n        let cfg: IPopupConfig = {\r\n            props: {\r\n                id: 'dynamicPopup',\r\n                title: 'Fehler melden',\r\n                visible: true,\r\n                closable: false,\r\n                style: 'tal',\r\n                type: EPopupType.custom,\r\n                height: 500,\r\n                width: 800\r\n            },\r\n            content: ctrl,\r\n            action: <>\r\n                <page.LButton type={m.ELButtonType.buttonWithIconRight}\r\n                    css=\"a1 fl\"\r\n                    id=\"\"\r\n                    text={MainTexts.cancel}\r\n                    onClick={() => {\r\n                        this.setState({ screenCaptureVisibility: false });\r\n                    }} />\r\n                <page.LButton type={m.ELButtonType.buttonWithIconRight}\r\n                    css=\"a1 fr\"\r\n                    id=\"\"\r\n                    text={\"Absenden\"}\r\n                    onClick={() => {\r\n                        Api.fetch('activation/saveFeedback', this.model, \"POST\", (api) => {\r\n                            if(api.status === EApiResponseStatus.ok  )\r\n                            this.setState({ screenCaptureVisibility: false, successFeedback: true })\r\n                        });\r\n\r\n                    }} />\r\n            </>\r\n        };\r\n\r\n        return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n    };\r\n\r\n    handleScreenCapture = (screenCapture: string) => {\r\n        \r\n        this.model.screenshot = screenCapture;\r\n        this.setState({\r\n            screenCapture: screenCapture,\r\n            changed: true,\r\n            screenCaptureVisibility: true\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    public screenshot() {\r\n        var el = document.getElementById('capture');\r\n\r\n        if (el) {\r\n\r\n            // html2canvas(el).then(function(canvas) {\r\n            //     canvas.id=\"captured\"\r\n            //  document.body.appendChild(canvas);\r\n\r\n            // });   \r\n        }\r\n        // const { screenCapture } = this.state;\r\n        // <ScreenCapture onEndCapture={this.handleScreenCapture}>\r\n        //     {({ onStartCapture }) => (\r\n        //         <React.Fragment>\r\n\r\n        //             <button onClick={onStartCapture}>Capture</button>\r\n\r\n        //             <img src={screenCapture} />\r\n        //   </Fragment>\r\n        //     )}\r\n        // </ScreenCapture>\r\n\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    private renderThankYouPopUp(): JSX.Element {\r\n        let cfg: IPopupConfig = {\r\n            props: {\r\n                id: 'dynamicPopup',\r\n                title: 'Danke für dein Feedback!',\r\n                visible: true,\r\n                closable: false,\r\n                style: 'tal',\r\n                type: EPopupType.custom\r\n            },\r\n            content: <Container className=\"full\">\r\n                <Row>\r\n                    <Col xs={12} md={12}>\r\n                        <p className=\"text-muted font-weight-lighter mt-0\">Deine Fehlermeldung wurde erfolgreich übermittelt.</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>,\r\n            action: <>\r\n                <page.LButton type={m.ELButtonType.buttonWithIconRight}\r\n                    css=\"a1 fr\"\r\n                    id=\"\"\r\n                    text={\"OK\"}\r\n                    onClick={() => {\r\n                        this.setState({ screenCaptureVisibility: false, successFeedback: false })\r\n                    }} />\r\n            </>\r\n        };\r\n\r\n        return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n        // return <cmp.Popup\r\n        //     type={this.processPopupState}\r\n        //     visible={this.state.successFeedback}\r\n        //     closable={false}\r\n        //     id=\"thankYou\"\r\n        //   height={300}\r\n        //     onDismiss={() => { }}>\r\n        //     <cmp.PopupBody >\r\n        //         <Container>\r\n        //         <Row className=\"justify-content-md-center\">\r\n        //             <Col xs={12} md={12}>\r\n        //                 <h2 className=\"text-muted font-weight-bold\" >Danke für dein Feedback!</h2>\r\n        //             </Col>\r\n        //         </Row>\r\n        //             <Row className=\"justify-content-md-center\">\r\n        //                 <Col xs={12} md={12}>\r\n        //                     <p className=\"text-muted font-weight-lighter mt-0\">Deine Fehlermeldung wurde erfolgreich übermittelt.</p>\r\n        //                 </Col>\r\n        //             </Row>\r\n        //             <Row>\r\n        //             </Row>\r\n        //             <Row className=\"justify-content-md-center\">\r\n        //                 <Col xs={4} md={4} >\r\n        //                     <page.LButton type={m.ELButtonType.buttonWithIconRight}\r\n        //                         css=\"a1\"\r\n        //                         id=\"\"\r\n        //                         text={MainTexts.ok}\r\n        //                         onClick={() => {\r\n        //                             this.setState({ successFeedback: false })\r\n        //                         }} />\r\n        //                 </Col>\r\n        //             </Row>\r\n        //         </Container>\r\n        //         <></>\r\n        //     </cmp.PopupBody>\r\n        //     <></>\r\n        // </cmp.Popup>\r\n    };\r\n};\r\n\r\nexport default UserFeedback;","import * as React from 'react';\r\nimport * as cmp from '../../../components/index';\r\nimport * as i from '../../../interfaces/index';\r\nimport { ERequestStatus } from '../../../models/page/diverse';\r\nimport UserFeedback from '../../../screens/test/feedback';\r\nimport Api from '../../../utils/api';\r\nimport Global from '../../../utils/Global';\r\nimport { OrderingTexts } from '../../../utils/messages';\r\nimport { LClear } from '../../page';\r\nimport { EStatusState } from '../../support/status';\r\n\r\nexport interface IActivationResponseStatusProps {\r\n    api?: i.IApiResponse;\r\n    process?: i.IProcessStatus;\r\n    apiState: EStatusState;\r\n    message?: any;\r\n    title?: any;\r\n    processCallback: any;\r\n    completedCallback?: any;\r\n    timerId?: string;\r\n    resetTimer?: boolean;\r\n    autoRestart?: boolean;\r\n    parent?: any;\r\n};\r\n\r\nexport class ActivationResponseStatus extends React.Component<IActivationResponseStatusProps, i.IBaseComponentState> {\r\n    private api?: i.IApiResponse;\r\n    private process?: i.IProcessStatus;\r\n\r\n    constructor(props: IActivationResponseStatusProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IActivationResponseStatusProps) {\r\n        this.api = next.api;\r\n        this.process = next.process;\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = <></>;\r\n        let action: JSX.Element = <></>;\r\n        let info: string = '';\r\n        let css: string = '';\r\n\r\n        //this.preapre();\r\n\r\n        this.process = this.props.process;\r\n\r\n        if (this.props.apiState === EStatusState.undefined) {\r\n            return <div>status: {this.props.apiState}</div>\r\n        }\r\n        else if (this.props.apiState === EStatusState.inprocessTimer || this.props.apiState === EStatusState.inprocess) {\r\n            info = OrderingTexts.inProcess;\r\n        } else if (this.props.apiState == EStatusState.done) {\r\n            info = OrderingTexts.success;\r\n        } else if (this.props.apiState === EStatusState.warning) {\r\n            info = OrderingTexts.info;\r\n        }\r\n        else {\r\n            info = OrderingTexts.error;\r\n        };\r\n\r\n        action = <cmp.Status\r\n            counter={this.props.resetTimer ? cmp.Status.defaultTimer : undefined}\r\n            id={this.props.timerId ? this.props.timerId : 'status_' + Global.getUniqueId()}\r\n            status={this.props.apiState}\r\n            autoRestart={true}\r\n            completedCallback={() => { this.props.completedCallback!(); }}\r\n            stepCallback={this.props.processCallback} />;\r\n\r\n        let sum: i.IApiSummary = Api.parseSummary(this.api, this.process);\r\n\r\n        //console.log('summary:' + this.props.apiState, sum);\r\n\r\n        if (sum.status === ERequestStatus.failed) {\r\n            css += ' error';\r\n        } else if (sum.status === ERequestStatus.done) {\r\n            css += ' success';\r\n        } else if (sum.status === ERequestStatus.corrected) {\r\n            css += ' warn';\r\n        }\r\n\r\n        let text = (sum.code ? sum.code + ': ' : '') + sum.message;\r\n\r\n        if(this.props.message) {\r\n            info = this.props.title;\r\n            text = this.props.message;\r\n        }\r\n\r\n        text = text.replace('undefined', '').replace('null', '');\r\n\r\n        ctrl = <div className={'apistatus ' + css}>\r\n            <div className='info'>\r\n                {info}\r\n            </div>\r\n\r\n            <div className=\"act\">\r\n                {action}\r\n            </div>\r\n\r\n            {\r\n\r\n                sum.status != ERequestStatus.tempResult &&\r\n                <div className='details'>\r\n                    {text}\r\n                </div>\r\n            }\r\n\r\n            <LClear />\r\n        </div>;\r\n\r\n        if (sum.status === ERequestStatus.failed) {\r\n        \r\n            if ( this.props.parent && this.props.parent.props.parent.componentId === 'welcomescreen') {\r\n                ctrl = (<div className={'apistatus ' + css}>\r\n                    <div className='info'>\r\n                        {info}\r\n                    </div>\r\n\r\n                    <div className=\"act\">\r\n                        {action}\r\n                    </div>\r\n\r\n                    <div className='details'>\r\n                        {sum.message}\r\n                    </div>\r\n                </div>)\r\n            } else {\r\n                ctrl = <UserFeedback summary={sum} />\r\n            }\r\n\r\n        };\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default ActivationResponseStatus;","import * as React from 'react';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { LClear, LButton } from '.';\r\nimport { ELButtonType } from '../../models';\r\n\r\nexport interface IBlockBaseProps {\r\n    children: JSX.Element[] | JSX.Element;\r\n    config: IBlockConfiguration;\r\n};\r\n\r\nexport interface IBlockBaseState {\r\n    changed: boolean;\r\n    //collapsed: boolean;\r\n};\r\n\r\nexport interface IBaseBlockActionProps {\r\n    children: JSX.Element[];\r\n};\r\n\r\nexport class BaseBlockAction extends React.Component<IBaseBlockActionProps, any> {\r\n    constructor(props:any) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        if(!this.props.children || this.props.children.length === 0) {return <></>;}\r\n        \r\n        return <div className=\"block-action\">\r\n                {this.props.children}\r\n            </div>\r\n    };\r\n};\r\n\r\nexport class BlockBase extends React.Component<IBlockBaseProps, IBlockBaseState>{    \r\n    private collapsed: boolean = false;\r\n    constructor(props: IBlockBaseProps){\r\n        super(props);\r\n\r\n        this.collapsed =  this.props.config.collapsed ? this.props.config.collapsed : false;\r\n\r\n        this.state = {\r\n            changed: false,\r\n            //collapsed: this.collapsed //this.props.config.collapsed ? this.props.config.collapsed : false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IBlockBaseProps) {\r\n        this.collapsed = next.config.collapsed ? next.config.collapsed : false;\r\n\r\n        this.setState({changed: true});\r\n    };\r\n\r\n    public render() {\r\n        let cls : string = 'block block-inner page-break-avoid';\r\n        let clsc: string = 'block-container';\r\n\r\n        if(this.props.config.transparent) {\r\n            cls += ' block-trans';\r\n        }\r\n\r\n        if(this.props.config.styleContainer) {\r\n            cls += ' ' + this.props.config.styleContainer;\r\n        }\r\n\r\n        if(this.props.config.style) {\r\n            clsc += ' ' + this.props.config.style;\r\n        }\r\n\r\n        if(this.collapsed) {\r\n            clsc += ' dn';\r\n        }\r\n\r\n\r\n        let ctrl = ( \r\n        <div className={cls} id={this.props.config.id}>\r\n            {\r\n                this.props.config.teaser ? this.props.config.teaser : null\r\n            }\r\n\r\n            {                \r\n                this.props.config.title && this.props.config.title.length > 0 ? \r\n                <div className=\"title\">\r\n                    <span>{this.props.config.title}</span>\r\n                    {this.props.config.titleDesc ? <div className=\"desct\">{this.props.config.titleDesc}</div> : null}\r\n                    {\r\n                            this.props.config.action ?  \r\n                            <div className=\"action\">\r\n                                {this.props.config.action}\r\n                            </div>\r\n                            : null\r\n                    }                    \r\n                    <div className=\"spacer-dim2\"></div>\r\n                </div>\r\n                 : null\r\n            }\r\n            {\r\n                this.props.config.collapsible ? this.renderCollapse() : null\r\n            }\r\n            <LClear/>\r\n            {this.props.config.subTitle ? <div className=\"subtitle\">{this.props.config.subTitle}</div> : null}\r\n            <div className={clsc}>\r\n                {this.props.children}\r\n            </div>\r\n            <div className=\"clear\"></div>\r\n        </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderCollapse() : JSX.Element {\r\n        let ctrl = <BaseBlockAction>\r\n            <LButton type={ELButtonType.iconImage}\r\n                        css=\"chevron\"\r\n                        icon={this.collapsed ? \"chevron-down\" : \"chevron-up\"}\r\n                        onClickEvent={(e, m) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            this.collapsed = !this.collapsed;\r\n\r\n                            this.setState({changed: true}, ()=>{\r\n                                if(this.props.config.onCollapse) {\r\n                                    this.props.config.onCollapse(this.collapsed);\r\n                                };                                \r\n                            });\r\n\r\n                            return false;\r\n                        }} />\r\n            <></>\r\n        </BaseBlockAction>;\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default BlockBase;","export {default as Address} from './ordering/address';\r\nexport {default as Availability} from './ordering/availability';\r\nexport {default as IActivation} from './ordering/activation';\r\n//export * from './ordering/product';\r\nexport {default as Tel} from './ordering/tel';\r\nexport * from './ordering/data';\r\nexport {default as ExistingCustomerLogin} from './existing/login';\r\nexport {default as Document} from './existing/document';\r\nexport {default as Customer} from './existing/customer';\r\nexport {default as ApiProcess} from './global/process';\r\nexport * from './global/tariffAndSub';\r\nexport * from './global/answerInfo';\r\nexport * from './page/infoItem';\r\nexport * from './global/apiModel';\r\nexport * from './ordering/mnp';\r\nexport * from './ordering/autotopup';\r\nexport * from './global/filter';\r\nexport * from './am/draft';\r\nexport * from './global/tooltip';\r\nexport * from './global/defcon';\r\nexport * from './ordering/customerAction';\r\nexport * from './existing/partnerCard';\r\nexport * from './global/mobileNumber';\r\nexport * from './existing/consumption';\r\n\r\nexport { EPortationType, EDesiredSchedule, ETelType, ELButtonType, EActivationTime, DateValue, ERequestType, ERequestStatus, EComponentState, EControlType, EExistingCustomerLoginMode} from './page/diverse';","import * as React from 'react';\r\n\r\nexport interface IActionProps {\r\n    children?: JSX.Element[];\r\n};\r\n\r\nexport class Action extends React.Component<IActionProps, any> {\r\n    constructor(props:IActionProps) {\r\n        super(props);\r\n    }; \r\n\r\n    public render() {\r\n        if(!this.props.children) { return <></>; }\r\n\r\n        let ctrl = (\r\n            <>\r\n            {this.props.children.map((i,idx)=>(i))}\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default Action;","export {default as PopupBody} from \"./dialogs/body\";\r\nexport {default as Popup} from  \"./dialogs/popup\";\r\nexport {default as Action} from \"./dialogs/action\";\r\nexport {default as Status} from './support/status';\r\nexport {default as InputWrapper} from './page/inputWrapper';\r\nexport * from '../components/page/index';\r\n\r\n\r\n/*\r\nexport {default as acpr} from \"./ordering/process/index\";\r\nexport {default as ActivationActions} from \"./ordering/process/activationActions\";\r\nexport {default as ActivationTariff} from \"./ordering/process/activationTariff\";\r\nexport {default as ActivationSummary} from \"./ordering/process/activationSummary\";\r\nexport {default as ActivationProgress} from \"./ordering/process/activationProgress\";\r\nexport {default as ActivationPreview} from \"./ordering/process/activationPreview\";\r\nexport {default as ActivationMsisdn} from \"./ordering/process/activationMsisdn\";\r\nexport {default as ActivationHardware} from \"./ordering/process/activationHardware\";\r\nexport {default as ActivationCustomerData} from \"./ordering/process/activationCustomerData\";\r\nexport {default as ActivationContractContainer} from \"./ordering/process/activationContractContainer\";\r\nexport {default as ActivationContractBlock} from \"./ordering/process/activationContractBlock\";\r\nexport {default as ActivationBlock} from \"./ordering/process/activationBlock\";\r\n*/","import * as React from 'react';\r\n\r\nimport '../test/progressBar.scss';\r\n\r\nexport interface IProgressBarProps {\r\n    maxValue: number;\r\n    initialValue: number;\r\n    \r\n    label: string;\r\n};\r\n\r\nexport class ProgressBar extends React.Component<IProgressBarProps> {\r\n    constructor(props: IProgressBarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            maxValue: '',\r\n            initialValue: '',          \r\n            label: '',\r\n        };\r\n    };\r\n\r\n\r\n\r\n    public render() {\r\n\r\n        let ctr = <></>;\r\n\r\n        ctr = (\r\n            <div>\r\n           \r\n            <progress id=\"bar\" max={this.props.maxValue} value={this.props.initialValue}></progress>\r\n            <label className=\"lowerLabel\" htmlFor=\"bar\">   {this.props.label}  </label>\r\n            </div>\r\n     );\r\n\r\n        return ctr;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport default ProgressBar;","export class ErrorUI{\r\n    public username: string = '';\r\n    public url: string = '';\r\n    public error: string = '';\r\n    public data: string = '';\r\n}","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { EPopupType, IPopupConfig } from '../../components/dialogs/popup';\r\nimport BaseBlock from '../../components/page/block';\r\nimport LButton from '../../components/page/button';\r\nimport * as page from '../../components/page/index';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { EControlType, ELButtonType } from '../../models/page/diverse';\r\nimport { mapDispatchToProps, mapStateToProps } from '../../store/index';\r\nimport Global from '../../utils/Global';\r\nimport GlobalJSX from '../../utils/GlobalJSX';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport StorageHelper from '../../utils/storage';\r\nimport { ErrorUI } from './ErrorUI';\r\n\r\nexport interface ITestState {\r\n    customVisible: boolean;\r\n    pleaseWaitVisible: boolean;\r\n    confirmVisible: boolean;\r\n    table1: boolean;\r\n    table2: boolean;\r\n    responseError: boolean;\r\n    iframeSrc: string;\r\n};\r\n\r\nexport interface IDataTable2 {\r\n    OrderFrom: string, //make the field Date type\r\n    Status: string,\r\n    NumberOfProducts: string,\r\n    TotalPriceEuro: string,\r\n};\r\nexport interface IDataTable1 {\r\n    ProductGroup: string,\r\n    Picture: string,\r\n    Surname: string,\r\n    Availability: string,\r\n    PriceInEuro: string,\r\n    Amount: any;\r\n\r\n};\r\n\r\nexport class TestScreenComponent extends React.Component<any, ITestState> {\r\n\r\n    private model: ErrorUI = new ErrorUI();\r\n    private errorFromReponse: ErrorUI = new ErrorUI();\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.timerCompleted = this.timerCompleted.bind(this);\r\n        this.onConfirmNegative = this.onConfirmNegative.bind(this);\r\n\r\n        Global.easyApp.setTitle(\"test\");\r\n\r\n        this.showConfirm = this.showConfirm.bind(this);\r\n        this.showCustom = this.showCustom.bind(this);\r\n        this.showWait = this.showWait.bind(this);\r\n        this.closeAll = this.closeAll.bind(this);\r\n        this.onclick = this.onclick.bind(this);\r\n\r\n        this.model.error = 'this is test error';\r\n        this.model.url = 'test url';\r\n        this.model.data = \"test data\";\r\n        this.model.username = \"test username\"\r\n\r\n        this.state = {\r\n            customVisible: false,\r\n            pleaseWaitVisible: false,\r\n            confirmVisible: false,\r\n            table1: false,\r\n            table2: false,\r\n            responseError: false,\r\n            iframeSrc: 'https://apps.unitymedia.de/SpiceExternal/'\r\n        };\r\n    };\r\n\r\n    public timerCompleted() {\r\n\r\n    };\r\n\r\n    public clickme(s: string) {\r\n        alert(s);\r\n    };\r\n\r\n    public onclick(e) {\r\n        let dom: any;\r\n        if (e.target) { dom = e.target; } else { dom = e; }\r\n        if (!dom) { return; };\r\n\r\n        if (dom.classList.contains('thumb-blister')) {\r\n            return;\r\n        } else {\r\n            this.onclick(dom.parentNode);\r\n        }\r\n    };\r\n\r\n    public getHtml() {\r\n        return '<div class=\"thumb thumb-blister vf\" action=\"12\"><div class=\"title\"><div class=\"inner\">RED XS</div></div> <div class=\"subtitle\"><div class=\"inner\">ALLET-FLAT</div></div> <div class=\"teaser\"><div class=\"inner\">3 M o. BASISPREIS</div></div> <div class=\"price\">  <table><tr><td rowspan=\"2\" class=\"price-unit\">19,</td><td class=\"price-subunit\">99</td></tr><tr><td class=\"price-desc\">/MTL.</td></tr></table>  </div>  <div class=\"icon iicon red arrow-blister\"></div> </div>';\r\n    };\r\n\r\n    public render() {\r\n        let cfg1: IBlockConfiguration = {\r\n            title: '',\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: 'block-innerMiddle',\r\n            collapsible: false,\r\n            collapsed: false\r\n        };\r\n\r\n        // const pagingProps = { page: 1, count: cfg.pageSize, type: EPagingType.local };\r\n\r\n        let ctrl = (\r\n            <div>\r\n                <div id=\"container-main\">\r\n                    <BaseBlock config={cfg1}>\r\n                        <LButton type={ELButtonType.linkSimple} text=\"popup\" css=\"fl\" onClick={() => {\r\n                            this.props.openPopup(this);\r\n                        }} />                        \r\n                        {/* <div>\r\n                            <LButton type={ELButtonType.linkSimple} text=\"HA-Portal\" css=\"fl\" onClick={() => {\r\n                                this.setState({ iframeSrc: 'https://secure.kabeldeutschland.de/businessSSO/UI/Login' });\r\n                            }} />\r\n                            <LButton type={ELButtonType.linkSimple} text=\"Spice\" css=\"fl\" onClick={() => {\r\n                                this.setState({ iframeSrc: 'https://apps.unitymedia.de/SpiceExternal' });\r\n                            }} />\r\n                        </div>\r\n                        <iframe src={this.state.iframeSrc} frameBorder=\"0\" style={{ width: '100%', height: '1800px', border: 0 }} /> */}\r\n                    </BaseBlock>\r\n                </div>\r\n                {/* <BaseBlock config={cfg1}>\r\n                    <Container style={{ borderRadius: '5px', borderColor: '#DCDCDC' }}>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <Col xs={4} md={4}>\r\n                                icon\r\n                            </Col>\r\n                            <Col xs={4} md={4}>\r\n                                <div style={{ color: '#E50800', fontWeight: 'bold' }}>Kombivorteil genutzt!</div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <Col xs={4} md={4} >\r\n                                - 5,- €\r\n                            </Col>\r\n                            <Col xs={4} md={4} >\r\n                                + 5 GB\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <Col xs={4} md={4} >\r\n                                <div style={{ color: '#828282' }}><strong>pro Monat</strong></div>\r\n                            </Col>\r\n                            <Col xs={4} md={4} >\r\n                                <div style={{ color: '#828282' }}><strong>pro Monat</strong></div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </BaseBlock> */}\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private expiredSessionUser(): JSX.Element {\r\n\r\n        let ctrl = (\r\n            <Container className=\"full tal\">\r\n                <Row>\r\n                    <Col xs={12} md={12} className=\"npr\">\r\n                        <page.LControl type={EControlType.textArea} id=\"login\"\r\n                        />{MainTexts.loginInfo}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n\r\n        let cfg: IPopupConfig = {\r\n            props: {\r\n                id: 'dynamicPopup',\r\n                title: 'Ihre Sitzung ist abgelaufen',\r\n                visible: true,\r\n                closable: false,\r\n                style: 'tal',\r\n                type: EPopupType.custom,\r\n                height: 200,\r\n                width: 500\r\n            },\r\n            content: ctrl,\r\n            action: <>\r\n\r\n                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                    css=\"a1 fr\"\r\n                    id=\"\"\r\n                    text={\"Zum Login\"}\r\n                    onClick={() => {\r\n                        let us = StorageHelper.getUser();\r\n                        if (!us) {\r\n                            Global.easyApp.gotoDashboard();\r\n                        }\r\n\r\n                    }} />\r\n            </>\r\n        };\r\n\r\n        return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n    };\r\n\r\n\r\n\r\n    private onConfirmPositive() {\r\n        this.setState({ customVisible: true });\r\n    };\r\n\r\n    private onConfirmNegative() {\r\n        this.setState({ customVisible: false });\r\n    };\r\n\r\n    private showConfirm() {\r\n        this.setState({ confirmVisible: true });\r\n    };\r\n\r\n    private showCustom() {\r\n        this.setState({ customVisible: true });\r\n    };\r\n\r\n    private showWait() {\r\n        this.setState({ pleaseWaitVisible: true });\r\n    };\r\n\r\n    private closeAll() {\r\n        this.setState({ pleaseWaitVisible: false, confirmVisible: false, customVisible: false });\r\n    };\r\n};\r\n\r\n//export default TestScreen;\r\n\r\nconst TestScreen = connect(mapStateToProps, mapDispatchToProps)(TestScreenComponent);\r\n  \r\nexport default TestScreen;\r\n  ","import * as React from 'react';\r\nimport App from '../App';\r\nimport { INavLink } from \"../interfaces/nav/INavLink\";\r\nimport { ImeiUploadType } from '../screens/am/imei';\r\nimport { MnpStatusScreen } from '../screens/am/mnpStatus';\r\nimport { EExistingCustomerMode } from '../screens/existing/customer';\r\nimport { IErrorScreenData } from '../screens/global/error';\r\nimport * as scr from '../screens/insex';\r\nimport { ImeiScreen } from '../screens/insex';\r\nimport TestScreen from '../screens/test/form';\r\nimport Api from './api';\r\nimport { AppIds } from './Defaults';\r\nimport Global from './Global';\r\nimport StorageHelper from './storage';\r\n\r\nexport class EasyRouter {\r\n    public static last?: INavLink;\r\n\r\n    public static routeUrl(item: INavLink) {\r\n        window.history.pushState(\"object or string\", \"Title\", item.url);\r\n    };\r\n\r\n    public static route(item?: INavLink): JSX.Element {\r\n        EasyRouter.last = item;\r\n\r\n        let found: boolean = false;\r\n\r\n        const queryString = require('query-string');\r\n\r\n        let cfg = Global.getConfiguration();\r\n\r\n        if (Global.easyApp.head) {\r\n            Global.easyApp.head.appendSub(null);\r\n        }\r\n\r\n        let ctrl: JSX.Element = <></>;\r\n\r\n        if (item) {\r\n            let uri: string = item.url.replace(Api.getAppUrl(), '');\r\n            let sa: string[] = uri.split('/');\r\n\r\n            if (uri.toLowerCase().indexOf('/test') >= 0) {\r\n                found = true;\r\n                ctrl = <TestScreen/>;\r\n            } else if (uri.toLowerCase().indexOf('/am/drafts') >= 0) {\r\n                found = true;\r\n                ctrl = <scr.DraftsScreen />;\r\n            } else if (uri.toLowerCase().indexOf('/am/cancellation') >= 0) {\r\n                found = true;\r\n                ctrl = <scr.CancellationScreen />;\r\n            } else if (uri.toLowerCase().indexOf('/am/mnp/portingstatus') >= 0) {\r\n                found = true;\r\n                ctrl = <scr.StatusPorting onChange={''} />;\r\n            } else if (uri.toLowerCase().indexOf('/apps/orderproducts/selectdeliveryaddress') >= 0) {\r\n                let sa = uri.toLocaleLowerCase().split('/');\r\n                if (sa.length === 5) {\r\n                    found = true;\r\n                    ctrl = <scr.OrderOverview onChange={''} />;\r\n                } else {\r\n                    found = true;\r\n                    ctrl = <scr.DeliveryAddress onChange={onchange} />;\r\n                }\r\n            } else if (uri.toLowerCase().indexOf('/am/contractmanager') >= 0) {\r\n                found = true;\r\n                ctrl = <scr.ContractManagerScreen />;\r\n            } else if (uri.toLowerCase().indexOf(\"/apps/orderproducts\") >= 0) {\r\n                found = true;\r\n                ctrl = <scr.OrderProduct onChange={''} />;\r\n\r\n            } else if (uri.toLowerCase().indexOf('/am/idscanner') >= 0) {\r\n                found = true;\r\n                ctrl = <scr.IDScannerScreen />;\r\n            }\r\n            else if (uri.toLowerCase().indexOf('/am/imei') >= 0) { // todo Imei\r\n                found = true;\r\n                ctrl = <ImeiScreen uploadType={ImeiUploadType.List} />;\r\n            } else if (uri.toLowerCase().indexOf('/am/contractmanager') >= 0) {\r\n                found = true;\r\n                ctrl = <scr.ContractManagerScreen />;\r\n            } else if (uri.toLowerCase().indexOf('/ordering/clear') >= 0) {\r\n                StorageHelper.resetOrders();\r\n                ctrl = <scr.WelcomeScreen />\r\n            } else if (uri == '' || uri == '/' || uri.toLowerCase().indexOf('/ordering/welcome') >= 0) {\r\n                StorageHelper.resetOrders();\r\n                found = true;\r\n                ctrl = <scr.WelcomeScreen />;\r\n            } else if (uri.toLowerCase().indexOf('/ordering/preview') >= 0) {\r\n                found = true;\r\n                ctrl = <scr.ProcessNewScreen id={sa[3]} preview={true} />;\r\n            } else if (uri.toLowerCase().indexOf('/ordering/new/') >= 0) {\r\n                found = true;\r\n                let processId = EasyRouter.getQueryVariable(item.url, 'id');\r\n                const prod = EasyRouter.getQueryVariable(item.url, 'product');\r\n                const brand = EasyRouter.getQueryVariable(item.url, 'brand');\r\n\r\n                ctrl = <scr.ProcessNewScreen id={processId} productId={prod} brandKey={brand} preview={false} />;\r\n            } else if (uri.toLowerCase().indexOf('/customer/') >= 0) {\r\n                found = true;\r\n                let sa = uri.toLocaleLowerCase().split('/');\r\n                let dm: EExistingCustomerMode = EExistingCustomerMode.main;\r\n                if (sa[2] == 'sim') { dm = EExistingCustomerMode.sim; }\r\n                else if (sa[2] == 'cancellation') { dm = EExistingCustomerMode.cancellation; }\r\n                else if (sa[2] == 'belatedporting') { dm = EExistingCustomerMode.belatedPorting; }\r\n                else if (sa[2] == 'imei') { dm = EExistingCustomerMode.imei; }\r\n\r\n                ctrl = <scr.CustomerScreen id={sa[3]} dataMode={dm} />;\r\n            } else if (uri.toLowerCase().indexOf('/user/password') >= 0) {\r\n                found = true;\r\n                ctrl = <scr.EditPasswordScreen />;\r\n            } else if (uri.toLowerCase().indexOf('/user/profile') >= 0) {\r\n                found = true;\r\n                ctrl = <scr.EditProfileScreen />;\r\n            } else if (uri.toLowerCase().indexOf('/user/dealer') >= 0) {\r\n                found = true;\r\n                ctrl = <scr.DealerScreen />;\r\n            } else if (uri.toLowerCase().indexOf('/am/administration') >= 0) {\r\n                found = true;\r\n                ctrl = <scr.AdministrationScreen />;\r\n            } else if (uri.toLowerCase().indexOf('/am/mnp/status') >= 0) {\r\n                found = true;\r\n                ctrl = <MnpStatusScreen />;\r\n            }\r\n\r\n            if (!Global.isDelaer(false)) {\r\n                App.setContainer(<scr.ErrorScreen data={{ code: 403.1 }} />, AppIds.container);\r\n\r\n                return <></>\r\n            };\r\n\r\n            if (found) {\r\n                let t = item.title ? item.title : cfg.appTitle;\r\n                document.title = t;\r\n                if (!item.skipState) {\r\n                    window.history.pushState(t, t, item.url);\r\n                }\r\n\r\n                App.setContainer(ctrl, AppIds.container);\r\n\r\n                return <></>;\r\n            } else {\r\n                let d: IErrorScreenData = { code: 404 };\r\n                App.setContainer(<scr.ErrorScreen data={d} />, AppIds.container);\r\n            }\r\n        }\r\n\r\n        var app = Global.FindReact(document.getElementById(AppIds.container));\r\n        return <scr.InitScreen parent={app} />\r\n    };\r\n\r\n    public static reload() {\r\n        EasyRouter.route(EasyRouter.last);\r\n    };\r\n\r\n    public static routeAndCallback(item: INavLink, callback: any) {\r\n        EasyRouter.route(item);\r\n\r\n        if (callback) {\r\n            callback();\r\n        };\r\n    };\r\n\r\n    public static getQueryVariable(url: string, name: string, fallback?: string): string {\r\n        var query = url;\r\n\r\n        if (url.indexOf('?') > 0) {\r\n            query = url.substring(url.indexOf('?') + 1);\r\n        }\r\n\r\n        var vars = query.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == name) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n\r\n        return fallback ? fallback : '';\r\n    }\r\n\r\n    public static isBlank(): boolean {\r\n        if (window.location.pathname.toLowerCase().indexOf('ordering/preview') >= 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nexport default EasyRouter;","import React from 'react';\r\nimport Global from './Global';\r\nimport * as i from '../interfaces/index';\r\nimport { HttpMethods, StorageKeys, AppIds, ErrorGroup } from '../utils/Defaults';\r\nimport StorageHelper from '../utils/storage';\r\nimport EasyRouter from './router';\r\nimport { ERequestStatus, IAnswerInfo } from '../models';\r\nimport linq from 'linq';\r\nimport * as page from '../components/page/index';\r\nimport * as dc from '../models/global/defcon';\r\nimport \"isomorphic-fetch\";\r\nimport { IAnswerError } from '../models/global/answerError';\r\nimport UserFeedback from '../screens/test/feedback';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport ReactDOMServer from 'react-dom/server';\r\n\r\nexport class Api {\r\n    public static follow(url: string) {\r\n        let cfg = Global.getConfiguration();\r\n\r\n        if (!url.startsWith(\"http\")) {\r\n            url = cfg.apiUrl + url;\r\n        }\r\n\r\n        window.open(url, \"_blank\");\r\n    };\r\n\r\n    public static fetch(url: string,\r\n        model: any,\r\n        method: string,\r\n        callback: any) {\r\n\r\n        let cfg = Global.getConfiguration();\r\n\r\n        if (!url.startsWith(\"http\")) {\r\n            url = cfg.apiUrl + url;\r\n        }\r\n\r\n        let what: any = {\r\n            method: !method ? HttpMethods.get : method,\r\n            credentials: 'include',\r\n            headers:\r\n            {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            mode: 'cors'\r\n        };\r\n\r\n        if (method != HttpMethods.get) {\r\n            what['body'] = JSON.stringify(model);\r\n        }\r\n\r\n        fetch(url, what)\r\n            .then(res => res.json())\r\n            .then((res) => { return res; })\r\n            .then(\r\n                (res) => {\r\n                    Api.parseResponse(res, (a) => {\r\n                        callback(res as i.IApiResponse);\r\n                    });\r\n                },\r\n                (res) => {\r\n                    console.error(res);\r\n                    callback(res as i.IApiResponse);\r\n                }\r\n            );\r\n    };\r\n\r\n    public static logout() {\r\n        let user = StorageHelper.getUser();\r\n        if (user) {\r\n            StorageHelper.clear();\r\n            window.location.href = user.logoutUrl + '?app=' + Api.getAppUrl();\r\n        }\r\n    };\r\n\r\n    public static getAppUrl() {\r\n        let path = location.protocol + '//' + location.host;\r\n\r\n        return path;\r\n    };\r\n\r\n    public static parseDefcon(api: i.IApiResponse, callback: any) {\r\n        if (api) {\r\n            let dcon: dc.IDefCon = api.data;\r\n\r\n            callback(dcon);\r\n        }\r\n    };\r\n\r\n    public static parseResponse(api: i.IApiResponse, callback: any) {\r\n        if (api) {\r\n            if (api.error && api.error.action) {\r\n                if (api.error.action.type == 1) {\r\n                    StorageHelper.clear();\r\n                    window.location.href = api.error.action.url + '?app=' + Api.getAppUrl();\r\n                    return;\r\n                };\r\n            }\r\n\r\n            if (callback) {\r\n                callback(api);\r\n            }\r\n        }\r\n    };\r\n\r\n    public static parseModelState(api: i.IApiResponse): i.IApiSummary {\r\n        let sum: i.IApiSummary = { status: ERequestStatus.undefined, message: '', code: '' };\r\n        if (api && api.validation && api.validation.items.length > 0) {\r\n\r\n            sum.status = ERequestStatus.failed;\r\n\r\n            api.validation.items.map((i, id) => {\r\n                if (i.Key === ErrorGroup.form || i.Key === ErrorGroup.api) {\r\n                    sum.message += '<li>' + i.Value + '</li>'\r\n                }\r\n            });\r\n        };\r\n\r\n        return sum;\r\n    };\r\n\r\n    public static parseSummary(api: i.IApiResponse | undefined, \r\n        process: i.IProcessStatus | undefined): i.IApiSummary {\r\n        \r\n        let sum: i.IApiSummary = { status: ERequestStatus.undefined, message: '', code: '' };\r\n\r\n        if (api) {\r\n            //console.log('parseSummary', api.error);\r\n            if (api.error) {\r\n                sum.code = api.error.code;\r\n                sum.status = ERequestStatus.failed;\r\n                sum.message = api.error.message;\r\n                sum.validation = api.validation;\r\n                \r\n                Api.extractErrorInfo(sum, api.error.message);\r\n\r\n                return sum;\r\n            };\r\n\r\n            if (api.data && process && process.steps.length == 0) {\r\n                process.steps = api.data.steps;\r\n            };\r\n        };\r\n\r\n        if (process) {\r\n            try {\r\n                //console.log('processs');\r\n                //console.log(process);\r\n                let step = linq.from<i.IApiStep>(process.steps)\r\n                    .where(x => x.status != ERequestStatus.undefined)\r\n                    .orderByDescending(x => x.type)\r\n                    .firstOrDefault();\r\n\r\n                if (step) {\r\n                    \r\n                    sum.status = step.status;\r\n                    let msg: IAnswerInfo = JSON.parse(step.message);\r\n                    //console.log('answerinfo', msg);\r\n                    sum.message = msg.Info ? msg.Info : msg.Text;\r\n                    if (step.status !== ERequestStatus.done && msg.ErrorCode) {\r\n                        sum.message = (msg.ErrorCode) + sum.message;\r\n                    };\r\n\r\n                    if(msg.answerError) {\r\n                        sum.answerError = msg.answerError; \r\n                    }\r\n\r\n                    return sum;\r\n                }\r\n            } catch { }\r\n        } else {\r\n            if(api && !api.error) {\r\n                sum.status = ERequestStatus.done;\r\n\r\n                if(api.data) {\r\n                    let answer = api.data as IAnswerInfo;\r\n                    sum.message = answer.Text;\r\n                };\r\n            }\r\n        };\r\n\r\n        return sum;\r\n    };\r\n\r\n    private static extractErrorInfo(sum: i.IApiSummary, message: string) {\r\n        try {\r\n            let err = JSON.parse(message);\r\n            let ae: IAnswerError = err.answerError;\r\n            \r\n            if(err.code) {\r\n                ae = err as IAnswerError;\r\n            };\r\n\r\n            if(ae) {\r\n                let jsx:JSX.Element =  <Container className=\"full tal answerError\">\r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <div className=\"font-weight-bold\" >Das ist passiert</div>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                                {ae.message}\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        ae.suggestion ? \r\n                        <>\r\n                            <Row>\r\n                                <Col xs={12} md={12} className=\"np\">\r\n                                    <div className=\"font-weight-bolder\">Was kannst du tun?</div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={12}>\r\n                                        {ae.suggestion}\r\n                                </Col>\r\n                            </Row>  \r\n                        </>\r\n                        : null\r\n                    }\r\n                  \r\n                </Container>\r\n\r\n                sum.message = ReactDOMServer.renderToStaticMarkup(jsx);\r\n            };\r\n        } catch(e) {\r\n\r\n        };\r\n    };\r\n\r\n    public static applyValidation(api: i.IApiResponse) {\r\n        //console.log('applyValidation');\r\n        if (api && api.validation) {\r\n        \r\n\r\n            for (let i = 0; i < api.validation.items.length; i++) {\r\n\r\n                let id = api.validation.items[i].Key;\r\n                let element = document.getElementById(id);\r\n\r\n                if (!element) {\r\n                    let sa: string[] = api.validation.items[i].Key.split('.');\r\n\r\n                    id = 'oec' + sa[1];\r\n\r\n                    element = document.getElementById(id);\r\n                };\r\n\r\n                if (!element) {\r\n                    id = api.validation.items[i].Key;\r\n                    id = 'oec' + id.replace('.', '-');\r\n\r\n                    element = document.getElementById(id);\r\n                };\r\n\r\n                if (!element) {\r\n                    let arr = document.getElementsByName(api.validation.items[i].Key);\r\n                    if (arr && arr.length) {\r\n                        element = arr[0];\r\n                        id = element.id;\r\n                    };\r\n                };\r\n\r\n                if (!element) {\r\n                    id = 'oeccustomer-' + api.validation.items[i].Key;\r\n\r\n                    element = document.getElementById(id);\r\n                };\r\n\r\n                if (!element) { continue; }\r\n             \r\n                let ctrl: page.LControl = Global.GetComponent(id); //Global.FindReact(element);\r\n\r\n                if (!ctrl) { continue; }\r\n              \r\n                ctrl.setError(api.validation.items[i].Value);\r\n\r\n            };\r\n        };\r\n    };\r\n\r\n    public static init() {\r\n        let us = StorageHelper.getUser();\r\n    };\r\n};\r\n\r\nexport default Api;","import { IApiError } from \"./IApiError\";\r\nimport { IApiSummary } from \"./IApiStep\";\r\n\r\nexport enum EApiResponseStatus {\r\n    undefined = 0,\r\n    ok = 1,\r\n    failed = 2\r\n};\r\n\r\nexport interface IApiValidationItem {\r\n  Key: string;\r\n  Value: string;\r\n};\r\n\r\nexport interface IApiValidation {\r\n  items: IApiValidationItem[];\r\n};\r\n\r\nexport interface IApiResponse {\r\n  error: IApiError;\r\n  validation: IApiValidation;\r\n  summary?: IApiSummary;\r\n  data: any;\r\n  status: EApiResponseStatus;\r\n  isAuthenticated?: boolean;\r\n  lifetime: number;\r\n  success: boolean;\r\n};\r\n\r\nexport default {};","import { BrandKeys } from \"../../utils/Defaults\";\r\nimport ApiProcess from \"../global/process\";\r\nimport { EExistingCustomerLoginMode } from \"../page/diverse\";\r\n\r\nexport class ExistingCustomerLogin extends ApiProcess {\r\n    ecusername: string = '';\r\n    birthday: string = ''; //Date = new Date();\r\n    brandKey: string = '';\r\n    ecpassword: string ='';\r\n    additional: string = '';\r\n    \r\n    temp1: string = '';\r\n    temp2: string = '';\r\n    customerId: string = '';\r\n    withAvailability: number = 0;\r\n    mode: EExistingCustomerLoginMode = EExistingCustomerLoginMode.password;\r\n\r\n    public reset() {\r\n        this.withAvailability = 0;\r\n        this.ecusername = '';\r\n        this.ecpassword = '';\r\n        this.brandKey = '';\r\n        this.additional  = '';\r\n        this.birthday = '';\r\n        this.temp1 = '';\r\n        this.temp2 = '';\r\n        this.customerId = '';\r\n        this.brandKey = BrandKeys.vodafone;\r\n        this.mode = EExistingCustomerLoginMode.password;\r\n    };\r\n};\r\n\r\nexport default ExistingCustomerLogin;","import {IBrand} from '../ordering/brand';\r\nimport { BrandKeys } from '../../utils/Defaults';\r\nimport * as linq from 'linq';\r\nimport IProduct from '../ordering/product';\r\n\r\nexport class TariffAndSub {\r\n    id:string = '';\r\n    sub: string = '';\r\n    productName: string = '';\r\n\r\n    public static createInstanceFromId(brand: IBrand, productId:string) {\r\n        let pr = new TariffAndSub();\r\n        pr.id = productId;\r\n        \r\n        let prod = this.createInstanceFromJson(pr, brand);\r\n\r\n        if(!prod.productName) {\r\n            prod.productName = productId;\r\n        };\r\n\r\n        return prod;\r\n    };\r\n\r\n    public static createInstanceFromJson(pr: TariffAndSub|undefined, brand: IBrand) : TariffAndSub {\r\n        if(pr) {\r\n            if(brand.id === BrandKeys.vodafone) {\r\n                for(let i =0;i<brand.subs.length;i++) {\r\n                    if(pr.id.endsWith(brand.subs[i].id)) {\r\n                        pr.productName = pr.id;\r\n                        pr.id = pr.id.substr(0, pr.id.length - brand.subs[i].id.length);\r\n                        pr.sub = brand.subs[i].id;\r\n                        let bprod = linq.from<IProduct>(brand.products).where(x=>x.id == pr.id).firstOrDefault();\r\n\r\n                        if(bprod) {\r\n                            pr.productName = bprod.name;\r\n                        };\r\n\r\n                        break;\r\n                    };\r\n                };\r\n            };\r\n\r\n            return Object.assign(new TariffAndSub(), pr);\r\n        };\r\n\r\n        return new TariffAndSub();\r\n    };\r\n};","import * as React from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { EPopupType, IPopupConfig, IPopupProps } from '../components/dialogs/popup';\r\nimport * as cmp from '../components/index';\r\nimport { ErrorBlock, LControl } from '../components/index';\r\nimport { EStatusState } from '../components/support/status';\r\nimport { IApiResponse } from '../interfaces';\r\nimport { EControlType, ERequestStatus } from '../models';\r\nimport Api from './api';\r\nimport Global from './Global';\r\nimport { ValidationMessages } from './messages';\r\nimport * as val from './validation/validationOption';\r\n\r\n\r\nexport class GlobalJSX {\r\n    public static GetLoader(): JSX.Element {\r\n        let com = (\r\n            <div className=\"loader\">\r\n                <cmp.Status status={EStatusState.inprocess} id=\"loader\" />\r\n                {/* <img src=\"/images/loader.gif\" width=\"150\" height=\"150\"/> */}\r\n            </div>\r\n        );\r\n\r\n        return com;\r\n    };\r\n\r\n    public static getKeyFromPrefix(prefix: string, name: string, idOrName: boolean): string {\r\n        let pref: string = prefix;\r\n        let extra: boolean = false;\r\n        if (pref.startsWith('+')) {\r\n            pref = pref.substring(1);\r\n            extra = true;\r\n        };\r\n\r\n        if (idOrName) {\r\n            return pref ? pref + '-' + name : name;\r\n        } else {\r\n            if (extra) {\r\n                return name;\r\n            } else {\r\n                return pref ? pref + '.' + name : name;\r\n            }\r\n        }\r\n    };\r\n\r\n    public static renderErrorBlock(api: IApiResponse | undefined): JSX.Element {\r\n        let ctrl = <></>;\r\n\r\n        if (api) {\r\n            let sum = Api.parseModelState(api);\r\n\r\n            if (sum.status === ERequestStatus.failed) {\r\n                ctrl = <ErrorBlock visible={true} title={ValidationMessages.errorGeneral} message={sum.message} />;\r\n            }\r\n        }\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public static renderInner(\r\n        prefix: string,\r\n        source: any,\r\n        onChange: any,\r\n        field: string,\r\n        title: string | undefined,\r\n        label: string,\r\n        previewMode: boolean,\r\n        fixedValue?: any,\r\n        disabled?: boolean,\r\n        validationOptions?: val.ValidationOption[],\r\n        maxLength?: number,minLength?: number): JSX.Element {\r\n\r\n        let id = GlobalJSX.getKeyFromPrefix(prefix, field, true);\r\n        let name = GlobalJSX.getKeyFromPrefix(prefix, field, false);\r\n        let sname = name;\r\n\r\n      \r\n    \r\n        // if(sname.startsWith(prefix + '.')) {\r\n        //     sname = sname.substring(prefix.length + 1);\r\n        // };\r\n\r\n        //if prefix is empty\r\n        if (sname.startsWith('.') && !prefix) {\r\n            sname = sname.substring(1);\r\n        };\r\n\r\n        let value = fixedValue ? fixedValue : Global.getValueByPath(source, sname);\r\n\r\n        let ctrl = <LControl type={EControlType.text}\r\n            value={value}\r\n            onChange={onChange} title={title}\r\n            maxLength={maxLength? maxLength: undefined}\r\n            minLength={minLength? minLength: undefined}\r\n            hideTitle={!title}\r\n            name={name} id={id} label={label}\r\n            disabled={disabled}\r\n            validationOptions={validationOptions? validationOptions: undefined}\r\n            preview={previewMode ? previewMode : false} />;\r\n\r\n         \r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public static GetLoaderWithText(text: string): JSX.Element {\r\n        let com = (\r\n            <div className=\"tloader\">\r\n                <cmp.Status status={EStatusState.inprocess} id=\"loaderWithText\" />\r\n                <div className=\"text\">\r\n                    {text}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return com;\r\n    };\r\n\r\n    public static GetPopupAuto(cfg:IPopupConfig) {\r\n        return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n    };\r\n\r\n    public static GetPopup(config: IPopupProps,\r\n        content: JSX.Element,\r\n        action: JSX.Element | undefined): JSX.Element {\r\n\r\n        let ctrl = <>\r\n            <cmp.Popup {...config}>\r\n                <cmp.PopupBody>\r\n                    {content}\r\n                    <></>\r\n                </cmp.PopupBody>\r\n                {\r\n                    action ?\r\n                        <cmp.Action>\r\n                            {action}\r\n                            <></>\r\n                        </cmp.Action>\r\n                        : <></>\r\n                }\r\n            </cmp.Popup>\r\n        </>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public static GetPleaseWait(text: string,\r\n        onDismiss: any,\r\n        type: EPopupType,\r\n        visible: boolean,\r\n        closable: boolean,\r\n        content: JSX.Element): JSX.Element {\r\n        let ctrl = <>\r\n            <cmp.Popup closable={closable}\r\n                type={type}\r\n                visible={visible}\r\n                id=\"popupWait\"\r\n                title={text}\r\n                height={200} onDismiss={onDismiss}>\r\n                <cmp.PopupBody>\r\n                    {content}\r\n                    <></>\r\n                </cmp.PopupBody>\r\n                <></>\r\n            </cmp.Popup>\r\n        </>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public static getInfoTooltip(id: string, \r\n        tt: any) {\r\n        let ctrl = \r\n            <>\r\n            <ReactTooltip place=\"top\" type=\"light\" effect=\"solid\" id={'tt-' + id}>\r\n                <div dangerouslySetInnerHTML={{ __html: tt }} />\r\n            </ReactTooltip>\r\n\r\n            <div data-for={'tt-' + id} data-tip={tt} className=\"iicon icon info link inline\"></div>\r\n            </>\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default GlobalJSX;","import { ERequestType } from \"../page/diverse\";\r\n\r\nexport class PartnerCardGet {\r\n    public id: string = '';\r\n\r\n    public executed: boolean = false;\r\n\r\n    public brandKey: string = '';\r\n\r\n    public type: ERequestType = ERequestType.customerGroupGet;\r\n};\r\n\r\nexport interface IPartnerCard {\r\n\r\n};","export class MobileNumber {\r\n    NDC:string = '';\r\n\r\n    MSISDN:string = '';\r\n\r\n    public toString() : string {\r\n        return this.NDC + this.MSISDN;\r\n    };\r\n\r\n    public static createInstanceFromJson(mn: MobileNumber|undefined) : MobileNumber {\r\n        if(mn) {\r\n            return Object.assign(new MobileNumber(), mn);\r\n        } else {\r\n            return new MobileNumber();\r\n        };\r\n    };\r\n};","export interface IConsumption {\r\n    data:ConsumptionItem;\r\n};\r\n\r\nexport class ConsumptionItem {\r\n    Consumed: number=0;\r\n    Remaining: number=0;\r\n    Total: number=0;\r\n    Unit: string='';\r\n\r\n    public getValue() : number {\r\n        let v:number = 100 * (this.Consumed / this.Total);\r\n        return v;\r\n    };\r\n    public getValueReverse() : number {\r\n        let v:number = 100 - 100 * (this.Consumed / this.Total);\r\n        return v;\r\n    };\r\n    public getLabel() : string {\r\n        return this.Consumed + ' von ' + this.Total + ' ' + this.Unit + ' verbraucht';\r\n    };\r\n};\r\n","import * as React from 'react';\r\n\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { LClear, LButton } from '../../components';\r\nimport { ELButtonType, OrderDataWrapper } from '../../models';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport { CatKeys } from '../../utils/Defaults';\r\nimport { data } from 'jquery';\r\n\r\n\r\nexport enum GigacombiBookOptions {\r\n    undefined = 1,\r\n    internet_Phone_Doppel_Kombi = 2,\r\n    internet_phone_tripple_kombi = 3,\r\n    mobilfunk_doppel_kombi = 4,\r\n    mobilfunk_tripple_kombi = 5,\r\n    tv_doppel_kombi = 6,\r\n    tv_tripple_kombi = 7\r\n}\r\n\r\n\r\nexport interface IGiggacombiBannersProps {\r\n    parent: any;\r\n    advertisementBanner: boolean;\r\n    bookOption: GigacombiBookOptions;\r\n    onCategoryChanged?: any;\r\n    lastSelectedKey? : CatKeys;\r\n    data?: OrderDataWrapper;\r\n};\r\n\r\nexport class GiggacombiBanners extends React.Component<IGiggacombiBannersProps, any> {\r\n   \r\n    constructor(props: any) {\r\n        super(props);\r\n    };\r\n\r\n    public refresh() {\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public render() {\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: undefined,\r\n            transparent: false\r\n        };\r\n\r\n        let ctrl = (\r\n            <>\r\n                {\r\n                    this.props.advertisementBanner ? this.gigacombi_advertisement(cfg) : this.renderAuto(cfg)\r\n                }\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public gigacombi_advertisement(cfg: IBlockConfiguration) {\r\n        cfg.title = undefined;\r\n        let ctrl = (\r\n            <>\r\n                <BaseBlock config={cfg}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={2} md={2}>\r\n                                <LButton\r\n                                    icon=\"info\" type={ELButtonType.linkWithIconLeft} onClick={() => { window.open('https://vf-sso.mlconsult.com'); }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} >\r\n                                <img style={{ width: '100%' }} src=\"/images/gigaPromo.png\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <Col xs={10} md={10} >\r\n                                <div>Sichere Deinem Kunden noch mehr Vorteile durch GigaKombi</div>\r\n                                <div >Ist Dein Kunde noch bei einem anderen Anbieter? Alle Infos zum </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <Col xs={5} md={5} >\r\n                                <a className=\"red\" href='https://infoportal.vodafone.de/fachhandel/wp-content/uploads/2020/01/Wechselservice-Kommunikation.pdf' target=\"_blank\">Restlaufzeitprogramm</a>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <LClear />\r\n                </BaseBlock>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    }\r\n\r\n    private renderAuto(cfg: IBlockConfiguration) {\r\n        cfg.title = MainTexts.gigacombiTitle;\r\n\r\n        let hasTv = this.props.data!.hasCategory(CatKeys.tv);\r\n        let hasFn = this.props.data!.hasCategory(CatKeys.fn);\r\n        let hasVf = this.props.data!.hasCategory(CatKeys.vodafone);\r\n        let hasOtelo = this.props.data!.hasOtelo();\r\n        let inner = <></>\r\n\r\n        if(hasOtelo || (hasTv && hasFn && hasVf)) {\r\n            return <></>\r\n        };\r\n\r\n        if(hasTv && !hasFn && !hasVf) {\r\n            inner = <Row>\r\n                <Col xs={6} md={6}>{this.renderButton([CatKeys.tv, CatKeys.fn], CatKeys.fn)}</Col>\r\n                <Col xs={6} md={6}>{this.renderButton([CatKeys.tv, CatKeys.vodafone], CatKeys.vodafone)}</Col>\r\n            </Row>\r\n        } else if (hasFn && !hasTv && !hasVf) {\r\n            inner = <Row>\r\n                    <Col xs={6} md={6}>{this.renderButton([CatKeys.fn, CatKeys.tv], CatKeys.tv)}</Col>\r\n                    <Col xs={6} md={6}>{this.renderButton([CatKeys.fn, CatKeys.vodafone], CatKeys.vodafone)}</Col>\r\n                </Row>\r\n        } else if (hasVf && !hasTv && !hasFn) {\r\n            inner = <Row>\r\n                    <Col xs={6} md={6}>{this.renderButton([CatKeys.vodafone, CatKeys.tv], CatKeys.tv)}</Col>\r\n                    <Col xs={6} md={6}>{this.renderButton([CatKeys.vodafone, CatKeys.fn], CatKeys.fn)}</Col>\r\n                </Row>\r\n        } else if(hasVf && hasTv && !hasFn) { \r\n            inner = <Row><Col xs={12} md={12}>{this.renderButton([CatKeys.vodafone, CatKeys.tv, CatKeys.fn], CatKeys.fn)}</Col></Row>\r\n        } else if(hasVf && hasFn && !hasTv) { \r\n            inner = <Row><Col xs={12} md={12}>{this.renderButton([CatKeys.vodafone, CatKeys.tv, CatKeys.fn], CatKeys.tv)}</Col></Row>\r\n        } else if(hasTv && hasVf && !hasFn) { \r\n            inner = <Row><Col xs={12} md={12}>{this.renderButton([CatKeys.tv, CatKeys.fn, CatKeys.vodafone], CatKeys.fn)}</Col></Row>\r\n        } else if(hasTv && hasFn && !hasVf) { \r\n            inner = <Row><Col xs={12} md={12}>{this.renderButton([CatKeys.tv, CatKeys.fn, CatKeys.vodafone], CatKeys.vodafone)}</Col></Row>\r\n        } else if(hasFn && hasTv && !hasVf) { \r\n            inner = <Row><Col xs={12} md={12}>{this.renderButton([CatKeys.fn, CatKeys.tv, CatKeys.vodafone], CatKeys.vodafone)}</Col></Row>\r\n        } else if(hasFn && hasVf && !hasTv) { \r\n            inner = <Row><Col xs={12} md={12}>{this.renderButton([CatKeys.fn, CatKeys.tv, CatKeys.vodafone], CatKeys.tv)}</Col></Row>\r\n        }\r\n\r\n        let ctrl = <BaseBlock config={cfg}>\r\n            <Container className=\"np\">                     \r\n                {inner}\r\n            </Container>\r\n        </BaseBlock>\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderButton(cats: string[], nextCat: string) {\r\n        let ctrl = <Container className=\"np\">\r\n            <Row>\r\n                <Col className=\"tac\">\r\n                    <img src={`/images/gigacombiCases/${cats.join('_')}.png`} />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"tac\">\r\n                    <LButton type={ELButtonType.buttonWithIconRight}\r\n                        css=\"a1\"\r\n                        id=\"\"\r\n                        text={MainTexts.gigaShow + ' ' + nextCat}\r\n                        onClick={() => {\r\n                            this.props.onCategoryChanged(nextCat)\r\n                        }} />\r\n                </Col>\r\n            </Row>            \r\n        </Container>\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default GiggacombiBanners;","import linq, * as Enumerable from 'linq';\r\nimport * as React from 'react';\r\nimport * as act from '../../../src/components/ordering/process/index';\r\nimport * as page from '../../../src/components/page/index';\r\nimport { EPopupType, IPopupConfig } from '../../components/dialogs/popup';\r\nimport * as cmp from '../../components/index';\r\nimport BrandsList from '../../components/ordering/brandList';\r\nimport { EBrandThumbType } from '../../components/ordering/brandThumb';\r\nimport { IActivationBlockState } from '../../components/ordering/process/activationBlock';\r\nimport ActivationCustomerData from '../../components/ordering/process/activationCustomerData';\r\nimport * as i from '../../interfaces/index';\r\nimport { IApiResponse, IApiSummary, ISocketPushModel } from '../../interfaces/index';\r\nimport IProcessNewSelection from '../../interfaces/ordering/IProcessNewSelection';\r\nimport * as m from '../../models/index';\r\nimport { IDefCon } from '../../models/index';\r\nimport IActivation from '../../models/ordering/activation';\r\nimport IBrand from '../../models/ordering/brand';\r\nimport { ICustomer } from '../../models/ordering/customer';\r\nimport { IOrderData, OrderDataWrapper } from '../../models/ordering/data';\r\nimport { EActivationType, EBusinessCase, ECreditDebitType, ECustomerType, ENumberPortingType, EOrderProcessView } from '../../models/ordering/order';\r\nimport { IProduct } from '../../models/ordering/product';\r\nimport { ERequestType } from '../../models/page/diverse';\r\nimport { IFocusBox } from '../../models/page/interfaces';\r\nimport Api from '../../utils/api';\r\nimport { BrandKeys, CatKeys, StorageKeys } from '../../utils/Defaults';\r\nimport Global from '../../utils/Global';\r\nimport GlobalJSX from '../../utils/GlobalJSX';\r\nimport * as u from '../../utils/index';\r\nimport { MainTexts, OrderingTexts, OrderStages, ValidationMessages } from '../../utils/messages';\r\nimport OrderingHelper from '../../utils/OrderingHelper';\r\nimport EasyRouter from '../../utils/router';\r\nimport StorageHelper from '../../utils/storage';\r\nimport { GigacombiBookOptions, GiggacombiBanners } from './advertisement';\r\n\r\nexport interface IProcessNewScreenProps {\r\n    id: string;\r\n    brandKey?: string;\r\n    productId?: string;\r\n    preview: boolean;\r\n};\r\n\r\nexport interface IProcessNewScreenState {\r\n    //currentBrand: string;\r\n    changed: boolean;\r\n    progress: EOrderProcessView;\r\n    processing: boolean;\r\n    loading: boolean;\r\n    apiMessage: string;\r\n\r\n    closablePopup: boolean;\r\n    numbersToPort: number;\r\n    individualPorting: boolean;\r\n};\r\n\r\nexport class ProcessNewScreen extends React.Component<IProcessNewScreenProps, IProcessNewScreenState> {\r\n    public modelState: u.ModelStete = new u.ModelStete();\r\n    public currentBookedOption: GigacombiBookOptions = GigacombiBookOptions.undefined;\r\n\r\n    private lastApi?: IApiResponse;\r\n    public data: IOrderData;\r\n    public dataWrapper: OrderDataWrapper;\r\n    private defcon: IDefCon;\r\n    private product?: IProduct;\r\n    public selection: IProcessNewSelection;\r\n    public current?: IActivation;\r\n    public static uri: string = '/ordering/new/';\r\n    public static title: string = 'Aktivierung';\r\n    public selectedBrand: string = '';\r\n    public selectedProduct: string = '';\r\n    public currentIndex: number = 0;\r\n    private dynamicPopup: IPopupConfig | undefined;\r\n    public numbersToPort: string = '';\r\n    private loading: boolean = false;\r\n\r\n    public static containerId: string = \"process\";\r\n\r\n    private mounted: boolean = false;\r\n\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n\r\n    constructor(props: IProcessNewScreenProps) {\r\n        super(props);\r\n\r\n        this.handleActivation = this.handleActivation.bind(this);\r\n        //this.updateActivation = this.updateActivation.bind(this);\r\n        this.startNewActivation = this.startNewActivation.bind(this);\r\n        this.applyPayment = this.applyPayment.bind(this);\r\n        this.applyActivationType = this.applyActivationType.bind(this);\r\n        this.applyCustomerType = this.applyCustomerType.bind(this);\r\n        this.applyCustomer = this.applyCustomer.bind(this);\r\n        this.onCreateProcess = this.onCreateProcess.bind(this);\r\n        this.onDismissProcessPopup = this.onDismissProcessPopup.bind(this);\r\n        this.onDismissValidation = this.onDismissValidation.bind(this);\r\n        this.onInputData = this.onInputData.bind(this);\r\n        this.changeBrand = this.changeBrand.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.activationChanged = this.activationChanged.bind(this);\r\n        this.socketCallback = this.socketCallback.bind(this);\r\n\r\n        this.defcon = StorageHelper.getDefCon();\r\n\r\n        if (this.props.preview) {\r\n            this.loading = true;\r\n            this.loadProcess();\r\n        };\r\n\r\n        this.data = this.prepareData();\r\n\r\n        this.dataWrapper = new OrderDataWrapper(this.data);\r\n\r\n        OrderDataWrapper.ensure(this.data);\r\n\r\n        let pr = this.getProgress();\r\n\r\n        this.selectedBrand = this.data.currentBrand;\r\n        \r\n\r\n        //initialbanner logic\r\n        if (this.selectedBrand == BrandKeys.vodafone || this.selectedBrand == BrandKeys.otelo) {\r\n            this.currentBookedOption = GigacombiBookOptions.mobilfunk_doppel_kombi;\r\n        } else if (this.selectedBrand == BrandKeys.dsl) {\r\n            this.currentBookedOption = GigacombiBookOptions.internet_Phone_Doppel_Kombi;\r\n        } else if (this.selectedBrand == BrandKeys.kabel) {\r\n            this.currentBookedOption = GigacombiBookOptions.tv_doppel_kombi;\r\n        }\r\n\r\n        //if(Global.easyApp.head) {\r\n        let title: string = MainTexts.newCustomerActivation\r\n        if (this.data.activations.length > 0 && this.data.activations[0].activationType === EActivationType.partnerCard) {\r\n            title = OrderingTexts.bookPartner;\r\n        };\r\n\r\n        Global.easyApp.setTitle(title);\r\n        //}\r\n\r\n\r\n        this.selection = {\r\n            businessCase: EBusinessCase.bnt,\r\n            creditDebitType: this.data.activations && this.data.activations.length > 0 && this.data.activations.length < 2 ? this.data.activations[0].creditDebitType : ECreditDebitType.postpaid,\r\n            activationType: EActivationType.actDefault,\r\n            customerType: ECustomerType.personal\r\n        };\r\n\r\n        this.state = {\r\n            changed: false,\r\n            progress: pr,\r\n            processing: false,\r\n            closablePopup: false,\r\n            loading: this.loading,\r\n            apiMessage: \"\",\r\n            numbersToPort: 2,\r\n            individualPorting: true\r\n        };\r\n    };\r\n\r\n    public componentDidMount() {\r\n        this.initData();\r\n\r\n        this.mounted = true;\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private initData() {\r\n        this.data = this.prepareData();\r\n        \r\n\r\n        this.dataWrapper = new OrderDataWrapper(this.data);\r\n\r\n        OrderDataWrapper.ensure(this.data);\r\n    };\r\n\r\n    componentWillReceiveProps(next: IProcessNewScreenProps) {\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public refresh() {\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public getId() {\r\n        let s = window.location.href;\r\n    };\r\n\r\n    public validate(): boolean {\r\n        this.modelState.reset();\r\n\r\n        if (this.current) {\r\n            this.modelState = u.ValidationWrapper.startActivationValidation(this.current, this.dataWrapper);\r\n        }\r\n\r\n        if (!this.modelState.isValid()) {\r\n            this.setState({ changed: true });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    public handleActivation(model: IActivationBlockState) {\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public applyPayment(pay: ECreditDebitType) {\r\n        if (this.current) {\r\n            this.current.creditDebitType = pay;\r\n\r\n            StorageHelper.updateActivation(this.current);\r\n        };\r\n\r\n        if (this.selection) {\r\n            this.selection.creditDebitType = pay;\r\n        }\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public applyCustomerType(type: ECustomerType) {\r\n        if (this.selection) {\r\n            this.selection.customerType = type;\r\n        }\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public applyActivationType(act: EActivationType) {\r\n        if (this.selection) {\r\n            if (this.current) {\r\n                this.current.activationType = act;\r\n                if (this.current.activationType === EActivationType.actDefault) {\r\n                    this.current.portationType = m.EPortationType.undefined;\r\n                } else {\r\n                    this.current.portationType = m.EPortationType.contractEnd;\r\n                }\r\n            }\r\n            this.selection.activationType = act;\r\n        }\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public checkPopup() {\r\n        let cfg: IPopupConfig = {\r\n            props: {\r\n                id: 'dynamicPopup',\r\n                title: 'Warenkorb',\r\n                visible: true,\r\n                closable: false,\r\n                type: EPopupType.pleaseWait\r\n            },\r\n            closeOnDone: true,\r\n            content: <div>Warenkorb wird geprüft</div>,\r\n            callback: (d) => {\r\n                //this.setState({changed: true});\r\n            }\r\n        };\r\n\r\n        return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n    };\r\n\r\n    public render() {\r\n        if (!this.mounted || this.state.loading) { return <></>; }\r\n\r\n        if (this.props.preview) {\r\n            return this.renderPreviewPrint();\r\n        } else {\r\n            return this.renderProcess();\r\n        }\r\n    };\r\n\r\n    public getProgress(): EOrderProcessView {\r\n\r\n        if (window.location.href.indexOf('/' + OrderStages.done + '/') > 0) {\r\n            return EOrderProcessView.done;\r\n        } else if (window.location.href.indexOf('/' + OrderStages.customer + '/') > 0) {\r\n            return EOrderProcessView.customer;\r\n        } else {\r\n            return EOrderProcessView.tariff;\r\n        };\r\n    };\r\n\r\n   public onCategoryChange = (catkey: string) => {\r\n        if (this.validate()) {\r\n            this.dynamicPopup = undefined;\r\n\r\n            if (this.current!.brandKey == BrandKeys.kabel && (catkey == CatKeys.tv || catkey == CatKeys.fn)) {\r\n\r\n                Global.categoryWrapper.all = true; //!Global.categoryWrapper.all;\r\n\r\n                document.getElementById(act.ActivationBlockSimple.componentId)!.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n\r\n            Global.categoryWrapper.switchCat(catkey);\r\n            this.data.currentCat = catkey;\r\n            this.selectedBrand = this.data.currentBrand = Global.categoryWrapper.getCategoryBrandKey(undefined);\r\n\r\n            //fix cable in the wrong order\r\n            if (this.selectedBrand == BrandKeys.kabel) {\r\n                if (!this.dataWrapper.hasKabel()) {\r\n                    this.startNewActivation();\r\n                } else {\r\n                    let a = linq.from<IActivation>(this.data.activations).where(x => x.brandKey == BrandKeys.kabel).first();\r\n                    let idx = this.data.activations.indexOf(a);\r\n                    this.current = this.data.activations[idx];\r\n                    this.currentIndex = idx;\r\n                    Global.categoryWrapper.all = true;\r\n                }\r\n                this.setState({ changed: true });\r\n                return;\r\n            }\r\n\r\n            //if current is cable then add the next one to same basket\r\n            if (!(this.current!.brandKey == BrandKeys.kabel && (catkey == CatKeys.tv || catkey == CatKeys.fn))) {\r\n\r\n                this.current = this.startNewActivation();\r\n            } else if (this.selectedBrand === BrandKeys.dsl) {\r\n\r\n                this.current = this.startNewActivation();\r\n            }\r\n\r\n            this.setState({ changed: true });\r\n        }\r\n    }\r\n\r\n    public onCreateProcess(type: ERequestType) {\r\n        this.lastApi = undefined;\r\n\r\n        this.setState({ processing: true });\r\n\r\n        let avl = StorageHelper.getAvailability();\r\n         \r\n        if (avl) {\r\n            \r\n            this.data.activations.forEach((i, idx) => {\r\n                \r\n                i.availability = avl;\r\n                i.availabilityId = avl.id;\r\n            });\r\n\r\n            StorageHelper.addOrder(this.data);\r\n            \r\n        }\r\n        \r\n        //reset availability because its to big\r\n        let toSend: IOrderData = JSON.parse(JSON.stringify(this.data));\r\n        toSend.activations.forEach((i, idx) => {\r\n            i.availability = new m.Availability();\r\n        });\r\n\r\n    \r\n        if (type === ERequestType.create) {\r\n            this.data.activations.map((i, idx) => {\r\n              \r\n                if (!i.isPrinted()) { i.resetSteps(ERequestType.print); };\r\n                if (!i.isActivated() && !i.isTimedout()) { i.resetSteps(ERequestType.activation); };\r\n            });\r\n        };\r\n       \r\n        let pw = this.dataWrapper.getPasswordForAdditionalContract();\r\n        if (pw) {\r\n            this.data.customer.password = pw;\r\n            StorageHelper.addOrder(this.data);\r\n        };\r\n        \r\n        Global.hub.send(JSON.stringify(toSend), type, undefined); //m.ERequestType.create, undefined );\r\n\r\n        this.setState({ closablePopup: false });\r\n\r\n        this.processPopupState = EPopupType.pleaseWait;\r\n    };\r\n\r\n    public onInputData(target: any) {\r\n        Global.onInput(this.current, target, () => {\r\n            if (this.current) { StorageHelper.updateActivation(this.current); }\r\n            this.setState({ changed: true });\r\n        });\r\n    };\r\n\r\n    public applyCustomer(value: ICustomer) {\r\n        \r\n        this.data.customer = value;\r\n        StorageHelper.addOrder(this.data);\r\n        this.setState({ changed: true });\r\n\r\n    };\r\n\r\n    public removeActivation(index: number) {\r\n\r\n        this.selectedProduct = '';\r\n        this.data.activations.splice(index, 1);\r\n        StorageHelper.addOrder(this.data);\r\n\r\n        this.currentIndex = index > 0 ? index - 1 : -1;\r\n        this.current = this.data.activations[this.currentIndex];\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public editActivation(index: number) {\r\n        this.data.currentBrand = this.data.activations[index].brandKey;\r\n        this.data.currentCat = this.data.activations[index].catKey;\r\n        this.currentIndex = index;\r\n        this.current = this.data.activations[this.currentIndex];\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public canEditActivation() {\r\n        if (!this.dataWrapper.canEditActivation(this.currentIndex)) {\r\n            this.modelState.errorMessage = ValidationMessages.errorEditDone;\r\n            this.setState({ changed: true });\r\n            return false;\r\n        };\r\n\r\n        return true;\r\n    };\r\n\r\n    public showPopup(type: EPopupType, message: string, inprocess: boolean) {\r\n        this.processPopupState = type;\r\n        this.setState({\r\n            changed: true,\r\n            apiMessage: message,\r\n            closablePopup: true,\r\n            processing: inprocess\r\n        });\r\n    };\r\n\r\n    private prepareData = (): IOrderData => {\r\n        if (this.loading) {\r\n            return { id: 'dummy', type: EBusinessCase.bnt, activations: [], currentCat: '', currentBrand: '', customer: {} }\r\n        };\r\n\r\n        let sa: string[] = window.location.pathname.split('/');\r\n\r\n        if (this.props.preview) {\r\n            \r\n            return StorageHelper.getOrder(sa[4]);\r\n        } else {\r\n           \r\n            return StorageHelper.getOrder(sa[4]);\r\n        }\r\n    };\r\n\r\n    private activationChanged() {\r\n        if (!this.current) {\r\n            this.current = this.startNewActivation();\r\n        };\r\n\r\n        StorageHelper.addOrder(this.data);\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private startNewActivation(apply?: any): IActivation {\r\n        this.data.activations = linq.from<IActivation>(this.data.activations)\r\n            .where(x => (x.productId !=undefined && x.productId.length > 0))\r\n            .toArray();\r\n\r\n        let act: IActivation = IActivation.createInstance(this.selectedBrand,\r\n            this.data.id,\r\n            Global.categoryWrapper.cat);\r\n\r\n        act.availability = StorageHelper.getAvailability();\r\n\r\n        if (apply) {\r\n            apply(act);\r\n        };\r\n\r\n        this.data.activations.push(act);\r\n        this.currentIndex = this.data.activations.length - 1;\r\n\r\n        this.current = act;\r\n        StorageHelper.addOrder(this.data);\r\n        this.setState({ changed: true });\r\n        return act;\r\n    };\r\n\r\n    private getTitle(pr: EOrderProcessView) {\r\n        let t: string = pr == EOrderProcessView.tariff ? OrderingTexts.activationBNTTariff :\r\n            pr == EOrderProcessView.customer ? OrderingTexts.activationBNTCustomer : OrderingTexts.activationBNTOverview;\r\n\r\n        return t;\r\n    };\r\n\r\n    public gotoView(value: EOrderProcessView, callback?: any) {\r\n        let pr = this.getProgress();\r\n\r\n        if (pr === EOrderProcessView.tariff) {\r\n            if (!this.validate()) { return; };\r\n        }\r\n\r\n        this.setState({ progress: value });\r\n\r\n        let prname = value === EOrderProcessView.tariff ? OrderStages.tariff\r\n            : value === EOrderProcessView.customer ? OrderStages.customer : OrderStages.done;\r\n\r\n        let s: string = ProcessNewScreen.uri + prname + '/' + this.data.id;\r\n\r\n        EasyRouter.route({ url: s, title: OrderingTexts.activation + \": \" + this.getTitle(value) });\r\n\r\n        if (callback) { callback(); };\r\n    };\r\n\r\n    public socketCallback(sock: ISocketPushModel) {\r\n        let api: i.IApiResponse = JSON.parse(sock.data);\r\n  \r\n        this.lastApi = api;\r\n\r\n        if (api && !api.error) {\r\n            if (sock.type === ERequestType.checkMsisdn) {\r\n                this.setState({ processing: false });\r\n                this.gotoView(EOrderProcessView.customer);\r\n            } else {\r\n                api.data.isCrossSelling = this.data.isCrossSelling;\r\n                this.data = api.data;\r\n    \r\n                OrderDataWrapper.ensure(this.data);\r\n                StorageHelper.addOrder(this.data);\r\n                this.setState({ processing: false, progress: EOrderProcessView.done }, () => {\r\n                    this.gotoView(EOrderProcessView.done, null);\r\n                });\r\n            }\r\n        } else {\r\n            let sum: IApiSummary = Api.parseSummary(api, undefined);\r\n            this.processPopupState = EPopupType.custom;\r\n            this.setState({\r\n                processing: false, closablePopup: true,\r\n                apiMessage: Global.extractErrorAndValidation(sum)\r\n            });\r\n\r\n            if (api.validation) {\r\n                Api.applyValidation(api);\r\n            };\r\n        }\r\n    };\r\n\r\n    public syncOrder(order: IActivation, callback: any) {\r\n        let avl = StorageHelper.getAvailability();\r\n\r\n        let model = {\r\n            availabilityId: avl.id,\r\n            brand: this.data.currentBrand,\r\n            order: {\r\n                processId: order.processId,\r\n                productId: order.productId,\r\n                sub: order.sub,\r\n                services: order.services,\r\n                activationType: order.activationType\r\n            }\r\n        };\r\n\r\n        let cfg: IPopupConfig = {\r\n            props: {\r\n                id: \"dynamicPopup\",\r\n                title: 'Warenkorb',\r\n                visible: true,\r\n                closable: false,\r\n                type: EPopupType.pleaseWait,\r\n                height: 300,\r\n                onDismiss: () => {\r\n                    Global.easyApp.runPopup(undefined, undefined);\r\n                }\r\n            },\r\n            content: <div>Warenkorb wird geprüft</div>,\r\n        };\r\n\r\n        var pop = GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n\r\n        Global.easyApp.runPopup(pop, () => {\r\n            Api.fetch('activation/syncorder', model, \"POST\", (api) => {\r\n                var sum = Api.parseSummary(api, undefined);\r\n\r\n                if (sum.status == m.ERequestStatus.done) {\r\n                    Global.easyApp.runPopup(undefined, undefined);\r\n                    if (callback) {\r\n                        callback(api);\r\n                    };\r\n                } else {\r\n                    var popup = Global.FindReact(document.getElementById(\"dynamicPopup\")) as cmp.Popup;\r\n\r\n                    popup.refresh(true, true, EPopupType.custom, <div dangerouslySetInnerHTML={{ __html: sum.message }} />);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    private onDismissProcessPopup() {\r\n        this.setState({ processing: false, closablePopup: false });\r\n    };\r\n\r\n    private onDismissValidation() {\r\n        this.modelState.reset();\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private renderPage(pr: EOrderProcessView): JSX.Element {\r\n        let ctrl = <></>;\r\n\r\n        if (pr === EOrderProcessView.done) {\r\n            ctrl = (\r\n                <>\r\n                    <page.Inner1C>\r\n                        <page.Inner2CLeft>\r\n                            <>\r\n                                {this.renderProgress()}\r\n                            </>\r\n                        </page.Inner2CLeft>\r\n                        <></>\r\n                    </page.Inner1C>\r\n                </>);\r\n        } else {\r\n            ctrl = (\r\n                <>\r\n                    <page.Inner2C>\r\n                        <page.Inner2CLeft>\r\n                            <>\r\n                                {GlobalJSX.renderErrorBlock(this.lastApi)}\r\n\r\n                                {this.renderProgress()}\r\n                            </>\r\n                        </page.Inner2CLeft>\r\n                        <page.Inner2CRight>\r\n                            <>\r\n                                <act.ActivationSummary parent={this} activations={this.data.activations} />\r\n                            </>\r\n                        </page.Inner2CRight>\r\n                    </page.Inner2C>\r\n                </>);\r\n        }\r\n\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private loadProcess() {\r\n        let sa = window.location.pathname.split('/');\r\n        let id: string = sa[4]; //EasyRouter.getQueryVariable(window.location.href, StringTokens.id, '');\r\n        let url: string = 'activation/getprocess/' + id;\r\n\r\n        Api.fetch(url, undefined, 'GET', (api: i.IApiResponse) => {\r\n\r\n            var d: IOrderData = api.data as IOrderData;\r\n            let aa: IActivation[] = [];\r\n\r\n            d.activations.forEach((i, idx) => {\r\n                let aaa: IActivation = Object.assign(new IActivation(i.brandKey), i);\r\n                aa.push(aaa);\r\n            });\r\n\r\n            d.activations = aa;\r\n\r\n            StorageHelper.addOrder(d);\r\n\r\n            if (d.avl) {\r\n                StorageHelper.set(StorageKeys.keyAvailability, d.avl);\r\n            }\r\n\r\n            this.data = d;\r\n            this.setState({ changed: true, loading: false });\r\n        });\r\n    };\r\n\r\n    private changeBrand(brandKey: string) {\r\n        if (OrderDataWrapper.previewAvailable(this.data.activations)) {\r\n            if (!this.validate()) { return; };\r\n\r\n        };\r\n        this.selectedBrand = this.data.currentBrand = brandKey;\r\n        this.selection.creditDebitType = ECreditDebitType.postpaid;\r\n        this.selection.activationType = EActivationType.actDefault;\r\n\r\n        this.startNewActivation();\r\n        let nextUrl = ProcessNewScreen.uri + 'tariff/' + this.data.id + '?brand=' + brandKey;\r\n        EasyRouter.route({ url: nextUrl, title: ProcessNewScreen.title });\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private changeCat = (catKey: string) => {\r\n       \r\n        if (OrderDataWrapper.previewAvailable(this.data.activations)) {\r\n            if (!this.validate()) { return; };\r\n        }\r\n\r\n    \r\n        //Global.categoryWrapper.switchCat(catKey);\r\n        this.selectedBrand = this.data.currentBrand = Global.categoryWrapper.getCategoryBrandKey(undefined);\r\n        this.product = undefined;\r\n        this.selection.creditDebitType = ECreditDebitType.postpaid;\r\n        this.selection.activationType = EActivationType.actDefault;\r\n        ////console.log('changed:' + catKey + '=' + this.selectedBrand);\r\n        this.startNewActivation();\r\n        let nextUrl = ProcessNewScreen.uri + 'tariff/' + this.data.id + '?brand=' + this.selectedBrand;\r\n        EasyRouter.route({ url: nextUrl, title: ProcessNewScreen.title });\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public changeCatBrand = (brandKey: string) => {\r\n        this.selectedBrand = this.data.currentBrand = brandKey;\r\n        this.current!.reset();\r\n        this.current!.brandKey = brandKey;\r\n        StorageHelper.addOrder(this.data);\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private renderProgress(): JSX.Element {\r\n\r\n        let pr = this.getProgress();\r\n\r\n        if (pr == EOrderProcessView.tariff) {\r\n\r\n            return this.renderTariff();\r\n        } else if (pr === EOrderProcessView.customer) {\r\n            return this.renderCustomer();\r\n        } else if (pr === EOrderProcessView.done) {\r\n            if (this.state.loading) { return <></> };\r\n\r\n            return this.renderPreview();\r\n        };\r\n\r\n        return <></>;\r\n    };\r\n\r\n    private canRenderFocusBox(box: IFocusBox): boolean {\r\n        for (let i = 0; i < box.items.length; i++) {\r\n            //brand;productId;sub;option\r\n            let id = box.items[i].id.split(';')[1];\r\n\r\n            if (this.dataWrapper.hasProduct(id)) {\r\n                return false;\r\n            };\r\n        };\r\n\r\n        return true;\r\n    };\r\n\r\n    private renderTariff(): JSX.Element {\r\n\r\n        let brands = StorageHelper.getBrands();\r\n        let avl = StorageHelper.getAvailability();\r\n\r\n        let brand = Global.categoryWrapper.getCategoryBrand(this.data);\r\n\r\n        let boxes = StorageHelper.getSupport().boxes;\r\n        let box = avl.hasKip() ? boxes[1] : boxes[1];\r\n\r\n        let ctrl = (\r\n            <>\r\n                <BrandsList\r\n                    thumbType={EBrandThumbType.blister}\r\n                    thumbSelectable={false}\r\n                    selected={this.selectedBrand}\r\n                    block={{ title: 'Wählen Sie eine Kategorie', transparent: true, style: \"block-thumbs selonly\" }} />\r\n\r\n                {this.renderAdditional(brand)}\r\n\r\n                <div className=\"spacer\"></div>\r\n                <div className=\"text-tiny center\">Weiteren Tarif hinzufügen</div>\r\n                <div className=\"spacer\"></div>\r\n\r\n                <BrandsList\r\n                    thumbType={EBrandThumbType.square}\r\n                    thumbSelectable={true}\r\n                    clickHandler={this.changeCat}\r\n                    selected={this.selectedBrand}\r\n                    block={{ transparent: true, style: \"block-thumbs\" }} />\r\n\r\n                <act.ActivationActions parent={this} progress={this.getProgress()} />\r\n\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n\r\n    };\r\n\r\n    /**\r\n     * Will render componets depending if some additional input is needed. EG DSL AddressCheck\r\n     *\r\n     * @brand {IBrand} current brand\r\n     */\r\n    private renderAdditional(brand: IBrand): JSX.Element {\r\n        let ctrl = <></>;\r\n\r\n        /**\r\n         * show the DSL address check if current brand is DSL and check not executed\r\n         */\r\n        ctrl = <>\r\n            {this.renderBrand(brand)}\r\n        </>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderBrand(brand: IBrand): JSX.Element {\r\n        let avl = StorageHelper.getAvailability();\r\n        let ctrl = <></>;\r\n        let items: JSX.Element[] = [];\r\n\r\n        if (this.current) {\r\n            if (this.current.brandKey === BrandKeys.dsl || this.current.brandKey === BrandKeys.kabel) {\r\n                items.push(<GiggacombiBanners bookOption={GigacombiBookOptions.undefined} parent={this} advertisementBanner={true} />)\r\n            }\r\n\r\n            if (this.current.brandKey == BrandKeys.otelo ||\r\n                this.current.brandKey == BrandKeys.vodafone ||\r\n                this.current.brandKey == BrandKeys.dsl ||\r\n                this.current.brandKey == BrandKeys.kabel ||\r\n                this.current.brandKey == BrandKeys.unity) {\r\n                items.push(<act.ActivationBlockSimple product={this.product} parent={this} />);\r\n\r\n                if ((this.current.activationType === EActivationType.portDefault) && this.current.brandKey !== BrandKeys.dsl && this.current.brandKey !== BrandKeys.unity) {\r\n                    items.push(<act.ActivationMnp parent={this} onChange={this.onInputData} />);\r\n                };\r\n\r\n                //if(this.current.productId) {\r\n                if (this.current.brandKey == BrandKeys.otelo) {\r\n                    items.push(<act.ActivationMsisdn parent={this} onChange={this.onInputData} />);\r\n                } else if (this.current.brandKey == BrandKeys.vodafone) {\r\n                    items.push(<act.ActivationSim parent={this} onChange={this.onInputData} />);\r\n                } else {\r\n                    if (this.current.activationType === EActivationType.portDefault) {\r\n                        if (this.current.brandKey != BrandKeys.unity) {\r\n                            items.push(<act.PortingOptions parent={this} onChange={this.onInputData} />);\r\n\r\n                            if (this.data.customer.mnp && this.data.customer.mnp.numberPortingType != ENumberPortingType.later) {\r\n                                items.push(<act.ActivationTel numbersToPort={this.data.customer.mnp && this.data.customer.mnp.countNumbers ? this.data.customer.mnp.countNumbers : 1} parent={this} onChange={this.onInputData} />)\r\n                            };\r\n                        }\r\n                    };\r\n                }\r\n                //}\r\n            };\r\n\r\n            if (this.current.brandKey == BrandKeys.otelo || this.current.brandKey == BrandKeys.vodafone) {\r\n                items.push(<act.ActivationTariff\r\n                    onChange={this.onInputData}\r\n                    selectionChanged={this.activationChanged}\r\n                    tariff={this.selectedProduct}\r\n                    parent={this}\r\n                    selection={this.selection} />);\r\n\r\n                if (this.current.creditDebitType === ECreditDebitType.postpaid) {\r\n                    items.push(<act.ActivationHardware preview={false} activation={this.current} onChange={this.onInputData} />);\r\n                };\r\n\r\n            } else {\r\n                items.push(<act.ActivationTariff selectionChanged={this.activationChanged}\r\n                    onChange={this.onInputData}\r\n                    tariff={this.selectedProduct} parent={this} selection={this.selection} />);\r\n            }\r\n\r\n            if (avl && avl.hasKabel() || avl.hasDSL() && this.current!.brandKey != BrandKeys.unity) { // show only after avilability check and the user can book kabel and dsl\r\n                items.push(<GiggacombiBanners data={this.dataWrapper} bookOption={this.currentBookedOption} onCategoryChanged={this.onCategoryChange} parent={this} advertisementBanner={false} />);\r\n            }\r\n        }\r\n        ctrl = <>{items}</>\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderCustomer(): JSX.Element {\r\n        let ctrl = (\r\n            <>\r\n                <ActivationCustomerData parent={this} customer={this.data.customer} />\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderPreview(): JSX.Element {\r\n        let ctrl = (\r\n            <>\r\n                {/* <page.Inner1C> */}\r\n                <page.Inner2CLeft>\r\n                    <>\r\n                        <act.ActivationPreview parent={this} order={this.data} preview={false} />\r\n\r\n                        <act.ActivationActions parent={this} progress={this.getProgress()} />\r\n                    </>\r\n                </page.Inner2CLeft>\r\n                <></>\r\n                {/* </page.Inner1C> */}\r\n            </>);\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderPreviewPrint(): JSX.Element {\r\n        let ctrl = (\r\n            <>\r\n                <page.Inner1C>\r\n                    <page.Inner2CLeft>\r\n                        <>\r\n                            <act.ActivationPreview parent={this} order={this.data} preview={true} />\r\n                        </>\r\n                    </page.Inner2CLeft>\r\n                    <></>\r\n                </page.Inner1C>\r\n            </>);\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderProcess(): JSX.Element {\r\n\r\n        this.dataWrapper = new OrderDataWrapper(this.data);\r\n        let cfg = Global.getConfiguration();\r\n        this.selectedBrand = this.data.currentBrand;\r\n\r\n        if (this.data.activations.length > 0) {\r\n           \r\n            this.current = this.data.activations[this.currentIndex];\r\n           \r\n            this.selectedBrand = !this.current ? BrandKeys.vodafone : this.current.brandKey;\r\n            this.selectedProduct = this.current ? this.current.productId : '';\r\n\r\n            if(this.dataWrapper.hasPartnerCard() && this.selection.activationType != EActivationType.partnerCard) {\r\n                this.selection.activationType = EActivationType.partnerCard;\r\n            };\r\n        } else {\r\n            this.current = this.startNewActivation();\r\n        }\r\n\r\n        //if more than one product in current selection then activate mode ALLE\r\n        if (this.current && this.current.brandKey == BrandKeys.kabel && this.current.isMultiple()) {\r\n            Global.categoryWrapper.all = true;\r\n        }\r\n\r\n        if (!this.selectedBrand) {\r\n            this.selectedBrand = linq.from<IBrand>(this.defcon.brands).first(x => x.available).id;\r\n        };\r\n\r\n        let pr: EOrderProcessView = this.getProgress();\r\n\r\n        if (pr === EOrderProcessView.tariff) {\r\n            let brand = OrderingHelper.getBrand(this.selectedBrand);\r\n\r\n            this.product = Enumerable.from<IProduct>(brand.products)\r\n                .where(x => x.id === this.selectedProduct)\r\n                .firstOrDefault();\r\n\r\n            if (this.product) {\r\n                Global.categoryWrapper.switchCat(this.product.catKey);\r\n                //Global.categoryWrapper.all = this.current!.isMultiple();\r\n                this.data.currentCat = this.product.catKey;\r\n                this.data.currentBrand = this.selectedBrand;\r\n            }\r\n        }\r\n\r\n        let sub: JSX.Element = <act.ActivationProgress progress={this.state.progress}\r\n            states={[OrderStages.tariff, OrderStages.customer, OrderStages.done]} />;\r\n\r\n        if (Global.easyApp.head) {\r\n            Global.easyApp.head.appendSub(sub);\r\n        };\r\n\r\n        let dyn: JSX.Element = <></>;\r\n\r\n        if (this.dynamicPopup) {\r\n            this.dynamicPopup.props.onDismiss = () => {\r\n                this.dynamicPopup = undefined;\r\n                this.setState({ changed: true, processing: false, closablePopup: false });\r\n            };\r\n\r\n            dyn = GlobalJSX.GetPopup(this.dynamicPopup.props, this.dynamicPopup.content, this.dynamicPopup.action);\r\n        };\r\n\r\n        let a: JSX.Element = <cmp.Action>\r\n            <></>\r\n            <page.LButton text={MainTexts.close} css=\"fr\" icon=\"ok\" type={m.ELButtonType.buttonWithIconRight} onClick={() => {\r\n                this.modelState.reset();\r\n                this.setState({ changed: true });\r\n            }} />\r\n        </cmp.Action>\r\n\r\n        if (this.modelState.errorMessage.indexOf('Komfort-Anschluss') > 0) {\r\n            a = <cmp.Action>\r\n                <page.LButton text={MainTexts.back} css=\"fl\" icon=\"cancel\" type={m.ELButtonType.linkWithIconLeft} onClick={() => {\r\n                    this.modelState.reset();\r\n                    this.setState({ changed: true });\r\n                }} />\r\n                <page.LButton text=\"Weiter mit Komfort-Anschluss\" css=\"fr\" icon=\"ok\" type={m.ELButtonType.buttonWithIconRight} onClick={() => {\r\n                    if (this.current) {\r\n                        this.current.services.push('svc_dsl_comfort');\r\n                        StorageHelper.updateActivation(this.current);\r\n                        this.gotoView(EOrderProcessView.customer);\r\n                    }\r\n                }} />\r\n            </cmp.Action>\r\n        }\r\n\r\n        let ctrl = (\r\n            <div id={ProcessNewScreen.containerId}>\r\n                {this.renderPage(pr)}\r\n\r\n                {dyn}\r\n\r\n                <cmp.Popup\r\n                    type={this.processPopupState}\r\n                    visible={this.state.processing || this.state.closablePopup}\r\n                    closable={this.state.closablePopup}\r\n                    id=\"wait\"\r\n                    title={MainTexts.pleaseWait}\r\n                    height={200}\r\n                    onDismiss={this.onDismissProcessPopup}>\r\n                    <cmp.PopupBody>\r\n                        <div dangerouslySetInnerHTML={{ __html: this.state.apiMessage }} />\r\n                        <></>\r\n                    </cmp.PopupBody>\r\n                    <></>\r\n                </cmp.Popup>\r\n\r\n                <cmp.Popup\r\n                    type={EPopupType.custom}\r\n                    visible={!this.modelState.isValid()}\r\n                    closable={true}\r\n                    id=\"validate\"\r\n                    title={ValidationMessages.titleValidationError}\r\n                    height={200}\r\n                    onDismiss={this.onDismissValidation}>\r\n                    <cmp.PopupBody>\r\n                        <div>{this.modelState.errorMessage}</div>\r\n                        <page.LClear />\r\n                    </cmp.PopupBody>\r\n                    {a}\r\n                </cmp.Popup>\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default ProcessNewScreen;","import * as React from 'react';\r\nimport * as act from '../../../src/components/ordering/process/index';\r\nimport BrandsList from '../../components/ordering/brandList';\r\nimport { EBrandThumbType } from '../../components/ordering/brandThumb';\r\nimport Inner1C from '../../components/page/inner1';\r\nimport * as m from '../../models/index';\r\nimport Global from '../../utils/Global';\r\nimport StorageHelper from '../../utils/storage';\r\nimport { GigacombiBookOptions, GiggacombiBanners } from './advertisement';\r\n\r\nexport class WelcomeScreen extends React.Component {\r\n    public componentId: string = 'welcomescreen'\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.refresh = this.refresh.bind(this);\r\n\r\n        Global.easyApp.setTitle(\"\");\r\n\r\n        //Api.init();\r\n    };\r\n\r\n    public refresh() {\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public render() {\r\n        let brands = StorageHelper.getBrands();\r\n        let user = StorageHelper.getUser();\r\n        let dc = StorageHelper.getDefCon();\r\n\r\n        let ctrl = (\r\n            <>\r\n                <Inner1C style=\"tiny\">\r\n                    <>\r\n\r\n                        {user ?\r\n                            <div className=\"inner\">\r\n                                <h1>Guten Tag {user.firstname} {user.surname}</h1>\r\n                            </div>\r\n                            : null}\r\n\r\n                           \r\n                        {\r\n                            StorageHelper.needAvailability(dc) ?\r\n                                <act.ActivationAvailability\r\n                                    status={m.EComponentState.visible}\r\n                                    parent={this} />\r\n                                : null\r\n                        }\r\n                    \r\n                        {StorageHelper.needAvailability(dc) ? <GiggacombiBanners bookOption={GigacombiBookOptions.undefined} parent={this} advertisementBanner={true} /> : null}\r\n\r\n                        <BrandsList\r\n                            selected={'vf'}\r\n                            thumbSelectable={true}\r\n                            needSelection={true}\r\n                            thumbType={EBrandThumbType.blister}\r\n                            withTariffs={true}\r\n                            block={{ title: 'Wählen Sie eine Marke aus', transparent: true }} />\r\n                    </>\r\n                    <div>empty</div>\r\n\r\n                </Inner1C>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default WelcomeScreen;","import React, { Component, Children } from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as page from '../../components/page';\r\nimport { AppIds } from '../../utils/Defaults';\r\nimport { ERequestStatus, IDefCon, EAppState } from '../../models';\r\nimport StorageHelper from '../../utils/storage';\r\nimport { DefConScreen } from '../insex';\r\n\r\nexport interface IScreenState {\r\n\r\n};\r\n\r\nexport interface IScreenProps {\r\n    blank: boolean;\r\n    content?: JSX.Element;\r\n};\r\n\r\nexport class MainScreen extends React.Component<IScreenProps, IScreenState> {\r\n    private jsxLoader: JSX.Element = <></>;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loaderVisible: false,\r\n            loaderText : '',\r\n            loaderState: ERequestStatus.undefined\r\n        };\r\n    };\r\n\r\n    componentWillReceiveProps() {\r\n        this.setState({changed: true});\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = (\r\n            this.props.blank ?\r\n                <div id={AppIds.container}>\r\n                    {\r\n                        this.props.content ? this.props.content : null\r\n                    }\r\n                </div> \r\n            :\r\n            <>\r\n                <page.Head {...{changed:false}}/>\r\n\r\n                <div id={AppIds.container}>\r\n                    {this.renderDefCon()}\r\n                </div>                \r\n                <page.Footer {...{changed:false}}/>\r\n                <page.UserPannel {...{changed:false}} parent={this} />\r\n                <div className=\"spacer-huge\"></div>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    }; \r\n\r\n    private renderDefCon() : JSX.Element {\r\n        let dc: IDefCon = StorageHelper.getDefCon();\r\n\r\n        if((dc.state & EAppState.ok) !== EAppState.ok) {\r\n            return <DefConScreen />\r\n        } else {\r\n            return <></>\r\n        }\r\n    };\r\n};\r\n\r\nexport default MainScreen;","import * as React from 'react';\r\nimport {App} from '../../App';\r\nimport CategoryWrapper from '../../components/tools/categoryWrapper';\r\nimport { IApiResponse } from '../../interfaces';\r\nimport { ERequestType } from '../../models';\r\nimport { IUIDataModel } from '../../models/environment/uidata';\r\nimport * as dc from '../../models/global/defcon';\r\nimport Api from '../../utils/api';\r\nimport { HttpMethods, StorageKeys } from '../../utils/Defaults';\r\nimport Global from '../../utils/Global';\r\nimport jsx from '../../utils/GlobalJSX';\r\nimport StorageHelper from '../../utils/storage';\r\n\r\nexport interface IInitScreenProps {\r\n    parent: App;\r\n};\r\n\r\nexport class InitScreen extends React.Component<IInitScreenProps, any> {\r\n    public static containerId: string = 'screenInit';\r\n    private interval;\r\n    constructor(props: IInitScreenProps) {\r\n        super(props);\r\n\r\n        this.socketCallback = this.socketCallback.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        Api.init();\r\n\r\n        Api.fetch('environment/dc', undefined, HttpMethods.get, (api: IApiResponse) => {\r\n            Api.parseDefcon(api, (res: dc.IDefCon) => {\r\n\r\n                StorageHelper.set(StorageKeys.keyDefCon, api.data);\r\n                if (res && (res.state & dc.EAppState.ok) !== dc.EAppState.ok) {\r\n                    this.props.parent.refresh({});\r\n\r\n                    return;\r\n                };\r\n\r\n                Global.init();\r\n\r\n                this.interval = setInterval(() => {\r\n                    if (Global.hub.started) {\r\n                        clearInterval(this.interval);\r\n                        Global.hub.send('', ERequestType.startApp, undefined);\r\n                    }\r\n                }, 1000);\r\n            })\r\n        });\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = <div id={InitScreen.containerId}>\r\n            {jsx.GetLoader()}\r\n        </div>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public socketCallback(api: IApiResponse) {\r\n        let model: IUIDataModel = api.data;\r\n\r\n        StorageHelper.set(StorageKeys.keyUser, model.user);\r\n        StorageHelper.set(StorageKeys.keyBrands, model.brands);\r\n        StorageHelper.set(StorageKeys.keySupport, model.support);\r\n        StorageHelper.set(StorageKeys.keyCombis, model.combis);\r\n\r\n        // in case of defcon allow brands for voids to test\r\n        let d = StorageHelper.getDefCon();\r\n        if(d.state != dc.EAppState.ok && model.user.isAuthenticated && d.voidAllowed && d.voidAllowed.indexOf(model.user.voId)>=0) {\r\n            d.brands.map((i)=>{\r\n                i.available = true;\r\n            });\r\n            StorageHelper.set(StorageKeys.keyDefCon, d);\r\n        };\r\n\r\n        Global.categoryWrapper = new CategoryWrapper();\r\n\r\n        this.props.parent.refreshAndRoute({\r\n            url: window.location.href\r\n        });\r\n    };\r\n};\r\n\r\nexport default InitScreen;","import * as React from 'react';\r\nimport linq from 'linq';\r\nimport StorageHelper from '../../utils/storage';\r\nimport { IOrder } from '../../models/ordering/order';\r\nimport { IOrderData, IActivation } from '../../models';\r\nimport { ActivationPreview } from '../../components/ordering/process';\r\n\r\nexport interface IPreviewScreenProps {\r\n    activationId: string;\r\n    orderId: string;\r\n};\r\n\r\nexport class PreviewScreen extends React.Component<IPreviewScreenProps, any> {\r\n    constructor(props) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = <div>Preview</div>;\r\n\r\n        let order = linq.from<IOrderData>(StorageHelper.getOrders())\r\n            .where(x=>x.id == this.props.orderId)\r\n            .firstOrDefault();\r\n        \r\n        if(order) {\r\n            let act = linq.from<IActivation>(order.activations)\r\n                .where(x=>x.id == this.props.activationId)\r\n                .firstOrDefault()\r\n            \r\n            if(act) {\r\n            }\r\n        };\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default PreviewScreen;","import * as React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport '../../../src/styles/managerDetails.scss';\r\nimport { EPopupType } from '../../components/dialogs/popup';\r\nimport * as cmp from '../../components/index';\r\nimport * as page from '../../components/page/index';\r\nimport { EPagingType, IColumn } from '../../components/page/table';\r\nimport { IApiResponse, IApiSummary } from '../../interfaces';\r\nimport IAppDefinition from '../../interfaces/app/IAppDefinition';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport * as m from '../../models/index';\r\nimport Api from '../../utils/api';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport ContractManagerScreen from './manager';\r\n\r\nexport interface IContractDetailsModel {\r\n    customer: string;\r\n    msisdn: string;\r\n    contractId: string;\r\n    customerId: string;\r\n    details?: IContractDetailModel[];\r\n}\r\nexport interface IContractDetailModel {\r\n    date: Date,\r\n    status: string;\r\n    details: string;\r\n}\r\n\r\nexport interface IContractManagerDetailsProps {\r\n    voId: string;\r\n    contractId: string;\r\n    parent: ContractManagerScreen;\r\n}\r\nexport interface IContractManagerDetailsState {\r\n    model?: IContractDetailsModel;\r\n\r\n    apiMessage?: string;\r\n    processing: boolean;\r\n    closablePopup: boolean;\r\n}\r\n\r\nexport class ContractManagerDetailsScreen extends React.Component<IContractManagerDetailsProps, IContractManagerDetailsState> {\r\n    public static containerId: string = 'contractManagerDetails';\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n    readonly globalCfg: IAppDefinition = Global.getConfiguration();\r\n    readonly cfg: IBlockConfiguration = {\r\n        title: undefined,\r\n        transparent: false,\r\n        styleContainer: ''\r\n    };\r\n    readonly cols: IColumn[] = [\r\n        {\r\n            label: MainTexts.date, showTitle: true, style: 'text-sub', binding: 'date', size: 3, sortable: true, renderer: (r, c) => {\r\n                const d = r.date as Date;\r\n                if (d) {\r\n                    return Global.toGermanDate(d);\r\n                }\r\n\r\n                return '';\r\n            }\r\n        },\r\n        { label: \"Status\", showTitle: true, filterable: false, binding: 'status', size: 4, sortable: true },\r\n        { label: \"Details\", showTitle: true, filterable: false, binding: 'details', size: 5, sortable: true }\r\n    ];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            model: undefined,\r\n\r\n            apiMessage: undefined,\r\n            processing: true,\r\n            closablePopup: false\r\n        };\r\n\r\n        this._onDismissPopup = this._onDismissPopup.bind(this);\r\n        this._onDismissMainPopup = this._onDismissMainPopup.bind(this);\r\n\r\n        this._loadData(props.contractId, props.voId);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.processPopupState = EPopupType.pleaseWait;\r\n        this.setState({ processing: true, model: undefined });\r\n        this._loadData(nextProps.contractId, nextProps.voId);\r\n    }\r\n\r\n    render() {\r\n        const { model } = this.state;\r\n\r\n        const pagingProps = { page: 1, count: this.globalCfg.pageSize, type: EPagingType.none };\r\n\r\n        return <div id={ContractManagerDetailsScreen.containerId}>\r\n            {this._renderPopup()}\r\n            <cmp.Popup title={MainTexts.details} onDismiss={this._onDismissMainPopup} visible={model !== undefined} width=\"1200px\" height=\"700px\" closable={true} id=\"managerDetailsMainPopup\" type={EPopupType.custom}>\r\n                <div>\r\n                        <Row>\r\n                            <Col xs={3} md={3} className=\"np\">\r\n                                <page.LControl type={m.EControlType.text}\r\n                                    value={model !== undefined ? model.customer : ''}\r\n                                    onChange={() => { }}\r\n                                    preview={true}\r\n                                    name=\"customer\" id=\"customer\"\r\n                                    label={MainTexts.customer} />\r\n                            </Col>\r\n                            <Col xs={3} md={3} className=\"np\">\r\n                                <page.LControl type={m.EControlType.text}\r\n                                    value={model !== undefined ? model.msisdn : ''}\r\n                                    onChange={() => { }}\r\n                                    preview={true}\r\n                                    name=\"msisdn\" id=\"msisdn\"\r\n                                    label=\"MSISDN\" />\r\n                            </Col>\r\n                            <Col xs={3} md={3} className=\"np\">\r\n                                <page.LControl type={m.EControlType.text}\r\n                                    value={model !== undefined ? model.contractId : ''}\r\n                                    onChange={() => { }}\r\n                                    preview={true}\r\n                                    name=\"contract\" id=\"contract\"\r\n                                    label={MainTexts.contract} />\r\n                            </Col>\r\n                            <Col xs={3} md={3} className=\"np\">\r\n                                <page.LControl type={m.EControlType.text}\r\n                                    value={model !== undefined ? model.customerId : ''}\r\n                                    onChange={() => { }}\r\n                                    preview={true}\r\n                                    name=\"customerid\" id=\"customerid\"\r\n                                    label={MainTexts.customerId} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12}>\r\n                                <page.Table coulmns={this.cols} id={ContractManagerDetailsScreen.containerId + 'Table'}\r\n                                    expnaded={false}\r\n                                    pagingProps={pagingProps}\r\n                                    data={model !== undefined && model.details !== undefined ? model.details : undefined} />\r\n                            </Col>\r\n                        </Row>\r\n                </div>\r\n                <></>\r\n            </cmp.Popup>\r\n        </div>;\r\n    }\r\n\r\n    socketCallback(res: IApiResponse) {\r\n        if (res.error) {\r\n            this.processPopupState = EPopupType.custom;\r\n            let sum: IApiSummary = Api.parseSummary(res, undefined);\r\n            this.processPopupState = EPopupType.custom;\r\n\r\n            this.setState({ apiMessage: sum.message, closablePopup: true, processing: false });\r\n        } else {\r\n            const resModel: IContractDetailsModel = res.data.data;\r\n            this.setState({ processing: false, closablePopup: false, model: resModel });\r\n        }\r\n    }\r\n\r\n    _loadData = (contractId, voId) => {\r\n        const reqModel = { contractId, voId };\r\n        Global.hub.send(JSON.stringify(reqModel), m.ERequestType.getContractDetails, undefined);\r\n    };\r\n\r\n    _renderPopup = () => {\r\n        return <cmp.Popup\r\n            type={this.processPopupState}\r\n            visible={this.state.processing || this.state.closablePopup}\r\n            closable={this.state.closablePopup}\r\n            id=\"wait\"\r\n            title={MainTexts.pleaseWait}\r\n            height={200}\r\n            onDismiss={this._onDismissPopup}>\r\n            <cmp.PopupBody>\r\n                <div>{this.state.apiMessage}</div>\r\n                <></>\r\n            </cmp.PopupBody>\r\n            <></>\r\n        </cmp.Popup>\r\n    }\r\n\r\n    _onDismissPopup = () => {\r\n        this.setState({ processing: false, closablePopup: false });\r\n    }\r\n\r\n    _onDismissMainPopup = () => {\r\n        this.setState({ processing: false, closablePopup: false, model: undefined });\r\n        this.props.parent.onDismissDetailsScreen();\r\n    }\r\n}\r\n\r\nexport default ContractManagerDetailsScreen;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport * as page from '../../../src/components/page/index';\r\nimport { EPopupType } from '../../components/dialogs/popup';\r\nimport * as cmp from '../../components/index';\r\nimport BlockBase from '../../components/page/block';\r\nimport { EFilterType } from '../../components/page/filter';\r\nimport { EPagingType, IColumn } from '../../components/page/table';\r\nimport { IApiResponse, IApiSummary } from '../../interfaces';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport * as m from '../../models/index';\r\nimport { IFilter } from '../../models/index';\r\nimport Api from '../../utils/api';\r\nimport { BrandKeys } from '../../utils/Defaults';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport EasyRouter from '../../utils/router';\r\nimport ContractManagerDetailsScreen from './managerDetails';\r\n\r\nexport interface IContractManagerScreen {\r\n    api?: IApiResponse;\r\n    changed: boolean;\r\n    expanded: boolean;\r\n\r\n    apiMessage?: string;\r\n    processing: boolean;\r\n    closablePopup: boolean;\r\n\r\n    selectedRecord?: any;\r\n};\r\n\r\n/**\r\n * Component to handle the history of contracts done by a dealer\r\n */\r\nexport class ContractManagerScreen extends React.Component<any, IContractManagerScreen> {\r\n    public static containerId: string = 'contractManager';\r\n    private filter: m.IFilter = { needle: '' };\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n    readonly cfg = Global.getConfiguration();\r\n    readonly cols: IColumn[] = [\r\n        {\r\n            label: MainTexts.referenceId, showTitle: false, style: 'text-sub-logo', filterable: true, binding: 'contractId', size: 2, sortable: true,\r\n            renderer: (r, c) => {\r\n                let txt = r['contractId'];\r\n\r\n                if (txt != null) {\r\n                    if (txt.length == 36) {\r\n                        txt = MainTexts.unkonwnAtThisTime;\r\n                    }\r\n                }\r\n\r\n                if (r['brand'] == BrandKeys.vodafone) {\r\n                    txt = 'K-' + txt;\r\n                } else if (r['brand'] == BrandKeys.kabel || r['brand'] == BrandKeys.dsl  || r['brand'] == BrandKeys.unity) {\r\n                    txt = 'V-' + txt;\r\n                } else if (r['brand'] == BrandKeys.otelo) {\r\n                    if (txt) {\r\n                        txt = 'V-' + txt;\r\n                    } else {\r\n                        txt = 'M-' + r['msisdn'];\r\n                    }\r\n                };\r\n\r\n                return <>\r\n                    <div className={'brandi ' + (r['brand'] ? r['brand'] : 'otelo')} />\r\n                    <div className=\"text-sub-logo\">{txt}</div>\r\n                </>\r\n            }\r\n        },\r\n        {\r\n            label: MainTexts.date, filterable: true, style: 'text-sub', binding: 'orderDate', size: 1, sortable: true, renderer: (r, c) => {\r\n                return <>{Global.toGermanDate(r[c.binding])}</>;\r\n            }\r\n        },\r\n        { label: MainTexts.customerName, showTitle: true, filterable: true, binding: 'customer', size: 1, sortable: true, style: '' },\r\n        { label: MainTexts.msisdn, showTitle: true, filterable: true, binding: 'msisdn', size: 2, sortable: true, style: '' },\r\n        { label: MainTexts.employee, labelShort: MainTexts.employeeShort, showTitle: true, binding: 'employeeId', size: 1, sortable: true, style: 'text-sub', renderer: (r, c) => {\r\n            return <>{r[c.binding].replace('-', '- ')}</>;\r\n        } },\r\n        { label: MainTexts.type, showTitle: true, filterable: true, binding: 'typeUI', size: 2, sortable: true, style: '' },\r\n        { label: MainTexts.details, isHtml: true, showTitle: true, filterable: true, binding: 'description', size: 1, sortable: true },\r\n        {\r\n            label: '', binding: '', size: 2, sortable: false,\r\n            renderer: (c, r) => {\r\n                let ctrl = <></>;\r\n\r\n                ctrl = (<>\r\n                    <page.LButton type={m.ELButtonType.iconImage}\r\n                        icon=\"list\"\r\n                        clickModel={c}\r\n                        onClickEvent={(e, m) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            this.selectRecord(m);\r\n                            return false;\r\n                        }} />\r\n\r\n                    {\r\n                        //vvl, tv, or bnt\r\n                        (c.transactionTypeId == 3 || c.transactionTypeId == 4 || c.transactionTypeId == 1  || c.transactionTypeId == 2  || c.transactionTypeId == 18) && c.canReprint ? \r\n                        <page.LButton type={m.ELButtonType.iconImage}\r\n                            icon=\"print\"\r\n                            clickModel={c}\r\n                            onClickEvent={(e, m) => {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                                let cfg = Global.getConfiguration();\r\n                                let url =  cfg.apiUrl + 'document/GetContract?activationId=' + c.orderId + '';\r\n                                let w = window.open(url, '_blank');\r\n                                return false;\r\n                            }} /> \r\n                        : null\r\n                    }\r\n\r\n                    {\r\n                        (c.transactionTypeId == 3 || c.transactionTypeId == 4 || c.transactionTypeId == 1  || c.transactionTypeId == 2  || c.transactionTypeId == 18) && c.canReprint ? \r\n                            <page.LButton type={m.ELButtonType.iconImage}\r\n                                icon=\"overview\"\r\n                                clickModel={c}\r\n                                onClickEvent={(e, m) => {\r\n                                    e.preventDefault();\r\n                                    e.stopPropagation();\r\n                                    let url = '/ordering/preview/x/' + c.orderId + '/';\r\n                                    let w = window.open(url, '_blank');\r\n                                    return false;\r\n                                }} />                          \r\n                            : null\r\n                    }                        \r\n                </>)\r\n\r\n                return ctrl;\r\n            },\r\n            rendererHead: (c) => {\r\n                return <>\r\n                    <page.LButton type={m.ELButtonType.iconImage}\r\n                        icon=\"expand\"\r\n                        onClick={this.expand} />\r\n                </>;\r\n            }\r\n        },\r\n    ];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this._filterChange = this._filterChange.bind(this);\r\n        this._applyFilter = this._applyFilter.bind(this);\r\n        this.expand = this.expand.bind(this);\r\n        this.onDismissPopup = this.onDismissPopup.bind(this);\r\n        this.itemClick = this.itemClick.bind(this);\r\n\r\n        Global.easyApp.setTitle(MainTexts.contractManager);\r\n\r\n        this.state = {\r\n            expanded: false,\r\n            changed: false,\r\n            processing: true,\r\n            closablePopup: false\r\n        };\r\n\r\n        let to: Date = new Date();\r\n        let from: Date = new Date();\r\n        // from = new Date(from.setMonth(from.getMonth() - 1)) as Date;\r\n        from.setDate(from.getDate() - 31);\r\n\r\n        this.filter = {\r\n            needle: '',\r\n            from: from,\r\n            to: to,\r\n            timeFilter: 0,\r\n            cats: ['vf', 'otelo', 'fn', 'tv']\r\n        };\r\n\r\n    }\r\n\r\n    public componentDidMount() {\r\n\r\n        setTimeout(() => {\r\n            Global.easyApp.setTitle(MainTexts.contractManager);\r\n\r\n            const obj = { search: this.filter.needle, from: this.filter.from, to: this.filter.to };\r\n\r\n            Global.hub.send(JSON.stringify(obj), m.ERequestType.getContracts, undefined);\r\n        }, 1000);\r\n    }\r\n\r\n    public render() {\r\n        let ctrl = <div id={ContractManagerScreen.containerId}>\r\n            <page.Filter\r\n                filter={this.filter}\r\n                id=\"filter\"\r\n                type={EFilterType.default}\r\n                title={MainTexts.filter}\r\n                orderManagerFilter = {true}\r\n                onApply={this._applyFilter}\r\n                onChange={this._filterChange}\r\n                placeholderSearch=\"z.B. MSISDN oder Vorname\" />\r\n            {\r\n                this.state.processing || !this.state.api || !this.state.api.data ? <></> :\r\n                    <>\r\n                        {this.renderData()}\r\n                    </>\r\n            }\r\n\r\n            {this.renderPopup()}\r\n        </div>;\r\n\r\n        return ctrl;\r\n    }\r\n\r\n    public socketCallback(res: IApiResponse) {\r\n        if (res.error) {\r\n            let sum: IApiSummary = Api.parseSummary(res, undefined);\r\n            this.processPopupState = EPopupType.custom;\r\n            this.setState({ changed: true, processing: true, closablePopup: true, api: res, apiMessage: sum.message });\r\n        } else {\r\n            this.setState({ changed: true, processing: false, api: res });\r\n        }\r\n    }\r\n\r\n    onDismissDetailsScreen = () => {\r\n        this.setState({ selectedRecord: undefined });\r\n    }\r\n\r\n    private onDismissPopup() {\r\n        this.setState({ processing: false });\r\n    }\r\n\r\n    private renderFilter(): JSX.Element {\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.filter,\r\n            transparent: false\r\n        };\r\n\r\n        let to: Date = new Date();\r\n        let from: Date = new Date();\r\n\r\n        let filter = (\r\n            <BlockBase config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LDate value={from}\r\n                                datePicker={true}\r\n                                onChange={this._applyFilter}\r\n                                title={MainTexts.periodFrom}\r\n                                name=\"filter.from\"\r\n                                style=\"middle\"\r\n                                id=\"from\" />\r\n                        </Col>\r\n                        <Col xs={6} md={6} className=\"npr\">\r\n                            <page.Filter\r\n                                filter={this.filter}\r\n                                id=\"filter\"\r\n                                type={EFilterType.default} title={MainTexts.searchTitle}\r\n                                onApply={this._applyFilter}\r\n                                placeholderSearch=\"z.B. MSISDN oder Vorname\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LDate value={to}\r\n                                datePicker={true}\r\n                                onChange={this._applyFilter}\r\n                                title={MainTexts.to}\r\n                                style=\"middle\"\r\n                                name=\"filter.to\"\r\n                                id=\"to\" />\r\n                        </Col>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LButton text={MainTexts.toDashboard}\r\n                                css=\"fr\"\r\n                                onClick={() => { EasyRouter.route({ url: '/' }); }}\r\n                                type={m.ELButtonType.buttonWithIconRight}\r\n                                icon=\"arrow-right\" />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <></>\r\n            </BlockBase>\r\n        );\r\n\r\n        let ctrl = (\r\n            <page.Inner1C>\r\n                <page.Inner2CLeft>\r\n                    <>\r\n                        {filter}\r\n                    </>\r\n                </page.Inner2CLeft>\r\n                <></>\r\n            </page.Inner1C>\r\n        );\r\n\r\n        return ctrl;\r\n    }\r\n\r\n    private renderPopup(): JSX.Element {\r\n        return <cmp.Popup\r\n            type={this.processPopupState}\r\n            visible={this.state.processing || this.state.closablePopup}\r\n            closable={this.state.closablePopup}\r\n            id=\"wait\"\r\n            title={MainTexts.pleaseWait}\r\n            height={200}\r\n            onDismiss={this.onDismissPopup}>\r\n            <cmp.PopupBody>\r\n                <div>{this.state.apiMessage}</div>\r\n                <></>\r\n            </cmp.PopupBody>\r\n            <></>\r\n        </cmp.Popup>\r\n    }\r\n\r\n    _filterChange = (f: IFilter) => {\r\n        this.filter = f;\r\n        this.setState({ changed: true });\r\n    }\r\n\r\n    _applyFilter = () => {\r\n        this.setState({ processing: true });\r\n        //const obj = { search: this.filter.needle, from: this.filter.from, to: this.filter.to };\r\n\r\n        Global.hub.send(JSON.stringify(this.filter), m.ERequestType.getContracts, undefined);\r\n    }\r\n\r\n    private selectRecord(record) {\r\n        const selectedRecord: any = { voId: record.Void, contractId: record.contractId };\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    private expand() {\r\n        this.setState({ expanded: !this.state.expanded });\r\n    }\r\n\r\n    private renderData(): JSX.Element {\r\n        let details: JSX.Element = <></>;\r\n        const { selectedRecord } = this.state;\r\n        if (selectedRecord !== undefined) {\r\n            details = <div className=\"row\">\r\n                <div className=\"col-md-12 col-12\">\r\n                    <ContractManagerDetailsScreen {...selectedRecord} parent={this} />\r\n                </div>\r\n            </div>;\r\n        }\r\n\r\n        const pagingProps = { page: 1, count: this.cfg.pageSize, type: EPagingType.local };\r\n\r\n        const ctrl = <div id={ContractManagerScreen.containerId} className={'c1 container ' + (this.state.expanded ? 'wide' : '')}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 col-12\">\r\n                    <page.Table coulmns={this.cols}\r\n                        id={ContractManagerScreen.containerId + 'Table'}\r\n                        expnaded={this.state.expanded}\r\n                        itemClick={this.itemClick}\r\n                        pagingProps={pagingProps}\r\n                        dateColumn='OrderDate'\r\n                        filter={undefined}\r\n                        data={this.state && this.state.api ? this.state.api.data.data : undefined} />\r\n                </div>\r\n            </div>\r\n            {details}\r\n        </div>;\r\n\r\n        return ctrl;\r\n    }\r\n\r\n    private itemClick(ev: any, id: any) {\r\n        if (ev) { ev.preventDefault(); }\r\n    }\r\n};\r\n\r\nexport default ContractManagerScreen;","import * as React from 'react';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { LClear, LControl, LButton } from '../../components';\r\nimport { EControlType, ELButtonType } from '../../models';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport StorageHelper from '../../utils/storage';\r\nimport IUser from '../../models/environment/user';\r\nimport dateformat from 'dateformat';\r\nimport md5 from 'md5';\r\nimport Api from '../../utils/api';\r\nimport { IApiResponse } from '../../interfaces';\r\n\r\nexport interface IIDScannerScreenProps {};\r\n\r\nexport interface IIDScannerScreenState {\r\n    changed: boolean;\r\n    run: number;\r\n    visible: boolean;\r\n};\r\n\r\nexport interface IIDScannerModel {\r\n    msisdn: string;\r\n    url: string;\r\n};\r\n\r\nexport class IDScannerScreen extends React.Component<IIDScannerScreenProps, IIDScannerScreenState> {\r\n    public static containerId: string = 'idscanner';\r\n\r\n    private model: IIDScannerModel = {msisdn:'', url:''};\r\n    private msisdn: string = '';\r\n\r\n    constructor(props:IIDScannerScreenProps) {\r\n        super(props);\r\n        this.state = {\r\n            changed: false, run: 0, visible: false\r\n        };\r\n        Global.easyApp.setTitle(MainTexts.documentScanner);\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: undefined,\r\n            transparent: false,\r\n            styleContainer: 'withicon',\r\n            teaser: <div className=\"block-icon\"><img className=\"fit\"  /></div>\r\n        };\r\n\r\n        let ctrl = (\r\n            <>\r\n            <Container id={'container-main'} className={'c1 container '}>\r\n                <Row>\r\n                    <Col md={12}>\r\n                    <BaseBlock config={cfg} key=\"b1\">\r\n                        <Container key=\"c1\">\r\n                            <Row>\r\n                                <Col xs={4} md={4}>\r\n                                    <LControl type={EControlType.text} title=\"MSISDN\" label=\"MSISDN\" \r\n                                        hint=\"Bitte geben Sie die MSISDN für den Scannerdokument ein.\"\r\n                                        onChange={(e:IControlValue)=>{\r\n                                            this.msisdn = e.value;\r\n                                            this.setState({changed: true, visible: false});\r\n                                        }}/>\r\n                                </Col>\r\n                                <Col xs={8} md={8}>\r\n\r\n                                </Col>                        \r\n                            </Row>      \r\n                            <Row>\r\n                                <Col>\r\n                                    <LButton text={MainTexts.start}\r\n                                            css=\"fl\"\r\n                                            onClick={() => { \r\n                                                Api.fetch('environment/docscan/?msisdn=' + this.msisdn, null, 'GET', (api:IApiResponse)=>{\r\n                                                    this.model = api.data;\r\n                                                    this.setState({visible: true });\r\n                                                });\r\n                                            }}\r\n                                            type={ELButtonType.buttonWithIconRight}\r\n                                            icon=\"arrow-right\" />\r\n                                </Col>    \r\n                            </Row>                          \r\n                        </Container>\r\n                        <LClear />\r\n                        <Container className=\"items-container\"  key=\"c2\">\r\n                            <Row>\r\n                                                \r\n                            </Row>\r\n                        </Container>\r\n                    </BaseBlock>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                    {this.renderScanner()}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            \r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderScanner() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: undefined,\r\n            transparent: false\r\n        };\r\n        let user = StorageHelper.getUser();\r\n        \r\n        if(!user || !this.state.visible) { return <></>}\r\n\r\n\r\n        let ctrl = (\r\n            <>\r\n                <BaseBlock config={cfg} key=\"b1\">\r\n                    <Container key=\"c2\">\r\n                        <Row>\r\n                            <Col xs={12} md={12}>\r\n                                <iframe src={this.model.url} className=\"scanner\"/>\r\n                            </Col>                   \r\n                        </Row>                          \r\n                    </Container>\r\n                    <LClear />\r\n                </BaseBlock>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default IDScannerScreen;","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport { EPopupType } from '../../components/dialogs/popup';\r\nimport * as cmp from '../../components/index';\r\nimport { EFilterType } from '../../components/page/filter';\r\nimport * as page from '../../components/page/index';\r\nimport { EPagingType, IColumn } from '../../components/page/table';\r\nimport { IApiResponse, IApiSummary } from '../../interfaces';\r\nimport * as m from '../../models/index';\r\nimport IBrand from '../../models/ordering/brand';\r\nimport IProduct from '../../models/ordering/product';\r\nimport Api from '../../utils/api';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport StorageHelper from '../../utils/storage';\r\n\r\nexport interface IDraftsScreenState {\r\n    api?: IApiResponse;\r\n    changed: boolean;\r\n    expanded: boolean;\r\n\r\n    apiMessage?: string;\r\n    processing: boolean;\r\n    closablePopup: boolean;\r\n    confirmRemove: boolean;\r\n};\r\n\r\n/**\r\n * Component to handle the history of contracts done by a dealer\r\n */\r\nexport class DraftsScreen extends React.Component<any, IDraftsScreenState> {\r\n    public static containerId: string = 'drafts';\r\n    private filter: m.IFilter = { needle: '' };\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n    private currentRecord: any = {};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.applyFilter = this.applyFilter.bind(this);\r\n        this.expand = this.expand.bind(this);\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onDismissConfirmPopup = this.onDismissConfirmPopup.bind(this);\r\n        this.onDismissPopup = this.onDismissPopup.bind(this);\r\n        this.removeDraft = this.removeDraft.bind(this);\r\n\r\n        let to: Date = new Date();\r\n        let from: Date = new Date();\r\n        from = new Date(from.setMonth(from.getMonth() - 1)) as Date;\r\n        this.filter = {\r\n            needle: '',\r\n            from: from,\r\n            to: to\r\n        };\r\n\r\n        this.state = {\r\n            expanded: false,\r\n            changed: false,\r\n            processing: true,\r\n            closablePopup: false,\r\n            confirmRemove: false\r\n        };\r\n    };\r\n\r\n    public componentDidMount() {\r\n        setTimeout(() => {\r\n            Global.easyApp.setTitle(MainTexts.drafts);\r\n\r\n            Global.hub.send('', m.ERequestType.getDrafts, undefined);\r\n        }, 1000);\r\n    };\r\n\r\n    public render() {\r\n\r\n        let ctrl = <div id={DraftsScreen.containerId}>\r\n            {\r\n                this.state.processing ? <></> :\r\n                    <>\r\n                        <page.Filter\r\n                            filter={this.filter}\r\n                            id=\"filter\"\r\n                            type={EFilterType.default} title={MainTexts.searchTitle}\r\n                            onApply={this.applyFilter}\r\n                            placeholderSearch=\"z.B. MSISDN oder Vorname\" />\r\n                        {this.renderData()}\r\n                    </>\r\n            }\r\n\r\n            {this.renderPopup()}\r\n            {this.renderPopupConfirm()}\r\n        </div>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderData(): JSX.Element {\r\n        let cfg = Global.getConfiguration();\r\n\r\n        let cols: IColumn[] = [\r\n            { label: MainTexts.employee, binding: 'Employee', size: 2, sortable: true },\r\n            {\r\n                label: MainTexts.date, filterable: true, style: 'text-sub', binding: 'activationDate', size: 2, sortable: true, renderer: (r, c) => {\r\n                    return <>{Global.toGermanDate(r[c.binding])}</>;\r\n                }\r\n            },\r\n            { label: MainTexts.customerName, filterable: true, binding: 'Customer', size: 3, sortable: true, style: '' },\r\n            {\r\n                label: MainTexts.tariff, filterable: true, style: 'text-sub', binding: 'Product', size: 4, sortable: false, renderer: (r, c) => {\r\n                    let br = linq.from<IBrand>(StorageHelper.getBrands())\r\n                        .where(x => x.id == r['brandKey'])\r\n                        .firstOrDefault();\r\n\r\n                       \r\n\r\n                    if (!br) { return null; }\r\n\r\n                    let pr = linq.from<IProduct>(br.products)\r\n                        .where(x => x.id === r['productId'])\r\n                        .firstOrDefault();\r\n\r\n                    r['Product'] = pr? pr.name : ''\r\n\r\n                    if (!br) { return null; }\r\n\r\n                    return <>\r\n                        <div className={'brandi ' + br.id} />\r\n                        <div className=\"text-sub\">{pr? pr.name : ''}</div>\r\n                    </>\r\n                }\r\n            },\r\n            { \r\n                label: '', binding: '', size: 1, sortable: true,\r\n                renderer: (c, r) => {\r\n                    return <>\r\n                        <page.LButton type={m.ELButtonType.iconImage}\r\n                            icon=\"trash\"\r\n                            clickModel={c}\r\n                            onClickEvent={(e, m) => {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                                this.remove(m);\r\n                                return false;\r\n                            }} />\r\n                    </>;\r\n                },\r\n                rendererHead: (c) => {\r\n                    return <>\r\n                        <page.LButton type={m.ELButtonType.iconImage}\r\n                            icon=\"expand\"\r\n                            onClick={this.expand} />\r\n                    </>;\r\n                }\r\n            },\r\n        ];\r\n\r\n        const pagingProps = { page: 1, count: cfg.pageSize, type: EPagingType.local };\r\n        \r\n        let ctrl = <div id={DraftsScreen.containerId} className={'c1 container ' + (this.state.expanded ? 'wide' : '')}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 col-12\">\r\n                    <page.Table coulmns={cols} \r\n                        id={DraftsScreen.containerId + 'Table'}\r\n                        expnaded={this.state.expanded}\r\n                        itemClick={this.itemClick}\r\n                        pagingProps={pagingProps}\r\n                        dateColumn='activationDate'\r\n                        filter={this.filter}\r\n                        data={this.state && this.state.api && this.state.api.data ? this.state.api.data.data : undefined} />\r\n                </div>\r\n            </div>\r\n        </div>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderPopup(): JSX.Element {\r\n        return <cmp.Popup\r\n            type={this.processPopupState}\r\n            visible={this.state.processing || this.state.closablePopup}\r\n            closable={this.state.closablePopup}\r\n            id=\"wait\"\r\n            title={MainTexts.pleaseWait}\r\n            height={200}\r\n            onDismiss={this.onDismissPopup}>\r\n            <cmp.PopupBody>\r\n                <div>{this.state.apiMessage}</div>\r\n                <></>\r\n            </cmp.PopupBody>\r\n            <></>\r\n        </cmp.Popup>\r\n    };\r\n\r\n    private renderPopupConfirm(): JSX.Element {\r\n        return <cmp.Popup\r\n            type={EPopupType.confirm}\r\n            visible={this.state.confirmRemove}\r\n            closable={true}\r\n            id=\"wait\"\r\n            title={MainTexts.pleaseWait}\r\n            height={200}\r\n            onDismiss={this.onDismissConfirmPopup}\r\n            onNegative={this.onDismissConfirmPopup}\r\n            onPositive={this.removeDraft}>\r\n            <cmp.PopupBody>\r\n                <></>\r\n                <></>\r\n            </cmp.PopupBody>\r\n            <></>\r\n        </cmp.Popup>\r\n    };\r\n\r\n    private onDismissPopup() {\r\n\r\n    };\r\n\r\n    private onDismissConfirmPopup() {\r\n        this.setState({ confirmRemove: false });\r\n    };\r\n\r\n    private applyFilter(f) {\r\n        this.filter = f;\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public socketCallback(res: IApiResponse) {\r\n        if (res.error) {\r\n            let sum: IApiSummary = Api.parseSummary(res, undefined);\r\n            this.processPopupState = EPopupType.custom;\r\n            this.setState({ changed: true, processing: false, api: res, apiMessage: sum.message });\r\n        } else {\r\n            this.setState({ changed: true, processing: false, api: res });\r\n        }\r\n    };\r\n\r\n    private itemClick(ev: any, id: any) {\r\n        this.setState({ processing: true, apiMessage: '' });\r\n        Global.hub.send('{\"id\": \"' + id + '\"}', m.ERequestType.loadDraft, undefined);\r\n    };\r\n\r\n    private expand() {\r\n        this.setState({ expanded: !this.state.expanded });\r\n    };\r\n\r\n    private removeDraft() {\r\n        Global.hub.send('{\"id\":\"' + this.currentRecord['id'] + '\"}', m.ERequestType.removeDraft, undefined);\r\n        let data = this.state.api ? this.state.api.data.data : [];\r\n        let a = this.state.api;\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i]['id'] == this.currentRecord['id']) {\r\n                data.splice(i, 1);\r\n                if (a) { a.data.data = data; }\r\n                break;\r\n            };\r\n        };\r\n\r\n        this.setState({ confirmRemove: false, api: a });\r\n    };\r\n\r\n    private remove(record) {\r\n        this.currentRecord = record;\r\n        this.setState({ confirmRemove: true });\r\n    };\r\n};\r\n\r\nexport default DraftsScreen;","import * as React from 'react';\r\nimport * as linq from 'linq';\r\nimport { Spinner, Container, Row, Col } from 'react-bootstrap';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts, ActionTexts } from '../../utils/messages';\r\nimport { IColumn, EPagingType } from '../../components/page/table';\r\nimport * as page from '../../components/page';\r\nimport { ELButtonType } from '../../models';\r\nimport Api from '../../utils/api';\r\nimport { IPopupProps, EPopupType } from '../../components/dialogs/popup';\r\nimport GlobalJSX from '../../utils/GlobalJSX';\r\nimport * as m from '../../models/index';\r\nimport { EApiResponseStatus, IApiResponse, IApiSummary } from '../../interfaces';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { BaseBlockAction } from '../../components/page/block';\r\nimport BaseBlock from '../../components/page/block';\r\n\r\nexport interface ICancellationScreenProps {};\r\n\r\nexport interface ICancellationScreenState {\r\n    expanded: boolean;\r\n    status: m.ERequestStatus;\r\n    data?: any;\r\n    selection: number[];\r\n    accept?: boolean;\r\n    loading?: boolean;\r\n    processing?: boolean;\r\n};\r\n\r\nexport class CancellationScreen extends React.Component<ICancellationScreenProps,ICancellationScreenState> {\r\n    public static containerId: string = 'cancellations';\r\n    private lastApi?: IApiResponse;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            expanded: false,\r\n            status: m.ERequestStatus.undefined,\r\n            selection: []\r\n        };\r\n    };\r\n\r\n    public componentDidMount() {\r\n        this.setState({status: m.ERequestStatus.running, loading: true});\r\n        this.refresh();\r\n        setTimeout(() => {\r\n            Global.easyApp.setTitle(MainTexts.cancellations);\r\n        }, 1000);\r\n    };\r\n\r\n    render () {\r\n        return <div id={CancellationScreen.containerId}>\r\n                {this.renderData()}\r\n                {this.renderPopup()}\r\n        </div>\r\n    };\r\n\r\n    private renderData(): JSX.Element {\r\n        let cfg = Global.getConfiguration();\r\n\r\n        let cols: IColumn[] = [\r\n            { label: 'Auftragsart', binding: 'x1', size: 2, sortable: true, renderer: (c, r) =>{\r\n                let s = '';\r\n                if(c.TypeId == 7) { s=  'Ausserordentliche Stornierung'}\r\n                else {\r\n                    s = c.TypeText;\r\n                }\r\n\r\n                s += ' [' + c.Id + ']'; \r\n\r\n                return s;\r\n            } },\r\n\r\n            { label: 'Vertrag', binding: 'ContractId', size: 2, sortable: true },\r\n            { label: 'MSISDN', binding: 'MSISDN', size: 2, sortable: true },\r\n            { label: 'VOID', binding: 'Void', size: 2, sortable: true },\r\n            { label: 'Händlername', binding: 'AccountName', size: 2, sortable: true },\r\n            {\r\n                label: 'Stornierungsdatum', filterable: true, style: 'text-sub', binding: 'CancellationDate', size: 1, sortable: true, renderer: (r, c) => {\r\n                    return <>{Global.toGermanDate(r[c.binding])}</>;\r\n                }\r\n            },\r\n            {\r\n                label: '', binding: '', size: 1, sortable: false,\r\n                renderer: (c, r) => {\r\n                    return <>\r\n                        <page.LControl \r\n                            type={m.EControlType.checkbox}\r\n                            id={r.Id}\r\n                            value={r.Id}\r\n                            checked={this.state.selection.indexOf(c.Id)>=0}\r\n                            onChange={(v:IControlValue)=>{\r\n                                this.addRemove(v.value);\r\n                            }} />\r\n                    </>;\r\n                },\r\n                rendererHead: (c) => {\r\n                    return <>\r\n                        <page.LButton type={ELButtonType.iconImage}\r\n                            icon=\"expand\"\r\n                            onClick={()=>{\r\n                                this.setState({expanded: !this.state.expanded});\r\n                            }} /> \r\n                    </>;\r\n                }\r\n            },\r\n        ];\r\n\r\n        const pagingProps = { page: 1, count: cfg.pageSize, type: EPagingType.local };\r\n        \r\n        let ctrl = <div id=\"container-main\" className={'c1 container ' + (this.state.expanded ? 'wide' : '')}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 col-12\">\r\n                    <page.Table coulmns={cols} \r\n                        id={CancellationScreen.containerId + 'Table'}\r\n                        itemClick={this.itemClick}\r\n                        expnaded={this.state.expanded}\r\n                        pagingProps={pagingProps}\r\n                        data={this.state.data}\r\n                        dateColumn='activationDate' />\r\n                </div>\r\n            </div>\r\n            {\r\n                this.state.selection.length > 0 ?\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 col-12\">\r\n                        {this.renderAction()}\r\n                    </div>\r\n                </div>                     \r\n                : null \r\n            }           \r\n        </div>\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderAction() : JSX.Element {\r\n        let cfg: IBlockConfiguration = {\r\n            title: 'HÄNDLERERKLÄRUNG',\r\n            transparent: false,\r\n            styleContainer: '',\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg} key=\"b1\">\r\n                <Container key=\"c1\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <page.LControl\r\n                                type={m.EControlType.checkbox}\r\n                                checked={this.state.accept}\r\n                                id=\"acceptRules\"\r\n                                style=\"tal\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({accept: !this.state.accept});\r\n                                }}\r\n                                label=\"Mit dieser Auftragsstornierung verzichten wir auf unsere Provision für die ausgewählten <br/>Neuaufträge bzw. Vertragsverlängerungen.\"\r\n                                />\r\n                        </Col>                        \r\n                    </Row>      \r\n                    {\r\n                        this.state.accept ? \r\n                        <Row>\r\n                            <Col xs={12} md={12}>\r\n                                <div className=\"action\">\r\n                                <page.LButton text=\"Ablehnen\" \r\n                                    type={ELButtonType.buttonWithIconRight}\r\n                                    css=\"action3 fr\"\r\n                                    onClick={this.reject}/>\r\n                                <page.LButton text=\"Freigeben\" \r\n                                    type={ELButtonType.buttonWithIconRight}\r\n                                    css=\"action3 fr\"\r\n                                    onClick={this.approve}/>                                    \r\n                                </div>\r\n                            </Col>                        \r\n                        </Row>\r\n                        : null\r\n                    }                          \r\n                </Container>\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private approve= ()=>{\r\n        this.process(true);\r\n    };\r\n\r\n    private reject= ()=>{\r\n        this.process(false);\r\n    };\r\n\r\n    private process(ok: boolean) {\r\n        let model = {\r\n            cancellationIds: this.state.selection,\r\n            approve: ok,\r\n            cancelationConfirm: this.state.accept\r\n        };\r\n\r\n        this.lastApi = undefined;\r\n\r\n        this.setState({\r\n            processing: true,\r\n            status: m.ERequestStatus.running\r\n        });\r\n        \r\n        Api.fetch('cancellation/process', model, 'post', (api:IApiResponse)=>{\r\n            if(api.status == EApiResponseStatus.ok) {\r\n                this.lastApi = undefined;\r\n                this.setState({data: api.data, selection: [], accept: false, status: m.ERequestStatus.undefined});\r\n            } else {\r\n                this.lastApi = api;\r\n                this.setState({status: m.ERequestStatus.done, accept: false});\r\n            }\r\n        });\r\n    };\r\n\r\n    private itemClick = (ev: any, id: any) => {\r\n        ////console.log('item selected:' + id);\r\n        this.addRemove(id);\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        ////console.log('selection', this.state.selection);\r\n    };\r\n\r\n    private refresh() {\r\n        Api.fetch('cancellation', undefined, 'get', (api:IApiResponse)=>{\r\n            if(api.status == EApiResponseStatus.ok) {\r\n                this.lastApi = undefined;\r\n                this.setState({data: api.data, loading: false, status: m.ERequestStatus.undefined});\r\n            } else {\r\n                this.lastApi = api;\r\n                this.setState({status: m.ERequestStatus.done, loading: false});\r\n            }\r\n        });\r\n    };\r\n\r\n    private renderPopup() : JSX.Element {\r\n        let title = ActionTexts.requestInProcess;\r\n        let type = EPopupType.pleaseWait;\r\n        if(this.state.loading) {\r\n            title = ActionTexts.loadData;\r\n        };\r\n\r\n        let cfg:IPopupProps = {\r\n            title: title,\r\n            closable: this.state.status !== m.ERequestStatus.running,\r\n            visible: this.state.status !== m.ERequestStatus.undefined && this.state.status !== m.ERequestStatus.done,\r\n            id: \"cancellationPopup\",\r\n            type: type,\r\n            onDismiss: ()=>{\r\n                this.lastApi = undefined;\r\n                this.setState({\r\n                    status: m.ERequestStatus.undefined,\r\n                    loading: false,\r\n                    processing: false\r\n                });\r\n            }\r\n        };\r\n\r\n        let content:JSX.Element = <></>;\r\n\r\n        if(this.lastApi && this.lastApi.status != EApiResponseStatus.ok) {\r\n            let sum: IApiSummary = Api.parseSummary(this.lastApi, undefined);\r\n\r\n            cfg.closable = true;\r\n            cfg.visible = true;\r\n            cfg.type = EPopupType.info;\r\n            content = <div>{sum.message}</div>\r\n        };\r\n\r\n        let ctrl = GlobalJSX.GetPopup(cfg, content, undefined);\r\n\r\n        return ctrl;\r\n    };   \r\n\r\n    private addRemove = (id: number) => {\r\n        let c = this.state.selection;\r\n        let i = c.indexOf(id);\r\n        if( i >= 0) {\r\n            c.splice(i, 1);\r\n        } else {\r\n            c.push(id);\r\n        }\r\n\r\n        this.setState({selection: c});\r\n    };\r\n};\r\n\r\nexport default CancellationScreen;","import * as React from 'react';\r\n\r\nexport class AccessScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        return <>Zugriff verweigert</>;\r\n    };\r\n};\r\n\r\nexport default AccessScreen;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { LClear } from '../../components';\r\nimport { EPopupType } from '../../components/dialogs/popup';\r\nimport * as cmp from '../../components/index';\r\nimport BaseBlock from '../../components/page/block';\r\nimport * as page from '../../components/page/index';\r\nimport { IApiResponse } from '../../interfaces';\r\nimport { EControlType, ELButtonType, ERequestType } from '../../models';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport { ValidationWrapper } from '../../utils';\r\nimport Global from '../../utils/Global';\r\nimport { Hints, MainTexts, UserMessages, ValidationMessages } from '../../utils/messages';\r\nimport EasyRouter from '../../utils/router';\r\nimport ValidationOption, { EValidationOption } from '../../utils/validation/validationOption';\r\n\r\nexport interface IEditPasswordProps {\r\n\r\n}\r\nexport interface IEditPasswordState {\r\n    password: string;\r\n    newPassword: string;\r\n    newPasswordConfirm: string;\r\n\r\n    popupTitle: string;\r\n    processing: boolean;\r\n    closblePopup: boolean;\r\n    apiMessage: string;\r\n}\r\n\r\nclass EditPasswordScreen extends React.Component<IEditPasswordProps, IEditPasswordState> {\r\n\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n    public static containerId: string = 'editPassword';\r\n    readonly cfg: IBlockConfiguration = {\r\n        title: UserMessages.passwordEdit,\r\n        transparent: false,\r\n        styleContainer: ''\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this._onSave = this._onSave.bind(this);\r\n        this._onChange = this._onChange.bind(this);\r\n        this.onDismissProcessPopup = this.onDismissProcessPopup.bind(this);\r\n        this.showPopup = this.showPopup.bind(this);\r\n\r\n        this.state = { password: '', newPassword: '', newPasswordConfirm: '', closblePopup: false, apiMessage: '', processing: false, popupTitle: '' };\r\n    }\r\n\r\n    render() {\r\n        return <div id={EditPasswordScreen.containerId}>\r\n            <cmp.Popup\r\n                type={this.processPopupState}\r\n                visible={this.state.processing || this.state.closblePopup}\r\n                closable={this.state.closblePopup}\r\n                id=\"wait\"\r\n                title={this.state.popupTitle}\r\n                height={200}\r\n                onDismiss={this.onDismissProcessPopup}>\r\n                <cmp.PopupBody>\r\n                    <div>{this.state.apiMessage}</div>\r\n                    <></>\r\n                </cmp.PopupBody>\r\n                <></>\r\n            </cmp.Popup>\r\n            <page.Inner1C>\r\n                <BaseBlock config={this.cfg}>\r\n                    <Container className=\"container-action\">\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.hint} label={UserMessages.passwordEditDesc} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.password}                               \r\n                                    value={this.state.password? this.state.password: ''}\r\n                                    validationOptions={\r\n                                        [\r\n                                            new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError })\r\n                                        ]\r\n                                    }\r\n                                    onChange={this._onChange}\r\n                                    name=\"password\" id=\"password\"\r\n                                    label={UserMessages.currentPassword} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.password}\r\n                                    value={this.state.newPassword? this.state.newPassword: ''}\r\n                                    validationOptions={\r\n                                        [\r\n                                            new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                            new ValidationOption({ type: EValidationOption.passwordOutsideCustomerData, message: ValidationMessages.errorPasswordOutsideCustomerData })\r\n                                        ]\r\n                                    }\r\n                                    onChange={this._onChange}\r\n                                    name=\"newPassword\" id=\"newPassword\"\r\n                                    label={UserMessages.newPassword} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl hideTitle={true} labelStyle={'tc-hint mwa'} type={EControlType.hint} label={Hints.passwordOutsideCustomerDataHint} />\r\n                                <page.LClear />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.password}\r\n                                    value={this.state.newPasswordConfirm? this.state.newPasswordConfirm: ''}\r\n                                    validationOptions={\r\n                                        [\r\n                                            new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError })\r\n                                        ]\r\n                                    }\r\n                                    onChange={this._onChange}\r\n                                    name=\"newPasswordConfirm\" id=\"newPasswordConfirm\"\r\n                                    label={UserMessages.newPasswordConfirm} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={1.5} md={1.5} xl={1.5} className=\"np\">\r\n                                <page.LButton type={ELButtonType.linkSimple}\r\n                                    css=\"action3 fr\"\r\n                                    id=\"buttonCancel\"\r\n                                    text={MainTexts.cancel}\r\n                                    onClick={() => {\r\n                                        EasyRouter.route({ url: '/' })\r\n                                    }} />\r\n                            </Col>\r\n\r\n                            <Col xs={10} md={10} >\r\n                                <page.LButton\r\n                                    onClick={this._onSave}\r\n                                    text={MainTexts.save}\r\n                                    type={ELButtonType.linkSimple}\r\n                                    css=\"action fr\"\r\n                                    icon=\"chevron\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <LClear />\r\n                </BaseBlock>\r\n            </page.Inner1C>\r\n        </div>;\r\n    }\r\n\r\n    public socketCallback(api: IApiResponse) {\r\n        if (api.data.status===2) {\r\n            this.showPopup(EPopupType.info, MainTexts.textError, api.data.notes[0].exception.Message, true);\r\n        } else {\r\n            this.setState({ password: '', newPassword: '', newPasswordConfirm: '' }); // reset fields\r\n            this.showPopup(EPopupType.info, MainTexts.saveSuccess, '', true);\r\n        }\r\n    }\r\n\r\n    public showPopup(type: EPopupType, title: string, message: string, inprocess: boolean) {\r\n        this.processPopupState = type;\r\n        this.setState({\r\n            apiMessage: message,\r\n            closblePopup: true,\r\n            processing: inprocess,\r\n            popupTitle: title\r\n        });\r\n    }\r\n\r\n    private onDismissProcessPopup() {\r\n        this.setState({ processing: false, closblePopup: false });\r\n    }\r\n\r\n    private _onChange(target: IControlValue) {\r\n        let model = this.state;\r\n        Global.onInput(model, target, () => {\r\n            this.setState({ password: model.password,newPasswordConfirm: model.newPasswordConfirm,newPassword: model.newPassword });\r\n        });\r\n    }\r\n\r\n    private _onSave() {\r\n        const model = this.state;\r\n        let res = ValidationWrapper.validateFormular(undefined,\r\n            true,\r\n            EditPasswordScreen.containerId\r\n        );\r\n\r\n        if (res) {\r\n            Global.hub.send(JSON.stringify(model),\r\n                ERequestType.changePassword,\r\n                undefined);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default EditPasswordScreen;\r\n","import * as React from 'react';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { UserMessages, MainTexts, ValidationMessages } from '../../utils/messages';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { LClear } from '../../components';\r\nimport * as page from '../../components/page/index';\r\nimport { EControlType, ELButtonType, ERequestType } from '../../models';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport ValidationOption, { EValidationOption } from '../../utils/validation/validationOption';\r\nimport Global from '../../utils/Global';\r\nimport { EPopupType } from '../../components/dialogs/popup';\r\nimport { IApiResponse } from '../../interfaces';\r\nimport * as cmp from '../../components/index';\r\nimport { EDateType } from '../../components/page/date';\r\n\r\nexport interface IEditProfileProps {\r\n\r\n}\r\nexport interface IEditProfileState {\r\n    firstname: string;\r\n    surname: string;\r\n    birthDate: Date | undefined;\r\n    mobilePhoneNumber: string;\r\n    email: string;\r\n\r\n    popupTitle: string;\r\n    processing: boolean;\r\n    closblePopup: boolean;\r\n    apiMessage: string;\r\n}\r\n\r\nclass EditProfileScreen extends React.Component<IEditProfileProps, IEditProfileState> {\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n    public static containerId: string = 'editProfile';\r\n    readonly cfg: IBlockConfiguration = {\r\n        title: UserMessages.profileEdit,\r\n        transparent: false,\r\n        styleContainer: ''\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this._onSave = this._onSave.bind(this);\r\n        this._onChange = this._onChange.bind(this);\r\n        this.onDismissProcessPopup = this.onDismissProcessPopup.bind(this);\r\n        this.showPopup = this.showPopup.bind(this);\r\n\r\n        this.state = { firstname: '', surname: '', birthDate: undefined, mobilePhoneNumber: '', email: '', closblePopup: false, apiMessage: '', processing: false, popupTitle: '' };\r\n\r\n        Global.hub.send(JSON.stringify(''),\r\n            ERequestType.loadProfile,\r\n            undefined);\r\n    }\r\n\r\n    render() {\r\n        return <div id={EditProfileScreen.containerId}>\r\n            <page.Inner1C>\r\n                <BaseBlock config={this.cfg}>\r\n                    <cmp.Popup\r\n                        type={this.processPopupState}\r\n                        visible={this.state.processing || this.state.closblePopup}\r\n                        closable={this.state.closblePopup}\r\n                        id=\"wait\"\r\n                        title={this.state.popupTitle}\r\n                        height={200}\r\n                        onDismiss={this.onDismissProcessPopup}>\r\n                        <cmp.PopupBody>\r\n                            <div>{this.state.apiMessage}</div>\r\n                            <></>\r\n                        </cmp.PopupBody>\r\n                        <></>\r\n                    </cmp.Popup>\r\n                    <Container className=\"container-action\">\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.hint} label={UserMessages.profileEditDesc} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.text}\r\n                                    value={this.state.firstname}\r\n                                    validationOptions={\r\n                                        [\r\n                                            new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError })\r\n                                        ]\r\n                                    }\r\n                                    onChange={this._onChange}\r\n                                    name=\"firstname\" id=\"firstname\"\r\n                                    label={MainTexts.firstname} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.text}\r\n                                    value={this.state.surname}\r\n                                    validationOptions={\r\n                                        [\r\n                                            new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError })\r\n                                        ]\r\n                                    }\r\n                                    onChange={this._onChange}\r\n                                    name=\"surname\" id=\"surname\"\r\n                                    label={MainTexts.surname} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LDate \r\n                                    title={MainTexts.dateOfBirth} \r\n                                    datePicker = {false}\r\n                                    name=\"birthDate\" \r\n                                    id=\"birthDate\" \r\n                                    type={EDateType.default}\r\n                                    onChange={this._onChange} \r\n                                    value={this.state.birthDate} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.text}\r\n                                    value={this.state.mobilePhoneNumber}\r\n                                    onChange={this._onChange}\r\n                                    name=\"mobilePhoneNumber\" id=\"mobilePhoneNumber\"\r\n                                    label={MainTexts.mobilePhoneNumber} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.text}\r\n                                    value={this.state.email}\r\n                                    onChange={this._onChange}\r\n                                    name=\"email\" id=\"email\"\r\n                                    label={MainTexts.email} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.hint} label={UserMessages.profileSecurityTanValDesc} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col xs={12} md={12} >\r\n                                <page.LButton\r\n                                        text={MainTexts.save}\r\n                                        onClick={this._onSave}\r\n                                        type={ELButtonType.buttonWithIconRight}\r\n                                        css={\"action fr\"}\r\n                                        icon=\"arrow-right\" />\r\n\r\n                                <page.LButton\r\n                                    onClick={()=>{\r\n                                        Global.easyApp.gotoDashboard()\r\n                                    }}\r\n                                    text={MainTexts.cancel}\r\n                                    type={ELButtonType.linkSimple}\r\n                                    css=\"action3 fr\"\r\n                                    icon=\"chevron\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <LClear />\r\n                </BaseBlock>\r\n            </page.Inner1C>\r\n        </div>;\r\n    }\r\n\r\n    public loadProfileCallback(api: IApiResponse) {\r\n        var data = api.data.data as IEditProfileState;\r\n        this.setState(data);\r\n    }\r\n\r\n    public saveProfileCallback(api: IApiResponse) {\r\n        if (api.error) {\r\n            this.showPopup(EPopupType.info, MainTexts.textError, api.error.message, true);\r\n        } else {\r\n            this.showPopup(EPopupType.info, MainTexts.saveSuccess, '', true);\r\n        }\r\n    }\r\n\r\n    private _onChange(e: IControlValue) {\r\n        let st = this.state;\r\n        Global.onInput(st, e, () => {\r\n            this.setState(st);\r\n        });\r\n    }\r\n\r\n    private _onSave() {\r\n        const model = this.state;\r\n        Global.hub.send(JSON.stringify(model),\r\n            ERequestType.saveProfile,\r\n            undefined);\r\n    }\r\n\r\n    private showPopup(type: EPopupType, title: string, message: string, inprocess: boolean) {\r\n        this.processPopupState = type;\r\n        this.setState({\r\n            apiMessage: message,\r\n            closblePopup: true,\r\n            processing: inprocess,\r\n            popupTitle: title\r\n        });\r\n    }\r\n\r\n    private onDismissProcessPopup() {\r\n        this.setState({ processing: false, closblePopup: false });\r\n    }\r\n}\r\n\r\nexport default EditProfileScreen;\r\n","import * as React from 'react';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { MainTexts, DealerMessages } from '../../utils/messages';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { LClear } from '../../components';\r\nimport * as page from '../../components/page/index';\r\nimport { ELButtonType, ETelType, ERequestType, EControlType } from '../../models';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport { Tel as TelModel } from '../../../src/models/ordering/tel';\r\nimport Tel from '../../components/ordering/global/tel';\r\nimport { Address as AddressModel } from '../../../src/models/ordering/address';\r\nimport Address from '../../components/ordering/global/address';\r\nimport Global from '../../utils/Global';\r\nimport { IApiResponse } from '../../interfaces';\r\nimport { EPopupType } from '../../components/dialogs/popup';\r\nimport * as cmp from '../../components/index';\r\nimport { AdministrationScreen } from '../insex';\r\n\r\nexport interface DealerModel {\r\n    tel: TelModel;\r\n    address: AddressModel,\r\n    fnvoid: string;\r\n    vpkn: string;\r\n    voId: string;\r\n}\r\n\r\nexport interface IDealerProps {\r\n    model?: DealerModel;\r\n    parent?: AdministrationScreen;\r\n}\r\nexport interface IDealerState {\r\n    model: DealerModel;\r\n    popupTitle: string;\r\n    processing: boolean;\r\n    closblePopup: boolean;\r\n    apiMessage: string;\r\n}\r\n\r\nclass DealerScreen extends React.Component<IDealerProps, IDealerState> {\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n    public static containerId: string = 'dealerScreen';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this._onSave = this._onSave.bind(this);\r\n        this._onChange = this._onChange.bind(this);\r\n        this.onDismissProcessPopup = this.onDismissProcessPopup.bind(this);\r\n        this.showPopup = this.showPopup.bind(this);\r\n\r\n        this.state = {\r\n            model: this.props.model || {\r\n                tel: { prefix: '', telType: ETelType.home, number: '', countryCode: '+49' },\r\n                address: { city: '', zip: '', street: '', nr: '', corrected: false, house_number: '', additional: '' },\r\n                fnvoid: '',\r\n                vpkn: '',\r\n                voId: ''\r\n            },\r\n            closblePopup: false, apiMessage: '', processing: false, popupTitle: ''\r\n        };\r\n\r\n        if (this.props.model === undefined) {\r\n            Global.hub.send(JSON.stringify({ id: '' }),\r\n                ERequestType.loadAccount,\r\n                undefined);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const cfg: IBlockConfiguration = {\r\n            title: this.props.model === undefined ? DealerMessages.dealerEdit : \"Abgleich deiner Stammdaten\",\r\n            transparent: false,\r\n            styleContainer: ''\r\n        };\r\n\r\n        return <div id={DealerScreen.containerId}>\r\n            <page.Inner1C>\r\n                <BaseBlock config={cfg}>\r\n                    <cmp.Popup\r\n                        type={this.processPopupState}\r\n                        visible={this.state.processing || this.state.closblePopup}\r\n                        closable={this.state.closblePopup}\r\n                        id=\"wait\"\r\n                        title={this.state.popupTitle}\r\n                        height={200}\r\n                        onDismiss={this.onDismissProcessPopup}>\r\n                        <cmp.PopupBody>\r\n                            <div>{this.state.apiMessage}</div>\r\n                            <></>\r\n                        </cmp.PopupBody>\r\n                        <></>\r\n                    </cmp.Popup>\r\n                    <Container className=\"container-action\">\r\n                        {this.props.model === undefined ? <></> : <strong>Bitte überprüfe und korrigiere Kontaktdaten sorgfältig. Daten werden auf Vertragsdokumenten verwended.</strong>}\r\n                        <Address onChange={this._onChange} source={this.state.model} prefix=\"address\" preview={false} />\r\n                        <Tel countryCodeVisible={true} telTypeHidden={this.props.model !== undefined} onChange={this._onChange} source={this.state.model} prefix=\"tel\" preview={false} />\r\n\r\n                        <Row>\r\n                            <Col xs={4} md={4}>\r\n                                <page.LControl type={EControlType.text}\r\n                                    value={this.state.model.voId}\r\n                                    name=\"voId\" id=\"voId\"\r\n                                    label={\"VOID\"} preview={true} />\r\n                            </Col>\r\n                            <Col xs={4} md={4}>\r\n                                <page.LControl type={EControlType.text}\r\n                                    value={this.state.model.fnvoid}\r\n                                    onChange={this._onChange}\r\n                                    name=\"fnvoid\" id=\"fnvoid\"\r\n                                    label={MainTexts.fnvoid} preview={true} />\r\n                            </Col>\r\n                            <Col xs={4} md={4}>\r\n                                <page.LControl type={EControlType.text}\r\n                                    value={this.state.model.vpkn}\r\n                                    onChange={this._onChange}\r\n                                    name=\"vpkn\" id=\"vpkn\"\r\n                                    label={MainTexts.vpkn} preview={true} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={6} md={6} >\r\n                                {this.props.parent !== undefined ?\r\n                                    <page.LButton\r\n                                        text={MainTexts.cancel}\r\n                                        onClick={this.props.parent.closeEditScreen}\r\n                                        type={ELButtonType.linkSimple}\r\n                                        css={\"fl\"}\r\n                                        icon=\"chevron\" />\r\n\r\n                                    : <page.LButton\r\n                                        text={MainTexts.cancel}\r\n                                        onClick={() => window.history.back()}\r\n                                        type={ELButtonType.linkSimple}\r\n                                        css={\"fl\"}\r\n                                        icon=\"chevron\" />}\r\n                            </Col>\r\n                            <Col xs={6} md={6} >\r\n                                <page.LButton\r\n                                    text={this.props.model === undefined ? MainTexts.save : MainTexts.takeOver}\r\n                                    onClick={this._onSave}\r\n                                    type={this.props.model === undefined ? ELButtonType.linkSimple : ELButtonType.buttonWithIconRight}\r\n                                    css={this.props.model === undefined ? \"action fr\" : \"fr\"}\r\n                                    icon=\"chevron\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <LClear />\r\n                </BaseBlock>\r\n            </page.Inner1C>\r\n        </div >;\r\n    }\r\n\r\n    public loadAccountCallback(api: IApiResponse) {\r\n        const dataRaw: any = api.data.data;\r\n        const dealer = dataRaw.dealer;\r\n\r\n        let model: DealerModel = {\r\n            tel: { countryCode: dealer.tel.cc, prefix: dealer.tel.ndc, number: dealer.tel.sn, telType: ETelType.home },\r\n            address: { city: dealer.address.city, zip: dealer.address.zip, street: dealer.address.street, nr: dealer.address.nr, house_number: '', additional: '', corrected: false },\r\n            fnvoid: dataRaw.fnvoid,\r\n            vpkn: dataRaw.vpkn,\r\n            voId: dataRaw.voId\r\n        };\r\n        this.setState({ model: model });\r\n    }\r\n\r\n    public saveAccountCallback(api: IApiResponse) {\r\n        if (api.error) {\r\n            this.showPopup(EPopupType.info, MainTexts.textError, api.error.message, true);\r\n        } else {\r\n            this.showPopup(EPopupType.info, MainTexts.saveSuccess, '', true);\r\n        }\r\n    }\r\n\r\n    private _onChange(e: IControlValue) {\r\n        let { model } = this.state;\r\n        Global.onInput(model, e, () => {\r\n            this.setState({ model });\r\n        });\r\n    }\r\n\r\n    private _onSave() {\r\n        const stateModel = this.state.model;\r\n        const model = {\r\n            dealer: {\r\n                tel: { cc: stateModel.tel.countryCode, ndc: stateModel.tel.prefix, sn: stateModel.tel.number },\r\n                address: { city: stateModel.address.city, zip: stateModel.address.zip, street: stateModel.address.street, nr: stateModel.address.nr }\r\n            },\r\n            fnvoid: stateModel.fnvoid,\r\n            vpkn: stateModel.vpkn,\r\n            voId: stateModel.voId\r\n        };\r\n\r\n        Global.hub.send(JSON.stringify(model),\r\n            ERequestType.saveAccount,\r\n            undefined);\r\n    }\r\n\r\n    private showPopup(type: EPopupType, title: string, message: string, inprocess: boolean) {\r\n        this.processPopupState = type;\r\n        this.setState({\r\n            apiMessage: message,\r\n            closblePopup: true,\r\n            processing: inprocess,\r\n            popupTitle: title\r\n        });\r\n    }\r\n\r\n    private onDismissProcessPopup() {\r\n        this.setState({ processing: false, closblePopup: false });\r\n    }\r\n}\r\n\r\nexport default DealerScreen;\r\n","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { PopupBody } from '../../components';\r\nimport Popup, { EPopupType } from '../../components/dialogs/popup';\r\nimport BlockBase from '../../components/page/block';\r\nimport { EFilterType } from '../../components/page/filter';\r\nimport * as page from '../../components/page/index';\r\nimport { EPagingType, IColumn } from '../../components/page/table';\r\nimport { IApiResponse, IApiSummary } from '../../interfaces';\r\nimport IAppDefinition from '../../interfaces/app/IAppDefinition';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport * as m from '../../models/index';\r\nimport { ELButtonType } from '../../models/index';\r\nimport Api from '../../utils/api';\r\nimport { Roles } from '../../utils/Defaults';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport DealerScreen, { DealerModel } from '../user/dealer';\r\nimport { EditUserScreen } from './editUser';\r\n\r\nexport enum AdministrationEditType {\r\n    none,\r\n    editAccount,\r\n    editContact\r\n}\r\n\r\nexport interface IAdministrationScreenProps {\r\n\r\n}\r\nexport interface IAdministrationScreenState {\r\n    changed: boolean;\r\n    expanded: boolean;\r\n    api?: IApiResponse\r\n    processing: boolean;\r\n    apiMessage: string;\r\n    accountMainPreviewData?: DealerModel;\r\n    editType: AdministrationEditType;\r\n    editContactId: number;\r\n    closablePopup: boolean;\r\n}\r\n\r\nexport class AdministrationScreen extends React.Component<IAdministrationScreenProps, IAdministrationScreenState> {\r\n    public static containerId: string = 'administrationScreen';\r\n    private processPopupState: EPopupType = EPopupType.pleaseWait;\r\n\r\n    readonly globalCfg: IAppDefinition = Global.getConfiguration();\r\n    readonly cfg: IBlockConfiguration = {\r\n        title: MainTexts.mainData,\r\n        transparent: false,\r\n        styleContainer: ''\r\n    };\r\n    readonly cfg2: IBlockConfiguration = {\r\n        title: MainTexts.filter,\r\n        transparent: false,\r\n        styleContainer: ''\r\n    };\r\n\r\n    cols: IColumn[] = [\r\n        {\r\n            label: \"Name\",filterable: true, binding: 'name', size: 3, sortable: true, style: 'text-button', renderer: (r, c) => {\r\n                return <>\r\n                    <div className=\"contactsGrid-contact-icon\" />\r\n                    <div className=\"text-button\">{r.name}</div>\r\n\r\n                </>;\r\n            }\r\n        },\r\n        { label: \"Void\", filterable: true, binding: 'voId', size: 2, sortable: true },\r\n        {\r\n            label: MainTexts.email, filterable: true, binding: 'email', size: 3, sortable: true, renderer: (r, c) => {\r\n                return <a href={\"mailto:\" + r.email}>{r.email}</a>;\r\n            }\r\n        },\r\n        { label: MainTexts.mobilePhoneNumber, filterable: true, binding: 'mobile', size: 3, sortable: true },\r\n        {\r\n            label: '', binding: '', size: 1, sortable: true,\r\n            renderer: (c, r) => {\r\n                if (Global.checkAccessRoles([Roles.XTND_ShopManager,Roles.XTND_Nutzerverwaltung])) {\r\n                    return <>\r\n                        <page.LButton type={ELButtonType.iconImage}\r\n                            icon=\"edit\"\r\n                            clickModel={c}\r\n                            onClickEvent={(e, m) => {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                                this.editContact(m);\r\n                                return false;\r\n                            }} />\r\n                    </>;\r\n                } else {\r\n                    return <></>;\r\n                }\r\n\r\n            },\r\n            rendererHead: (c) => {\r\n                return <>\r\n                    <page.LButton type={ELButtonType.iconImage}\r\n                        icon=\"expand\"\r\n                        onClick={this.expand} />\r\n                </>;\r\n            }\r\n        },];\r\n\r\n    readonly filterActionButtons: JSX.Element[] = [<page.LButton text={MainTexts.doFilter}\r\n        css=\"fr\"\r\n        onClick={() => {\r\n            this.applyFilter(this.filter);\r\n        }}\r\n        type={ELButtonType.buttonWithIconRight} />];\r\n\r\n    private filter: m.IFilter = { needle: '', from: new Date(), to: new Date() };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.applyFilter = this.applyFilter.bind(this);\r\n        this.expand = this.expand.bind(this);\r\n        this.contactsRecieved = this.contactsRecieved.bind(this);\r\n        this.loadAccountCallback = this.loadAccountCallback.bind(this);\r\n        this.edit = this.edit.bind(this);\r\n        this.loadAccount = this.loadAccount.bind(this);\r\n        this.closeEditScreen = this.closeEditScreen.bind(this);\r\n        this._onNewUserClick = this._onNewUserClick.bind(this);\r\n\r\n        Global.easyApp.setTitle(MainTexts.administration);\r\n\r\n        this.state = { changed: false, expanded: false, processing: true, apiMessage: '', editType: AdministrationEditType.none, editContactId: 0,closablePopup:false };\r\n\r\n        if (Global.validateAccessRoles([Roles.XTND_Nutzerverwaltung,Roles.XTND_ShopManager])) {\r\n            Global.hub.send('', m.ERequestType.getContacts, undefined);\r\n            this.loadAccount();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (Global.checkAccessRoles([Roles.XTND_ShopManager,Roles.XTND_Nutzerverwaltung])) {\r\n            if (this.state.editType === AdministrationEditType.editAccount) {\r\n                return <DealerScreen parent={this} model={undefined} />;\r\n            } else if (this.state.editType === AdministrationEditType.editContact) {\r\n                return <EditUserScreen contactId={this.state.editContactId} />;\r\n            }\r\n        }\r\n\r\n        let newUsrBtn = <></>;\r\n\r\n        if (Global.checkAccessRoles([Roles.XTND_ShopManager,Roles.XTND_Nutzerverwaltung])) {\r\n            newUsrBtn = <div className=\"col-md-12 col-12\">\r\n                <page.LButton\r\n                    text={MainTexts.newUser}\r\n                    onClick={this._onNewUserClick}\r\n                    type={ELButtonType.buttonWithIconRight}\r\n                    css={\"action fr\"}\r\n                    icon=\"chevron\" />\r\n            </div>;\r\n        }\r\n\r\n       \r\n\r\n        const filter = <page.Filter\r\n            searchTitle={''}\r\n            actionButtons={this.filterActionButtons}\r\n            filter={this.filter}\r\n            id=\"filter\"\r\n            hideDateFilter={true}\r\n            type={EFilterType.default}\r\n            title={MainTexts.employee}\r\n            onApply={this.applyFilter}\r\n            placeholderSearch=\"z.B. Name, VOID, E-Mail oder Rufnummer\" />\r\n        // data={this.state && this.state.api ? this.state.api.data.data : undefined} />;\r\n\r\n        let pagingProps = { page: 1, count: this.globalCfg.pageSize, type: EPagingType.none }; // no paging by pptx\r\n        let table = <page.Table coulmns={this.cols} id={AdministrationScreen.containerId + 'Table'}\r\n            expnaded={this.state.expanded}\r\n            // itemClick={this.itemClick}\r\n            pagingProps={pagingProps}\r\n            filter={this.filter}\r\n            data={this.state.api !== undefined && this.state.api.data !== undefined && this.state.api.data!==null ? this.state.api.data.data : undefined} />;\r\n\r\n        return <div id={AdministrationScreen.containerId}>\r\n            {this._renderPopup()}\r\n            {this.state.accountMainPreviewData !== undefined ? <page.Inner1C>\r\n                <BlockBase config={this.cfg}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                {this.state.accountMainPreviewData.address.additional}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                {this.state.accountMainPreviewData.address.street} {this.state.accountMainPreviewData.address.nr}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                {this.state.accountMainPreviewData.address.zip} {this.state.accountMainPreviewData.address.city}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                {this.state.accountMainPreviewData.tel.countryCode} {this.state.accountMainPreviewData.tel.prefix} {this.state.accountMainPreviewData.tel.number}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={4} md={4}>\r\n                                <page.LControl type={m.EControlType.text}\r\n                                    value={this.state.accountMainPreviewData.voId}\r\n                                    name=\"voId\" id=\"voId\"\r\n                                    label={\"VOID\"}\r\n                                    preview={true} />\r\n                            </Col>\r\n                            <Col xs={4} md={4}>\r\n                                <page.LControl type={m.EControlType.text}\r\n                                    value={this.state.accountMainPreviewData.fnvoid}\r\n                                    name=\"fnvoid\" id=\"fnvoid\"\r\n                                    label={MainTexts.fnvoid}\r\n                                    preview={true} />\r\n                            </Col>\r\n                            <Col xs={4} md={4}>\r\n                                <page.LControl type={m.EControlType.text}\r\n                                    value={this.state.accountMainPreviewData.vpkn}\r\n                                    name=\"vpkn\" id=\"vpkn\"\r\n                                    label={MainTexts.vpkn}\r\n                                    preview={true} />\r\n                            </Col>\r\n                        </Row>\r\n                        {Global.checkAccessRoles([Roles.XTND_ShopManager,Roles.XTND_Nutzerverwaltung]) ?\r\n                            <Row>\r\n                                <Col xs={12} md={12} >\r\n                                    <page.LButton text={MainTexts.edit}\r\n                                        css=\"fr\"\r\n                                        onClick={this.edit}\r\n                                        type={ELButtonType.buttonWithIconRight} />\r\n                                </Col>\r\n                            </Row> : <></>}\r\n\r\n                    </Container>\r\n                </BlockBase>\r\n            </page.Inner1C> : <></>}\r\n\r\n            {filter}\r\n\r\n\r\n\r\n            <div className={'c1 container ' + (this.state.expanded ? 'wide' : '')}>\r\n                <div className=\"row\">\r\n                    {newUsrBtn}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 col-12\">\r\n                        {table}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    };\r\n\r\n    contactsRecieved(res: IApiResponse) {\r\n        if (res.error) {\r\n            let sum: IApiSummary = Api.parseSummary(res, undefined);\r\n            this.processPopupState = EPopupType.custom;\r\n            this.setState({ changed: true, processing: true,closablePopup:true, api: res, apiMessage: sum.message });\r\n        } else {\r\n            this.setState({ changed: true, processing: false,closablePopup:false ,api: res });\r\n        }\r\n    };\r\n\r\n    loadAccountCallback(res: IApiResponse) {\r\n        if (res.error) {\r\n            let sum: IApiSummary = Api.parseSummary(res, undefined);\r\n            this.processPopupState = EPopupType.custom;\r\n            this.setState({ changed: true, processing: false, api: res, apiMessage: sum.message });\r\n        } else {\r\n            const dataRaw: any = res.data.data;\r\n            const dealer = dataRaw.dealer;\r\n\r\n            let model: DealerModel = {\r\n                tel: { countryCode: dealer.tel.cc, prefix: dealer.tel.ndc, number: dealer.tel.sn, telType: m.ETelType.home },\r\n                address: { city: dealer.address.city, zip: dealer.address.zip, street: dealer.address.street, nr: dealer.address.nr, house_number: '', additional: '', corrected: false },\r\n                fnvoid: dataRaw.fnvoid,\r\n                vpkn: dataRaw.vpkn,\r\n                voId: dataRaw.voId\r\n            };\r\n\r\n            this.setState({ accountMainPreviewData: model, changed: true, processing: false });\r\n        }\r\n    };\r\n\r\n    closeEditScreen() {\r\n        this.setState({ editType: AdministrationEditType.none });\r\n    }\r\n\r\n    private _onNewUserClick(ev) {\r\n        this.setState({ editType: AdministrationEditType.editContact, editContactId: 0 });\r\n    }\r\n\r\n    private applyFilter(f) {\r\n        this.filter = f;\r\n        this.setState({ changed: true });\r\n    }\r\n\r\n    private expand() {\r\n        this.setState({ expanded: !this.state.expanded });\r\n    }\r\n\r\n    private editContact(record) {\r\n        if (record && record.id) {\r\n            this.setState({ editType: AdministrationEditType.editContact, editContactId: record.id });\r\n        }\r\n    }\r\n\r\n    private edit() {\r\n        if (this.state.accountMainPreviewData !== undefined) {\r\n            this.setState({ editType: AdministrationEditType.editAccount });\r\n        }\r\n    };\r\n\r\n    _renderPopup = () => {\r\n        return <Popup\r\n            type={this.processPopupState}\r\n            visible={this.state.processing || this.state.closablePopup}\r\n            closable={this.state.closablePopup}\r\n            id=\"wait\"\r\n            title={MainTexts.pleaseWait}\r\n            height={200}\r\n            onDismiss={this._onDismissPopup}>\r\n            <PopupBody>\r\n                <div>{this.state.apiMessage}</div>\r\n                <></>\r\n            </PopupBody>\r\n            <></>\r\n        </Popup>\r\n    }\r\n\r\n    _onDismissPopup = () => {\r\n        this.setState({ processing: false, closablePopup: false });\r\n    }\r\n\r\n\r\n    private loadAccount() {\r\n        const model = { id: '' };\r\n        Global.hub.send(JSON.stringify(model), m.ERequestType.loadAccount, undefined);\r\n    }\r\n}\r\n\r\nexport default AdministrationScreen;","import React, { Component, Children } from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as page from '../../components/page';\r\nimport { AppIds } from '../../utils/Defaults';\r\nimport { ERequestStatus, IDefCon } from '../../models';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { DefConTexts } from '../../utils/messages';\r\n\r\nexport interface IDefConScreenProps {\r\n    dc?: IDefCon;\r\n};\r\n\r\nexport class DefConScreen extends React.Component<any, any> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = (\r\n            <> \r\n                <page.Inner1C style=\"tiny\">\r\n                    <>\r\n                        {this.renderData()}\r\n                    </>\r\n                </page.Inner1C>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public renderData() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: DefConTexts.underConstruction,\r\n            transparent: false\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <div className=\"etitle\">Beschreibung</div>\r\n                        </Col>                        \r\n                    </Row>                                \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };    \r\n};\r\n\r\nexport default DefConScreen;","import * as React from 'react';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport Global from '../../utils/Global';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport { EPreviewState } from '../../components/ordering/preview/contract';\r\nimport * as page from '../../../src/components/page/index';\r\nimport { IApiResponse } from '../../interfaces';\r\nimport { EPopupType } from '../../components/dialogs/popup';\r\nimport * as m from '../../models/index';\r\nimport DraftsScreen from '../am/drafts';\r\nimport { EFilterType } from '../../components/page/filter';\r\nimport { IColumn, EPagingType } from '../../components/page/table';\r\nimport * as cmp from '../../components/index';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { EControlType } from '../../models';\r\nimport IUser from '../../models/environment/user';\r\nimport StorageHelper from '../../utils/storage';\r\n\r\nexport interface IStatusPortingProps {\r\n    onChange: any;\r\n    // parent: CustomerScreen;\r\n}\r\n\r\nexport interface IStatusPortingState {\r\n    changed: boolean;\r\n    api?: IApiResponse;\r\n    api2?: IApiResponse;\r\n    expanded: boolean;\r\n    apiMessage?: string;\r\n    processing: boolean;\r\n    closablePopup: boolean;\r\n    confirmRemove: boolean;\r\n    selectedRecord?: any;\r\n    showPopup: boolean;\r\n}\r\n\r\nexport class StatusPorting extends React.Component<IStatusPortingProps, IStatusPortingState> {\r\n    public static containerId: string = 'statusPorting';\r\n    public buttonStatus: string = '';\r\n    private filter: m.IFilter = { needle: '' };\r\n    private processPopupState: EPopupType = EPopupType.custom;\r\n    public user?: IUser;\r\n  \r\n    readonly cfg = Global.getConfiguration();\r\n\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.applyFilter = this.applyFilter.bind(this);\r\n        this.expand = this.expand.bind(this);\r\n        this.onDismissPopup = this.onDismissPopup.bind(this);\r\n        this.socketCallback = this.socketCallback.bind(this);\r\n        this.renderDetailsSection = this.renderDetailsSection.bind(this);\r\n      \r\n        this.user = StorageHelper.getUser();\r\n\r\n        let to: Date = new Date();\r\n        let from: Date = new Date();\r\n        from = new Date(from.setMonth(from.getMonth() - 1)) as Date;\r\n\r\n        this.filter = {\r\n            needle: '',\r\n            from: from,\r\n            to: to\r\n        };\r\n\r\n        this.state = {\r\n            expanded: false,\r\n            changed: false,\r\n            processing: true,\r\n            closablePopup: false,\r\n            confirmRemove: false,\r\n            selectedRecord: undefined,\r\n            showPopup: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    };\r\n\r\n\r\n\r\n    public render() {\r\n\r\n        let ctrl = <div id={StatusPorting.containerId}>\r\n            <page.Filter\r\n                filter={this.filter}\r\n                id=\"filter\"\r\n                type={EFilterType.default} title={MainTexts.filterCriteria}\r\n                onApply={this.applyFilter}\r\n                optionalButtonSelection={() => { this.getButtonState(event) }}\r\n                optionalButtons={true}\r\n                placeholderSearch=\"Status, MSISDN, contract, customer and tariff\" />\r\n            {\r\n                !this.state.processing ?\r\n                    <>\r\n                        {this.renderData()}\r\n                    </>\r\n                    : null\r\n            }\r\n\r\n            {this.state.showPopup ? this.renderPopup() : <></>}\r\n\r\n        </div>;\r\n\r\n        return ctrl;\r\n\r\n    };\r\n\r\n    private renderData(): JSX.Element {\r\n        let cfg = Global.getConfiguration();\r\n\r\n        let cols: IColumn[] = [\r\n            { label: \"Registrierung\", binding: 'Status', size: 2, sortable: true },\r\n            {\r\n                label: \"Start Date\", filterable: true, style: 'text-sub', binding: 'StartDate', size: 1, sortable: true, renderer: (r, c) => {\r\n                    return <>{Global.toGermanDate(r[c.binding])}</>;\r\n                }\r\n            },\r\n            {\r\n                label: \"End Date\", filterable: true, style: 'text-sub', binding: 'EndDate', size: 1, sortable: true, renderer: (r, c) => {\r\n                    return <>{Global.toGermanDate(r[c.binding])}</>;\r\n                }\r\n            },\r\n            { label: \"Aktueller Status\", filterable: true, binding: 'LastStatus', size: 3, sortable: true, style: '' },\r\n            { label: MainTexts.msisdn, filterable: true, style: 'text-sub', binding: 'MSISDN', size: 2, sortable: false },\r\n            { label: MainTexts.customer, filterable: true, binding: 'Customer', size: 1, sortable: true, style: '' },\r\n            { label: MainTexts.tariff, filterable: true, binding: 'Tarif', size: 1, sortable: true, style: '' },\r\n            {\r\n                label: '', binding: '', size: 1, sortable: true,\r\n                renderer: (c, r) => {\r\n                    return <>\r\n                        <page.LButton type={m.ELButtonType.iconImage}\r\n                            icon=\"list\"\r\n                            clickModel={c}\r\n                            onClickEvent={(e, m) => {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                                this.selectRecord(m);\r\n                                return false;\r\n                            }} />\r\n                    </>;\r\n                },\r\n                rendererHead: (c) => {\r\n                    return <>\r\n                        <page.LButton type={m.ELButtonType.iconImage}\r\n                            icon=\"expand\"\r\n                            onClick={this.expand} />\r\n                    </>;\r\n                }\r\n            },\r\n        ];\r\n\r\n        const pagingProps = { page: 1, count: cfg.pageSize, type: EPagingType.local };\r\n\r\n\r\n        let ctrl = <div id={DraftsScreen.containerId} className={'c1 container ' + (this.state.expanded ? 'wide' : '')}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 col-12\">\r\n                    <page.Table coulmns={cols}\r\n                        id={StatusPorting.containerId + 'Table'}\r\n                        expnaded={this.state.expanded}\r\n                        pagingProps={pagingProps}\r\n                        filter={this.filter}\r\n                        data={this.state.api ? this.state.api.data : undefined} />\r\n                </div>\r\n            </div>\r\n        </div>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private selectRecord(record) {\r\n        setTimeout(() => {\r\n\r\n            let t = {\r\n                Void: this.user===undefined? '': this.user.voId,\r\n                ContractId: record.ContractId,\r\n                total: '0',\r\n                page: '1',\r\n                count: '500',\r\n\r\n            };\r\n\r\n            Global.hub.send(JSON.stringify(t), m.ERequestType.getMnpPortingStatusDetails, undefined);\r\n        }, 1000);\r\n\r\n\r\n\r\n        const selectedRecord: any = { Kunde: record.Customer, msisdn: record.MSISDN, contractId: record.ContractId, tarif: record.Tarif };\r\n\r\n        this.setState({ selectedRecord: selectedRecord, processing: true });\r\n    }\r\n\r\n    private renderPopup(): JSX.Element {\r\n        return <cmp.Popup\r\n            type={this.processPopupState}\r\n            visible={this.state.showPopup}\r\n            closable={true}\r\n            id=\"wait\"\r\n            title={''}\r\n            height={600}\r\n            width={1000}\r\n            onDismiss={this.onDismissPopup}>\r\n            <cmp.PopupBody>\r\n                <div>{this.renderDetailsSection()}</div>\r\n                <></>\r\n            </cmp.PopupBody>\r\n            <></>\r\n        </cmp.Popup>\r\n    };\r\n\r\n    private onDismissPopup() {\r\n        this.setState({ showPopup: false });\r\n    };\r\n\r\n\r\n\r\n    private applyFilter() {\r\n        this.loadData(this.filter.from, this.filter.to, this.filter.needle, this.buttonStatus);\r\n\r\n    };\r\n\r\n\r\n    private renderDetailsSection(): JSX.Element {\r\n        let details: JSX.Element = <></>;\r\n        const { selectedRecord } = this.state;\r\n        if (selectedRecord !== undefined) {\r\n            details = <>\r\n                <Row>\r\n                    <Col md={3} >\r\n                        <page.LControl type={EControlType.info} label={selectedRecord.Kunde} disabled title={'Kunde'} />\r\n                    </Col >\r\n                    <Col md={3} >\r\n                        <page.LControl type={EControlType.info} label={selectedRecord.msisdn} disabled title={'MSISDN'} />\r\n                    </Col>\r\n                    <Col md={3} >\r\n                        <page.LControl type={EControlType.info} label={selectedRecord.contractId} disabled title={'Vertag'} />\r\n                    </Col>\r\n                    <Col md={3} >\r\n                        <page.LControl type={EControlType.info} label={selectedRecord.tarif} disabled title={'Tarif'} />\r\n                    </Col>\r\n                </Row>\r\n            </>;\r\n        }\r\n\r\n        let colsPopup: IColumn[] = [\r\n            { label: \"Status\", binding: 'Status', size: 3, sortable: true },\r\n            {\r\n                label: \"Datum\", filterable: true, style: 'text-sub', binding: 'StartDate', size: 3, sortable: true, renderer: (r, c) => {\r\n                    return <>{Global.toGermanDate(r[c.binding])}</>;\r\n                }\r\n            },\r\n\r\n            { label: \"Details\", filterable: true, binding: 'Description', size: 4, sortable: true, style: '' },\r\n\r\n            {\r\n                label: '', binding: '', size: 2, sortable: true,\r\n                renderer: (c, r) => {\r\n                    return <>\r\n                        <page.LButton type={m.ELButtonType.iconImage}\r\n                            icon=\"\"\r\n                            clickModel={c}\r\n                            onClickEvent={(e, m) => {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n\r\n                                return false;\r\n                            }} />\r\n                    </>;\r\n                },\r\n                rendererHead: (c) => {\r\n                    return <>\r\n                        <page.LButton type={m.ELButtonType.iconImage}\r\n                            icon=\"expand\"\r\n                            onClick={this.expand} />\r\n                    </>;\r\n                }\r\n            },\r\n        ];\r\n\r\n        const pagingProps = { page: 1, count: this.cfg.pageSize, type: EPagingType.local };\r\n\r\n        const ctrl = <div id={StatusPorting.containerId} className={'c1 container ' + (this.state.expanded ? 'wide' : '')}>\r\n            <div className=\"row\">\r\n                {details}\r\n                <div className=\"col-md-12 col-12\">\r\n                    <page.Table coulmns={colsPopup}\r\n                        id={StatusPorting.containerId + 'Table'}\r\n                        expnaded={this.state.expanded}\r\n                        pagingProps={pagingProps}\r\n                        dateColumn='StartDate'\r\n                        filter={undefined}\r\n                        data={this.state && this.state.api2 ? this.state.api2.data : undefined} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>;\r\n\r\n        return ctrl;\r\n    }\r\n\r\n    onDismissDetailsScreen = () => {\r\n        this.setState({ selectedRecord: undefined });\r\n    }\r\n\r\n\r\n\r\n    private getButtonState(event: any) {\r\n        this.componentDidMount();\r\n        this.buttonStatus = event.target.id;\r\n    };\r\n\r\n    public componentDidMount() {\r\n\r\n    };\r\n\r\n    public socketCallback(api: IApiResponse) {\r\n        this.setState({ changed: true, processing: false, api: api }); \r\n    };\r\n\r\n\r\n    public socketCallbackDetails(api: IApiResponse) {\r\n        this.setState({ changed: true, processing: false, api2: api, showPopup: true });\r\n    };\r\n\r\n\r\n\r\n    private loadData(from: any, to: any, search: any, portingStatus: any) {\r\n        setTimeout(() => {\r\n            Global.easyApp.setTitle(MainTexts.portingStatus);\r\n\r\n            let t = {\r\n                Void: this.user===undefined? '': this.user.voId,\r\n                from: from,\r\n                to: to,\r\n                LastStatus: portingStatus,\r\n                total: '0',\r\n                page: '1',\r\n                count: '500',\r\n                search: search\r\n            };\r\n\r\n            Global.hub.send(JSON.stringify(t), m.ERequestType.getMnpPortingStatus, undefined);\r\n        }, 1000);\r\n    };\r\n\r\n    private expand() {\r\n        this.setState({ expanded: !this.state.expanded });\r\n    };\r\n\r\n\r\n    private onChange(e: IControlValue) {\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n};\r\n\r\nexport default StatusPorting;","import * as React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { MainTexts, OrderingTexts, OrderProductStages } from '../../utils/messages';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { EControlType, ELButtonType, IOrderProductViewModel } from '../../../src/models';\r\nimport * as page from '../../../src/components/page/index';\r\nimport EasyRouter from '../../utils/router';\r\nimport Global from '../../utils/Global';\r\nimport * as m from '../../models/index';\r\nimport StorageHelper from '../../utils/storage';\r\nimport { IProcessStatus, IApiResponse } from '../../interfaces';\r\nimport * as linq from 'linq';\r\nimport { EOrderProcessView } from '../../models/ordering/order';\r\nimport { ActivationProgress } from '../../components/ordering/process';\r\nimport ErrorMessage from '../../components/dialogs/errorMessage/errorMessage';\r\nimport { IColumn, EPagingType } from '../../components/page/table';\r\nimport IUser from '../../models/environment/user';\r\nimport { Popup, PopupBody } from '../../components';\r\nimport { EPopupType } from '../../components/dialogs/popup';\r\n\r\n\r\nexport interface IOrderProps {\r\n    onChange: any;\r\n};\r\n\r\nexport interface IOrderState {\r\n    changed: boolean;\r\n    model: any\r\n    progress: EOrderProcessView;\r\n    table1: boolean;\r\n    table2: boolean;\r\n    data2: any[];\r\n    dataDetails: any[];\r\n    orderTotal: string;\r\n    fullAmountProducts: string;\r\n    noAmountFound: boolean;\r\n    errorAmount: boolean;\r\n    details: boolean;\r\n\r\n};\r\n\r\nexport interface IDataTable2 {\r\n    Region: string,\r\n    Status: string,\r\n    Produkte: string,\r\n    PriceTotal: string,\r\n};\r\nexport interface IDataTable1 {\r\n    ProductGroup: string,\r\n    Picture: string,\r\n    Id: string,\r\n    Name: string,\r\n    ProductAvailability: string,\r\n    PriceString: string,\r\n    Amount: any\r\n};\r\n\r\nexport class OrderProduct extends React.Component<IOrderProps, IOrderState> {\r\n    private processPopupState: EPopupType = EPopupType.custom;\r\n    public static containerId: string = 'orderProducts';\r\n    public dataTable1: IDataTable1[] = [];\r\n    public dataTable2: IDataTable2[] = [];\r\n    public orderProductsModel: IOrderProductViewModel = { products: [], address: new m.Address() };\r\n    public priceTotal: number = 0.00;\r\n    public currentProduct: IDataTable1 = { ProductGroup: '', Picture: '', Id: '', Name: '', ProductAvailability: '', PriceString: '', Amount: '' };\r\n    public user?: IUser;\r\n    public totalAmountProducts: string = '';\r\n    public totalPriceEverything: string = '';\r\n    public currentAddressByOrder: m.Address = new m.Address();\r\n    ;\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false,\r\n            progress: EOrderProcessView.selectProduct,\r\n            table1: true,\r\n            table2: false,\r\n            data2: [],\r\n            model: undefined,\r\n            orderTotal: '0',\r\n            fullAmountProducts: '0',\r\n            noAmountFound: false,\r\n            errorAmount: false,\r\n            details: false,\r\n            dataDetails: []\r\n        };\r\n\r\n        this.user = StorageHelper.getUser();\r\n\r\n        this.socketCallback = this.socketCallback.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.getOrderDetails = this.getOrderDetails.bind(this);\r\n        this.calculateAmount = this.calculateAmount.bind(this);\r\n\r\n\r\n        let t = {\r\n            Void: this.user !== undefined ? this.user.voId : ''\r\n        };\r\n\r\n        Global.hub.send(JSON.stringify(t), m.ERequestType.getOrderProducts, undefined);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    };\r\n\r\n\r\n\r\n    public render() {\r\n        let cfg = Global.getConfiguration();\r\n        const pagingProps = { page: 1, count: cfg.pageSize, type: EPagingType.local };\r\n\r\n        let colsTable2: IColumn[] = [\r\n            { label: MainTexts.orderFrom, binding: 'Region', size: 3, sortable: true },\r\n            { label: MainTexts.status, binding: 'Status', size: 3, sortable: true },\r\n            { label: MainTexts.numberOfProducts, binding: 'Produkte', size: 3, sortable: true },\r\n            { label: MainTexts.totalPriceEuro, binding: 'PriceTotal', size: 2, sortable: true },\r\n            {\r\n                label: '', binding: '', size: 1, sortable: false,\r\n                renderer: (c, r) => {\r\n                    return <>\r\n                        <page.LButton type={ELButtonType.iconImage}\r\n                            icon=\"list\"\r\n                            clickModel={c}\r\n                            onClickEvent={(e, m) => {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                                this.getOrderDetails(c.I_id)\r\n                                return false;\r\n                            }} />\r\n                    </>;\r\n                },\r\n                rendererHead: (c) => {\r\n                    return <>\r\n                        <page.LButton type={ELButtonType.iconImage}\r\n                            icon=\"expand\"\r\n                            onClick={''} />\r\n                    </>;\r\n                }\r\n            },\r\n\r\n        ];\r\n\r\n        let colsTable1: IColumn[] = [\r\n            { label: MainTexts.productGroup, binding: 'ProductGroup', size: 3, sortable: true },\r\n            { label: MainTexts.picture, binding: 'Picture', size: 1, sortable: true },\r\n            { label: MainTexts.surname, binding: 'Name', size: 2, sortable: true },\r\n            { label: MainTexts.availability, binding: 'ProductAvailability', size: 2, sortable: true },\r\n            { label: MainTexts.priceInEuro, binding: 'PriceString', size: 2, sortable: true },\r\n            this.state.details ? { label: MainTexts.amount, binding: 'Amount', size: 2, sortable: true } : {\r\n                label: MainTexts.amount, binding: 'Amount', size: 2, sortable: true,\r\n                renderer: (c, r) => {\r\n                    return <>\r\n                        {/* {  <page.LControl type={EControlType.text}\r\n                            id={c}\r\n                            style='productAmount'\r\n                            value={this.currentProduct.Amount}\r\n                            hideHint\r\n                            hideLabel\r\n                            hideTitle\r\n                            onChange={(e, m) => {\r\n                                this.onChange(e)\r\n                                return;\r\n                            }} */}\r\n                     {/* <div className=\"input-round-products\">\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={(event) => {\r\n                                this.onChange(event, c);\r\n                            }\r\n                            }\r\n                            value={this.currentProduct.Amount}\r\n                            style={{ marginTop: '2px' }} /> \r\n                            </div>\r\n                    </>;  */}\r\n\r\n                       <div className=\"input-round orderProducts\">\r\n                            <page.LControl onChange={(e, m) => {\r\n                                this.onChange(e)\r\n                                }}\r\n                                hideHint\r\n                                id={c}\r\n                                type={EControlType.text}\r\n                                hideTitle={true} style=\"\"\r\n                                controlStlye=\"form-control\"\r\n                                autoComplete=\"nope1\"\r\n                                placeholder=\"menge\"\r\n                                hideLabel={true}\r\n                                value={this.currentProduct.Amount} />\r\n                        </div>\r\n                        </> \r\n                },\r\n                rendererHead: (c) => {\r\n                    return <>\r\n                        <page.LLabel text={MainTexts.amount}\r\n                        />\r\n                    </>;\r\n                }\r\n            },\r\n        ];\r\n\r\n        let cfg1: IBlockConfiguration = {\r\n            title: this.state.table2 ? MainTexts.yourOrders : MainTexts.yourOrder,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: 'block-orderProducts',\r\n            collapsible: false,\r\n            collapsed: false\r\n        };\r\n\r\n        let cfg2: IBlockConfiguration = {\r\n            title: MainTexts.details,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: 'block-orderProducts',\r\n            collapsible: false,\r\n            collapsed: false\r\n        };\r\n\r\n        let ctr = <></>;\r\n\r\n        ctr = <div id={OrderProduct.containerId}>\r\n\r\n            <page.Inner1C style=\"   \">\r\n                {this.renderProgress()}\r\n            </page.Inner1C>\r\n\r\n            <>\r\n            <Popup\r\n                    type={this.processPopupState}\r\n                    visible={this.state.errorAmount}\r\n                    closable={true}\r\n                    id=\"areYouSure\"\r\n                    title={\"Warnung\"}\r\n                    height={200}\r\n                    onDismiss={this._onDismissProcessPopup}>\r\n                    <PopupBody>\r\n                        <h5>Bitte geben Sie die Menge der zu bestellenden Sim-Karten ein.</h5>\r\n                        <></>\r\n                    </PopupBody>\r\n                    <></>\r\n                </Popup>\r\n            </>\r\n\r\n            <BaseBlock config={cfg1}>\r\n                {\r\n                    <Container>\r\n                        {this.state.table2 ? <></> : <ErrorMessage visible={true} text={OrderingTexts.orderProductsNotification} />\r\n                        }\r\n                        <div className=\"spacer\"></div>\r\n                        {/* {\r\n                            this.state.errorAmount ? <ErrorMessage visible={true} text={OrderingTexts.errorAmountText} /> : <></>\r\n                        } */}\r\n                        <div className=\"spacer\"></div>\r\n\r\n                        <Row>\r\n                            <Col xs={4} md={4} >\r\n                                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                    css=\"a1 fr\"\r\n                                    id=\"\"\r\n                                    text={MainTexts.orderProducts}\r\n                                    onClick={() => {\r\n                                        this.setState({ table1: true, table2: false, details: false });\r\n\r\n                                    }} />\r\n                            </Col>\r\n                            <Col xs={4} md={4} >\r\n                                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                    css=\"a1 fr\"\r\n                                    id=\"\"\r\n                                    text={MainTexts.yourOrders}\r\n                                    onClick={() => {\r\n\r\n                                        let t = {\r\n                                            id: 'test',\r\n                                            url: 'test'\r\n                                        };\r\n\r\n                                        Global.hub.send(JSON.stringify(t), m.ERequestType.getOrdersList, undefined);\r\n                                    }} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col >\r\n                                {this.state.table1 ? <page.Table coulmns={colsTable1}\r\n                                    id={'1'}\r\n                                    expnaded={false}\r\n                                    pagingProps={pagingProps}\r\n                                    data={this.dataTable1} /> : <></>\r\n                                }\r\n                                {this.state.table2 ? <page.Table coulmns={colsTable2}\r\n                                    id={'1'}\r\n\r\n                                    expnaded={false}\r\n                                    pagingProps={pagingProps}\r\n                                    data={this.state.data2} /> : <></>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {this.state.table2 ? <></> : <Row>\r\n                            <Col xs={8} md={8}>\r\n                            </Col>\r\n                            <Col xs={2} md={2}>\r\n                                <page.LLabel text={MainTexts.orderText + ':  ' + this.priceTotal.toFixed(2).toString() + \" €\"} />\r\n                            </Col>\r\n                            <Col xs={2} md={2}>\r\n                                <page.LLabel text={MainTexts.amount + ':  ' + this.state.orderTotal} />\r\n                            </Col>\r\n                        </Row>\r\n                        }\r\n\r\n                        {this.state.table2 ? <></> : <Col xs={12} md={12} >\r\n                            <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                css=\"a1 fr\"\r\n                                id=\"\"\r\n                                text={MainTexts.next}\r\n                                onClick={() => {\r\n\r\n                                    if (this.orderProductsModel.products.length === 0) {\r\n                                        this.setState({ errorAmount: true });\r\n                                    } else {\r\n                                        this.orderProductsModel.products.forEach(product => {\r\n                                            if (product.Amount === '0' || product.Amount === '') {\r\n                                                this.orderProductsModel.products.splice(this.orderProductsModel.products.findIndex(pr => pr.Id === product.Id), 1);\r\n                                            }\r\n                                        })\r\n\r\n                                        if (this.orderProductsModel.products.length === 0) {\r\n                                            this.setState({ errorAmount: true });\r\n                                        } else {\r\n                                            StorageHelper.addOrderProducts(this.orderProductsModel);\r\n                                            EasyRouter.route({ url: '/apps/orderproducts/selectdeliveryaddress', title: MainTexts.selectDeliveryAddress });\r\n                                        }\r\n                                    }\r\n                                }} />\r\n                        </Col>\r\n                        }\r\n                    </Container>\r\n                }\r\n            </BaseBlock>\r\n\r\n\r\n            {this.state.details ? <BaseBlock config={cfg2}>\r\n                {\r\n                    <Container>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <page.Table coulmns={colsTable1}\r\n                                    id={'1'}\r\n                                    expnaded={false}\r\n                                    pagingProps={pagingProps}\r\n                                    data={this.state.dataDetails} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col xs={8} md={8}>\r\n                            </Col>\r\n                            <Col xs={2} md={2}>\r\n                                <page.LLabel text={MainTexts.orderText + ':  ' + this.totalPriceEverything} />\r\n                            </Col>\r\n                            <Col xs={2} md={2}>\r\n                                <page.LLabel text={MainTexts.amount + ':  ' + this.totalAmountProducts} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <page.LLabel text={OrderProductStages.deliveryAddress} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <page.LLabel text={this.currentAddressByOrder.name} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <page.LLabel text={this.currentAddressByOrder.house_number + \", \" + this.currentAddressByOrder.zip + \", \" + this.currentAddressByOrder.city} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    </Container>\r\n                }\r\n            </BaseBlock> : <></>\r\n            }\r\n        </div>\r\n        return ctr;\r\n    };\r\n\r\n    _onDismissProcessPopup = () => {\r\n        this.setState({ errorAmount: false });\r\n    }\r\n\r\n    private renderProgress(): JSX.Element {\r\n        let cancelProgress: JSX.Element =\r\n            <ActivationProgress\r\n                progress={this.state.progress}\r\n                states={[OrderProductStages.selectProducts, OrderProductStages.deliveryAddress, OrderProductStages.overviewOrder]} />;\r\n\r\n        if (Global.easyApp.head) {\r\n            Global.easyApp.head.setTitle(this.state.table2 ? MainTexts.yourOrders : MainTexts.yourOrder);\r\n            Global.easyApp.head.appendSub(this.state.table2 ? <></> : cancelProgress);\r\n        }\r\n        return <></>;\r\n    }\r\n\r\n    public socketCallback(res: IApiResponse) {\r\n        this.dataTable1 = res.data;\r\n    }\r\n\r\n    public socketCallbackOrdersList(res: IApiResponse) {\r\n        this.setState({ table2: true, table1: false, data2: res.data.Items, details: false });\r\n    }\r\n\r\n    public getOrderDetails(orderId: string) {\r\n\r\n        let t = {\r\n            id: orderId\r\n        };\r\n\r\n        Global.hub.send(JSON.stringify(t), m.ERequestType.getOrderDetail, undefined);\r\n    }\r\n\r\n    public socketCallbackDetails(res: IApiResponse) {\r\n\r\n        this.totalAmountProducts = this.calculateAmount(res.data.products)\r\n        this.currentAddressByOrder.city = res.data.address.City;\r\n        this.currentAddressByOrder.zip = res.data.address.ZIP;\r\n        this.currentAddressByOrder.street = res.data.address.Street;\r\n        this.currentAddressByOrder.name = res.data.address.Name;\r\n        this.currentAddressByOrder.house_number = res.data.address.HouseNumber;\r\n\r\n        this.setState({ dataDetails: res.data.products, details: true });\r\n    }\r\n\r\n    onChange(target: any) {\r\n     \r\n        target.value = this.validateInput(target.value);\r\n\r\n        this.currentProduct = target.id;\r\n        this.currentProduct.Amount = target.value;\r\n\r\n        const index = this.orderProductsModel.products.findIndex(product => product.Id === this.currentProduct.Id);\r\n        if (index > -1) {\r\n            this.orderProductsModel.products[index].Amount = target.value;\r\n        } else {\r\n            this.orderProductsModel.products.push(this.currentProduct);\r\n        }\r\n\r\n        this.orderProductsModel.products.forEach(product => {\r\n            var priceFormat: string = product.PriceString.substring(0, 3);\r\n            this.priceTotal += Number(product.Amount) * Number(priceFormat);\r\n        })\r\n\r\n        this.setState({ changed: true, orderTotal: target.value })\r\n    }\r\n\r\n    private calculateAmount(data: any) {\r\n        let count: number = 0;\r\n        let countPrice: number = 0;\r\n        data.forEach(product => {\r\n            count += Number(product.Amount);\r\n            countPrice += Number(product.Amount) * product.Price;\r\n        })\r\n        this.totalPriceEverything = countPrice.toFixed(2).toString() + \" €\";\r\n        return count.toString();\r\n    }\r\n\r\n\r\n    private validateInput(input: string) {\r\n        const regex = /^(?:[1-9][0-9]*|0)$/gm;\r\n        const str = input;\r\n        let m = regex.exec(str) !== null;\r\n\r\n        if (m) {\r\n            return input;\r\n        } else {\r\n            return input = '';\r\n        }\r\n    }\r\n};\r\n\r\nexport default OrderProduct;","import * as React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { MainTexts, OrderProductStages, ValidationMessages } from '../../utils/messages';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { EControlType, ELButtonType, ERequestType, ERequestStatus, IOrderProductViewModel } from '../../../src/models';\r\nimport * as page from '../../../src/components/page/index';\r\nimport Global from '../../utils/Global';\r\nimport * as m from '../../models/index';\r\nimport StorageHelper from '../../utils/storage';\r\nimport { IProcessStatus, IApiStep, IApiSummary, IApiResponse } from '../../interfaces';\r\nimport IUser from '../../models/environment/user';\r\nimport { EOrderProcessView } from '../../models/ordering/order';\r\nimport { ActivationProgress } from '../../components/ordering/process';\r\nimport { IKeyTextNumber, IControlValue } from '../../models/page/interfaces';\r\nimport EasyRouter from '../../utils/router';\r\nimport { StorageKeys } from '../../utils/Defaults';\r\nimport { ValidationWrapper, ModelStete } from '../../utils';\r\nimport ValidationOption, { IValidationOptionControl, EValidationOption } from '../../utils/validation/validationOption';\r\nimport Address from '../../components/ordering/global/address';\r\n\r\nexport interface IOrderProps {\r\n    onChange: any;\r\n    address?: m.Address;\r\n};\r\n\r\nexport interface IOrderState {\r\n    changed: boolean;\r\n    progress: EOrderProcessView;\r\n    savedAddress: boolean;\r\n    newAddress: boolean;\r\n};\r\n\r\nexport class DeliveryAddress extends React.Component<IOrderProps, IOrderState> {\r\n    public static containerId: string = 'deliveryAddress';\r\n    public savedAddressFullString: string = '';\r\n    public orderProductsModel: IOrderProductViewModel = { products: [], address: new m.Address() };\r\n    public modelState: ModelStete = new ModelStete();\r\n    private address: m.Address;\r\n    private valop: IValidationOptionControl[] = [];\r\n    public user?: IUser;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false,\r\n            progress: EOrderProcessView.deliveryAddress,\r\n            savedAddress: true,\r\n            newAddress: false\r\n        };\r\n\r\n        this.address = this.props.address ? this.props.address : new m.Address();\r\n        var data = sessionStorage.getItem(StorageKeys.keyOrdersProducts);\r\n\r\n        if (data !== null) {\r\n            this.orderProductsModel = JSON.parse(data);\r\n        }\r\n\r\n        this.valop.push(\r\n            {\r\n                id: 'city',\r\n                options: [\r\n                    new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                ]\r\n            },\r\n            {\r\n                id: 'zip',\r\n                options: [\r\n                    new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                    new ValidationOption({ type: EValidationOption.numeric, message: ValidationMessages.numericError }),\r\n                    new ValidationOption({ type: EValidationOption.exactLength, targetValue: 5, message: 'Max 5 Zeichen' })\r\n                ]\r\n            },\r\n            {\r\n                id: 'street',\r\n                options: [\r\n                    new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                ]\r\n            },\r\n            {\r\n                id: 'nr',\r\n                options: [\r\n                    new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                    new ValidationOption({ type: EValidationOption.numeric, message: ValidationMessages.numericError }),\r\n                ]\r\n            },\r\n            {\r\n                id: 'street',\r\n                options: [\r\n                    new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                ]\r\n            },\r\n        );\r\n\r\n        this.user = StorageHelper.getUser();\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n    };\r\n\r\n    public render() {\r\n        let a: JSX.Element = <>\r\n            <page.LButton type={ELButtonType.linkSimple}\r\n                text={MainTexts.back}\r\n                css=\"action3 fr\"\r\n                onClick={() => {\r\n                    EasyRouter.route({ url: '/apps/orderproducts', title: MainTexts.orderProductsTitle });\r\n                }} />\r\n        </>;\r\n\r\n        let cfg1: IBlockConfiguration = {\r\n            title: MainTexts.yourOrder,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: 'block-orderProducts',\r\n            collapsible: false,\r\n            collapsed: false,\r\n            action: a\r\n        };\r\n\r\n        let ctr = <></>;\r\n\r\n        ctr = <div id={DeliveryAddress.containerId}>\r\n            <page.Inner1C style=\"   \">\r\n                {this.renderProgress()}\r\n            </page.Inner1C>\r\n\r\n            <BaseBlock config={cfg1}>\r\n                {\r\n                    <Container id=\"newAddressValidation\">\r\n\r\n                        <Row>\r\n                            <Col xs={4} md={4} >\r\n                                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                    css=\"a1 fr\"\r\n                                    id=\"\"\r\n                                    text={MainTexts.orderProducts}\r\n                                    onClick={() => {\r\n                                        EasyRouter.route({ url: '/apps/orderproducts', title: MainTexts.orderProductsTitle });\r\n\r\n                                    }} />\r\n                            </Col>\r\n                            <Col xs={4} md={4} >\r\n                                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                    css=\"a1 fr\"\r\n                                    id=\"\"\r\n                                    text={MainTexts.yourOrders}\r\n                                    onClick={() => {\r\n\r\n                                        let t = {\r\n                                            id: 'test',\r\n                                            url: 'test'\r\n                                        };\r\n\r\n                                        Global.hub.send(JSON.stringify(t), m.ERequestType.getOrdersList, undefined);\r\n                                        EasyRouter.route({ url: '/apps/orderproducts', title: MainTexts.yourOrders });\r\n                                    }} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={4} xs='auto'>\r\n                                <page.LControl type={EControlType.radio}\r\n                                    checked={this.state.savedAddress}\r\n                                    onChange={this.onChange}\r\n                                    name=\"saveAddress\"\r\n                                    id={'savedAddress'}\r\n                                  \r\n                                    label={MainTexts.savedAddress} title={''} />\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <page.LControl type={EControlType.radio}\r\n                                    checked={this.state.newAddress}\r\n                                    onChange={this.onChange}\r\n                                    name=\"newAddress\"\r\n                                    id={'newAddress'}\r\n                                    label={MainTexts.newAddress} title={''} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {this.state.savedAddress ? <>\r\n                            <Row >\r\n                                <Col md={12}>\r\n                                    <page.LControl type={EControlType.dropdown}\r\n                                        value={'1'}\r\n                                        onChange={this.onChange}\r\n\r\n                                        name=\"dealer\" id=\"\" title={MainTexts.dealerName}\r\n                                        options={this.getStoredDeliveryAddreses()} />\r\n                                </Col>\r\n                            </Row>\r\n                        </> : <></>}\r\n\r\n                        {this.state.newAddress ? <>\r\n\r\n                            <Address\r\n                                source={this.address}\r\n                                addressAdditionalFields={true}\r\n                                onChange={this.onChange} preview={false}\r\n                                prefix={'+'} />\r\n\r\n                        </> : <></>}\r\n\r\n                        <Col xs={12} md={12} >\r\n                            <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                css=\"a1 fr\"\r\n                                id=\"\"\r\n                                text={MainTexts.next}\r\n                                onClick={() => {\r\n                                    let res = ValidationWrapper.validateFormular(undefined,\r\n                                        true,\r\n                                        DeliveryAddress.containerId,\r\n                                        this.valop);\r\n\r\n                                    if (res) {\r\n                                        if (this.state.savedAddress) {\r\n                                            this.orderProductsModel.address.additional = '';\r\n                                            this.orderProductsModel.address.city = this.user === undefined ? '' : this.user.voCity;\r\n                                            this.orderProductsModel.address.house_number = '';\r\n                                            this.orderProductsModel.address.name = this.user === undefined ? '' : this.user.voName;\r\n                                            this.orderProductsModel.address.street = this.user === undefined ? '' : this.user.voStreet;\r\n                                            this.orderProductsModel.address.zip = this.user === undefined ? '' : this.user.voZIP;\r\n\r\n                                            StorageHelper.addOrderProducts(this.orderProductsModel);\r\n                                        } else {\r\n                                            this.orderProductsModel.address = this.address;\r\n                                            StorageHelper.addOrderProducts(this.orderProductsModel);\r\n                                        }\r\n                                        EasyRouter.route({ url: '/apps/orderproducts/selectdeliveryaddress/orderOverview', title: MainTexts.orderOverviewTitle });\r\n                                    }\r\n                                }} />\r\n                        </Col>\r\n                    </Container>\r\n\r\n                }\r\n            </BaseBlock>\r\n        </div>\r\n        return ctr;\r\n    };\r\n\r\n    public getStoredDeliveryAddreses(): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n\r\n        var retailerName = this.user === undefined ? '' : this.user.voName;\r\n        var street = this.user === undefined ? '' : this.user.voStreet;\r\n        var zip = this.user === undefined ? '' : this.user.voZIP;\r\n        var city = this.user === undefined ? '' : this.user.voCity;\r\n\r\n        op.push({ key: 1, text: retailerName + \", \" + street + \", \" + zip + \" \" + city });\r\n\r\n        return op;\r\n    };\r\n\r\n    private renderProgress(): JSX.Element {\r\n        let cancelProgress: JSX.Element =\r\n            <ActivationProgress\r\n                progress={this.state.progress}\r\n                states={[OrderProductStages.selectProducts, OrderProductStages.deliveryAddress, OrderProductStages.overviewOrder]} />;\r\n\r\n        if (Global.easyApp.head) {\r\n            Global.easyApp.head.setTitle(MainTexts.yourOrder);\r\n            Global.easyApp.head.appendSub(cancelProgress);\r\n        }\r\n        return <></>;\r\n    }\r\n\r\n    onChange(e: IControlValue) {\r\n        if (e.id === 'newAddress') {\r\n            this.setState({ newAddress: true, savedAddress: false })\r\n        } else if (e.id === 'savedAddress') {\r\n            this.setState({ newAddress: false, savedAddress: true })\r\n        } else {\r\n            Global.setValueByPath(this.address, e.id, e.value);\r\n            this.setState({ changed: true })\r\n        }\r\n    }\r\n};\r\n\r\nexport default DeliveryAddress;","import * as React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { MainTexts, OrderingTexts, OrderProductStages } from '../../utils/messages';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport {ELButtonType, IOrderProductViewModel } from '../../../src/models';\r\nimport * as page from '../../../src/components/page/index';\r\nimport Global from '../../utils/Global';\r\nimport * as m from '../../models/index';\r\nimport StorageHelper from '../../utils/storage';\r\n\r\nimport {IApiResponse } from '../../interfaces';\r\nimport IUser from '../../models/environment/user';\r\nimport { EOrderProcessView } from '../../models/ordering/order';\r\nimport { ActivationProgress } from '../../components/ordering/process';\r\nimport { IColumn, EPagingType } from '../../components/page/table';\r\nimport { StorageKeys } from '../../utils/Defaults';\r\nimport EasyRouter from '../../utils/router';\r\nimport { EPopupType} from '../../components/dialogs/popup';\r\nimport * as cmp from '../../components/index';\r\n\r\n\r\nexport interface IOrderProps {\r\n    onChange: any;\r\n};\r\n\r\nexport interface IOrderState {\r\n    changed: boolean;\r\n    progress: EOrderProcessView;\r\n    table1;\r\n    popup: boolean;\r\n    processingDone: boolean;\r\n};\r\n\r\nexport interface IDataTable1 {\r\n    ProductGroup: string,\r\n    Picture: string,\r\n    Id: string,\r\n    Name: string,\r\n    ProductAvailability: string,\r\n    PriceString: string,\r\n    Amount: any\r\n};\r\n\r\nexport class OrderOverview extends React.Component<IOrderProps, IOrderState> {\r\n    public static containerId: string = 'orderOverview';\r\n    public dataTable1: IDataTable1[] = [];\r\n    public orderProductsModel: IOrderProductViewModel = { products: [], address: new m.Address() };\r\n    private processPopupStateCustom: EPopupType = EPopupType.custom;\r\n    private processPopupStateWait: EPopupType = EPopupType.pleaseWait;\r\n\r\n    public user?: IUser;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false,\r\n            progress: EOrderProcessView.orderOverview,\r\n            table1: true,\r\n            popup: false,\r\n            processingDone: false\r\n        }\r\n\r\n        this.user = StorageHelper.getUser();\r\n        var data = sessionStorage.getItem(StorageKeys.keyOrdersProducts);\r\n\r\n        if (data !== null) {\r\n            this.orderProductsModel = JSON.parse(data);\r\n        }\r\n\r\n        this.socketCallback = this.socketCallback.bind(this);\r\n        this.calculateAmount = this.calculateAmount.bind(this);\r\n        this.calculatePriceTotal = this.calculatePriceTotal.bind(this);\r\n    };\r\n\r\n    public render() {\r\n        let cfg = Global.getConfiguration();\r\n        const pagingProps = { page: 1, count: cfg.pageSize, type: EPagingType.local };\r\n\r\n        let colsTable1: IColumn[] = [\r\n            { label: MainTexts.productGroup, binding: 'ProductGroup', size: 3, sortable: true },\r\n            { label: MainTexts.picture, binding: 'Picture', size: 1, sortable: true },\r\n            { label: MainTexts.surname, binding: 'Name', size: 2, sortable: true },\r\n            { label: MainTexts.availability, binding: 'ProductAvailability', size: 2, sortable: true },\r\n            { label: MainTexts.priceInEuro, binding: 'PriceString', size: 2, sortable: true },\r\n            { label: MainTexts.amount, binding: 'Amount', size: 2, sortable: true }\r\n        ];\r\n\r\n        let a: JSX.Element = <>\r\n            <page.LButton type={ELButtonType.linkSimple}\r\n                text={MainTexts.back}\r\n                css=\"action3 fr\"\r\n                onClick={() => {\r\n                    EasyRouter.route({ url: '/apps/orderproducts/selectdeliveryaddress', title: MainTexts.selectDeliveryAddress });\r\n                }} />\r\n        </>;\r\n\r\n        let cfg1: IBlockConfiguration = {\r\n            title: MainTexts.yourOrder,\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: 'block-orderProducts',\r\n            collapsible: false,\r\n            collapsed: false,\r\n            action: a\r\n        };\r\n\r\n        let cancelProgress: JSX.Element =\r\n            <ActivationProgress\r\n                progress={this.state.progress}\r\n                states={[OrderProductStages.selectProducts, OrderProductStages.deliveryAddress, OrderProductStages.overviewOrder]} />;\r\n\r\n        if (Global.easyApp.head) {\r\n            Global.easyApp.head.setTitle(OrderingTexts.cancellation.toUpperCase());\r\n            Global.easyApp.head.appendSub(cancelProgress);\r\n        }\r\n\r\n        let ctr = <></>;\r\n\r\n        ctr = <div id={OrderOverview.containerId}>\r\n            <page.Inner1C style=\"   \">\r\n                {this.renderProgress()}\r\n            </page.Inner1C>\r\n\r\n            <BaseBlock config={cfg1}>\r\n                {\r\n                    <Container>\r\n                        <div className=\"spacer\"></div>\r\n                        <Row>\r\n                            <Col xs={4} md={4} >\r\n                                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                    css=\"a1 fr\"\r\n                                    id=\"\"\r\n                                    text={MainTexts.orderProducts}\r\n                                    onClick={() => {\r\n\r\n                                        EasyRouter.route({ url: '/apps/orderproducts', title: MainTexts.orderProductsTitle });\r\n                                    }} />\r\n                            </Col>\r\n                            <Col xs={4} md={4} >\r\n                                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                    css=\"a1 fr\"\r\n                                    id=\"\"\r\n                                    text={MainTexts.yourOrders}\r\n                                    onClick={() => {\r\n                                        let t = {\r\n                                            id: 'test',\r\n                                            url: 'test'\r\n                                        };\r\n\r\n                                        Global.hub.send(JSON.stringify(t), m.ERequestType.getOrdersList, undefined);\r\n                                        EasyRouter.route({ url: '/apps/orderproducts', title: MainTexts.yourOrders });\r\n                                    }} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col >\r\n                                {this.state.table1 ? <page.Table coulmns={colsTable1}\r\n                                    id={'1'}\r\n                                    expnaded={false} //to do adding datetime field\r\n                                    pagingProps={pagingProps}\r\n                                    data={this.orderProductsModel.products} /> : <></>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={8} md={8}>\r\n                            </Col>\r\n                            <Col xs={2} md={2}>\r\n                                <page.LLabel text={MainTexts.orderText+':  ' + this.calculatePriceTotal()} />\r\n                            </Col>\r\n                            <Col xs={2} md={2}>\r\n                                <page.LLabel text={MainTexts.amount+':  ' + this.calculateAmount()} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Col xs={12} md={12} >\r\n                            <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                css=\"a1 fr\"\r\n                                id=\"\"\r\n                                text={MainTexts.next}\r\n                                onClick={() => {\r\n                                    this.setState({ popup: true, processingDone: false });\r\n                                    Global.hub.send(JSON.stringify(this.orderProductsModel), m.ERequestType.saveOrderPoducts, undefined);\r\n                                }} />\r\n                        </Col>\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <page.LLabel text={OrderProductStages.deliveryAddress} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <page.LLabel text={this.orderProductsModel.address.name} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                       \r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <page.LLabel text={(this.orderProductsModel.address.house_number===''? \"N/A\":this.orderProductsModel.address.house_number) + \", \" + this.orderProductsModel.address.zip + \", \" + this.orderProductsModel.address.city} />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Container>\r\n                }\r\n                {this.state.popup ? this.renderPopup() : <></>}\r\n            </BaseBlock>\r\n        </div>\r\n\r\n        return ctr;\r\n    };\r\n\r\n    public socketCallback(res: IApiResponse) {\r\n        if (res.data.status === 1) {\r\n            this.setState({ processingDone: true });\r\n        }\r\n    }\r\n\r\n    private renderProgress(): JSX.Element {\r\n        let cancelProgress: JSX.Element =\r\n            <ActivationProgress\r\n                progress={this.state.progress}\r\n                states={[OrderProductStages.selectProducts, OrderProductStages.deliveryAddress, OrderProductStages.overviewOrder]} />;\r\n\r\n        if (Global.easyApp.head) {\r\n            Global.easyApp.head.setTitle(MainTexts.yourOrder);\r\n            Global.easyApp.head.appendSub(cancelProgress);\r\n        }\r\n        return <></>;\r\n    }\r\n\r\n    private renderPopup(): JSX.Element {\r\n        let a: JSX.Element = <>\r\n            <page.LButton type={ELButtonType.linkSimple}\r\n                text={MainTexts.backToOrderProducts}\r\n                css=\"action3 fr\"\r\n                onClick={() => {\r\n                    EasyRouter.route({ url: '/apps/orderproducts', title: MainTexts.orderProductsTitle });\r\n                }} />\r\n        </>;\r\n\r\n        let b: JSX.Element = <>\r\n            <page.LButton type={ELButtonType.linkSimple}\r\n                text={MainTexts.monitorYourOrders}\r\n                css=\"action3 fr\"\r\n                onClick={() => {\r\n                    let t = {\r\n                        id: 'test',\r\n                        url: 'test'\r\n                    };\r\n                    Global.hub.send(JSON.stringify(t), m.ERequestType.getOrdersList, undefined);\r\n                    EasyRouter.route({ url: '/apps/orderproducts', title: MainTexts.yourOrders });\r\n                }} />\r\n        </>;\r\n\r\n        let cfg1: IBlockConfiguration = {\r\n            title: '',\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: 'block-innerMiddle',\r\n            collapsible: false,\r\n            collapsed: false\r\n\r\n        };\r\n\r\n        return <cmp.Popup\r\n            type={this.state.processingDone ? this.processPopupStateCustom : this.processPopupStateWait}\r\n            visible={this.state.popup}\r\n            closable={false}\r\n            id=\"wait\"\r\n            title={''}\r\n            height={400}\r\n            width={600}\r\n            onDismiss={this.onDismissPopup}>\r\n            <cmp.PopupBody>\r\n\r\n                <BaseBlock config={cfg1}>\r\n                    {\r\n                        <Container>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3>{MainTexts.thankYouFor} BESTELLUNG.</h3>\r\n                                    {a}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                  {b}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    }\r\n                </BaseBlock>\r\n                <></>\r\n            </cmp.PopupBody>\r\n            <></>\r\n        </cmp.Popup>\r\n    };\r\n\r\n    private onDismissPopup() {\r\n        this.setState({ popup: false });\r\n    };\r\n\r\n    private calculateAmount() {\r\n        let count: number = 0;\r\n        this.orderProductsModel.products.forEach(product => {\r\n            count += Number(product.Amount);\r\n        })\r\n        return count.toString();\r\n    }\r\n\r\n    private calculatePriceTotal() {\r\n        let priceTotal: number = 0.00;\r\n        this.orderProductsModel.products.forEach(product => {\r\n            var priceFormat: string = product.PriceString.substring(0, 3);\r\n            priceTotal += Number(product.Amount) * Number(priceFormat);\r\n        })\r\n\r\n        return priceTotal.toFixed(2).toString() + \" €\";\r\n    }\r\n\r\n};\r\n\r\nexport default OrderOverview;","import * as React from 'react';\r\nimport Popup, { EPopupType } from '../../components/dialogs/popup';\r\nimport Global from '../../utils/Global';\r\nimport { ERequestType, ELButtonType, EControlType } from '../../models';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { PopupBody, LButton, LClear, LControl, Inner1C } from '../../components';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport { IApiResponse, IApiSummary } from '../../interfaces';\r\nimport Api from '../../utils/api';\r\nimport { Roles } from '../../utils/Defaults';\r\n\r\n\r\nexport interface ISpaceProps {\r\n}\r\n\r\nexport interface ISpaceState {\r\n  \r\n}\r\n\r\nexport default class Spice extends React.Component<ISpaceProps, ISpaceState> {\r\n    \r\n    public static containerId: string = 'SpiceScreen';\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n       \r\n        Global.easyApp.setTitle(\"Spice\");\r\n\r\n\r\n        this.state = {\r\n            \r\n        };\r\n    }\r\n\r\n    render() {\r\n        const cfg: IBlockConfiguration = {\r\n            title: MainTexts.mnpStatus,\r\n            transparent: false,\r\n            styleContainer: ''\r\n        };\r\n\r\n       \r\n        return <div id={Spice.containerId}>\r\n           \r\n                  \r\n                    <BaseBlock config={cfg}>\r\n                        <Container className=\"container-action\">\r\n                            <Row>\r\n                                <Col xs=\"12\" md=\"12\">\r\n                                <iframe src={'https://apps.unitymedia.de/SpiceExternal'} frameBorder=\"0\" style={{ width: '100%', height: '1800px', border: 0 }} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </BaseBlock>\r\n         </div>\r\n    }\r\n\r\n   \r\n}","import * as React from 'react';\r\nimport Popup, { EPopupType } from '../../components/dialogs/popup';\r\nimport Global from '../../utils/Global';\r\nimport { ERequestType, ELButtonType, EControlType } from '../../models';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { PopupBody, LButton, LClear, LControl, Inner1C } from '../../components';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport { IApiResponse, IApiSummary } from '../../interfaces';\r\nimport Api from '../../utils/api';\r\nimport { Roles } from '../../utils/Defaults';\r\n\r\n\r\nexport interface ISpaceProps {\r\n}\r\n\r\nexport interface ISpaceState {\r\n\r\n}\r\n\r\nexport default class HAportal extends React.Component<ISpaceProps, ISpaceState> {\r\n\r\n    public static containerId: string = 'HAportalScreen';\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n\r\n        Global.easyApp.setTitle(\"HAportal\");\r\n\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const cfg: IBlockConfiguration = {\r\n            title: MainTexts.mnpStatus,\r\n            transparent: false,\r\n            styleContainer: ''\r\n        };\r\n\r\n\r\n        return <div id={HAportal.containerId}>\r\n\r\n\r\n            <BaseBlock config={cfg}>\r\n                <Container className=\"container-action\">\r\n                    <Row>\r\n                        <Col xs=\"12\" md=\"12\">\r\n                            <iframe frame-ancestors= 'self' \r\n                            src={'https://secure.kabeldeutschland.de/auth/realms/bsso/protocol/openid-connect/auth?response_type=code&redirect_uri=https%3A%2F%2Fsecure.kabeldeutschland.de%2Fhandel%2Foidc%2Fauthenticate&client_id=handel&state=e7fec05684cfd32e7eb72bfc93862b9d&scope=openid+profile'}\r\n                             frameBorder=\"0\" style={{ width: '100%', height: '1800px', border: 0 }} />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </BaseBlock>\r\n        </div>\r\n    }\r\n\r\n\r\n}","export {default as ProcessNewScreen} from './ordering/process';\r\nexport {default as WelcomeScreen} from './ordering/welcome';\r\nexport {default as MainScreen} from './global/main';\r\nexport {default as InitScreen} from './global/init';\r\nexport {default as PreviewScreen} from './ordering/preview';\r\nexport {default as ErrorScreen} from './global/error';\r\nexport {default as ContractManagerScreen} from './am/manager';\r\nexport {default as IDScannerScreen} from './am/idscanner';\r\nexport {default as ContractManagerDetailsScreen} from './am/managerDetails';\r\nexport {default as DraftsScreen} from './am/drafts'; \r\n//export {default as TestScreen} from './test/form';\r\nexport {default as CancellationScreen} from './am/cancellation'; \r\nexport {default as AccessScreen} from './am/access';\r\nexport {default as EditPasswordScreen} from './user/editPassword';\r\nexport {default as EditProfileScreen} from './user/editProfile';\r\nexport {default as DealerScreen} from './user/dealer';\r\nexport {default as DefConScreen} from './global/defcon';\r\nexport {default as AdministrationScreen} from './am/administration';\r\nexport {default as Cancellation} from '../components/existing/data/Cancellation';\r\nexport {default as CustomerScreen} from './existing/customer';\r\nexport {default as ImeiScreen} from './am/imei';\r\nexport {default as BelatedPorting} from '../components/existing/data/Belatedporting';\r\nexport {default as StatusPorting} from '../screens/test/StatusPorting';\r\nexport {default as OrderProduct} from '../screens/orderProducts/order';\r\nexport {default as DeliveryAddress} from '../screens/orderProducts/deliveryAddress';\r\nexport {default as OrderOverview} from '../screens/orderProducts/orderOverview';\r\nexport {default as Spice} from './am/spice';\r\nexport {default as HAportal} from './am/haPortal';","import * as React from 'react';\r\nimport LButton from '../page/button';\r\n\r\nexport interface IBlockInfoProps {\r\n    title: string;\r\n    children?: JSX.Element[];\r\n    button?: JSX.Element;\r\n    style?: string;\r\n};\r\n\r\nexport class BlockInfo extends React.Component<IBlockInfoProps, any> {\r\n    constructor(props) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = <></>;\r\n\r\n        let css = 'block-info';\r\n\r\n        if(this.props.style) {\r\n            css += ' ' + this.props.style;\r\n        }\r\n\r\n        ctrl = (\r\n            <div className={css}>\r\n                <div className=\"title text-h2\">{this.props.title}</div>\r\n                <div className=\"content text-body\">{this.props.children}</div>\r\n                <div className=\"action\">{this.props.button}</div>\r\n            </div>\r\n        );\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default BlockInfo;","import * as React from 'react';\r\nimport { IBaseComponentState } from '../../interfaces';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport BaseBlock from '../../components/page/block';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport LClear from './clear';\r\n\r\nexport interface IErrorBlockProps  {\r\n    visible: boolean;\r\n    title: string;\r\n    message: string;\r\n};\r\n\r\nexport class ErrorBlock extends React.Component<IErrorBlockProps, IBaseComponentState> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: this.props.visible,\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IErrorBlockProps) {\r\n        this.setState({visible: next.visible});\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = <></>;\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: this.props.title,\r\n            transparent: false,\r\n            styleContainer: 'error'\r\n        };\r\n\r\n        ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <div dangerouslySetInnerHTML={{__html:this.props.message}}/>\r\n                        </Col>                      \r\n                    </Row>                                \r\n                </Container>\r\n                <LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default ErrorBlock;","import * as React from 'react';\r\n\r\n\r\nexport class Footer extends React.Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        return (\r\n        <div className=\"footer\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"logo\">\r\n                    <img src=\"/images/easy.png\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Footer;","import * as React from 'react';\r\nimport { IDefCon, EAppState, ELButtonType } from '../../models';\r\nimport StorageHelper from '../../utils/storage';\r\nimport Global from '../../utils/Global';\r\nimport App from '../../App';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { IPopupConfig, EPopupType } from '../dialogs/popup';\r\nimport { LButton } from '../page';\r\nimport GlobalJSX from '../../utils/GlobalJSX';\r\n\r\nexport interface ITeaserState \r\n{\r\n    popupVisible: boolean;\r\n};\r\n\r\nexport class Teaser extends React.Component<any, ITeaserState> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popupVisible: false\r\n        };\r\n    }; \r\n\r\n    public render() {\r\n        let ctrl = <>\r\n            <div className=\"teaserTop\">\r\n                <div className=\"tac inner\" onClick={()=>{\r\n                    this.setState({popupVisible: true});\r\n                }}>\r\n                Gesenkte MwSt.? Geben wir weiter! Hier erfährst du mehr.\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                this.state.popupVisible && this.renderPopup()\r\n            }\r\n        </>\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderPopup() {\r\n        let ctrl = (\r\n            <Container className=\"full tal\">\r\n              <Row>\r\n                <Col xs={12} md={12} className=\"npr\">\r\n                    <b>Die dargestellten Preise enthalten noch die MwSt. von 19 %. Für vom 01.07. bis 31.12.2020 erbrachte Leistungen findest Du auf Deiner Rechnung eine entsprechende Senkung der MwSt. auf 16 % für Leistungen, die der regulären MwSt. unterliegen. Gilt für alle Telekommunikationstarife mit Mindestlaufzeit und Mietentgelte für Geräte. </b>\r\n                    <br/><br/><span className=\"small\">Für Prepaid gilt: Für Aufladungen, die in der Zeit vom 1.7. bis zum 31.12.2020 vorgenommen werden, schreiben wir je 2,52 % des Auflade-Betrags dem Guthaben zusätzlich gut. Beispiel: Bei einer Aufladung von 15 Euro schreiben wir dem Kundenkonto 15,38 Euro gut. Gilt nicht für CallNow Transfer. Die Gutschrift des zusätzlich gewährten Guthabens bei den Auflade-Wegen Voucher, Bankautomat, Bezahl-Terminal und Bankeinzug/Komfort-Aufladung erfolgt zeitgleich mit der Aufladung. Bei anderen Auflade-Wegen (Paypal, Kreditkarte, Sofortüberweisung und Banküberweisung) erfolgt die Gutschrift innerhalb von 24 Stunden nach Geldeingang. Die Gutschrift des zusätzlich gewährten Guthabens kann bei otelo bis zu 72 Stunden dauern. </span>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          )\r\n      \r\n          let cfg: IPopupConfig = {\r\n            props: {\r\n              id: 'dynamicPopup',\r\n              title: '',\r\n              visible: true,\r\n              closable: false,\r\n              style: 'tal',\r\n              type: EPopupType.custom,\r\n              height: 400,\r\n              width: 700\r\n            },\r\n            content: ctrl,\r\n            action: <>\r\n              <LButton type={ELButtonType.buttonWithIconRight}\r\n                css=\"a1 fr\"\r\n                id=\"\"\r\n                text={\"OK\"}\r\n                onClick={() => {\r\n                  this.setState({popupVisible: false});\r\n                }} />\r\n            </>\r\n          };\r\n\r\n          return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n    };\r\n};\r\n\r\nexport default Teaser;","import * as React from 'react';\r\nimport EasyRouter from '../../utils/router';\r\nimport App from '../../App';\r\nimport Global from '../../utils/Global';\r\nimport StorageHelper from '../../utils/storage';\r\nimport Api from '../../utils/api';\r\nimport Teaser from '../tools/teaser';\r\n\r\nexport interface IHeadProps {\r\n    changed: boolean;\r\n    title?: string;\r\n};\r\n\r\nexport interface IHeaderState {\r\n    changed: boolean;\r\n    title?: string;\r\n    fixed?: boolean;\r\n    subContent?: React.Component;\r\n};\r\n\r\nlet tgl: HTMLDivElement;\r\n\r\nexport class Head extends React.Component<IHeadProps, IHeaderState> {\r\n    constructor(props: IHeadProps) {\r\n        super(props);\r\n\r\n        let cfg = Global.getConfiguration();\r\n        \r\n        Global.easyApp.head = this;\r\n\r\n        this.state = {\r\n            changed: false,\r\n            title: cfg.appTitle\r\n        };\r\n\r\n        this.appendSub = this.appendSub.bind(this);\r\n    };\r\n\r\n    public fix(value: boolean) {\r\n        this.setState({fixed: value});\r\n    };\r\n\r\n    public appendSub(value: any) {\r\n        this.setState({ subContent: value, changed: true});\r\n    };\r\n\r\n    public render() {\r\n        let css: string = \"header\";\r\n\r\n        if(this.state.fixed) {\r\n            css+= ' fix';\r\n        }\r\n\r\n        if(this.state.subContent) {\r\n            css+= ' hassub';\r\n        }\r\n\r\n        return (\r\n            <div className={css} id=\"header\">\r\n                <Teaser />\r\n                <div className=\"wrapper\">\r\n                    <div className=\"logo\">\r\n                        <a href={Api.getAppUrl()}>\r\n                            <img src=\"/images/vfeasy.png\"/>\r\n                        </a>\r\n                    </div>\r\n\r\n                    <div className=\"title\">\r\n                        {this.state.title}\r\n                    </div>\r\n\r\n                    {this.state.subContent ? (<div className=\"sub\">{this.state.subContent}</div>) : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    public setTitle(value: string) {\r\n        this.setState({title: value});\r\n    }; \r\n};\r\n\r\nexport default Head;","import * as React from 'react';\r\nimport Inner2CRight from './inner2right';\r\nimport Inner2CLeft from './inner2left';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport IInnerProps from './IInnerProps';\r\n\r\nexport interface IHeaderState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class Inner2C extends React.Component<IInnerProps, any>{\r\n    constructor(props: IInnerProps){\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        let ctrl = ( \r\n            <Container className=\"c2\" id=\"container-main\">\r\n                {this.props.title ?\r\n                    (\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <h1>{this.props.title}</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    ) : null \r\n                }\r\n                <Row>\r\n                    <Col xs={8} md={8}>\r\n                        {this.props.children[0]}\r\n                    </Col>\r\n                    <Col xs={4} md={4}>\r\n                        {this.props.children[1]}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n        return ctrl;\r\n        /*\r\n        return <div className=\"wrapper\">\r\n            {this.props.children}\r\n            <div className=\"clear\"/>\r\n        </div>\r\n        */\r\n    }\r\n};\r\n\r\nexport default Inner2C;","import * as React from 'react';\r\n\r\nexport interface IInner2CLeftProps {\r\n    children: React.ReactChild\r\n};\r\n\r\nexport class Inner2CLeft extends React.Component<IInner2CLeftProps, any>{\r\n    constructor(props: IInner2CLeftProps){\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        let ctrl = (\r\n        <>\r\n            {this.props.children}\r\n        </>\r\n        );\r\n\r\n        return ctrl;\r\n    }\r\n};\r\n\r\nexport default Inner2CLeft;","import * as React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nexport interface IInner2HeadProps {\r\n    children: React.ReactChild[];\r\n    title?: string;\r\n};\r\n\r\nexport class Inner2Head extends React.Component<IInner2HeadProps, any>{\r\n    constructor(props: IInner2HeadProps){\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        let ctrl = (\r\n        <>\r\n            <Container className=\"c2\" id=\"container-main\">\r\n                {this.props.title ?\r\n                    (\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <h1>{this.props.title}</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    ) : null \r\n                }\r\n                <Row>\r\n                    <Col xs={12} md={12}>\r\n                        {this.props.children[0]}\r\n                    </Col>\r\n                </Row>                \r\n                <Row>\r\n                    <Col xs={8} md={8}>\r\n                        {this.props.children[1]}\r\n                    </Col>\r\n                    <Col xs={4} md={4}>\r\n                        {this.props.children[2]}\r\n                    </Col>\r\n                </Row>\r\n            </Container>            \r\n        </>\r\n        );\r\n\r\n        return ctrl;\r\n    }\r\n};\r\n\r\nexport default Inner2Head;","import * as React from 'react';\r\n\r\nexport interface IInner2CRightProps {\r\n    children: React.ReactChild\r\n};\r\n\r\nexport class Inner2CRight extends React.Component<IInner2CRightProps, any>{\r\n    constructor(props: IInner2CRightProps){\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        let ctrl = (\r\n        <>\r\n            {this.props.children}\r\n        </>\r\n        );\r\n\r\n        return ctrl;\r\n    }\r\n\r\n    public render1() {\r\n        \r\n        return <div className=\"inner2-right col col-3\">\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n};\r\n\r\nexport default Inner2CRight;","import * as React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nexport interface IInnerSingleProps {\r\n    children: React.ReactChild\r\n};\r\n\r\nexport class InnerSingle extends React.Component<IInnerSingleProps, any>{\r\n    constructor(props: IInnerSingleProps){\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        let ctrl = (\r\n        <>\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12} md={12}>\r\n                        {this.props.children}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n        );\r\n\r\n        return ctrl;\r\n    }\r\n};\r\n\r\nexport default InnerSingle;","import * as React from 'react';\r\n\r\nexport interface IThumbProps {\r\n\r\n};\r\n\r\nexport interface IThumbState {\r\n\r\n};\r\n\r\nexport class Thumb extends React.Component<IThumbProps, IThumbState> {\r\n    constructor(props: IThumbProps) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        return null;\r\n    };\r\n};\r\n\r\nexport default Thumb;","\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { EControlType } from '../../models/page/diverse';\r\nimport { IControlValue } from '../../models/page/interfaces';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts } from \"../../utils/messages\";\r\nimport LControl from './control';\r\n\r\n\r\n\r\nexport interface ILTimeProps {\r\n    value?: string;\r\n    onChange?: any;\r\n    id: string;\r\n    name?: string;\r\n};\r\n\r\nexport interface ILTimeState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class LTime extends React.Component<ILTimeProps, ILTimeState> {\r\n    private value: string = ''\r\n    private hh: string = '';\r\n    private min: string = '';\r\n   \r\n    private valueControl: IControlValue = { id: '', name: '', type: EControlType.undefined };\r\n\r\n    constructor(props: ILTimeProps) {\r\n        super(props);\r\n          let test = this.props.value? this.props.value.split(\":\") : [];\r\n        this.hh = this.props.value? test[0] : '';\r\n        this.min = this.props.value? test[1] : '';\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n        \r\n        this.state = {\r\n            changed: false,\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: ILTimeProps) {\r\n        let test = next.value? next.value.split(\":\") : [];\r\n        this.hh = next.value? test[0] : '';\r\n        this.min = next.value? test[1] : '';\r\n       \r\n        this.setState({ changed: true});\r\n    };\r\n\r\n    public render() {\r\n        return this.renderControl(this.value);\r\n    };\r\n\r\n    private renderControl(value: string): JSX.Element {\r\n       \r\n        let ctrl =\r\n            (\r\n                <Container className={\"oe-control\"}>\r\n                    <>\r\n                        <Row>\r\n                            {/* <Col xs={12} md={12} className=\"np\">\r\n                                    <page.LControl type={EControlType.text} title={MainTexts.telCallback}\r\n                                        value={del.callbackTime}\r\n                                        onChange={this.props.onChange} name=\"delivery.callbackTime\" id=\"delivery-callbackTime\"\r\n                                        label='z.b. gegen 9:00' />\r\n                                </Col> */}\r\n                            <Col xs={6} md={6}>\r\n                                <LControl\r\n                                    title={MainTexts.telCallback}\r\n                                    type={EControlType.dropdown}\r\n                                    value={this.hh}\r\n                                    onChange={(e)=>{this.hh = e.value ;this.changeValue()}}\r\n                                    name={\"delivery.callbackTimeSplitted.hour\"}\r\n                                    isChild={true}\r\n                                    id={\"delivery-callback-h\"}\r\n                                    options={Global.getHours()} />\r\n                            </Col>\r\n                            <Col xs={6} md={6}>\r\n                                <LControl\r\n                                    type={EControlType.dropdown}\r\n                                    value={this.min}\r\n                                    onChange={(e)=>{this.min = e.value ;this.changeValue()}}\r\n                                    name={\"delivery.callbackTimeSplitted.minutes\"}\r\n                                    id={\"delivery-callback-m\"}\r\n                                    isChild={true}\r\n                                    title={''}\r\n                                    options={Global.getMinutes()} />\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                </Container >\r\n            );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public getValue() {\r\n        return {\r\n            type: EControlType.time,\r\n            name: this.props.id ?  this.props.id : '',\r\n            id: this.props.id ?  this.props.id : '',\r\n            value: this.hh + ':' + this.min            \r\n        };        \r\n    };\r\n\r\n    private changeValue() {\r\n        let val = this.getValue();\r\n        this.props.onChange(val);\r\n    };\r\n\r\n};\r\n\r\nexport default LTime;","import * as React from 'react';\r\nimport * as m from '../../models/index';\r\n\r\nexport interface LTimerProps {\r\n    count:number;\r\n    step?:number;\r\n    stepCallback?: any;\r\n    tickCallback?: any;\r\n    completed?:any;\r\n    apiModel?: m.ApiModel; \r\n    showUI: boolean;\r\n    autoRestart?: boolean;\r\n};\r\n\r\nexport interface LTimerState {\r\n    count: number;\r\n};\r\n\r\nclass LTimer extends React.Component<LTimerProps, LTimerState> {\r\n    private timer: any;\r\n\r\n    constructor (props:LTimerProps) {\r\n      super(props);\r\n\r\n      this.state = {count: this.props.count};\r\n\r\n      this.startTimer();\r\n    }\r\n\r\n    componentWillUnmount () {\r\n      clearInterval(this.timer);\r\n    };\r\n\r\n    tick () {\r\n      if(this.state.count <= 0) {\r\n        if(this.props.completed) {\r\n            this.stopTimer();\r\n            if(this.props.completed) {\r\n              this.props.completed();\r\n            }\r\n        };\r\n\r\n        return;\r\n      } else {     \r\n        if(this.props.tickCallback) {\r\n          this.props.tickCallback();\r\n        }\r\n        if(this.props.step) {\r\n          if(this.state.count % this.props.step == 0) {\r\n            if(this.props.stepCallback) {\r\n              this.props.stepCallback(this.state.count);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      let cnt = this.state.count - 1;\r\n      if(this.props.autoRestart && this.state.count<=1) {\r\n          cnt = this.props.count;\r\n      };\r\n\r\n      this.setState({count: cnt});\r\n    };\r\n\r\n    startTimer () {\r\n      clearInterval(this.timer)\r\n      this.timer = setInterval(this.tick.bind(this), 1500)\r\n    };\r\n\r\n    stopTimer () {\r\n      clearInterval(this.timer)\r\n    }\r\n\r\n    render () {\r\n      if(this.props.showUI) {\r\n        return (\r\n          <div className='timer'>\r\n              <div className=\"bg\"/>\r\n              <div className=\"inner\">{this.state.count}</div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return <div/>\r\n      }\r\n    }\r\n  };\r\n\r\nexport default LTimer;","import * as React from 'react';\r\nimport * as page from '../../components/page/index';\r\nimport { IApiResponse } from '../../interfaces';\r\nimport { IAppSettings } from '../../interfaces/app/IAppSettings';\r\nimport { ELButtonType } from '../../models/page/diverse';\r\nimport * as s from '../../screens/insex';\r\nimport Api from '../../utils/api';\r\nimport { Roles, StorageKeys, Themes } from '../../utils/Defaults';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport EasyRouter from '../../utils/router';\r\nimport StorageHelper from '../../utils/storage';\r\nimport ToolSearchExisting from '../tools/searchExisting';\r\nimport LButton from './button';\r\n\r\ninterface IUserPannelState {\r\n    expanded: boolean;\r\n    userOpen: boolean;\r\n    changed: boolean;\r\n};\r\n\r\ninterface IUserPannelProps {\r\n    parent: s.MainScreen;\r\n};\r\n\r\ninterface ISessionTrack {\r\n    date: Date;\r\n    lifetime: number;\r\n    min: number;\r\n};\r\n\r\nexport class UserPannel extends React.Component<IUserPannelProps, IUserPannelState> {\r\n    private appSettings: IAppSettings;\r\n    public static containerId: string = 'userPanel';\r\n    private session: ISessionTrack;\r\n    private interval: any;\r\n\r\n    constructor(props: IUserPannelProps) {\r\n        super(props);\r\n\r\n        this._onExpand = this._onExpand.bind(this);\r\n        this._logout = this._logout.bind(this);\r\n        this._onExpandUser = this._onExpandUser.bind(this);\r\n        this._onSwitchTheme = this._onSwitchTheme.bind(this);\r\n        this.onLogout = this.onLogout.bind(this);\r\n        this.trackSession = this.trackSession.bind(this);\r\n\r\n        this.appSettings = StorageHelper.getAppSettings();\r\n\r\n        Global.trackSession = this.trackSession;\r\n\r\n        this.interval = setInterval(() => {\r\n            this.session.min--;\r\n            if (this.session.min <= 0) {\r\n                clearInterval(this.interval);\r\n                Global.easyApp.expiredSessionVisibility(true);\r\n            };\r\n\r\n            this.setState({ changed: true });\r\n        }, 60000);\r\n\r\n        this.session = {\r\n            date: new Date(),\r\n            lifetime: 60,\r\n            min: 60\r\n        };\r\n\r\n        this.state = {\r\n            expanded: this.appSettings.expanded,\r\n            userOpen: false,\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let user = StorageHelper.getUser();\r\n        let cfg = Global.getConfiguration();\r\n        let styles = {};\r\n\r\n        if (user) {\r\n            styles = {\r\n                backgroundImage: 'url(' + cfg.apiUrl + user.pictureUrl + ')'\r\n            };\r\n        };\r\n\r\n        let cssu: string = 'user-container';\r\n        if (this.state.userOpen) {\r\n            cssu += ' open';\r\n        };\r\n\r\n        let css: string = 'sidepannel';\r\n        if (this.state.expanded) {\r\n            css += ' open';\r\n        }\r\n\r\n        let theme = localStorage.getItem(StorageKeys.keyTheme);\r\n\r\n        let ctrl = (\r\n            <div id={UserPannel.containerId}>\r\n                <div className={css}>\r\n                    <div className=\"tool-container\">\r\n                        <div className=\"action open\">\r\n                            <div className=\"icon arrow-left\" onClick={this._onExpand} />\r\n                        </div>\r\n                        <div className=\"tool tool-name\">\r\n                            <div className=\"personal\">{user ? user.firstname + ' ' + user.surname : ''}</div>\r\n                            <div className=\"company\">{user ? user.voName : ''}</div>\r\n                        </div>\r\n\r\n                        <div className={'tool '}>\r\n                            <LButton cssText='np' text={MainTexts.logout} type={ELButtonType.buttonWithIconRight} onClick={this.onLogout} />\r\n                        </div>\r\n\r\n                        <div className=\"spacer\"></div>\r\n\r\n                        <ToolSearchExisting parent={this.props.parent} />\r\n                        {/* <ToolCheckAvailability />\r\n                        <ToolChecPortation /> */}\r\n                    </div>\r\n\r\n                    <div className={'tool ' + (this.state.expanded ? 'dn' : 'open')}>\r\n                        <LButton cssText='np' text={MainTexts.logout} type={ELButtonType.buttonWithIconRight} onClick={this.onLogout} />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"inner\">\r\n                    </div>\r\n                    <div className=\"navi-container\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"pepper\"\r\n                                    text={\"Spice\"}\r\n                                    onClick={ ()=>{window.open('https://apps.unitymedia.de/SpiceExternal')}} />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"iconHA\"\r\n                                    text={\"HA portal\"}\r\n                                    onClick={()=>{ window.open('https://secure.kabeldeutschland.de/auth/realms/bsso/protocol/openid-connect/auth?response_type=code&redirect_uri=https%3A%2F%2Fsecure.kabeldeutschland.de%2Fhandel%2Foidc%2Fauthenticate&client_id=handel&state=e7fec05684cfd32e7eb72bfc93862b9d&scope=openid+profile')}} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"sep\"></div>\r\n\r\n                        {!Global.isDelaer(false) ? <></> :\r\n                            <>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        {/* <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"time\" text=\"IMEI Nachmel.\"/> */}\r\n                                        <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"doc\" text={MainTexts.drafts}\r\n                                            onClick={() => { EasyRouter.route({ title: MainTexts.drafts, url: '/am/drafts' }); }} />\r\n\r\n                                        {/* <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"scan\" text=\"Ausweisscanner\"/> */}\r\n                                        {/* <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"list\" text=\"Port. Listenabfrage\"/> */}\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"doc\" text={MainTexts.documentScanner}\r\n                                            onClick={() => { EasyRouter.route({ title: MainTexts.documentScanner, url: '/am/idscanner' }); }} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"date\" text={MainTexts.contractManager}\r\n                                            onClick={() => { EasyRouter.route({ title: MainTexts.contractManager, url: '/am/contractmanager' }); }} />\r\n                                    </div>\r\n                                    {\r\n                                        Global.inAnyRole([Roles.E3_User, Roles.XTND_ShopManager]) ? <div className=\"col-md-6\">\r\n                                            <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"doc\" text={MainTexts.mnpStatusLinkText}\r\n                                                onClick={() => { EasyRouter.route({ title: MainTexts.contractManager, url: '/am/mnp/status' }); }} />\r\n                                        </div> : <></>\r\n                                    }\r\n                                    {\r\n                                        Global.inAnyRole([Roles.E3_User, Roles.XTND_ShopManager]) ? <div className=\"col-md-6\">\r\n                                            <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"doc\" text={MainTexts.mnpPortingStatusLinkText}\r\n                                                onClick={() => { EasyRouter.route({ title: MainTexts.contractManager, url: '/am/mnp/portingstatus' }); }} />\r\n                                        </div> : <></>\r\n                                    }\r\n\r\n                                    {\r\n                                        Global.inAnyRole([Roles.XTND_Produktbestellung, Roles.XTND_ShopManager]) ? <div className=\"col-md-6\">\r\n                                            <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"doc\" text={MainTexts.orderProductLink}\r\n                                                onClick={() => { EasyRouter.route({ title: MainTexts.contractManager, url: '/apps/orderproducts' }); }} />\r\n                                        </div> : <></>\r\n                                    }\r\n                                    {\r\n                                        user && user.accountLevel == 1 && Global.inAnyRole([Roles.Stornofreigabe, Roles.XTND_ShopManager]) ? <div className=\"col-md-6\">\r\n                                            <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"doc\" text={MainTexts.level1Cancellation}\r\n                                                onClick={() => { EasyRouter.route({ title: MainTexts.cancellations, url: '/am/cancellation' }); }} />\r\n                                        </div> : <></>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        Global.inAnyRole([Roles.XTND_Nutzerverwaltung, Roles.XTND_ShopManager]) ? <div className=\"col-md-6\">\r\n                                            <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"people\"\r\n                                                text={MainTexts.administration}\r\n                                                onClick={() => { EasyRouter.route({ title: MainTexts.administration, url: '/am/administration' }); }} />  </div>\r\n                                            : null\r\n                                    }\r\n\r\n                                    <div className=\"col-md-6\">\r\n                                        <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"doc\"\r\n                                            text={MainTexts.imeiMenuItem}\r\n                                            onClick={() => { EasyRouter.route({ title: MainTexts.imeiMenuItem, url: '/am/imei' }); }} />  </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n\r\n                        <div className=\"sep\"></div>\r\n                        <div className=\"row\">\r\n                            {/* <div className=\"col-md-6\">\r\n                                <page.LButton type={ELButtonType.linkPanel} icon=\"time\" text=\"FAQ\" />\r\n                                <page.LButton type={ELButtonType.linkPanel} icon=\"doc\" text=\"News\" />\r\n                                <page.LButton type={ELButtonType.linkPanel} icon=\"scan\"\r\n                                    text=\"Downloads\" />\r\n                            </div> */}\r\n                            <div className=\"col-md-12\">\r\n                                <page.LButton type={ELButtonType.linkPanel} icon=\"date\" text=\"AGB\"\r\n                                    onClick={() => { window.open(\"https://www.vodafone.de/agb.html\", '_blank'); }} />\r\n                                <page.LButton type={ELButtonType.linkPanel} icon=\"people\" text=\"Datenschutz\"\r\n                                    onClick={() => { window.open(\"https://www.vodafone.de/unternehmen/soziale-verantwortung/datenschutz-privatsphaere.html\", '_blank'); }} />\r\n                                <page.LButton type={ELButtonType.linkPanel} icon=\"orders\"\r\n                                    text=\"Impressum\"\r\n                                    onClick={() => { window.open(\"https://www.vodafone.de/impressum.html\", '_blank'); }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n\r\n                <div className={cssu}>\r\n                    <div className=\"close\">\r\n                        <div className=\"icon close\" onClick={this._onExpandUser} />\r\n                    </div>\r\n                    <div className=\"inside\">\r\n                        <div className=\"user\" style={styles} onClick={this._onExpandUser} />\r\n                        <div className=\"lifetime\">\r\n                            min.\r\n                            <br />\r\n                            <span className=\"min\">{this.session.min > 10 ? this.session.min : '0' + this.session.min}</span>\r\n                        </div>\r\n                        <div className=\"tools\">\r\n                            <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"profile\" text=\"Profil bearbeiten\" onClick={this._onProfileEditClick} />\r\n                            <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"lock\" text=\"Passwort ändern\" onClick={this._onPasswordEditClick} />\r\n                            {\r\n                                theme === Themes.light ?\r\n                                    <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"moon\" text=\"Dunkles Farbschema\" onClick={this._onSwitchTheme} />\r\n                                    :\r\n                                    <page.LButton type={ELButtonType.linkWithIconLeft} icon=\"moon\" text=\"Standard Farbschema\" onClick={this._onSwitchTheme} />\r\n                            }\r\n\r\n                        </div>\r\n                        {/* <div className=\"sep\" />\r\n                        <div className=\"tools\">\r\n                            <page.LButton type={ELButtonType.linkWithIconLeft} css=\"action2\" icon=\"logout\" text={MainTexts.logout} onClick={this._logout} />\r\n                        </div> */}\r\n                    </div>\r\n\r\n                    <page.LClear />\r\n\r\n                </div>\r\n\r\n            </div >\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private trackSession(api: IApiResponse) {\r\n        if (api.lifetime > 0) {\r\n            this.session.lifetime = this.session.min = api.lifetime;\r\n            this.session.date = new Date();\r\n\r\n            this.setState({ changed: true });\r\n        };\r\n    };\r\n\r\n    private onLogout() {\r\n        Global.easyApp.visibilityLogout(true);\r\n    };\r\n\r\n\r\n\r\n    private _onProfileEditClick() {\r\n        EasyRouter.route({ url: '/user/profile', title: MainTexts.editProfile });\r\n        //window.location.href = '/user/profile';\r\n    };\r\n\r\n    private _onPasswordEditClick() {\r\n        EasyRouter.route({ url: '/user/password', title: MainTexts.changePassword });\r\n    };\r\n\r\n    private _onSwitchTheme() {\r\n        let theme = localStorage.getItem(StorageKeys.keyTheme);\r\n        if (theme === Themes.light) {\r\n            theme = Themes.dark;\r\n        } else {\r\n            theme = Themes.light;\r\n        }\r\n\r\n        localStorage.setItem(StorageKeys.keyTheme, theme);\r\n\r\n        window.location.href = '/';\r\n    };\r\n\r\n    private _onExpand() {\r\n        this.appSettings.expanded = !this.state.expanded;\r\n        StorageHelper.set(StorageKeys.keyApp, this.appSettings);\r\n        Global.easyApp.expand(this.appSettings.expanded);\r\n\r\n        this.setState({ expanded: this.appSettings.expanded });\r\n    };\r\n\r\n    private _onExpandUser() {\r\n        \r\n        if (!Global.easyApp.checkDefCon()) {\r\n            return;\r\n        };\r\n\r\n        this.setState({ userOpen: !this.state.userOpen });\r\n    };\r\n\r\n    private _logout() {\r\n        Api.logout();\r\n    };\r\n};\r\n\r\nexport default UserPannel;","export { default as Block } from \"./block\";\r\nexport { default as BlockInfo } from './blockInfo';\r\nexport { default as LButton } from \"./button\";\r\nexport { default as LClear } from \"./clear\";\r\nexport { default as LControl } from \"./control\";\r\nexport { default as LDate } from './date';\r\nexport { default as ErrorBlock } from './errorBlock';\r\nexport { default as Filter } from './filter';\r\n// export {EControlType} from './EControlType';\r\n// export {IControlValue} from './IControlValue';\r\nexport { default as Footer } from \"./footer\";\r\nexport { default as Head } from \"./head\";\r\n// export {default as IInnerProps} from \"./IInnerProps\";\r\nexport { default as Inner1C } from \"./inner1\";\r\nexport { default as Inner2C } from \"./inner2\";\r\nexport { default as Inner2Head } from \"./inner2head\";\r\nexport { default as Inner2CLeft } from \"./inner2left\";\r\nexport { default as Inner2CRight } from \"./inner2right\";\r\nexport { default as InnerSingle } from \"./innerSingle\";\r\nexport { default as LLabel } from './label';\r\nexport { default as Table } from './table';\r\nexport { default as Thumb } from './thumb';\r\nexport { default as LTime } from './time';\r\nexport { default as LTimer } from './timer';\r\nexport { default as LTimerInvisible } from './timerIvisible';\r\nexport { default as UserPannel } from './userpannel';\r\n","module.exports = __webpack_public_path__ + \"static/media/info-circle.75feda7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/idcard.ba0736a1.jpg\";","import * as linq from 'linq';\r\n\r\nexport class TreeItem {\r\n    id: string = '';\r\n    prio: number = 0;\r\n    children: TreeItem[] = [];\r\n\r\n    constructor(id: string | undefined) {\r\n        this.id = id || 'root';\r\n        this.children = [];\r\n    };\r\n\r\n    static createInstance(id: string, children: TreeItem[], prio: number = 0) {\r\n        let i = new TreeItem(id);\r\n        i.children = children;\r\n        i.prio = prio || 0;\r\n        return i;\r\n    }\r\n\r\n    static ensure(source:TreeItem) : TreeItem{\r\n        let aw =  Object.assign(new TreeItem(source.id), source);\r\n        aw.children = [];\r\n        source.children.map((i)=>{\r\n            aw.children.push(TreeItem.ensure(i));\r\n        });\r\n\r\n        return aw;\r\n    };\r\n\r\n    getChildIndex(id: string) : number {\r\n        for(let i:number = 0;i < this.children.length; i++) {\r\n            if(this.children[i].id == id) {\r\n                return i;\r\n            };\r\n        };\r\n\r\n        return -1;\r\n    };\r\n\r\n    //**will remove all children */\r\n    reset() {\r\n        this.children = [];\r\n    };\r\n\r\n    //**will remove all children */\r\n    resetChildren() {\r\n        this.children.map((i)=>{\r\n            i.reset();\r\n        });\r\n        this.children = [];\r\n    };\r\n\r\n    find(id: string) : TreeItem | undefined{\r\n        return linq.from<TreeItem>(this.children).firstOrDefault(x=>x.id == id);\r\n    };\r\n\r\n    static findChild(parent: TreeItem, id: string) {\r\n        \r\n        let idx = parent.getChildrenIds().indexOf(id);\r\n        \r\n        if(idx>=0) {\r\n            return parent.children[idx];\r\n            \r\n        } else if (!parent.children || parent.children.length == 0) {\r\n            \r\n            return undefined;\r\n        } else {\r\n            for(let i: number = 0; i < parent.children.length; i++) {\r\n                \r\n                let el = TreeItem.findChild(parent.children[i], id);\r\n\r\n                if(el) {\r\n                    \r\n                    return el;\r\n                }\r\n            };\r\n\r\n            return undefined;\r\n        };\r\n    };\r\n\r\n    add(id: string) {\r\n        let tr = new TreeItem(id);\r\n        this.children.push(tr); \r\n        return tr;\r\n    };\r\n\r\n    hasChild(id: string) : boolean {\r\n        if(this.children) {\r\n            return this.getChildrenIds().indexOf(id) >= 0;\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    addChildren(items: TreeItem[]) {\r\n        items.map((i)=>{\r\n            this.children.push(i);\r\n        });\r\n    };\r\n\r\n    remove(id: string) {\r\n        for(let i=0; i < this.children.length; i++) {\r\n            if(this.children[i].id == id) {\r\n                if(i == 0) {\r\n                    this.children.shift();\r\n                } else if (i == this.children.length - 1) {\r\n                    this.children.pop();\r\n                } else {\r\n                    this.children.splice(i, 1);\r\n                }\r\n                break;\r\n            }\r\n        };\r\n    };\r\n\r\n    addOrRemove(id: string) {\r\n        let el = this.find(id);\r\n        if(el) {\r\n            this.remove(id);\r\n        } else {\r\n            this.add(id);\r\n        }\r\n    };\r\n\r\n    findPath(path: string[]) : TreeItem | undefined{\r\n        let e:TreeItem | undefined = this;\r\n        for(let i = 0; i < path.length; i++ ){\r\n            e = e!.find(path[i]);\r\n            if(e) {\r\n                if(i == path.length - 1) {\r\n                    return e;\r\n                }\r\n            } \r\n        };\r\n\r\n        return undefined;\r\n    };\r\n\r\n    static addRemovePath(item: TreeItem, path: string[]) {\r\n        if(!item.find) {\r\n            item = TreeItem.ensure(item); \r\n        }\r\n\r\n        let el = item.find(path[0]);\r\n\r\n        if(path.length > 1) {\r\n            path.shift();\r\n            TreeItem.addRemovePath(el!, path);\r\n        } else {\r\n            item.addOrRemove(path[0]);\r\n        };\r\n    };\r\n\r\n    static addRemoveTo(id: string, item: TreeItem, path: string[]) {\r\n        if(!item.find) {\r\n            item = TreeItem.ensure(item); \r\n        }\r\n\r\n        let el = item.find(id);\r\n\r\n        if(el) {\r\n            TreeItem.addRemovePath(el, path);\r\n        }\r\n    };\r\n\r\n    getChildrenIds() : string[] {\r\n        return linq.from<TreeItem>(this.children).select(x=>x.id).toArray();\r\n    };\r\n\r\n    getChildrenIdSub() : string[] {\r\n        let res: string[] = [];\r\n        this.children.map((i)=>{\r\n            res = res.concat(i.getChildrenIds());\r\n        });\r\n\r\n        //console.log('subs', res);\r\n\r\n        return res;\r\n    };\r\n\r\n    //** will deliver the tree as array */\r\n    toArray(withPath: boolean, id: string | undefined) : string[] {\r\n        let sa:string[] = [];\r\n\r\n        if(id) {\r\n            let el = linq.from<TreeItem>(this.children).where(x=>x.id == id).firstOrDefault();\r\n\r\n            if(el) {\r\n                this.toArrayInner(sa, withPath, el.id, el.children);\r\n            }\r\n        }\r\n        else {\r\n            this.toArrayInner(sa, withPath, '', undefined);\r\n        }\r\n\r\n        return sa;\r\n    };\r\n\r\n    private toArrayInner(target: string[], withPath: boolean, path: string, children: TreeItem[] | undefined) {\r\n        let el: TreeItem[] = children ? children : this.children;\r\n        el.map((i)=>{\r\n            let s: string =  withPath && path ? path + '/' + i.id : i.id;\r\n            \r\n            target.push(s);\r\n\r\n            if(i.children && i.children.length >0) {\r\n                this.toArrayInner(target, withPath, s, i.children);\r\n            };\r\n        });\r\n    };    \r\n};\r\n\r\nexport class ProductTree extends TreeItem {\r\n    public cat: string = '';\r\n    public brand: string = '';\r\n    public idx: number = -1;\r\n    familyId: number = -1;\r\n    public children: ProductTree[] = [];\r\n\r\n    constructor(id: string | undefined, cat: string) {\r\n        super(id);\r\n        this.cat = cat;\r\n    };\r\n\r\n    public getCats() : string[] {\r\n        return linq.from<ProductTree>(this.children).select(x=>x.cat).distinct().toArray();\r\n    };\r\n\r\n    addChildren(ch: ProductTree[]) {\r\n        if(!this.children) { this.children = [] };\r\n\r\n        ch.map((i)=>{\r\n            this.children.push(i);\r\n        });\r\n    };\r\n\r\n    public static FromTree(ti: TreeItem) {\r\n        let r = ti as ProductTree;\r\n\r\n        return r;\r\n    };\r\n\r\n    find(id: string) : ProductTree | undefined{\r\n        return linq.from<ProductTree>(this.children).firstOrDefault(x=>x.id == id);\r\n    };\r\n};","module.exports = __webpack_public_path__ + \"static/media/trafficLight_noVVL.b6f72ecf.svg\";","module.exports = __webpack_public_path__ + \"static/media/trafficLight_VVL.76a4ca2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/trafficLight_VVLTW.cd23e5cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/trafficLight_vVVL.13aef20a.svg\";","import * as React from 'react';\r\nimport * as linq from 'linq';\r\nimport IBrand from '../../models/ordering/brand';\r\nimport IActivation from '../../models/ordering/activation';\r\nimport IService from '../../models/ordering/service';\r\nimport { IValidationOption } from '../../utils/validation/validationOption';\r\nimport TariffThumb from '../ordering/tariffThumb';\r\nimport Global from '../../utils/Global';\r\nimport StorageHelper from '../../utils/storage';\r\nimport { LClear } from '../page';\r\n\r\nexport enum EOptionGroupRenderType {\r\n    undefined = 0,\r\n    oneMandatory = 1\r\n};\r\n\r\nexport interface IOptionGroupProps {\r\n    containerId: string;\r\n    services: IService[];\r\n    validation?: IValidationOption[];\r\n    brand: IBrand;\r\n    act: IActivation;\r\n    title: string;\r\n    hint?: string;\r\n    selected: string;\r\n    type: EOptionGroupRenderType;\r\n};\r\n\r\nexport interface IOptionGroupState {\r\n    selected: string;\r\n    invalid: boolean;\r\n};\r\n\r\nexport class OptionGroup extends React.Component<IOptionGroupProps, IOptionGroupState> {\r\n    public static containerClass = 'optiongroup';\r\n    private ids:string[] = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSelect = this.onSelect.bind(this);\r\n\r\n        this.ids = linq.from<IService>(this.props.services).select(x=>x.id).toArray();\r\n\r\n        this.state = {\r\n            selected: this.props.selected, invalid: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IOptionGroupProps){\r\n        this.setState({selected: next.selected});\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = ( \r\n            <div className={OptionGroup.containerClass} id={this.props.containerId}>\r\n                    <div className=\"subtitle\">\r\n                        {this.props.title}\r\n                        {\r\n                            this.props.hint ? <span className={'hint' + (this.state.invalid ? ' error': '')}> {this.props.hint}</span> : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"\">\r\n                        {\r\n                            this.props.services.map((i, idx)=>(\r\n                                (<TariffThumb\r\n                                    key={idx}\r\n                                    id={i.id} \r\n                                    text={i.name}\r\n                                    tooltip={i.tooltip}\r\n                                    tooltipModel={i}\r\n                                    idx={idx}\r\n                                    brandKey={this.props.brand.id} \r\n                                    selected={i.id === this.state.selected} \r\n                                    styleBrand={false}\r\n                                    cssStyle={this.state.selected === i.id ? 'selected' : ''}\r\n                                    onClick={this.onSelect}/>)\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <LClear/>\r\n            </div>);\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public validate() : boolean {\r\n        let res : boolean = true;\r\n\r\n        if(this.props.type === EOptionGroupRenderType.oneMandatory) {\r\n            res = this.state.selected ? true : false;\r\n        };\r\n\r\n        this.setState({invalid: !res});\r\n\r\n        return res;\r\n    };\r\n\r\n    private onSelect(value: string) {\r\n        //remove all prev selected\r\n        let newSvc =  linq.from<string>(this.props.act.services)\r\n            .where(x=> this.ids.indexOf(x) < 0 )\r\n            .toArray();\r\n\r\n        newSvc.push(value);\r\n\r\n        this.props.act.services = newSvc;\r\n\r\n        StorageHelper.updateActivation(this.props.act);\r\n\r\n        this.setState({selected:value});\r\n    };\r\n};\r\n\r\nexport default OptionGroup;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport LClear from '../../../components/page/clear';\r\nimport { EApiResponseStatus, IApiResponse } from '../../../interfaces';\r\nimport { IActivation, OrderDataWrapper } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { EOrderProcessView } from '../../../models/ordering/order';\r\nimport { ELButtonType, ERequestType } from '../../../models/page/diverse';\r\nimport { CombiWrapper } from '../../../models/support/ISupportWrapper';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport { ValidationWrapper } from '../../../utils';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { MainTexts } from '../../../utils/messages';\r\nimport EasyRouter from '../../../utils/router';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport PopupBody from '../../dialogs/body';\r\nimport Popup, { EPopupType } from '../../dialogs/popup';\r\nimport * as page from '../../page/index';\r\n\r\nexport interface IActivationActionsProps {\r\n    parent: ProcessNewScreen;\r\n    progress: EOrderProcessView;\r\n    onNext?: any;\r\n    onPrev?: any;\r\n};\r\n\r\nexport interface IActivationActionsState {\r\n    imei: string,\r\n    areYouSureVisibility: boolean;\r\n};\r\n\r\nexport class ActivationActions extends React.Component<IActivationActionsProps, IActivationActionsState> {\r\n    private processPopupState: EPopupType = EPopupType.custom;\r\n    constructor(props: IActivationActionsProps) {\r\n        super(props);\r\n        this._onDismissProcessPopup = this._onDismissProcessPopup.bind(this);\r\n        this.onYesClicked = this.onYesClicked.bind(this);\r\n\r\n        this.state = {\r\n            imei: '',\r\n            areYouSureVisibility: false\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: '',\r\n            transparent: true\r\n        };\r\n\r\n        let ctrl = (\r\n            <>\r\n                <Popup\r\n                    type={this.processPopupState}\r\n                    visible={this.state.areYouSureVisibility}\r\n                    closable={true}\r\n                    id=\"areYouSure\"\r\n                    title={\"Warnung\"}\r\n                    height={200}\r\n                    onDismiss={this._onDismissProcessPopup}>\r\n                    <PopupBody>\r\n                        <h5>Sie gelangen jetzt zurück zum Dashboard. Dadurch werden die von Ihnen eingegebenen Daten gelöscht.</h5>\r\n                        <div className=\"spacer clear\"></div>\r\n                        <div className=\"spacer clear\"></div>\r\n                        <div className=\"spacer clear\"></div>\r\n                        <page.LButton\r\n                            text={\"Ja\"}\r\n                            onClick={this.onYesClicked}\r\n                            type={ELButtonType.buttonWithIconRight}\r\n                        />\r\n\r\n                        <page.LButton\r\n                            text={\"Nein\"}\r\n                            onClick={this._onDismissProcessPopup}\r\n                            type={ELButtonType.buttonWithIconRight}\r\n                        />\r\n                        <></>\r\n                    </PopupBody>\r\n                    <></>\r\n                </Popup>\r\n                <BaseBlock config={cfg}>\r\n                    <Container className=\"container-action\">\r\n                        {this.renderActions()}\r\n                    </Container>\r\n                    <LClear />\r\n                </BaseBlock>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private onYesClicked() {\r\n        StorageHelper.removeOrder(this.props.parent.data.id, () => {\r\n            EasyRouter.route({ url: '/', title: Global.getConfiguration().appTitle });\r\n        });\r\n    }\r\n\r\n\r\n    _onDismissProcessPopup = () => {\r\n        this.setState({ areYouSureVisibility: false });\r\n    }\r\n\r\n    private renderActions(): JSX.Element {\r\n        if (this.props.progress == EOrderProcessView.customer) {\r\n            return this.renderCustomerActions();\r\n        } else if (this.props.progress == EOrderProcessView.done) {\r\n            return this.renderCustomerPreview();\r\n        } else if (this.props.progress == EOrderProcessView.tariff) {\r\n            return this.renderCustomerTariff();\r\n        }\r\n\r\n        return <></>;\r\n    };\r\n\r\n    private renderCustomerPreview(): JSX.Element {\r\n        let ctrl = (\r\n            <Row>\r\n                <Col xs={4} md={4}>\r\n                    <page.LButton text={MainTexts.back}\r\n                        onClick={this.onBack}\r\n                        type={ELButtonType.linkSimple}\r\n                        css=\"action3\"\r\n                        icon=\"chevron\" />\r\n                </Col>\r\n                <Col xs={8} md={8}>\r\n                    <page.LButton text={MainTexts.toDashboard}\r\n                        css=\"fr\"\r\n                        onClick={() => {\r\n                            this.setState({ areYouSureVisibility: true })\r\n                            // StorageHelper.removeOrder(this.props.parent.data.id, ()=>{\r\n                            //     EasyRouter.route({url: '/', title: Global.getConfiguration().appTitle});\r\n                            // });\r\n                        }}\r\n                        type={ELButtonType.buttonWithIconRight}\r\n                        icon=\"\" />\r\n                </Col>\r\n            </Row>\r\n        );\r\n\r\n        return ctrl;\r\n    }\r\n\r\n    private renderCustomerActions(): JSX.Element {\r\n        let ctrl = (\r\n            <Row>\r\n                <Col xs={4} md={4}>\r\n                    <page.LButton text=\"ZURÜCK\"\r\n                        onClick={this.onBack}\r\n                        type={ELButtonType.linkSimple}\r\n                        css=\"action3\"\r\n                        icon=\"chevron\" />\r\n                </Col>\r\n                <Col xs={8} md={8} className=\"toright\">\r\n                    <page.LButton text=\"WEITER\"\r\n                        onClick={this.onNext}\r\n                        css=\"fr\"\r\n                        type={ELButtonType.buttonWithIconRight}\r\n                        icon=\"arrow-right\" />\r\n                </Col>\r\n            </Row>\r\n        );\r\n\r\n        return ctrl;\r\n    }\r\n\r\n    private renderCustomerTariff(): JSX.Element {\r\n        let ctrl = (\r\n            <Row>\r\n                <Col xs={4} md={4}>\r\n                    {/* <page.LButton text=\"FERTIG\" \r\n                        onClick={this.onDone} \r\n                        type={ELButtonType.linkSimple} \r\n                        css=\"action3\"\r\n                        icon=\"chevron\"/> */}\r\n                </Col>\r\n                <Col xs={8} md={8} className=\"toright\">\r\n                    <page.LButton text=\"WEITER ZU DEN KUNDENDATEN\"\r\n                        onClick={()=>{\r\n                            this.onNext();\r\n                        }}\r\n                        css=\"fr\"\r\n                        type={ELButtonType.buttonWithIconRight}\r\n                        icon=\"arrow-right\" />\r\n                </Col>\r\n            </Row>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private onBack = () => {\r\n        this.props.parent.dataWrapper.resetUnfinishedActivations();\r\n        if (this.props.progress == EOrderProcessView.done) {\r\n            this.props.parent.gotoView(EOrderProcessView.customer);\r\n        } else if (this.props.progress == EOrderProcessView.customer) {\r\n            this.props.parent.gotoView(EOrderProcessView.tariff);\r\n        }; \r\n    };\r\n\r\n    private onNext = () => {\r\n        if (!ValidationWrapper.validateFormular(this.props.parent.dataWrapper, true, 'container-main')) {\r\n            return;\r\n        };\r\n\r\n        let cw = CombiWrapper.GetInstance();\r\n\r\n        cw.validate(this.props.parent.dataWrapper, (dw : OrderDataWrapper, changed : boolean)=>{\r\n            //**if basket has unity we need to resync it with the backend */\r\n            if(dw.hasUnity()) {\r\n                let a:IActivation|undefined = dw.getActivationByBrand(BrandKeys.unity);\r\n                this.props.parent.syncOrder(a!, (res: IApiResponse) => {\r\n                    if (res.status == EApiResponseStatus.ok) {\r\n                        StorageHelper.updateAvailability(BrandKeys.unity, res.data.avl);\r\n                        this.onNextInternal();\r\n                    };\r\n                });\r\n            } else {\r\n                this.onNextInternal();\r\n            }\r\n        });            \r\n    };\r\n\r\n    private onNextInternal = () => {\r\n        if (this.props.onNext) {\r\n            this.props.onNext();\r\n            return;\r\n        }\r\n\r\n        if (this.props.progress == EOrderProcessView.tariff) {\r\n            //** if otelo in the batch validate the msisdn first */\r\n            if (this.props.parent.dataWrapper.hasOtelo()) {\r\n                this.props.parent.onCreateProcess(ERequestType.checkMsisdn);\r\n            } else {\r\n                this.props.parent.gotoView(EOrderProcessView.customer);\r\n            }\r\n        } else if (this.props.progress == EOrderProcessView.customer) {\r\n            this.props.parent.gotoView(EOrderProcessView.done);\r\n        };\r\n    };\r\n};\r\n\r\nexport default ActivationActions;","import * as React from 'react';\r\nimport * as linq from 'linq';\r\nimport IBrand from '../../models/ordering/brand';\r\nimport IActivation from '../../models/ordering/activation';\r\nimport IService from '../../models/ordering/service';\r\nimport OptionGroup, { EOptionGroupRenderType } from '../process/optionGroup';\r\nimport { OrderingTexts, MainTexts } from '../../utils/messages';\r\n\r\nexport enum ERenderType {\r\n    undefined = 0,\r\n    options = 1\r\n};\r\n\r\nexport interface ICableRendererProps {\r\n    type: ERenderType;\r\n    brand: IBrand;\r\n    act: IActivation;\r\n};\r\n\r\nexport class CableRenderer extends React.Component<ICableRendererProps, any> {\r\n    constructor(props) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        /*\r\n        switch(this.props.type) {\r\n            case ERenderType.options:\r\n                return this.renderOptions();\r\n        };\r\n        */\r\n\r\n        return <></>\r\n    };\r\n\r\n    public renderOptions() : JSX.Element {\r\n        if(this.props.act.productId.indexOf('kip')>=0){\r\n            let svc = linq.from<IService>(this.props.brand.services)\r\n                .where(x=>x.id.toLowerCase().indexOf('rufnummernneu')>=0)\r\n                .toArray();\r\n\r\n            let sel = linq.from<string | any>(this.props.act.services).where(x=>x.indexOf('rufnummernneu')>=0).firstOrDefault();\r\n\r\n            return <OptionGroup \r\n                containerId=\"telNumberPortation\"\r\n                services={svc} brand={this.props.brand} \r\n                act={this.props.act} \r\n                title={MainTexts.numberOptions}\r\n                selected={sel}\r\n                type={EOptionGroupRenderType.oneMandatory}\r\n                hint={' (' + MainTexts.optionsMandatory + ')'}/>\r\n        };\r\n\r\n        return <></>\r\n    };\r\n};\r\n\r\nexport default CableRenderer;","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport * as m from '../../../models/index';\r\nimport { ERequestStatus } from '../../../models/index';\r\nimport { AvailabilityProduct, AvailabilityWrapper, EAvailabilityResultStatus, EElementTypeUi, IAvailabilityBrand, IAvailabilityResultItem, IAvailabilityServiceSelection } from '../../../models/ordering/availability';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport { EActivationType } from '../../../models/ordering/order';\r\nimport IService from '../../../models/ordering/service';\r\nimport { IKeyText } from '../../../models/page/interfaces';\r\nimport { ProductTree, TreeItem } from '../../../models/support/tree';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport Api from '../../../utils/api';\r\nimport { BrandKeys, ConstantKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport GlobalJSX from '../../../utils/GlobalJSX';\r\nimport { MainTexts } from '../../../utils/messages';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport { EPopupType, IPopupConfig } from '../../dialogs/popup';\r\nimport { LButton } from '../../page';\r\nimport TariffThumb from '../tariffThumb';\r\nimport ActivationTariff from './activationTariff';\r\n\r\nexport interface IActivationOptionsProps {\r\n    parent: ProcessNewScreen;\r\n    tariff: ActivationTariff;\r\n    onChange: any;\r\n};\r\n\r\nexport interface IActivationOptionsState {\r\n    changed: boolean;\r\n    productId: string;\r\n    sub: string;\r\n    //inCheck?: boolean;\r\n};\r\n\r\nexport interface IActivationOption {\r\n    productId: string;\r\n    id: string;\r\n    path: string[];\r\n    level: number;\r\n    type?:string;\r\n    mandatory?: boolean;\r\n};\r\n\r\nexport class ActivationOptions extends React.Component<IActivationOptionsProps, IActivationOptionsState> {\r\n    public static componentId = 'activationOptions';\r\n    private act: m.IActivation;\r\n    private avSelection: AvailabilityWrapper;\r\n    private availability: m.Availability;\r\n    private brand: IBrand;\r\n    private current: IActivationOption;\r\n    private checkAvailability: m.ERequestStatus = m.ERequestStatus.undefined;\r\n    private checkResult: JSX.Element = <></>;\r\n    private selectionOk: boolean = false;\r\n\r\n    constructor(props: IActivationOptionsProps) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.check = this.check.bind(this);\r\n\r\n        this.act = this.props.parent.current ? this.props.parent.current : new m.IActivation(this.props.parent.selectedBrand);\r\n\r\n        this.avSelection = new AvailabilityWrapper(StorageHelper.getAvailability());\r\n\r\n        this.brand = StorageHelper.getBrand(BrandKeys.kabel);\r\n\r\n        this.availability = StorageHelper.getAvailability();\r\n\r\n        this.availability.prepareCableServices(0, []);\r\n\r\n        this.current = { id: '', path: [], level: 0, productId: '' };\r\n\r\n        this.init(undefined);\r\n\r\n        //this.getvailabilityCheckMessage(this.act.cart);\r\n\r\n        this.state = {\r\n            changed: false,\r\n            productId: this.act.productId,\r\n            sub: this.act.sub\r\n        };\r\n    };\r\n\r\n    public static getMe() {\r\n        let cmp = Global.GetComponent<ActivationOptions>(ActivationOptions.componentId);\r\n\r\n        return cmp;\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IActivationOptionsProps) {\r\n        this.avSelection = AvailabilityWrapper.ensure(this.avSelection, this.availability);\r\n\r\n        this.act = next.parent.current!;\r\n\r\n        this.avSelection.applyChanges(this.act);\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public render() {\r\n\r\n        if (!this.selectionOk) {\r\n            return <></>\r\n        }\r\n\r\n        let ctrl = <div id={ActivationOptions.componentId}>\r\n\r\n            {\r\n                this.renderOptions()\r\n            }\r\n\r\n            {this.checkPopup()}\r\n\r\n            <div className=\"spacer clear\"></div>\r\n\r\n            {\r\n                <div>\r\n                    {this.checkResult}\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    initSelection = (product: string | undefined) => {\r\n        this.avSelection.init(this.act, product);\r\n    };\r\n\r\n    init(callback: any) {\r\n\r\n        try {\r\n            if (this.avSelection) {\r\n                this.avSelection.reset();\r\n            };\r\n\r\n            this.avSelection = AvailabilityWrapper.ensure(this.avSelection, this.availability);\r\n\r\n            this.initSelection(undefined);\r\n\r\n            this.avSelection.applyChanges(this.act);\r\n\r\n            if (this.act.selection.children.length > 0) {\r\n\r\n                this.act.selection.children.map((j) => {\r\n\r\n                    j.children.map((i) => {\r\n\r\n                        this.avSelection.inout(j.id, [i.id], true);\r\n\r\n                        if (j.id.indexOf('kip') >= 0) {\r\n                            if (this.act.activationType === EActivationType.actDefault) {\r\n                                this.avSelection.inout(j.id, ['rufnummernneuvergabe'], true);\r\n                            } else {\r\n                                this.avSelection.inout(j.id, ['rufnummernmitnahme-1'], true);\r\n                            };\r\n                        };\r\n\r\n                        if (this.act.services && this.act.services.length > 0) {\r\n                            this.act.services.map((i) => {\r\n                                this.avSelection.inout(j.id, i.split('/'), true);\r\n                            });\r\n                        };\r\n                    });\r\n                });\r\n            };\r\n\r\n            if (callback) {\r\n                callback();\r\n            };\r\n        } catch (err) {\r\n            if (this.act.selection.children[0].children.length > 0) {\r\n                this.selectionOk = true;\r\n                return;\r\n            } else {\r\n                this.selectionOk = false;\r\n                return;\r\n            }\r\n        };\r\n        this.selectionOk = true;\r\n    };\r\n\r\n    checkAvailabilityStart(act: m.IActivation) {\r\n        this.checkAvailability = ERequestStatus.running;\r\n        this.setState({ changed: true }, () => {\r\n            this.check();\r\n        })\r\n    };\r\n\r\n    private checkPopup() {\r\n        //console.log('checkPopup ' + this.checkAvailability);\r\n        if (this.checkAvailability != m.ERequestStatus.running) { return <></> }\r\n\r\n        let cfg: IPopupConfig = {\r\n            props: {\r\n                id: 'dynamicPopup',\r\n                title: 'Warenkorb',\r\n                visible: true,\r\n                closable: false,\r\n                type: EPopupType.pleaseWait\r\n            },\r\n            closeOnDone: true,\r\n            content: <div>Warenkorb wird geprüft</div>,\r\n            callback: (d) => {\r\n                //this.setState({changed: true});\r\n            }\r\n        };\r\n\r\n        return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n    };\r\n\r\n    private check() {\r\n        let avl = StorageHelper.getAvailability();\r\n\r\n        let model = {\r\n            orderId: avl.id,\r\n            brand: BrandKeys.kabel,\r\n            selection: this.act.selection //this.avSelection.getSelectionTree()\r\n        };\r\n\r\n        this.act.cart = [{ id: '' }]\r\n\r\n        this.checkAvailability = m.ERequestStatus.running;\r\n\r\n        // this.checkResult = <div className=\"timer\">\r\n        //     <div className=\"bg\"></div>\r\n        //     <div className=\"inner\">Warenkorb wird geprüft...</div>\r\n        // </div>\r\n\r\n        Api.fetch('activation/availability', model, \"POST\", (api) => {\r\n            var sum = Api.parseSummary(api, undefined);\r\n            if (sum.status == m.ERequestStatus.done || sum.status == m.ERequestStatus.running) {\r\n                if (Global.trackSession) {\r\n                    Global.trackSession(api);\r\n                }; \r\n\r\n                StorageHelper.updateAvailability(BrandKeys.kabel, api.data);\r\n\r\n                console.log('check res', model.selection);\r\n                console.log('check res', api.data);\r\n\r\n                this.applyAutoSelection(this.act.selection, api.data);\r\n\r\n                this.avSelection.prepare();\r\n\r\n                this.availability.prepareCableServices(0, []);\r\n\r\n                this.checkAvailability = m.ERequestStatus.done;\r\n\r\n                let res = this.avSelection.validateAvailability(this.act, api.data);\r\n\r\n                this.act.cart = linq.from<IAvailabilityResultItem>(res).where(x => x.status != EAvailabilityResultStatus.ok).toArray();\r\n\r\n                this.getvailabilityCheckMessage(this.act);\r\n\r\n                this.act.updateSelection(model.selection);\r\n\r\n                StorageHelper.updateActivation(this.act);\r\n\r\n                this.props.parent.setState({ changed: true });\r\n            } else {\r\n                this.checkResult = <>{MainTexts.textError}</>\r\n                this.checkAvailability = m.ERequestStatus.failed;\r\n            }\r\n\r\n            this.setState({ changed: true });\r\n        });\r\n    };\r\n\r\n    private applyAutoSelection(sel: TreeItem, \r\n        brand: IAvailabilityBrand) {\r\n            if(!brand || !brand.products) { return; };\r\n\r\n            sel.children.map((i)=>{\r\n                //let uprod = linq.from<AvailabilityProduct>(this.avSelection.products).where(x=>x.productId == i.id).firstOrDefault();\r\n                let bprod = linq.from<AvailabilityProduct>(brand.products).where(x=>x.productId == i.id).firstOrDefault();\r\n                if(bprod) {\r\n                    bprod =  AvailabilityProduct.ensure(bprod);\r\n\r\n                    if(bprod.elements) {\r\n                        bprod.elements.map((j)=>{\r\n                            let insel = i.find(j.metaname);\r\n\r\n                            //element is delivered as selected but is not in the basket,\r\n                            //so put it in selection\r\n                            if(j.available && j.mandatory && j.type != ConstantKeys.devices && j.selected == ConstantKeys.user && !insel) {\r\n                                if(i.getChildrenIds().indexOf(j.metaname) < 0) {\r\n                                    TreeItem.addRemovePath(i, [j.metaname]);\r\n                                };\r\n                            };\r\n                        });\r\n                    };\r\n                };\r\n            });\r\n    };\r\n\r\n    private renderTvConnectCable(prod: AvailabilityProduct) : JSX.Element {\r\n        let options : JSX.Element[] = [];\r\n\r\n        for(let j =0; j < prod.dropedServices.length; j++ ) {\r\n            let sel:boolean = false;\r\n\r\n            let tt = linq.from<IService>(this.brand.services)\r\n                .where(x => x.id == prod.dropedServices[j])\r\n                .firstOrDefault();\r\n\r\n            if(this.props.parent.current!.hasService(prod.dropedServices[j], prod.productId)) {\r\n                sel = true;\r\n            };\r\n\r\n            let name = tt ? tt.name : prod.dropedServices[j];\r\n            let tooltip = tt ? tt.tooltip : prod.dropedServices[j];\r\n\r\n            if (!tt) {\r\n                let svc = prod.getService(prod.dropedServices[j], undefined);\r\n\r\n                if (svc) {\r\n                    name = svc.name;\r\n                    tooltip = svc.name;\r\n                };\r\n            };\r\n\r\n            if(name == 'n.a') {\r\n                name = prod.dropedServices[j];\r\n            };\r\n\r\n            let op = <TariffThumb\r\n                id={'op-tvc-' + prod.dropedServices[j]}\r\n                text={name}\r\n                key={'op-tvc-' + prod.dropedServices[j]}\r\n                idx={j}\r\n                tooltip={tooltip}\r\n                brandKey={this.brand.id}\r\n                selected={false}\r\n                styleBrand={false}\r\n                cssStyle={ sel ? 'selected sub ' + this.brand.id : 'sub ' + this.brand.id}\r\n                clickModel={{ id: prod.dropedServices[j], productId: prod.productId , path: [prod.productId, prod.dropedServices[j]], level: 1 }}\r\n                onClick={(i)=>{\r\n                    i.path.shift();\r\n                    this.handleSelection(i);\r\n                }} />\r\n            \r\n            //we show just one options, so reset array and exit\r\n            if(sel) {\r\n                options = [op];\r\n                break;\r\n            } else {\r\n                options.push(op);\r\n            }\r\n        };\r\n\r\n        let ctrl = (\r\n            <>\r\n                <div className=\"clear spacer\"></div>\r\n                <div className=\"subtitle\" id=\"hardwareSelectiontvc\">TV Connect Optionen</div>\r\n                {options}\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private getvailabilityCheckMessage(act: m.IActivation) {\r\n        if (!act.hasHardware()) {\r\n            return <></>\r\n        };\r\n\r\n        if (act.cart.length == 0) {\r\n            this.checkResult = <>Prüfung erfolgreich.</>\r\n        } else {\r\n            let arr: JSX.Element[] = [];\r\n\r\n            arr.push(<div>Bitte Warenkorb korrigieren:</div>);\r\n\r\n            act.cart.map((i) => { arr.push(<div key={'checkmsg-' + act.cart.indexOf(i)}>{i.text}</div>); });\r\n\r\n            arr.push(<div><LButton type={m.ELButtonType.buttonWithIconRight} text=\"Warenkorb korrigieren\" css=\"a1 fl\" onClick={this.correctCart} /></div>);\r\n\r\n            this.checkResult = <>{arr}</>;\r\n        };\r\n    };\r\n\r\n    private correctCart = () => {\r\n        if (this.act.cart) {\r\n            this.act.cart.map((i) => {\r\n                TreeItem.addRemovePath(this.props.parent.current!.selection, i.path!);\r\n                //this.avSelection.inout(i.path![0], i.path!.slice(1), i.status == EAvailabilityResultStatus.add);\r\n            });\r\n\r\n            this.check();\r\n\r\n            this.setState({ changed: true });\r\n        }\r\n    };\r\n\r\n    private renderOptions() {\r\n        let all: JSX.Element[] = [];\r\n        let tvConnect: JSX.Element = <></>\r\n\r\n        this.avSelection.products.map((j, jdx) => {\r\n            if(!this.props.parent.current!.hardwareNecesseryAndSelected(j.productId)){\r\n                return;\r\n            };\r\n\r\n            if (this.props.parent.current!.brandKey == BrandKeys.kabel) {\r\n                if(j.hasDroppedServices()) {\r\n                    tvConnect = this.renderTvConnectCable(j);\r\n                }\r\n            };\r\n\r\n            let ui: JSX.Element[] = [];\r\n\r\n            all.push(<div key={'act-opt-' + j.productId} className=\"subtitle\">{MainTexts.tariffOptions + ': ' + j.productId}</div>)\r\n\r\n            let op: IAvailabilityServiceSelection[] = [];\r\n\r\n            j.prepareElements(EElementTypeUi.selectable, op, 1, ProductTree.FromTree(this.act.selection), [j.productId], undefined);\r\n\r\n            op.map((i, idx) => {\r\n                let tt = linq.from<IService>(this.brand.services)\r\n                    .where(x => x.id === i.metaname)\r\n                    .firstOrDefault();\r\n                i.sort = tt ? tt.sort : 0;\r\n            }); \r\n\r\n            op = linq.from<IAvailabilityServiceSelection>(op).orderBy(x => x.sort).toArray();\r\n\r\n            op.map((i, idx) => {\r\n                let tt = linq.from<IService>(this.brand.services)\r\n                    .where(x => x.id === i.metaname)\r\n                    .firstOrDefault();\r\n\r\n                let name = tt ? tt.name : i.metaname;\r\n                let tooltip = tt ? tt.tooltip : i.metaname;\r\n\r\n                if (!tt) {\r\n                    let svc = j.getService(i.metaname, undefined);\r\n\r\n                    if (svc) {\r\n                        name = svc.name;\r\n                        tooltip = svc.name;\r\n                    };\r\n                };\r\n\r\n                if(name == 'n.a') {\r\n                    name = i.metaname;\r\n                };\r\n\r\n                let cur = <TariffThumb\r\n                    id={'sop' + i.metaname}\r\n                    text={name }\r\n                    key={idx}\r\n                    idx={idx}\r\n                    tooltip={tooltip}\r\n                    tooltipModel={i}\r\n                    brandKey={this.brand.id}\r\n                    selected={i.selected}\r\n                    styleBrand={false}\r\n                    cssStyle={i.selected ? 'selected opt ' + this.brand.id : ' opt ' + this.brand.id}\r\n                    clickModel={{ id: i.metaname, productId: j.productId, path: [i.metaname], level: 1 }}\r\n                    onClick={this.onChange} />\r\n\r\n                //todo: not sure if correct\r\n                // if(name != 'n.a') {\r\n                ui.push(cur);\r\n                //  };\r\n            });\r\n\r\n            let temp = <>\r\n                {ui}\r\n                <div className=\"spacer-big clear\"></div>\r\n                {this.renderAdditional(j, op)}\r\n            </>\r\n\r\n            all.push(temp);\r\n\r\n            all.push(<div className=\"spacer-big clear\"></div>);\r\n        });\r\n\r\n        return <>\r\n            <div>{tvConnect}</div>\r\n            <div className=\"spacer-big clear\"></div>\r\n            {all}\r\n        </>\r\n    };\r\n\r\n    private renderAdditional(prod: AvailabilityProduct, parents: IAvailabilityServiceSelection[]) {\r\n        let res: JSX.Element[] = [];\r\n        \r\n        let sel = this.act.selection.toArray(false, prod.productId);  \r\n\r\n        for (let i: number = 0; i < parents.length; i++) {\r\n            let cur = parents[i];\r\n            //not selected in l1 so continue\r\n            if (sel.indexOf(cur.metaname) < 0) {\r\n                //console.log('not in sel:' + cur.metaname, sel);\r\n                continue;\r\n            }\r\n            let svc = linq.from<IService>(this.brand.services).where(x => x.id === cur.metaname).firstOrDefault();\r\n            let el = prod.getElement([cur.metaname]);\r\n\r\n            //console.log('to render with children', el);\r\n\r\n            if (svc && el && el.elements && el.elements.length > 0) {\r\n                res.push(this.renderSecond(prod, svc, cur));\r\n                res.push(<div className=\"spacer clear\"></div>);\r\n            };\r\n        };\r\n\r\n        return res;\r\n    };\r\n\r\n    private renderSecond(prod: AvailabilityProduct, svc: IService, parent: IAvailabilityServiceSelection) {\r\n        let op: IAvailabilityServiceSelection[] = [];\r\n\r\n        let el = prod.getElement([parent.metaname]);\r\n\r\n        if (!el || !el.elements || el.elements.length == 0) {\r\n            return <></>\r\n        }\r\n\r\n        prod.prepareElements(EElementTypeUi.children, op, 1, ProductTree.FromTree(this.act.selection), [prod.productId, svc.id], el.elements);\r\n\r\n        let ui: JSX.Element[] = [];\r\n\r\n        op.map((i, idx) => {\r\n            //console.log('additional:', i);\r\n            let tt = linq.from<IService>(this.brand.services).where(x => x.id === i.metaname).firstOrDefault();\r\n\r\n            let name = tt ? tt.name : i.metaname;\r\n            let tooltip = tt ? tt.tooltip : undefined;\r\n\r\n            if (name.indexOf('-') > 0 ) {\r\n                let cname = linq.from<IKeyText>(this.availability.cableServices).firstOrDefault(x => x.key == i.metaname);\r\n                if (cname) {\r\n                    name = cname.text;\r\n                }\r\n            };\r\n\r\n            if(name == 'n.a') {\r\n                name = i.metaname;\r\n            };\r\n\r\n            let cur = <TariffThumb\r\n                id={'soc' + i}\r\n                text={name}\r\n                key={parent.metaname}\r\n                idx={idx}\r\n                tooltip={tooltip}\r\n                tooltipModel={i}\r\n                brandKey={this.brand.id}\r\n                selected={false}\r\n                styleBrand={false}\r\n                cssStyle={i.selected ? 'selected sub opt ' + this.brand.id : ' sub opt ' + this.brand.id}\r\n                clickModel={{ id: i.metaname, productId: prod.productId, path: [parent.metaname, i.metaname], level: 2 }}\r\n                onClick={this.handleSelection} />\r\n\r\n            ui.push(cur);\r\n        });\r\n\r\n        let ctrl = <>\r\n            <div className=\"subtitle\">{MainTexts.optionsAdditional + ': ' + svc.name}</div>\r\n            {ui}\r\n        </>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private onChange(e: IActivationOption) {\r\n        this.handleSelection(e);\r\n    }; \r\n\r\n    handleSelection = (e: IActivationOption) => {\r\n        console.log('element clicked', e);\r\n\r\n        TreeItem.addRemoveTo(e.productId, this.act.selection, e.path);\r\n\r\n        let el = this.act.selection.findPath([e.productId, e.path[0]]);\r\n        \r\n        if(e.mandatory && el) {\r\n            //options mandatory for the product\r\n            let man = this.avSelection.getMandatory(e.productId);\r\n            man.map((i)=>{\r\n                TreeItem.addRemoveTo(e.productId, this.act.selection, [i]);\r\n            });\r\n\r\n            //options mandatory for the hardware\r\n            let manHw = this.avSelection.getMandatoryForElement(e.productId, e.id);\r\n            manHw.map((i)=>{\r\n                TreeItem.addRemoveTo(e.productId, this.act.selection, [e.id, i]);\r\n            });\r\n        };\r\n\r\n        this.check();\r\n\r\n        this.props.parent.setState({ changed: true })\r\n    };\r\n};\r\n\r\nexport default ActivationOptions;","import * as React from 'react';\r\nimport linq from 'linq';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport TariffThumb from '../tariffThumb';\r\nimport IService, { IServiceRule } from '../../../models/ordering/service';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport * as cmp from '../../index';\r\nimport { EPopupType } from '../../dialogs/popup';\r\nimport Global from '../../../utils/Global';\r\nimport IProduct, { ISubConfig, ISubServiceConfig } from '../../../models/ordering/product';\r\nimport OrderingHelper from '../../../utils/OrderingHelper';\r\nimport { EServiceType, EBusinessCase, EActivationType, EServiceRuleType, EBonusType } from '../../../models/ordering/order';\r\nimport { IActivation, ELButtonType } from '../../../models';\r\nimport ProductWrapper from '../../../models/ordering/productWrapper';\r\nimport { MainTexts } from '../../../utils/messages';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport ISub from '../../../models/ordering/sub';\r\nimport GlobalJSX from '../../../utils/GlobalJSX';\r\nimport StorageHelper from '../../../utils/storage';\r\n\r\nexport interface IActivationServiceSelectorProps {\r\n    activation: IActivation;\r\n    preselected?: string[];\r\n    brand: IBrand;\r\n    onChanged: any;\r\n    bc: EBusinessCase;\r\n    canEdit: boolean;\r\n    blockAddRemove?: boolean;\r\n};\r\n\r\nexport interface IActivationServiceSelectorState {\r\n    changed: boolean;\r\n    popupVisible: boolean;\r\n    activation:IActivation;\r\n};\r\n\r\nexport class ActivationServiceSelector extends React.Component<IActivationServiceSelectorProps, IActivationServiceSelectorState> {\r\n    private alreadyBooked:IService[] = [];\r\n    private inclusive: IService[] = [];\r\n    private product?: IProduct;\r\n    private sub?:ISubConfig;\r\n    private serviceRules: IServiceRule[] = [];\r\n\r\n    constructor(props: IActivationServiceSelectorProps) {\r\n        super(props);\r\n\r\n        this.onDismissSelector = this.onDismissSelector.bind(this);\r\n        this.onDone = this.onDone.bind(this);\r\n        this.thumbClick = this.thumbClick.bind(this);\r\n\r\n        this.serviceRules = this.props.brand.serviceRules;\r\n\r\n        this.state = {\r\n            changed: false,\r\n            popupVisible: false,\r\n            activation: this.props.activation\r\n        };\r\n    };\r\n\r\n    private onDismissSelector() {\r\n        this.setState({popupVisible: false});\r\n    };\r\n\r\n    private onDone() {\r\n        this.setState({popupVisible: false});\r\n    };\r\n\r\n    private renderSelection() : JSX.Element {\r\n        let ctrl : JSX.Element[] = [];\r\n\r\n        let prod : IProduct = linq.from<IProduct | any>(this.props.brand.products)\r\n            .where(x=>x.id === this.state.activation.productId)\r\n            .firstOrDefault();\r\n        \r\n        if(!prod) { return <></>; };\r\n        \r\n        let pw = new ProductWrapper(this.state.activation.brandKey, prod);\r\n\r\n        let all = pw.getServices(this.state.activation, this.props.bc, false);\r\n\r\n        let availableSvc : IService[] = linq.from<IService>(this.props.brand.services)\r\n            .where(x=> all.indexOf(x.id)>=0)\r\n            .where(x=>!x.mandatory) \r\n            .toArray();\r\n\r\n        //reverse excludes - remove all services which are notbookable with already selected services\r\n        let reverseExcludes: string [] = [];\r\n        for(let i = 0; i < availableSvc.length; i++) {\r\n            let s = availableSvc[i];\r\n           \r\n            if(!s.notbookableWith) { continue;}\r\n\r\n            for(let j =0; j < this.state.activation.services.length; j++){\r\n\r\n                if(s.notbookableWith.indexOf(this.state.activation.services[j]) >= 0) {\r\n                    reverseExcludes.push(s.id);\r\n                    continue;\r\n                };\r\n            };\r\n        };\r\n\r\n        //for vvl/tw remove already booked\r\n        if(this.state.activation.activationType == EActivationType.existingCustomer) {\r\n            let abids = linq.from<IService>(this.alreadyBooked).select(x=>x.id).toArray();\r\n            availableSvc = linq.from<IService>(availableSvc).where(x=>abids.indexOf(x.id) < 0).toArray();\r\n        };\r\n      \r\n        availableSvc = linq.from<IService>(availableSvc).where(x=>reverseExcludes.indexOf(x.id)<0).toArray();\r\n\r\n        let available : string[] = linq.from<IService>(availableSvc)\r\n            .select(x=>x.id)\r\n            .toArray();\r\n\r\n        let excludes : string[] = [];\r\n\r\n        availableSvc.map((i,idx) => {\r\n            if(this.state.activation.services.indexOf(i.id) >= 0) {\r\n                if(i.notbookableWith && i.notbookableWith.length > 0) {\r\n                    i.notbookableWith.map((j)=>{ \r\n\r\n                        //one of the notbookable is already selected\r\n                        if(this.state.activation.services.indexOf(j) >=0 ) {  \r\n\r\n                        } else {\r\n                            if(excludes.indexOf(j) < 0 ) { if(i.id !== j) { excludes.push(j);} }\r\n                        }\r\n                    });\r\n                };\r\n            };            \r\n        });\r\n\r\n        let svc:IService[] = linq.from<IService>(this.props.brand.services)\r\n            .where(x=>available.indexOf(x.id) >= 0 && !x.hidden)\r\n            .toArray(); \r\n            \r\n        let groups : string[] = linq.from<IService>(svc).orderBy(x=>x.fmailySort).select(x=>x.familyName).distinct().toArray();\r\n   \r\n        for(let i : number = 0; i < groups.length; i++ ) {\r\n            let svcGroup : IService[] = linq.from<IService>(this.props.brand.services)\r\n                .where(x=>x.familyName === groups[i] && available.indexOf(x.id)>=0)\r\n                .toArray();\r\n            let groupItems : JSX.Element[] = []; \r\n\r\n            svcGroup.map((i, idx)=> {\r\n                //inclusive promos/options shouldnt be selectable\r\n                if(i.type == EServiceType.inclusive) {\r\n                    return;\r\n                };\r\n\r\n                //services coming from NBA are not offered for selection\r\n                if(this.state.activation.isNba() \r\n                    && this.state.activation.action \r\n                    && this.state.activation.action.services\r\n                    && this.state.activation.action.services.indexOf(i.id) >= 0) {\r\n                        return;\r\n                    };\r\n\r\n                let sel: boolean = false;\r\n                if(this.state.activation.services.indexOf(i.id) >= 0) {\r\n                    sel = true;\r\n                };\r\n\r\n                let css: string = '';\r\n\r\n                if(this.props.preselected && this.props.preselected.indexOf(i.id) >=0 ){\r\n                    css=' insel';\r\n                };\r\n\r\n                if(excludes.indexOf(i.id)<0) { \r\n                    groupItems.push(this.renderThumb(i, this.thumbClick, sel, idx, css, false ));\r\n                };\r\n            });\r\n\r\n            let group = <Container key={'service-group-' + groups[i]}>\r\n                    <Row>\r\n                        <Col md={12}>{groups[i]}</Col>                \r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            {groupItems}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>;\r\n            \r\n            if(groupItems.length > 0) {\r\n                ctrl.push(group);\r\n            };\r\n        }\r\n\r\n        return <>{ctrl}</>;\r\n    };\r\n\r\n    private getInclusiveOptions() : IService[] {\r\n        if(!this.product) { return []; };\r\n \r\n        let pw = new ProductWrapper(this.state.activation.brandKey, this.product);\r\n\r\n        //from prod.sub.service\r\n        let all = pw.getAllServicesFromConfig(this.state.activation.sub, this.props.bc);\r\n\r\n        let available : string[] = linq.from<IService>(this.props.brand.services)\r\n            .where(x=> all.indexOf(x.id)>=0) //  && x.type === EServiceType.inclusive) \r\n            .select(x=>x.id)\r\n            .toArray();\r\n\r\n        let svc:IService[] = linq.from<IService>(this.props.brand.services)\r\n            .where(x=>available.indexOf(x.id) >= 0)\r\n            .toArray();\r\n\r\n        if(svc.length == 0) {return [];}\r\n\r\n        let groupItems : IService[]  = [];\r\n\r\n        svc.map( (i, idx)=> {\r\n            let subSvc = linq.from<ISubServiceConfig>(this.sub!.sl).where(x=>x.id === i.id).first();\r\n\r\n            if(!subSvc) { return;};\r\n\r\n            if(i.type === EServiceType.inclusive || (subSvc.m && !i.hidden)) {\r\n                groupItems.push(i); \r\n\r\n                //mandatory not hidden are added to activation\r\n                if(subSvc.m && !i.hidden && i.type !== EServiceType.inclusive) {\r\n                    this.state.activation.addService(i.id, undefined);\r\n                };\r\n            };\r\n        });\r\n\r\n        return groupItems;\r\n    };    \r\n\r\n    private getAlreadyBooked() : IService[] {\r\n        let parent = StorageHelper.getParentOfProcess(this.state.activation.processId);\r\n\r\n        if(!this.product) { return []; };\r\n\r\n        let available : string[] = linq.from<IService>(this.props.brand.services)\r\n            .where(x=> parent.customer.contracts![0].bookedProduct!.services.indexOf(x.id)>=0) //  && x.type === EServiceType.inclusive) \r\n            .select(x=>x.id)\r\n            .toArray();\r\n\r\n        let svc:IService[] = linq.from<IService>(this.props.brand.services)\r\n            .where(x=>available.indexOf(x.id) >= 0)\r\n            .toArray();\r\n\r\n        return svc;\r\n    }; \r\n\r\n    private thumbClick(id: string) {\r\n            if(this.state.activation.hasService(id, undefined)) {\r\n                this.state.activation.removeService(id, undefined);\r\n            } else {\r\n                this.state.activation.addService(id, undefined);\r\n            }\r\n\r\n            this.props.onChanged();\r\n            //this.props.parent.setState({changed: true});\r\n\r\n            //this.setState({changed: true});\r\n    };\r\n\r\n    private renderThumb(service: IService, \r\n        clickHandler: any, \r\n        selected: boolean, \r\n        idx: number,\r\n        css: string,\r\n        checkRules: boolean) : JSX.Element {\r\n        \r\n        let clickable: boolean = true;\r\n        let ruleCss: string = '';\r\n\r\n        if(checkRules) {\r\n            let insub = linq.from<ISubServiceConfig>(this.sub!.sl).where(x=>x.id == service.id).firstOrDefault()\r\n            let rul = linq.from<IServiceRule>(this.serviceRules).where(x=>x.id == service.id).firstOrDefault();\r\n\r\n            if(!insub) {\r\n                ruleCss = ' autoremove';\r\n                clickable = false;\r\n            };\r\n\r\n            if(rul && rul.type == EServiceRuleType.canBeRemoved) {\r\n                ruleCss = ' removable';\r\n                clickable = true;\r\n            };\r\n\r\n            if(rul && rul.type == EServiceRuleType.notRemovable) {\r\n                ruleCss = ' notremovable';\r\n                clickable = false;\r\n            };\r\n\r\n            if(insub && insub.m) {\r\n                ruleCss = '';\r\n                clickable = false;\r\n            };\r\n        };\r\n\r\n        if(this.state.activation.servicesRemove.indexOf(service.id)>=0) {\r\n            ruleCss = '';\r\n            css = css.replace('selected', '');\r\n            selected = false;\r\n        };\r\n\r\n        css += ruleCss;\r\n\r\n        let ctrl : JSX.Element = <TariffThumb\r\n            key={service.id + '_' + Global.getUniqueId()} \r\n            idx={idx}\r\n            text={service.name}\r\n            tooltip={service.tooltip}\r\n            tooltipModel={service}\r\n            selected={selected}\r\n            id={service.id}\r\n            brandKey={this.props.brand.id}\r\n            styleBrand={false}\r\n            cssStyle={css}\r\n            onClick={(e)=>{\r\n                if(clickable) {\r\n                    if(checkRules) {\r\n                        this.state.activation.addRemoveServiceRemove(e, this.state.activation.productId);\r\n                        this.setState({changed: true});\r\n                    } else {\r\n                        if(clickHandler) {\r\n                            clickHandler(e);\r\n                        }\r\n                    };\r\n                }\r\n            }}/>\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderSelected() : JSX.Element {\r\n        let ctrl : JSX.Element[] = [];\r\n\r\n        let prod : IProduct = linq.from<IProduct | any>(this.props.brand.products)\r\n            .where(x=>x.id === this.state.activation.productId)\r\n            .firstOrDefault();\r\n\r\n        let sub = linq.from<ISubConfig>(prod.subs).where(x=>x.id === this.state.activation.sub && x.b == this.props.bc).first();\r\n\r\n        let svc : IService[] = linq.from<IService>(this.props.brand.services)\r\n            .toArray();\r\n\r\n            let svcs: string[] = this.state.activation.services;\r\n\r\n            for(let j: number = 0 ; j < svcs.length; j++) {\r\n                let svcSelected : IService = linq.from<IService | any>(svc)\r\n                    .where(x=>x.id === svcs[j])\r\n                    .firstOrDefault();\r\n\r\n                let current = linq.from<IService>(svc).where(x=>x.id === svcs[j]).firstOrDefault();\r\n\r\n                if(current && current.hidden) { continue; };\r\n\r\n                if(svcSelected) { \r\n                    let subSvc = linq.from<ISubServiceConfig>(sub.sl).where(x=>x.id === svcs[j]).firstOrDefault();\r\n\r\n                    //mandatory are shown in inclusiveoptions area\r\n                    if(!subSvc || subSvc.m) {\r\n                       if(!svcSelected.bonusType) {\r\n                        continue;\r\n                       };\r\n                    };\r\n\r\n                    ctrl.push(this.renderThumb(svcSelected, undefined, true, j, '', false)); } else { console.log('svc' + svcs[j] + ' not found');\r\n                }\r\n            }\r\n\r\n        return <>{ctrl}</>\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IActivationServiceSelectorProps) {\r\n        this.setState({activation: next.activation});\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = <></>;\r\n\r\n        if(!this.state.activation.productId || !this.state.activation.sub) {\r\n            return ctrl;\r\n        };\r\n\r\n        this.product = linq.from<IProduct>(this.props.brand.products)\r\n            .where(x=>x.id === this.state.activation.productId)\r\n            .firstOrDefault();\r\n\r\n        this.sub = linq.from<ISubConfig>(this.product!.subs)\r\n            .where(x=>x.id === this.state.activation.sub && x.b == this.props.bc)\r\n            .first();\r\n\r\n        if(!this.props.canEdit) { return ctrl;};\r\n\r\n        this.alreadyBooked = this.state.activation.activationType == EActivationType.existingCustomer ? this.getAlreadyBooked() : [];\r\n        this.inclusive = this.getInclusiveOptions();\r\n\r\n        ctrl = \r\n        <>\r\n            <Container>\r\n                <Row key=\"row1\">\r\n                    <Col md={12}>\r\n                        <div className=\"subtitle\">{MainTexts.optionsAdditional}</div>\r\n                    </Col>\r\n                </Row>\r\n                <Row key=\"row2\">\r\n                    <Col md={9}>\r\n                        {this.renderSelected()}\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        {\r\n                            this.props.blockAddRemove ? <></> : \r\n                            <TariffThumb\r\n                                idx={-1}\r\n                                key={'serviceselector'} \r\n                                text={'Hinzufügen / Bearbeiten'}\r\n                                selected={false}\r\n                                id={'serviceselector'}\r\n                                brandKey={'vf'}\r\n                                styleBrand={false}\r\n                                onClick={()=>{ this.setState({popupVisible: true}); }}/>\r\n                        }\r\n                    </Col>                \r\n                </Row>\r\n\r\n                {\r\n                    this.inclusive.length > 0 ? \r\n                    <>\r\n                        <Row key=\"row3\">\r\n                            <Col md={12}>\r\n                                <div className=\"subtitle\">{MainTexts.optionsInclusive} </div>\r\n                            </Col>\r\n                        </Row>                    \r\n                        <Row key=\"row4\">\r\n                            <Col md={9}>\r\n                            {\r\n                                    this.inclusive.map((i, idx)=>{\r\n                                       return this.renderThumb(i, undefined, true, idx, '', false)\r\n                                    })\r\n                                }\r\n                            </Col>\r\n                            <Col md={3}/>          \r\n                        </Row>\r\n                    </>\r\n                    : null\r\n                }\r\n\r\n                {\r\n                    this.alreadyBooked.length > 0 ? \r\n                    <>\r\n                        <Row key=\"row3\">\r\n                            <Col md={12}>\r\n                                <div className=\"subtitle\">{MainTexts.optionsAlreadyBooked} {GlobalJSX.getInfoTooltip('info-', 'Bitte beachte, dass einige Optionen aus technischen Gründe nicht abgewählt werden können.')} </div>\r\n                            </Col>\r\n                        </Row>                    \r\n                        <Row key=\"row4\">\r\n                            <Col md={9}>\r\n                                {\r\n                                    this.alreadyBooked.map((i, idx)=>{\r\n                                       return this.renderThumb(i, this.thumbClick, true, idx, '', true)\r\n                                    })\r\n                                }\r\n                            </Col>\r\n                            <Col md={3}/>          \r\n                        </Row>   \r\n                        <Row>\r\n                             <Col xs={12} md={12}>\r\n                                <div className=\"thumb-small-desc\">Legende:</div>\r\n                            </Col>\r\n                            <Col xs={12} md={12}>\r\n                                <div className=\"removable thumb thumb-tariff thumb-small\"></div>\r\n                                <div className=\"thumb-small-desc\">Option ist abwählbar</div>\r\n                            </Col>\r\n                            <Col xs={12} md={12}>\r\n                                <div className=\"notremovable thumb thumb-tariff thumb-small\"></div>\r\n                                <div className=\"thumb-small-desc\">Option nicht abwählbar</div>\r\n                            </Col> \r\n                            <Col xs={12} md={12}>\r\n                                <div className=\"selected thumb thumb-tariff thumb-small\"></div>\r\n                                <div className=\"thumb-small-desc\">Pflichtoption</div>\r\n                            </Col>                                                        \r\n                        </Row>     \r\n                    </>            \r\n                    : null\r\n                }\r\n            </Container>\r\n\r\n            <cmp.Popup type={EPopupType.info} onDismiss={this.onDismissSelector} \r\n                closable={true}\r\n                visible={this.state.popupVisible} id=\"confirm\" title={MainTexts.optionsAdditional} height={600} style=\"wide\">\r\n                    <cmp.PopupBody>\r\n                        {this.renderSelection()}\r\n                        <></>\r\n                    </cmp.PopupBody>\r\n                    \r\n                    <cmp.Action>\r\n                        <cmp.LButton text={MainTexts.ready} css=\"fr\" icon=\"ok\" type={ELButtonType.buttonWithIconRight} onClick={this.onDone} />\r\n                        <></>\r\n                    </cmp.Action>\r\n                </cmp.Popup> \r\n        </>;\r\n        \r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default ActivationServiceSelector;","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { EApiResponseStatus, IApiResponse } from '../../../interfaces';\r\nimport IProcessNewSelection from '../../../interfaces/ordering/IProcessNewSelection';\r\nimport { IActivation } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport Availability, { AvailabilityProduct, IAvailabilityBrand, IAvailabilityElement, IAvailabilityService } from '../../../models/ordering/availability';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport { EActivationType, EBusinessCase, ECreditDebitType, ECustomerType, EServiceType } from '../../../models/ordering/order';\r\nimport IProduct, { ISubConfig, ISubServiceConfig } from '../../../models/ordering/product';\r\nimport ProductWrapper from '../../../models/ordering/productWrapper';\r\nimport IService from '../../../models/ordering/service';\r\nimport ISub from '../../../models/ordering/sub';\r\nimport { EActivationTime, EControlType, ELButtonType, ERequestStatus } from '../../../models/page/diverse';\r\nimport { IControlValue } from '../../../models/page/interfaces';\r\nimport { TreeItem } from '../../../models/support/tree';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport Api from '../../../utils/api';\r\nimport { BrandKeys, Defaults } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport GlobalJSX from '../../../utils/GlobalJSX';\r\nimport { MainTexts, OrderingTexts, ValidationMessages } from '../../../utils/messages';\r\nimport OrderingHelper from '../../../utils/OrderingHelper';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport CableRenderer, { ERenderType } from '../../brand/cableRenderer';\r\nimport Popup, { EPopupType, IPopupConfig } from '../../dialogs/popup';\r\nimport BlockBase from '../../page/block';\r\nimport { EDateType } from '../../page/date';\r\nimport * as page from '../../page/index';\r\nimport TariffThumb from '../tariffThumb';\r\nimport { ActivationOptions } from './activationOptions';\r\nimport ActivationServiceSelector from './activationServiceSelector';\r\n\r\nexport interface IActivationTariffProps {\r\n    //brand: IBrand;\r\n    tariff: string;\r\n    parent: ProcessNewScreen;\r\n    selection?: IProcessNewSelection;\r\n    selectionChanged: any;\r\n    onChange: any;\r\n};\r\n\r\nexport interface IActivationTariffState {\r\n    //selectedTariff: string;\r\n    //selectedSub?: string;\r\n    services?: string[];\r\n    selection?: IProcessNewSelection;\r\n    changed: boolean;\r\n    //datePicker: boolean;\r\n};\r\n\r\nexport class ActivationTariff extends React.Component<IActivationTariffProps, IActivationTariffState> {\r\n    private current: IProduct[] = [];\r\n    private virtualOptions: IService[] = [];\r\n    private virtualOptionsExclude: string[] = [];\r\n    private popupVirtualOptionsVisible: boolean = false;\r\n    private popupRefreshAvailability: boolean = false;\r\n    private brand: IBrand;\r\n    public static componentId = 'activationTariff';\r\n    private currentFamily: number = 0;\r\n    private validationOptionsPassword: ValidationOption[] = [];\r\n\r\n    private static idAvailabilityPopup = \"refreshAvailability\";\r\n\r\n    constructor(props: IActivationTariffProps) {\r\n        super(props)\r\n\r\n        this.onSelectTariff = this.onSelectTariff.bind(this);\r\n        this.onSelectSub = this.onSelectSub.bind(this);\r\n        this.selectOption = this.selectOption.bind(this);\r\n        this.selectOptionVirtual = this.selectOptionVirtual.bind(this);\r\n        this.switchActivationType = this.switchActivationType.bind(this);\r\n        this.selectDate = this.selectDate.bind(this);\r\n        this.switchActivationDate = this.switchActivationDate.bind(this);\r\n        this.switchAdditional = this.switchAdditional.bind(this);\r\n        this.renderRefreshAvailability = this.renderRefreshAvailability.bind(this);\r\n        this.onSelectedOptionsChanged = this.onSelectedOptionsChanged.bind(this);\r\n\r\n        this.brand = Global.categoryWrapper.getCategoryBrand(this.props.parent.data);\r\n\r\n        if (this.brand && this.brand.products) {\r\n            var productTemp = this.brand.products.find(x => x.id === this.props.parent.current!.productId);\r\n            this.props.parent.current!.familyId = productTemp ? productTemp.familyId : 0;\r\n            StorageHelper.updateActivation(this.props.parent.current!);\r\n        }\r\n\r\n        if(this.props.parent.current && (this.props.parent.current.activationType == EActivationType.partnerCard || this.props.parent.current.activationType == EActivationType.partnerCardPortation)){\r\n            this.validationOptionsPassword.push(new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }));\r\n        }else{\r\n            this.validationOptionsPassword = [];\r\n        }\r\n\r\n        this.state = {\r\n            //selectedTariff: this.props.tariff,\r\n            changed: true,\r\n            //selectedSub: this.props.parent.current ? this.props.parent.current.sub : '',\r\n            selection: this.props.selection,\r\n            //datePicker: false\r\n        };\r\n    };\r\n\r\n    private renderGroups(): JSX.Element {\r\n        let pt = this.state.selection ? this.state.selection.creditDebitType : ECreditDebitType.postpaid;\r\n        let ct = this.state.selection ? this.state.selection.customerType : ECustomerType.personal;\r\n        let at = this.state.selection ? this.state.selection.activationType : EActivationType.actDefault;\r\n\r\n        let bc: EBusinessCase = EBusinessCase.bnt;\r\n\r\n        var groups = linq.from<IProduct>(OrderingHelper.filterProducts(this.brand.id, this.brand.products, bc))\r\n            .where(x => (x.creditDebitType & pt) === pt && x.bookable && (x.customerType & ct) === ct && (x.activationType & at) === at)\r\n            .select(x => { return { familyName: x.familyName, familySort: x.familySort } })\r\n            .distinct() \r\n            .orderBy(x => x.familySort)\r\n            .select(x => x.familyName)\r\n            .distinct()\r\n            .toArray();\r\n\r\n        let ctrl = (\r\n            <>\r\n                {groups.map((i, idx) =>\r\n                    (this.renderGroup(i, idx))\r\n                )}\r\n\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderGroup(name: string, idx: number) {\r\n        let pt = this.state.selection ? this.state.selection.creditDebitType : ECreditDebitType.postpaid;\r\n        let ct = this.state.selection ? this.state.selection.customerType : ECustomerType.personal;\r\n        let at = this.state.selection ? this.state.selection.activationType : EActivationType.actDefault;\r\n\r\n        let bc: EBusinessCase = EBusinessCase.bnt; \r\n\r\n        // 2020-09-28 sm !!!!dont delete!!!!!!!!!!!!!!!!!!!!!\r\n        //for partnerCars BusinessCase products are VVL\r\n        // if (this.brand.id === BrandKeys.vodafone) {\r\n        //     if (this.props.parent.current && this.props.parent.current.activationType === EActivationType.partnerCard) {\r\n        //         bc = EBusinessCase.vvl;\r\n        //     };\r\n        // };\r\n\r\n        var products = linq.from<IProduct>(OrderingHelper.filterProducts(this.brand.id, this.brand.products, bc))\r\n            .where(x => x.familyName === name && (x.creditDebitType & pt) === pt && x.bookable && (x.customerType & ct) === ct && (x.activationType & at) === at)\r\n            .orderBy(x => x.sort)\r\n            .toArray();\r\n\r\n        if (!Global.categoryWrapper.all) {\r\n            products = linq.from<IProduct>(products).where(x => x.catKey == Global.categoryWrapper.cat).toArray();\r\n        };\r\n\r\n        //no products found so return empty\r\n        if (products.length === 0) {\r\n            return <></>;\r\n        }\r\n\r\n        // checkit\r\n        // if(this.state.selectedTariff && this.props.parent.current) {\r\n        //     this.props.parent.current.productId = this.state.selectedTariff;\r\n        //     StorageHelper.updateActivation(this.props.parent.current);\r\n        // }\r\n        let ctrl = (\r\n            <div key={idx}>\r\n                <div className=\"subtitle\">{name}</div>\r\n                {products.map((i, idx) =>\r\n\r\n                    (<TariffThumb\r\n                        key={idx}\r\n                        id={i.id}\r\n                        text={i.name}\r\n                        tooltip={i.tooltip}\r\n                        tooltipModel={i}\r\n                        idx={idx}\r\n                        brandKey={this.brand.id}\r\n                        selected={this.props.parent.current!.selection.getChildrenIds().indexOf(i.id) >= 0}\r\n                        styleBrand={false}\r\n                        cssStyle={this.props.parent.current!.selection.getChildrenIds().indexOf(i.id) >= 0 ? 'selected' : ''}\r\n                        onClick={this.onSelectTariff} />)\r\n                )}\r\n\r\n                <page.LClear />\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderSub(forProduct: any): JSX.Element {\r\n        if (!this.current || (this.current && this.props.parent.current!.brandKey != BrandKeys.kabel && this.current[0] && this.current[0].creditDebitType === ECreditDebitType.prepaid)) { return <></> }\r\n\r\n        let subs: string[] = [];\r\n        let tvConnect : JSX.Element = <></>;\r\n\r\n        if (this.current && this.props.parent.current!.brandKey == BrandKeys.kabel && !forProduct) {\r\n            return this.renderSubMultiple();\r\n        }\r\n\r\n        let prod = forProduct ? [forProduct] : this.current;\r\n\r\n        prod.map((i) => {\r\n            if (i.subs) {\r\n                let tmp = linq.from<ISubConfig>(i.subs)\r\n                    .join(this.brand.subs, cs => cs.id, bs => bs.id, (cs, bs) => { return { CS: cs, BS: bs } })\r\n                    .orderBy(x => x.BS.sort)\r\n                    .select(x => x.CS.id).toArray();\r\n                if (tmp && tmp.length > 0) {\r\n                    tmp.map(j => subs.push(`${i.id}${Defaults.listSeparator}${j}`));\r\n                };\r\n            };\r\n        });\r\n\r\n        if (this.props.parent.current!.brandKey == BrandKeys.unity) {\r\n            let uprod = Global.categoryWrapper.avl.getProduct(BrandKeys.unity, this.props.parent.current!.productId);\r\n            subs = linq.from<IAvailabilityElement>(uprod.subs).select(x => x.id).toArray();\r\n            subs = linq.from<ISub>(this.brand.subs).where(x => subs.indexOf(x.id) >= 0).select(x => uprod.productId + Defaults.listSeparator + x.id).toArray();\r\n        };\r\n\r\n        if (subs.length == 0) { return <></> }\r\n\r\n        let subList: JSX.Element[] = [];\r\n\r\n        subs = linq.from<string>(subs).distinct().toArray();\r\n\r\n        if (this.props.parent.current && this.props.parent.current.brandKey == BrandKeys.kabel) {\r\n            let children = this.props.parent.current.selection.getChildrenIdSub();\r\n            for (let i = 0; i < subs.length; i++) {\r\n                if (children.indexOf(subs[i].split(Defaults.listSeparator)[1]) >= 0) {\r\n                    subs = [subs[i]];\r\n                    break;\r\n                };\r\n            };\r\n        };\r\n\r\n        subs.map((i, idx) => {\r\n            let subid = i.split(Defaults.listSeparator)[1];\r\n\r\n            let tt = linq.from<ISub>(this.brand.subs).where(x => x.id === subid).first();\r\n\r\n            let s = <TariffThumb\r\n                id={i}\r\n                text={OrderingHelper.getSub(this.brand, subid).name}\r\n                key={idx}\r\n                idx={idx}\r\n                tooltip={tt.tooltip}\r\n                tooltipModel={i}\r\n                brandKey={this.brand.id}\r\n                selected={false}\r\n                styleBrand={false}\r\n                cssStyle={this.props.parent.current!.selection.getChildrenIdSub().indexOf(i.split(Defaults.listSeparator)[1]) >= 0 ? 'selected sub ' + this.brand.id : 'sub ' + this.brand.id}\r\n                onClick={this.onSelectSub} />\r\n            subList.push(s);\r\n        });\r\n\r\n        let ctrl = (\r\n            <>\r\n                <div className=\"subtitle\" id=\"hardwareSelection\">{OrderingTexts.sub + (forProduct ? ' ' + forProduct.name : '')}</div>\r\n                {subList}\r\n\r\n                {tvConnect}\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderSubMultiple() {\r\n        let jsx: JSX.Element[] = [];\r\n\r\n        this.current.map((i) => {\r\n            jsx.push(<div className=\"clear\">{this.renderSub(i)}</div>);\r\n        });\r\n\r\n        return <>{jsx}</>;\r\n    };\r\n\r\n    private renderPromotions(): JSX.Element {\r\n        let ctrl = (\r\n            <div className=\"subtitle\">{MainTexts.noPromotions}</div>\r\n        );\r\n\r\n        if (this.current && this.props.parent.current!.sub) {\r\n            let pw = new ProductWrapper(this.props.parent.selectedBrand,\r\n                this.current[0]);\r\n\r\n            let currentsub = this.props.parent.current ? this.props.parent.current.sub : '';\r\n\r\n            let svc = linq.from(pw.getServices(this.props.parent.current, EBusinessCase.bnt, this.props.parent.current!.brandKey === BrandKeys.dsl))\r\n                .toArray();\r\n                \r\n            if(this.brand.id == BrandKeys.unity) {\r\n                let ubrand = linq.from<IAvailabilityBrand>(Global.categoryWrapper.avl.brands).where(x=>x.key == BrandKeys.unity).first();\r\n                let uprod = linq.from<AvailabilityProduct>(ubrand.products).where(x=>x.productId == this.props.parent.current!.productId).first();\r\n\r\n                let usubs = linq.from<IAvailabilityElement>(uprod.subs).where(x => x.id == this.props.parent.current!.sub).firstOrDefault();\r\n                if (usubs && usubs.options) {\r\n                    usubs.options.map((i)=>{\r\n                        if(svc.indexOf(i.id) <=0) {\r\n                            svc.push(i.id);\r\n                        };\r\n\r\n                        if(i.selected && !this.props.parent.current!.hasService(i.id, this.props.parent.current!.productId)) {\r\n                            this.props.parent.current!.addRemoveService(i.id, this.props.parent.current!.productId);\r\n                        };\r\n                    });\r\n                };                \r\n            };\r\n\r\n            let svcMandatory: string[] = [];\r\n\r\n            if (currentsub) {\r\n                if (this.brand.id === BrandKeys.otelo || this.brand.id === BrandKeys.dsl) {\r\n                    let subDef = linq.from<ISubConfig>(this.current[0].subs).where(x => x.id == currentsub).firstOrDefault();\r\n\r\n                    if (subDef) {\r\n                        svcMandatory = linq.from<ISubServiceConfig>(subDef.sl)\r\n                            .where(x => x.m)\r\n                            .select(x => { return x.id })\r\n                            .toArray();\r\n                    };\r\n                };\r\n            };\r\n\r\n            if (svc.length > 0) {\r\n                let all: JSX.Element[] = [];\r\n                let allMandatory: JSX.Element[] = [];\r\n\r\n                for (let i = 0; i < svc.length; i++) {\r\n                    let data = linq.from<IService>(this.brand.services)\r\n                        .where(x => x.id === svc[i] && (x.type == EServiceType.promotion)) // && ((x.businessCase & EBusinessCase.bnt) === EBusinessCase.bnt))\r\n                        .firstOrDefault();\r\n\r\n                    if (data) {\r\n                        if (this.props.parent.current && svcMandatory.indexOf(data.id)>=0) {\r\n                            this.props.parent.current.addService(data.id, undefined);\r\n                        };\r\n\r\n                        all.push(<page.LControl type={EControlType.checkbox}\r\n                            label={data.name}\r\n                            tooltip={data.tooltip}\r\n                            key={i} id={data.id}\r\n                            checked={this.props.parent.current && this.props.parent.current.services.indexOf(data.id) >= 0 || svcMandatory.findIndex(x=>x === data!.id)>-1}\r\n                            disabled={svcMandatory.findIndex(x=>x === data!.id)>-1}\r\n                            onChange={this.selectOption}\r\n                            hideHint={true}\r\n                            hideTitle={false} />);\r\n                    }\r\n                };\r\n\r\n                for (let i = 0; i < svcMandatory.length; i++) {\r\n                    let data:any={};\r\n                    \r\n                    if(this.props.parent.current!.brandKey == BrandKeys.otelo) {\r\n                        data = linq.from<IService>(this.brand.services)\r\n                            .where(x => x.id === svcMandatory[i] && x.mandatory) \r\n                            .firstOrDefault();\r\n                    } else {\r\n                        data = linq.from<IService>(this.brand.services)\r\n                        .where(x => x.id === svcMandatory[i] && (x.type == EServiceType.inclusive)) // && ((x.businessCase & EBusinessCase.bnt) === EBusinessCase.bnt))\r\n                        .firstOrDefault();\r\n                    }\r\n\r\n                    if (data) {\r\n                        console.log('data', data);\r\n                        if (this.props.parent.current) {\r\n                            this.props.parent.current.addService(data.id, undefined);\r\n                        };\r\n\r\n                        allMandatory.push(<page.LControl type={EControlType.checkbox}\r\n                            label={data.name}\r\n                            key={i} id={data.id}\r\n                            tooltip={data.tooltip}\r\n                            checked={true}\r\n                            disabled={true}\r\n                            onChange={() => { }}\r\n                            hideHint={true}\r\n                            hideTitle={false} />);\r\n                    };\r\n                    if(this.brand.id === BrandKeys.dsl && this.props.parent.current){\r\n                        this.props.parent.current.removeServiceLike('auto');\r\n                    }\r\n                };\r\n\r\n                ctrl =\r\n                    <>\r\n                        {\r\n                            (this.brand.id === BrandKeys.otelo || this.brand.id === BrandKeys.dsl) && svcMandatory.length > 0 ?\r\n                                <>\r\n                                    <div className=\"subtitle\">Inklusivpromotionen</div>\r\n                                    {allMandatory}\r\n                                    <div className=\"spacer-big clear\"></div>\r\n                                </>\r\n                                : null\r\n                        }\r\n                        <div className=\"subtitle\">Optionale Promotion</div>\r\n                        {all}\r\n                    </>\r\n            };\r\n        };\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderOptions(): JSX.Element {\r\n        let ctrl = (\r\n            <div className=\"subtitle\">{MainTexts.noOptions}</div>\r\n        );\r\n\r\n        this.virtualOptions = [];\r\n\r\n        if (this.current) {\r\n            if (this.current.length == 0 || (this.props.parent.current!.brandKey == BrandKeys.unity && !this.props.parent.current!.sub)) {\r\n                return ctrl;\r\n            };\r\n\r\n            let mandatory: string[] = [];\r\n\r\n            let selectable: string[] = OrderingHelper.filterServices(this.brand,\r\n                this.props.parent.current ? this.props.parent.current : new IActivation(this.brand.id),\r\n                EServiceType.option);\r\n\r\n            if (this.props.parent.current!.brandKey == BrandKeys.unity) {\r\n                let ubrand = linq.from<IAvailabilityBrand>(Global.categoryWrapper.avl.brands).where(x=>x.key == BrandKeys.unity).first();\r\n \r\n                let uprod = Global.categoryWrapper.avl.getProduct(BrandKeys.unity, this.props.parent.current!.productId);\r\n                let usubs = linq.from<IAvailabilityElement>(uprod.subs).where(x => x.id == this.props.parent.current!.sub).firstOrDefault();\r\n                //console.log('ususbs', usubs);\r\n                if (usubs) {\r\n                    selectable = linq.from<IAvailabilityElement>(usubs.options).select(x => x.id).distinct().toArray();\r\n                    mandatory = linq.from<IAvailabilityElement>(usubs.options).where(x => x.mandatory).select(x => x.id).toArray();\r\n\r\n                    if(ubrand.selection && ubrand.selection.children && ubrand.selection.children.length > 0) {\r\n                        ubrand.selection.children[0].children.map((i)=>{\r\n                            let virtsvc = linq.from<IService>(this.brand.services).where(x=>x.id == i.id).firstOrDefault();\r\n\r\n                            if(virtsvc && virtsvc.type == EServiceType.optionVirtual) {\r\n                                mandatory.push(i.id);\r\n                                selectable.push(i.id);\r\n                            };\r\n                        });\r\n                    };\r\n                };\r\n            };\r\n\r\n            if (this.props.parent.current) {\r\n                let pw = new ProductWrapper(this.props.parent.selectedBrand,\r\n                    this.current[0]);\r\n\r\n                let productId = this.props.parent.current.productId;\r\n\r\n                //kabel services are not bound to hardware\r\n                let svc = this.props.parent.current.brandKey == BrandKeys.kabel || this.props.parent.current.brandKey == BrandKeys.unity ? selectable\r\n                    : linq.from(pw.getServices(this.props.parent.current, EBusinessCase.bnt, this.props.parent.current.brandKey === BrandKeys.dsl))\r\n                        .where(x => selectable.indexOf(x) >= 0)\r\n                        .toArray();\r\n\r\n                this.props.parent.current.availability = StorageHelper.getAvailability();\r\n\r\n                let hasRegioOnly = this.props.parent.current.brandKey === BrandKeys.dsl ?\r\n                    this.props.parent.current.availability.hasRegioOnly(this.props.parent.current.brandKey, this.current[0].id) : false;\r\n\r\n                if (svc.length > 0) {\r\n                    let brandServices = this.brand.services;\r\n                    let all: JSX.Element[] = [];\r\n                    let avl: IAvailabilityBrand = StorageHelper.getAvailabilityForBrand(this.props.parent.current.brandKey);\r\n                    let avlProd = this.props.parent.current.brandKey === BrandKeys.kabel || this.props.parent.current.brandKey === BrandKeys.dsl ?\r\n                        linq.from<AvailabilityProduct>(avl.products).where(x => x.productId === productId).firstOrDefault() : undefined;\r\n\r\n                    for (let i = 0; i < svc.length; i++) {\r\n                        let isVirtual: boolean = false;\r\n                        let data = linq.from(brandServices)\r\n                            .where(x => x.id == svc[i] && (x.type === EServiceType.option || x.type === EServiceType.optionVirtual || x.type == EServiceType.optionBundle))\r\n                            .firstOrDefault();\r\n\r\n                        if (data) {\r\n                            let mandatorySelected: boolean = false;\r\n\r\n                            //**special case DSL: exclude virtual services */\r\n                            if (this.props.parent.current.brandKey === BrandKeys.dsl && avlProd) {\r\n                                let stay: boolean = true;\r\n\r\n                                //current option is virtual\r\n                                if (svc[i].indexOf('!') > 0) {\r\n                                    stay = false;\r\n                                    isVirtual = true;\r\n                                    //already selected so show it\r\n                                    if (this.props.parent.current.services.indexOf(svc[i]) >= 0) {\r\n                                        stay = true;\r\n                                    };\r\n\r\n                                    this.virtualOptions.push(data);\r\n                                };\r\n\r\n                                //the real one should be excluded\r\n                                if (this.virtualOptionsExclude.indexOf(svc[i]) >= 0 && !isVirtual) {\r\n                                    stay = false;\r\n                                };\r\n\r\n                                if (!stay) {\r\n                                    continue;\r\n                                }\r\n                            };\r\n\r\n                            //**we check for cable the mandatory services from the availability */\r\n                            if (this.props.parent.current.brandKey === BrandKeys.kabel && avlProd) {\r\n                                let svcAvl = linq.from<IAvailabilityService>(avlProd.elements).where(x => x.metaname === svc[i]).firstOrDefault();\r\n                                if (svcAvl && svcAvl.mandatory) {\r\n                                    mandatorySelected = true;\r\n                                };\r\n                            };\r\n\r\n                            if (this.current && this.props.parent.current\r\n                                && this.props.parent.current.availability\r\n                                && this.brand.id === BrandKeys.dsl) {\r\n                                var brandProducts = linq.from<IAvailabilityBrand>(this.props.parent.current.availability.brands)\r\n                                    .where(x => x.key === this.props.parent.current!.brandKey)\r\n                                    .first();\r\n\r\n                                var avprod = linq.from<AvailabilityProduct>(brandProducts.products)\r\n                                    .where(x => x.productId === (this.current ? this.current[0].id : ''))\r\n                                    .firstOrDefault();\r\n\r\n                                //** Add Regio for DSL */\r\n                                if (this.current) {\r\n                                    var prodSubSvc = linq.from<ISubConfig>(this.current[0].subs)\r\n                                        .where(x => x.id == this.props.parent.current!.sub)\r\n                                        .firstOrDefault();\r\n\r\n                                    if (hasRegioOnly) {\r\n                                        if (prodSubSvc) {\r\n                                            var prodSubService = linq.from<ISubServiceConfig>(prodSubSvc.sl)\r\n                                                .where(x => x.id == data!.id)\r\n                                                .firstOrDefault();\r\n                                            if (prodSubService && prodSubService.m) {\r\n                                                mandatorySelected = true;\r\n                                            };\r\n                                        };\r\n                                    } else {\r\n                                        //** remove regio option */\r\n                                        if (data.id.indexOf('svc_dsl_regio_16') >= 0) {\r\n                                            continue;\r\n                                        };\r\n                                    };\r\n                                };\r\n                                /**\r\n                                 * comfort option only if provided in the availability\r\n                                 */\r\n                                if (avprod) {\r\n                                    if (!avprod.hasComfort && data.id === \"svc_dsl_comfort\") {\r\n                                        continue;\r\n                                    }\r\n                                };\r\n                            };\r\n\r\n                            //**Kabel services rufnumerr are being served separatelly in a group */\r\n                            if (this.current && this.props.parent.current\r\n                                && this.props.parent.current.availability\r\n                                && this.brand.id === BrandKeys.kabel) {\r\n                                if (this.props.parent.current.productId.indexOf('kip') >= 0 && data.id.indexOf('rufnummer') >= 0) {\r\n                                    continue;\r\n                                };\r\n                            };\r\n\r\n                            let text = data.name +\r\n                                //'(' + data.id + ')' +\r\n                                ''; //(data.monthlyFee ? '( ' + Global.formatNumber(data.monthlyFee.price, 2, 2, data.monthlyFee.unit) + ' ' + data.id + ')' : '');\r\n                            let name = 'cb-' + data.id;\r\n\r\n                            let serviceDisabled = this.serviceDisabled(data.id);\r\n\r\n                            let serviceChecked = this.props.parent.current.services.indexOf(data.id) >= 0;\r\n\r\n                            if (mandatory && mandatory.indexOf(data.id) >= 0) {\r\n                                mandatorySelected = true;\r\n                            };\r\n\r\n                            if (mandatorySelected) {\r\n                                serviceDisabled = true;\r\n                                serviceChecked = true;\r\n                                this.props.parent.current.addService(data.id, undefined);\r\n                            };\r\n\r\n                            all.push(<page.LControl\r\n                                type={EControlType.checkbox}\r\n                                disabled={serviceDisabled}\r\n                                name={name}\r\n                                //label={text+ ':' + data.id + '(' + Global.feeToString(data.monthlyFee) + '/' + Global.feeToString(data.activationFee) + ')'}\r\n                                label={text}\r\n                                key={i}\r\n                                id={data.id}\r\n                                hideHint={true}\r\n                                checked={serviceChecked}\r\n                                tooltip={data.tooltip}\r\n                                onChange={this.selectOption} />);\r\n\r\n                            //render chidren for cable\r\n                            if (this.props.parent.current.brandKey === BrandKeys.kabel && avlProd && avlProd.elements && avlProd.elements.length > 0) {\r\n                                let a = linq.from<IAvailabilityService>(avlProd.elements).where(x => x.metaname === data!.id).firstOrDefault();\r\n                                if (a) {\r\n                                    a.elements.map((i, id) => {\r\n                                        let el = linq.from<IService>(brandServices)\r\n                                            .where(x => x.id === i.metaname)\r\n                                            .firstOrDefault();\r\n                                        if (el && i.metaname !== 'bereitstellungsentgelt-tv') {\r\n                                            serviceChecked = this.props.parent.current ? this.props.parent.current.services.indexOf(el.id) >= 0 : false;\r\n\r\n                                            all.push(\r\n                                                <div style={{ marginLeft: 30 }}>\r\n                                                    <page.LControl\r\n                                                        type={EControlType.checkbox}\r\n                                                        disabled={false}\r\n                                                        name={el.name}\r\n                                                        label={el.name +':'+ id }\r\n                                                        key={'child-' + id}\r\n                                                        id={el.id}\r\n                                                        hideHint={true}\r\n                                                        checked={serviceChecked}\r\n                                                        tooltip={data!.tooltip}\r\n                                                        onChange={this.selectOption} />\r\n                                                </div>);\r\n                                        };\r\n                                    });\r\n                                };\r\n                            };\r\n                        }\r\n                    }\r\n                    ctrl =\r\n                        (\r\n                            <>\r\n                                <div className=\"subtitle\">{MainTexts.tariffOptions}</div>\r\n                                {all}\r\n                            </>\r\n                        );\r\n\r\n                    return ctrl;\r\n                };\r\n            };\r\n        }\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderDate(): JSX.Element {\r\n        let css = 'dn';\r\n\r\n        let d: Date = Global.getToday();\r\n\r\n        if (this.props.parent.current && this.props.parent.current.brandKey === BrandKeys.unity) {\r\n            return <></>\r\n        };\r\n\r\n        if (this.props.parent.current && this.props.parent.current.brandKey === BrandKeys.dsl) {\r\n            d = Global.addDays(d, 9);\r\n        };\r\n        let dto: Date = Global.addDays(Global.getToday(), 365);\r\n\r\n        if (this.props.parent.current && this.props.parent.current.activationTime === EActivationTime.future) {\r\n            css = '';\r\n        };\r\n\r\n        if (!this.props.parent.dataWrapper.canEditActivation(this.props.parent.currentIndex)) {\r\n            return <></>;\r\n        };\r\n\r\n        if (this.state.selection === undefined) {\r\n            return <></>;\r\n        }\r\n\r\n        let ctrl = (\r\n            <>\r\n                {\r\n                    (this.brand.id === BrandKeys.vodafone || BrandKeys.otelo) && (this.state.selection.activationType !== EActivationType.actDefault && this.state.selection.activationType !== EActivationType.cdChange) ?\r\n                        <></> :\r\n                        <Container>\r\n                            <Row>\r\n                                <Col xs={6} md={6} className=\"npl\">\r\n                                    <page.LControl onChange={this.switchActivationDate} type={EControlType.radio}\r\n                                        id=\"activationTime-0\" name=\"activationTime\" label=\"Sofort\"\r\n                                        checked={this.props.parent.current ? this.props.parent.current.activationTime === EActivationTime.now : false} />\r\n                                </Col>\r\n                                <Col xs={6} md={6} className=\"npl\">\r\n                                    <page.LControl onChange={this.switchActivationDate} type={EControlType.radio}\r\n                                        id=\"activationTime-1\" name=\"activationTime\"\r\n                                        label={OrderingTexts.activationDate}\r\n                                        checked={this.props.parent.current ? this.props.parent.current.activationTime === EActivationTime.future : false} />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <page.LClear />\r\n\r\n                            <Row>\r\n                                <Col xs={6} md={6} className={css}>\r\n                                    <page.LDate id=\"activationDate\" title=\"\"\r\n                                        onChange={this.selectDate}\r\n                                        datePicker={true}\r\n                                        from={d}\r\n                                        to={dto}\r\n                                        type={EDateType.fixedStart}\r\n                                        value={this.props.parent.current ? this.props.parent.current.activationDate : undefined} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                }\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderAdditional(): JSX.Element {\r\n        if (!this.props.parent.dataWrapper.canEditActivation(this.props.parent.currentIndex)) {\r\n            return <></>;\r\n        };\r\n\r\n        let ctrl = (\r\n            <>\r\n                <div className=\"subtitle\">{MainTexts.additionalContract}</div>\r\n                <Container>\r\n                    <Row>\r\n                        {\r\n                            this.props.parent.current \r\n                            && (this.props.parent.current.activationType == EActivationType.actDefault || this.props.parent.current.activationType == EActivationType.partnerCard)\r\n                            && (this.props.parent.current.productId && this.props.parent.current.productId.toLowerCase().indexOf('redpl') >= 0) ?\r\n                                null :\r\n                                <Col xs={6} md={6} className=\"npl\">\r\n                                    <page.LControl onChange={this.switchAdditional} type={EControlType.radio}\r\n                                        id=\"additional-0\" name=\"additional\" label={MainTexts.no}\r\n                                        checked={this.props.parent.current!.additional === false} />\r\n                                </Col>\r\n                        }\r\n\r\n                        <Col xs={6} md={6} className=\"npl\">\r\n                            <page.LControl onChange={this.switchAdditional} type={EControlType.radio}\r\n                                id=\"additional-1\" name=\"additional\"\r\n                                label={MainTexts.yes}\r\n                                checked={this.props.parent.current!.additional === true} />\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        this.props.parent.current!.additional ?\r\n                            <Row>\r\n                                <Col xs={6} md={6}>\r\n                                    <page.LControl\r\n                                        id=\"customerId\"\r\n                                        name=\"customerId\"\r\n                                        type={EControlType.text}\r\n                                        maxLength={9}\r\n                                        title={MainTexts.customerId}\r\n                                        onChange={this.props.onChange}\r\n                                        value={this.props.parent.current!.customerId}\r\n                                        validationOptions={[\r\n                                            new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                            new ValidationOption({ type: EValidationOption.numeric, message: ValidationMessages.numericError })\r\n                                        ]} />\r\n                                    <page.LControl\r\n                                        id=\"customerPassword\"\r\n                                        name=\"customerPassword\"\r\n                                        type={EControlType.text}\r\n                                        title={MainTexts.customerPassword}\r\n                                        onChange={this.props.onChange}\r\n                                        maxLength={30}\r\n                                        value={this.props.parent.current!.customerPassword}\r\n                                        validationOptions={this.validationOptionsPassword} />\r\n                                </Col>\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                </Container>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private switchActivationDate(e: any) {\r\n        let sa = e.id.split('-');\r\n\r\n        if (this.props.parent.current) {\r\n            this.props.parent.current.activationTime = parseInt(sa[1]);\r\n            if (sa[1] === '0') {\r\n                this.props.parent.current.activationDate = new Date();\r\n                StorageHelper.updateActivation(this.props.parent.current);\r\n                this.props.parent.setState({ changed: true });\r\n            }\r\n        }\r\n\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private switchAdditional(e: any) {\r\n        if(this.props.parent.current && (this.props.parent.current.activationType == EActivationType.partnerCard || this.props.parent.current.activationType == EActivationType.partnerCardPortation)){\r\n            return;\r\n        }\r\n        let sa = e.id.split('-');\r\n        let active: boolean = parseInt(sa[1]) === 0 ? false : true;\r\n        if (!active) {\r\n            this.props.parent.current!.customerId = '';\r\n            this.props.parent.current!.customerPassword = '';\r\n        };\r\n        this.props.parent.current!.additional = active;\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private switchActivationType(e: any) {\r\n        let sa = e.id.split('-');\r\n        if (this.props.parent.current) {\r\n            this.props.parent.current.activationType = parseInt(sa[1]);\r\n        }\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private selectDate(e: IControlValue) {\r\n        if (this.props.parent.current) {\r\n            this.props.parent.current.activationDate = e.dateValue ? e.dateValue : new Date();\r\n            StorageHelper.updateActivation(this.props.parent.current);\r\n            this.props.parent.setState({ changed: true });\r\n        }\r\n    };\r\n\r\n    private selectOption(e: IControlValue, checked: boolean) {\r\n        if (this.props.parent.current) {\r\n            /** unity basket is being validated before setting the option */\r\n            if (!checked && this.props.parent.current.brandKey === BrandKeys.unity) {\r\n                var a = IActivation.clone(this.props.parent.current);\r\n                a.availability = new Availability();\r\n                a.addRemoveService(e.id, undefined);\r\n                this.props.parent.syncOrder(a, (res: IApiResponse) => {\r\n                    if (res.status == EApiResponseStatus.ok) {\r\n                        StorageHelper.updateAvailability(BrandKeys.unity, res.data.avl);\r\n                        //some options for unity are being removed in background\r\n                        if(res.data.avl.selection && res.data.avl.selection.children[0]){\r\n                            this.props.parent.current!.services = linq.from<TreeItem>(res.data.avl.selection.children[0].children)\r\n                                .select(x=>x.id)\r\n                                .distinct()\r\n                                .toArray();\r\n                            StorageHelper.updateActivation(this.props.parent.current!);\r\n                        };\r\n                        this.selectOption(e, true);\r\n                    };\r\n                });\r\n\r\n                return;\r\n            };\r\n\r\n            if (e.checked) {\r\n                if (this.props.parent.current.brandKey === BrandKeys.dsl) {\r\n                    //VAS-411\r\n                    let flatSelected = Global.indexOfAny(this.props.parent.current.services, ['V1205', 'V1206', 'V1207']);\r\n\r\n                    if (!flatSelected && e.id === 'V0987' && this.props.parent.current.services.indexOf('V0987') < 0) {\r\n                        this.popupVirtualOptionsVisible = true;\r\n                        this.virtualOptionsExclude = [];\r\n                    };\r\n                };\r\n\r\n                this.props.parent.current.addService(e.id, undefined);\r\n                this.props.parent.refresh();\r\n            } else {\r\n                if (this.props.parent.current.brandKey === BrandKeys.dsl) {\r\n                    if (e.id === 'V0987') {\r\n                        this.props.parent.current.removeServiceLike('!');\r\n                        this.virtualOptionsExclude = [];\r\n                    };\r\n                };\r\n\r\n                this.props.parent.current.removeService(e.id, undefined);\r\n                this.props.parent.refresh();\r\n            }\r\n        }\r\n        this.props.parent.refresh();\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private selectOptionVirtual(e: IControlValue) {\r\n        this.virtualOptionsExclude = [];\r\n\r\n        if (!e.checked) {\r\n\r\n            if (this.props.parent.current) {\r\n                this.props.parent.current.removeService(e.id, undefined);\r\n            };\r\n        } else {\r\n            //exclude the real one\r\n            let id: string = e.id.substring(0, e.id.indexOf('!'));\r\n\r\n            this.virtualOptionsExclude.push(id);\r\n            if (this.props.parent.current) {\r\n                this.props.parent.current.addService(e.id, undefined);\r\n            };\r\n        };\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private serviceDisabled(id: string): boolean {\r\n        return this.props.parent.current ? this.props.parent.current.validateService(id) : false;\r\n    };\r\n\r\n    private renderPopupVirtualOptions(): JSX.Element {\r\n        if (!this.popupVirtualOptionsVisible) { return <></>; }\r\n\r\n        let services: string[] = this.props.parent.current ? this.props.parent.current.services : [];\r\n        let virtualIds: string[] = linq.from<IService>(this.virtualOptions).select(x => x.id).toArray();\r\n        let selectedVirtual: string[] = linq.from<string>(services).where(x => x.indexOf('!') > 0).toArray();\r\n\r\n        let all: JSX.Element[] = [];\r\n\r\n        this.virtualOptions.map((i, idx) => {\r\n            all.push(<page.LControl\r\n                type={EControlType.checkbox}\r\n                disabled={selectedVirtual.length > 0 && selectedVirtual.indexOf(i.id) < 0}\r\n                name={name}\r\n                label={i.name}\r\n                key={idx}\r\n                id={i.id}\r\n                hideHint={true}\r\n                checked={selectedVirtual.indexOf(i.id) >= 0}\r\n                tooltip={i.tooltip}\r\n                onChange={this.selectOptionVirtual} />);\r\n        });\r\n\r\n        let cfg: IPopupConfig = {\r\n            props: {\r\n                id: 'virtualPopupOptions',\r\n                title: 'Optionen',\r\n                visible: true,\r\n                closable: false,\r\n                type: EPopupType.custom,\r\n                height: 400\r\n            },\r\n            action: <>\r\n                <page.LButton text={MainTexts.ready} css=\"fr\" icon=\"ok\"\r\n                    type={ELButtonType.buttonWithIconRight}\r\n                    onClick={() => { this.popupVirtualOptionsVisible = false; this.setState({ changed: true }); }} />\r\n            </>,\r\n            content: <>\r\n                <div className=\"text-sub tal\">\r\n                    Kombinier Mobilfunk mit Internet & Telefon, dann bekommst Du: Kostenlos die Mobile & Euro-Flat (Standardpreis: 9,99 Euro pro Monat) oder 9,99 Euro Gutschrift pro Monat auf höherwertige internationale Flats für Deine Festnetzanschluss.\r\n\r\n                    <br /><br />Bitte wähle eine Option aus.\r\n                </div>\r\n                <div className=\"spacer\" />\r\n                <div>\r\n                    {all}\r\n                </div>\r\n            </>\r\n        };\r\n\r\n        let actionAllowed = Global.indexOfAny(this.props.parent.current!.services, virtualIds);\r\n\r\n        return GlobalJSX.GetPopup(cfg.props, cfg.content, actionAllowed ? cfg.action : <></>);\r\n    };\r\n\r\n    private renderRefreshAvailability(): JSX.Element {\r\n        if (!this.popupRefreshAvailability) { return <></>; }\r\n\r\n        let avl = StorageHelper.getAvailability();\r\n        let closable: boolean = false;\r\n\r\n        let model = {\r\n            orderId: avl.id,\r\n            brand: BrandKeys.kabel,\r\n            product: this.props.parent.current ? this.props.parent.current.productId : '',\r\n            sub: this.props.parent.current ? this.props.parent.current.sub : '',\r\n            services: this.props.parent.current ? this.props.parent.current.services : []\r\n        };\r\n\r\n        Api.fetch('activation/availability', model, \"POST\", (api) => {\r\n            var sum = Api.parseSummary(api, undefined);\r\n            if (sum.status == ERequestStatus.done || sum.status == ERequestStatus.running) {\r\n                StorageHelper.updateAvailability(BrandKeys.kabel, api.data);\r\n                this.popupRefreshAvailability = false;\r\n                this.setState({ changed: true });\r\n            } else {\r\n                var popup = Global.FindReact(document.getElementById(ActivationTariff.idAvailabilityPopup)) as Popup;\r\n\r\n                popup.refresh(true, true, EPopupType.custom, <div>Fehler</div>);\r\n            }\r\n        });\r\n\r\n        let cfg: IPopupConfig = {\r\n            props: {\r\n                id: ActivationTariff.idAvailabilityPopup,\r\n                title: 'Verfügbarkeit wird aktualisiert',\r\n                visible: true,\r\n                closable: closable,\r\n                type: EPopupType.pleaseWait,\r\n                onDismiss: () => {\r\n                    this.popupRefreshAvailability = false;\r\n                    this.setState({ changed: true });\r\n                }\r\n            },\r\n            content: <></>\r\n        };\r\n\r\n        return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n    };\r\n\r\n    private startAvailabilityIfNeeded() {\r\n        if (this.props.parent.current) {\r\n            if (this.props.parent.current.brandKey == BrandKeys.kabel) {\r\n                let hasHw = this.props.parent.current!.hasHardware();\r\n\r\n                if (hasHw) {\r\n                    ActivationOptions.getMe().checkAvailabilityStart(this.props.parent.current);\r\n                }\r\n            };\r\n        };\r\n    };\r\n\r\n    public componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n\r\n        //start avl if not present\r\n        if (this.props.parent.current!.brandKey == BrandKeys.unity && this.props.parent.current!.productId) {\r\n            let prod = StorageHelper.getAvailabilityProduct(BrandKeys.unity, this.props.parent.current!.productId);\r\n\r\n            if (prod && (!prod.subs || prod.subs.length == 0)) {\r\n                this.props.parent.syncOrder(this.props.parent.current!, (res: IApiResponse) => {\r\n                    if (res.status == EApiResponseStatus.ok) {\r\n                        StorageHelper.updateAvailability(BrandKeys.unity, res.data.avl);\r\n                        Global.categoryWrapper.reset();\r\n                        this.setState({ changed: true });\r\n                    };\r\n                });\r\n            };\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IActivationTariffProps) {\r\n        //console.log('selection:', next.selection);\r\n        this.setState({\r\n            //selectedSub: this.props.parent.current ? this.props.parent.current.sub : '',\r\n            //selectedTariff: next.tariff,\r\n            selection: next.selection\r\n        });\r\n    };\r\n\r\n    public render() {\r\n        this.brand = Global.categoryWrapper.getCategoryBrand(this.props.parent.data);\r\n\r\n        this.current = linq.from<IProduct>(this.brand.products)\r\n            .where(x => this.props.parent.current!.selection.getChildrenIds().indexOf(x.id) >= 0)\r\n            .toArray();\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.activationBNTTariff,\r\n            id: ActivationTariff.componentId,\r\n            transparent: false\r\n        };\r\n\r\n        let ctrl = (\r\n            <BlockBase config={cfg}>\r\n                <></>\r\n\r\n                {this.renderRefreshAvailability()}\r\n                {this.renderGroups()}\r\n                <div className=\"spacer-big clear\"></div>\r\n                {\r\n                    this.props.selection && this.props.selection.creditDebitType === ECreditDebitType.postpaid ?\r\n                        this.renderSub(undefined) : <></>\r\n                }\r\n                <div className=\"spacer-big clear\"></div>\r\n                {\r\n                    this.brand.id === BrandKeys.vodafone ?\r\n                        <ActivationServiceSelector\r\n                            activation={this.props.parent.current ? this.props.parent.current : new IActivation(this.props.parent.selectedBrand)}\r\n                            bc={EBusinessCase.bnt}\r\n                            onChanged={() => { this.props.parent.setState({ changed: true }) }}\r\n                            canEdit={this.props.parent.dataWrapper.canEditActivation(this.props.parent.currentIndex)}\r\n                            brand={this.brand} /> :\r\n                        <>\r\n                            {\r\n                                this.props.parent.current && this.props.parent.current.brandKey != BrandKeys.kabel ?\r\n                                    this.renderPromotions()\r\n                                    : null\r\n                            }\r\n\r\n                            {\r\n                                this.brand.id === BrandKeys.kabel ?\r\n                                    <>\r\n                                        <CableRenderer brand={this.brand}\r\n                                            type={ERenderType.options}\r\n                                            act={this.props.parent.current ? this.props.parent.current : new IActivation(this.brand.id)} />\r\n                                    </>\r\n                                    : null\r\n                            }\r\n\r\n                            <div className=\"spacer-big clear\"></div>\r\n\r\n                            {\r\n                                this.brand.id === BrandKeys.kabel ?\r\n                                    <ActivationOptions\r\n                                        parent={this.props.parent}\r\n                                        tariff={this}\r\n                                        onChange={this.onSelectedOptionsChanged}></ActivationOptions>\r\n                                    : this.renderOptions()\r\n                            }\r\n                            <div className=\"spacer-big clear\"></div>\r\n\r\n                        </>\r\n                }\r\n\r\n                {this.renderPopupVirtualOptions()}\r\n\r\n                {this.renderDate()}\r\n\r\n                {\r\n                    this.brand.id == BrandKeys.vodafone ? this.renderAdditional() : <></>\r\n                }\r\n            </BlockBase>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public onSelectTariff(value: string, checked: boolean) {\r\n\r\n        if (this.props.parent.current) {\r\n            this.props.parent.current.familyId = this.brand.products.find(x => x.id === value)!.familyId;\r\n        }\r\n\r\n        if (!this.props.parent.canEditActivation()) { return; }\r\n\r\n        if (!checked && this.props.parent.current!.brandKey == BrandKeys.unity) {\r\n            this.props.parent.current!.productId = value;\r\n            this.props.parent.current!.sub = '';\r\n            this.props.parent.syncOrder(this.props.parent.current!, (res: IApiResponse) => {\r\n                if (res.status == EApiResponseStatus.ok) {\r\n                    StorageHelper.updateAvailability(BrandKeys.unity, res.data.avl);\r\n\r\n                    this.onSelectTariff(value, true);\r\n                };\r\n            });\r\n        }\r\n\r\n        if (this.props.parent.current) {\r\n            this.props.parent.current.addRemoveProduct(value);\r\n\r\n            //this.props.parent.current.productId = value;\r\n            if (this.props.parent.current.brandKey != BrandKeys.kabel) {\r\n                this.props.parent.current.sub = '';\r\n                this.props.parent.current.services = [];\r\n            }\r\n        }\r\n\r\n        StorageHelper.updateActivation(this.props.parent.current!);\r\n\r\n        if (this.props.selectionChanged) {\r\n            this.props.selectionChanged();\r\n        }\r\n\r\n        this.startAvailabilityIfNeeded();\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public onSelectSub(value: string, checked: boolean) {\r\n        if (!this.props.parent.canEditActivation()) { return; }\r\n\r\n        let ids = value.split(Defaults.listSeparator);\r\n\r\n        if(this.props.parent.current!.brandKey == BrandKeys.kabel) {\r\n            ActivationOptions.getMe().handleSelection({mandatory: true, productId: ids[0], id: ids[1], level: 1, path: [ids[1]]});\r\n            return;\r\n        };\r\n\r\n        if (!checked && this.props.parent.current!.brandKey == BrandKeys.unity) {\r\n            this.props.parent.current!.sub = ids[1];\r\n            this.props.parent.current!.services = [];\r\n            this.props.parent.syncOrder(this.props.parent.current!, (res: IApiResponse) => {\r\n                if (res.status == EApiResponseStatus.ok) {\r\n                    StorageHelper.updateAvailability(BrandKeys.unity, res.data.avl);\r\n\r\n                    this.onSelectSub(value, true);\r\n                };\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.props.parent.current!.sub = ids[1];\r\n        if (this.props.parent.current!.brandKey !== BrandKeys.kabel) {\r\n            this.props.parent.current!.selection.children[0].children = [];\r\n            this.props.parent.current!.services = [];\r\n        }\r\n\r\n        //preselected unity services\r\n        if (this.props.parent.current!.brandKey == BrandKeys.unity) {\r\n            let avl = StorageHelper.getAvailabilityForBrand(BrandKeys.unity);\r\n            if(avl.products) {\r\n                let p = linq.from<AvailabilityProduct>(avl.products).where(x=>x.productId == this.props.parent.current!.productId).firstOrDefault();\r\n                if(p && p.subs) {\r\n                    let s = linq.from<IAvailabilityElement>(p.subs).where(x=>x.id == this.props.parent.current!.sub).firstOrDefault();\r\n                    if(s) {\r\n                        let selSvc = linq.from<IAvailabilityElement>(s.options).where(x=>x.selected).toArray();\r\n\r\n                        selSvc.map((i) => {\r\n                            if (!this.props.parent.current!.hasService(i.id, this.props.parent.current!.productId)) {\r\n                                this.props.parent.current!.addService(i.id, this.props.parent.current!.productId);\r\n                            };\r\n                        });\r\n                    };\r\n                };\r\n            };\r\n        };\r\n\r\n        TreeItem.addRemovePath(this.props.parent.current!.selection, Array.from(ids));\r\n\r\n        let hasHw = this.props.parent.current!.hasHardware();\r\n\r\n        if (!hasHw) {\r\n            this.props.parent.current!.selection.find(ids[0])!.resetChildren();\r\n            ActivationOptions.getMe().initSelection(ids[0]);\r\n            this.props.parent.current!.sub = '';\r\n        };\r\n\r\n        if (this.props.selectionChanged) {\r\n            this.props.selectionChanged();\r\n        }\r\n\r\n        if (hasHw) {\r\n            this.startAvailabilityIfNeeded();\r\n        };\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public onSelectedOptionsChanged(options: string[]) {\r\n        if (this.props.parent.current) {\r\n            this.props.parent.current.services = options;\r\n\r\n            if (this.props.selectionChanged) {\r\n                this.props.selectionChanged();\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nexport default ActivationTariff;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport * as cmp from '../../../components/index';\r\nimport { OrderDataWrapper } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport IActivation, { ActivationHelper, ActivationUI, ActivationWrapper } from '../../../models/ordering/activation';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport { EActivationType, EOrderProcessView } from '../../../models/ordering/order';\r\nimport { ELButtonType, ERequestType } from '../../../models/page/diverse';\r\nimport { CombiWrapper } from '../../../models/support/ISupportWrapper';\r\nimport { CustomerScreen } from '../../../screens/insex';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { ActivationMessages, MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport EasyRouter from '../../../utils/router';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport { EPopupType } from '../../dialogs/popup';\r\nimport * as page from '../../page/index';\r\nimport LLabel from '../../page/label';\r\n\r\nexport interface IActivationSummaryProps {\r\n    activations: IActivation[];\r\n    parent: ProcessNewScreen\r\n};\r\n\r\nexport interface IActivationSummaryState {\r\n    confirmRemove: boolean;\r\n    changed: boolean;\r\n    htmlDiscount: string;\r\n    vodafoneIsChecked: boolean;\r\n};\r\n\r\nexport class ActivationSummary extends React.Component<IActivationSummaryProps, IActivationSummaryState> {\r\n    private brands: IBrand[];\r\n    private brutto: number = 0;\r\n    private bruttoAct: number = 0;\r\n    private hasGiga: boolean = false;\r\n    private pr: EOrderProcessView = EOrderProcessView.tariff;\r\n    private currentIndex: number = -1;\r\n    public static containerId: string = 'activationsummary';\r\n    private aw: ActivationWrapper;\r\n\r\n    constructor(props: IActivationSummaryProps) {\r\n        super(props);\r\n\r\n        this.socketCallback = this.socketCallback.bind(this);\r\n\r\n        this.brands = StorageHelper.getBrands();\r\n\r\n        this.aw = new ActivationWrapper(this.props.parent.data);\r\n\r\n        this.state = {\r\n            confirmRemove: false, changed: false, htmlDiscount: '', vodafoneIsChecked: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IActivationSummaryProps) {\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public render() {\r\n        this.pr = this.props.parent.getProgress();\r\n\r\n        this.aw = new ActivationWrapper(this.props.parent.data);\r\n\r\n        let css: string = this.props.activations.length < 3 ? 'fixed' : '';\r\n\r\n        let cw = CombiWrapper.GetInstance();\r\n        var c = cw.getFirstSuitableCombi(this.props.parent.dataWrapper, true);\r\n        \r\n        let ctrl = (\r\n            <>\r\n                {this.renderPopupConfirm()}\r\n                <div className={\"infobox \" + css} id={ActivationSummary.containerId}>\r\n                    <page.LButton type={ELButtonType.icon} icon=\"summary\" text=\"ZUSAMMENFASSUNG\" />\r\n                    <div className=\"spacer-big\"></div>\r\n                    {this.renderActivations()}\r\n                    { \r\n                        c && c.getBlister() ? \r\n                            <>\r\n                                <div className=\"spacer-medium\" />\r\n                                <div className=\"\" dangerouslySetInnerHTML={{ __html: c.getBlister()}}></div>\r\n                            </>\r\n                         : null\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderActivations(): JSX.Element {\r\n        this.brutto = 0;\r\n        this.bruttoAct = 0;\r\n\r\n        let cfg1: IBlockConfiguration = {\r\n            title: '',\r\n            transparent: false,\r\n            style: '',\r\n            styleContainer: 'block-innerMiddle',\r\n            collapsible: false,\r\n            collapsed: false\r\n        };\r\n\r\n        this.hasGiga = OrderDataWrapper.hasGiga(this.props.parent.data);\r\n\r\n        if (!OrderDataWrapper.previewAvailableForAtLeastOne(this.props.activations)) {\r\n            return <div>Keine Buchungen</div>\r\n        };\r\n\r\n        let ctrl = (\r\n            <>\r\n                <div className=\"inner\">\r\n                    {this.aw.items.map((i, idx) => (\r\n                        <div key={'act-' + idx}>\r\n                            {this.renderActivation(i, idx)}\r\n                            {\r\n                                idx == this.aw.items.length - 1 ? null : <div key={'sep-' + i} className=\"sep\" />\r\n                            }\r\n                        </div>\r\n                    ))}\r\n\r\n                    {this.renderSummary()}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderSummary(): JSX.Element {\r\n        let ctrl = (\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12} md={12} className=\"info infor\">\r\n                        <LLabel text={Global.feeToString(this.aw.getMonthlyFee())} css=\"big\" />\r\n                    </Col>\r\n                    <Col xs={12} md={12} className=\"info infor\">\r\n                        <LLabel text={MainTexts.feeMonthTotal} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={12} md={12} className=\"info infor\">\r\n                        <LLabel text={Global.feeToString(this.aw.getActivationFee())} css=\"big\" />\r\n                    </Col>\r\n                    <Col xs={12} md={12} className=\"info infor\">\r\n                        <LLabel text={MainTexts.feeActTotal} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public socketCallback(api: any) {\r\n       \r\n        if (api) {\r\n           \r\n            if (api.error) {\r\n                this.props.parent.showPopup(EPopupType.custom, api.error.message, true);\r\n            } else {\r\n                this.props.parent.showPopup(EPopupType.custom, ActivationMessages.saveSuccess, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    // private getTooltipOptions(brand: IBrand, act: IActivation): string {\r\n    //     if (act.services && act.services.length) {\r\n    //         let res = linq.from<IService>(brand.services)\r\n    //             .where(x => act.services.indexOf(x.id) >= 0)\r\n    //             .select(x => x.tooltipExtra ? '<li>' + x.tooltipExtra + '</li>' : '')\r\n    //             .toArray();\r\n\r\n    //         return res.join('');\r\n    //     };\r\n\r\n    //     return '';\r\n    // };\r\n\r\n    private renderActivation(ah: ActivationHelper, idx: number) {\r\n\r\n        if (ah.hasMultiple()) {\r\n            let all: JSX.Element[] = [];\r\n           \r\n            ah.items.map((i, j) => {\r\n                all.push(this.renderActivationSingle(i, j, true, idx));\r\n            })\r\n\r\n            return all;\r\n        } else {\r\n            return this.renderActivationSingle(ah.items[0], idx, false, idx);\r\n        }\r\n    };\r\n\r\n    private renderActivationSingle(item: ActivationUI, \r\n        idx: number, /**index of activation inside selection */\r\n        isMultiple: boolean, \r\n        actIndex: number /** unique activation index*/): JSX.Element {\r\n        \r\n        if (!item.productId) { return <></>; };\r\n\r\n        let cssi = 'brandi ' + item.brandKey;\r\n        let ctrl = (\r\n            <div key={'act-' + Global.getUniqueId()}>\r\n                <div className={cssi}></div>\r\n\r\n                <div className=\"action\">\r\n                    {\r\n                        item.isDone() === false && (!isMultiple || (isMultiple && idx == 0)) ?\r\n                            <>\r\n                                {\r\n                                    <page.LButton type={ELButtonType.iconImage}\r\n                                        icon=\"edit\"\r\n                                        onClick={this.editContract}\r\n                                        clickModel={actIndex} />\r\n                                }\r\n                                {\r\n                                    item.brandKey == BrandKeys.unity ? null : \r\n                                    <page.LButton type={ELButtonType.iconImage}\r\n                                        icon=\"save\"\r\n                                        onClick={this.saveDraft}\r\n                                        clickModel={actIndex} />\r\n\r\n                                }\r\n                                {\r\n                                    this.pr === EOrderProcessView.tariff || this.pr === 0 ?\r\n                                        <page.LButton type={ELButtonType.iconImage}\r\n                                            icon=\"trash\"\r\n                                            onClick={this.removeContract}\r\n                                            clickModel={actIndex} />\r\n                                        : null\r\n                                }\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"product\">\r\n                    <div className=\"title\">{item.product!.name}</div>\r\n\r\n                    <div className=\"spacer\" />\r\n\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={6} md={6} className=\"info infol np\">\r\n                                {\r\n                                    item.ttProduct ?\r\n                                        <ReactTooltip place=\"top\" type=\"light\" effect=\"solid\" id={'tt-pr-' + item.id}>\r\n                                            <div dangerouslySetInnerHTML={{ __html: item.ttProduct }} />\r\n                                        </ReactTooltip>\r\n                                        : null\r\n                                }\r\n\r\n                                <label data-tip={item.ttProduct} data-for={'tt-pr-' + item.id}>{OrderingTexts.tariff}</label>\r\n                            </Col>\r\n\r\n                            <Col xs={6} md={6} className=\"info infor\">\r\n                                <LLabel text={Global.feeToString(item.getProductMonthlyFee())} />\r\n                            </Col>\r\n\r\n                            <Col xs={6} md={6} className=\"info infol np\">\r\n                                {\r\n                                    item.ttHardware ?\r\n                                        <ReactTooltip place=\"top\" type=\"light\" effect=\"solid\" id={'tt-sub-' + item.id}>\r\n                                            <div dangerouslySetInnerHTML={{ __html: item.ttHardware }} />\r\n                                        </ReactTooltip>\r\n                                        : null\r\n                                }\r\n\r\n                                <label data-tip={item.ttHardware} data-for={'tt-sub-' + item.id}>{OrderingTexts.sub}</label>\r\n                            </Col>\r\n                            <Col xs={6} md={6} className=\"info infor\">\r\n                                <LLabel text={Global.feeToString(item.getSubMonthlyFee())} />\r\n                            </Col>\r\n\r\n                            <Col xs={6} md={6} className=\"info infol np\">\r\n                                {\r\n                                    item.ttOptions ?\r\n                                        <ReactTooltip place=\"top\" type=\"light\" effect=\"solid\" id={'tt-op-' + item.id}>\r\n                                            <div dangerouslySetInnerHTML={{ __html: item.ttOptions }} />\r\n                                        </ReactTooltip>\r\n                                        : null\r\n                                }\r\n                                <label data-tip={item.ttOptions} data-for={'tt-op-' + item.id}>{OrderingTexts.options}</label>\r\n                            </Col>\r\n                            <Col xs={6} md={6} className=\"info infor\">\r\n                                <LLabel text={Global.feeToString(item.getOptionMonthlyFee())} />\r\n                            </Col>\r\n\r\n                            <Col xs={6} md={6} className=\"info infol np\">\r\n                                {\r\n                                    item.ttActivation ?\r\n                                        <ReactTooltip place=\"top\" type=\"light\" effect=\"solid\" id={'tt-ac-' + item.id}>\r\n                                            <div dangerouslySetInnerHTML={{ __html: item.ttActivation }} />\r\n                                        </ReactTooltip>\r\n                                        : null\r\n                                }\r\n                                <label data-tip={item.ttActivation} data-for={'tt-ac-' + item.id}>{MainTexts.activationFee}</label>\r\n                            </Col>\r\n\r\n                            <Col xs={6} md={6} className=\"info infor\">\r\n                                <LLabel text={Global.feeToString(item.getActivationFee())} />\r\n                            </Col>\r\n\r\n                            <Col xs={6} md={6} className=\"info infol np\">\r\n                                <LLabel text={MainTexts.feeMonthTotal} css=\"best\" />\r\n                            </Col>\r\n                            <Col xs={6} md={6} className=\"info infor\">\r\n                                <LLabel text={Global.feeToString(item.getMonthlyFee())} css=\"best\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <div className=\"sline\"></div>\r\n                </div>\r\n                <page.LClear />\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private removeContract = (idx: number) => {\r\n        let a = this.props.activations[idx];\r\n\r\n        if (a.activationType === EActivationType.partnerCard) {\r\n\r\n            StorageHelper.removeOrder(a.processId, () => {\r\n                EasyRouter.route({\r\n                    url: CustomerScreen.uri + this.props.parent.data.parentId,\r\n                    title: MainTexts.existingCustomerActivation\r\n                });\r\n            });\r\n\r\n            return;\r\n        } else {\r\n            this.currentIndex = idx;\r\n            this.setState({ confirmRemove: true });\r\n        }\r\n\r\n    };\r\n\r\n    private onDismissConfirmPopup = () => {\r\n        this.setState({ confirmRemove: false });\r\n    };\r\n\r\n    private renderPopupConfirm(): JSX.Element {\r\n        return <cmp.Popup\r\n            type={EPopupType.confirm}\r\n            visible={this.state.confirmRemove}\r\n            closable={true}\r\n            id=\"wait\"\r\n            key=\"popup-confirm\"\r\n            title={MainTexts.pleaseWait}\r\n            height={200}\r\n            onDismiss={this.onDismissConfirmPopup}\r\n            onNegative={this.onDismissConfirmPopup}\r\n            onPositive={() => {\r\n                this.props.parent.removeActivation(this.currentIndex);\r\n                this.currentIndex = -1;\r\n                this.setState({ confirmRemove: false });\r\n            }}>\r\n            <cmp.PopupBody>\r\n                <></>\r\n                <></>\r\n            </cmp.PopupBody>\r\n            <></>\r\n        </cmp.Popup>\r\n    };\r\n\r\n    private saveDraft = (idx: number) => {\r\n        this.props.parent.showPopup(EPopupType.pleaseWait, '', true);\r\n\r\n        let draft = this.props.parent.dataWrapper.getDraftFromActivation(this.props.parent.data.activations[idx].id);\r\n\r\n        setTimeout(() => {\r\n            Global.hub.send(JSON.stringify(draft),\r\n                ERequestType.saveDraft, undefined\r\n            );\r\n        }, 1000);\r\n    };\r\n\r\n    private editContract = (idx: number) => {\r\n        let pr = this.props.parent.getProgress();\r\n\r\n        if (pr !== EOrderProcessView.tariff) {\r\n            this.props.parent.gotoView(EOrderProcessView.tariff, () => {\r\n                this.props.parent.editActivation(idx);\r\n            });\r\n        } else {\r\n            this.props.parent.editActivation(idx);\r\n        };\r\n    };\r\n};\r\n\r\nexport default ActivationSummary;","import * as React from 'react';\r\nimport { ELElementStatus, ELButtonType } from '../../../models/page/diverse';\r\nimport { EOrderProcessView, EcancellationProcessView } from '../../../models/ordering/order';\r\nimport Global from '../../../utils/Global';\r\nimport * as page from '../../page/index';\r\nimport { OrderStages, OrderProductStages } from '../../../utils/messages';\r\n\r\nexport interface IActivationProgressProps {\r\n    progress: EOrderProcessView;\r\n    states: string[];\r\n};\r\n\r\nexport class ActivationProgress extends React.Component<IActivationProgressProps, any> {\r\n    constructor(props: IActivationProgressProps) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        let sprog = Global.getStringFromEnum(EOrderProcessView, this.props.progress);\r\n\r\n        let cssp: string = 'iprogress-bg ' + sprog;\r\n\r\n        let ctrl = (\r\n            <>\r\n                <div className=\"block block-inner block-trans iprogress\">\r\n                    <div className=\"inner\">\r\n                        <div className={cssp} />\r\n                        <div className=\"iprogress-icons\">\r\n                            {this.props.states.indexOf(OrderStages.tariff) >= 0 ? <page.LButton type={ELButtonType.icon}\r\n                                icon=\"tariff\" text=\"Tarif\" status={this.getProgressStatus(EOrderProcessView.tariff)} /> : null}\r\n                            {this.props.states.indexOf(OrderStages.customer) >= 0 ? <page.LButton type={ELButtonType.icon}\r\n                                icon=\"customer\" text=\"Kundendaten\" status={this.getProgressStatus(EOrderProcessView.customer)} /> : null}\r\n                            {this.props.states.indexOf(OrderStages.done) >= 0 ? <page.LButton type={ELButtonType.icon}\r\n                                icon=\"deal\" text=\"Abschluss\" status={this.getProgressStatus(EOrderProcessView.done)} /> : null}\r\n\r\n                            {this.props.states.indexOf(OrderStages.cancellation) >= 0 ? <page.LButton type={ELButtonType.icon}\r\n                                icon=\"selection\" text=\"AUSWAHL\" status={this.getProgressStatus(EOrderProcessView.cancellation)} /> : null}\r\n                            {this.props.states.indexOf(OrderStages.overview) >= 0 ? <page.LButton type={ELButtonType.icon}\r\n                                icon=\"overview\" text=\"ÜBERSICHT\" status={this.getProgressStatus(EOrderProcessView.overview)} /> : null}\r\n                            {this.props.states.indexOf(OrderStages.summary) >= 0 ? <page.LButton type={ELButtonType.icon}\r\n                                icon=\"summary\" text=\"ZUSAMMENFASSUNG\" status={this.getProgressStatus(EOrderProcessView.summary)} /> : null}\r\n\r\n                            {this.props.states.indexOf(OrderProductStages.selectProducts) >= 0 ? <page.LButton type={ELButtonType.icon}\r\n                                icon=\"add-sim\" text=\"PRODUKTE AUSWÄHLEN\" status={this.getProgressStatusForOrderProducts(EOrderProcessView.selectProduct)} /> : null}\r\n                            {this.props.states.indexOf(OrderProductStages.deliveryAddress) >= 0 ? <page.LButton type={ELButtonType.icon}\r\n                                icon=\"calls-contacts\" text=\"LIEFERANSCHRIFT\" status={this.getProgressStatusForOrderProducts(EOrderProcessView.deliveryAddress)} /> : null}\r\n                            {this.props.states.indexOf(OrderProductStages.overviewOrder) >= 0 ? <page.LButton type={ELButtonType.icon}\r\n                                icon=\"transparency\" text=\"ÜBERSICHT\" status={this.getProgressStatusForOrderProducts(EOrderProcessView.orderOverview)} /> : null}\r\n                            <page.LClear />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private getProgressStatus(pr: EOrderProcessView): ELElementStatus {\r\n\r\n        if (this.props.progress < pr) {\r\n            return ELElementStatus.disabled;\r\n        } else if (this.props.progress === pr) {\r\n            return ELElementStatus.selected;\r\n        } else {\r\n            return ELElementStatus.ready;\r\n        }\r\n    };\r\n\r\n\r\nprivate getProgressStatusForOrderProducts(pr: EOrderProcessView): ELElementStatus {\r\n\r\n     if (this.props.progress === pr) {\r\n        return ELElementStatus.selected;\r\n    } else{\r\n        return ELElementStatus.disabled;\r\n    } \r\n\r\n};\r\n\r\n};\r\n\r\n\r\nexport default ActivationProgress;","import * as React from 'react';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport BaseBlock from '../page/block';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { LClear } from '../page';\r\n\r\nexport class CustomVodafoneGigaCombi extends React.Component {\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: undefined,\r\n            transparent: true,\r\n            styleContainer: 'extra'\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={3} md={3}>\r\n                            <img className=\"fit\" src=\"/images/giga.png\" />\r\n                        </Col>\r\n                        <Col xs={9} md={9}>\r\n                            <div className=\"etitle\">GigaKombi - holt mehr für Ihren Kunden raus!</div>\r\n                            <div className=\"esubtitle\">Hinweis: Bitte Kunden aufklären!</div>\r\n                            <div className=\"einfo\">Dein Kunde hat Mobilfunk mit Internet & Telefon zur GigaKombi abgeschlossen. Dadurch erhält er z.B. jeden Monat einen Rabatt oder zusätzliches Datenvolumen. Entdecke Deine GigaKombi-Vorteile. Weitere Hinweise befinden sich in den FAQs, auf dem Vertrag des Kunden und auf der ersten Rechnung.</div>\r\n                        </Col>                        \r\n                    </Row>                                \r\n                </Container>\r\n                <LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default CustomVodafoneGigaCombi;","import * as React from 'react';\r\nimport ActivationPreview from '../process/activationPreview';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport * as page from '../../page/index';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport { MainTexts } from '../../../utils/messages';\r\nimport Global from '../../../utils/Global';\r\nimport { IOrderData, Address } from '../../../models';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport AddressControl from '../global/address';\r\nimport PersonAndAddress from '../../../models/ordering/personWithAddress';\r\nimport { EActionAddressType } from '../../../models/ordering/order';\r\nimport Tel from '../global/tel';\r\n\r\nexport interface IPreviewDeliveryProps {\r\n    parent: ActivationPreview;\r\n};\r\n\r\nexport class PreviewDelivery extends React.Component<IPreviewDeliveryProps, any> {\r\n    private delivery: PersonAndAddress;\r\n    constructor(props: IPreviewDeliveryProps) {\r\n        super(props);\r\n\r\n        let customer = this.props.parent.props.parent.data.customer;\r\n        this.delivery = new PersonAndAddress();\r\n\r\n        if(customer.delivery) {\r\n            if(customer.deliveryType == EActionAddressType.differentAddress) {   \r\n                this.delivery.address = {\r\n                    street: customer.delivery.address.street,\r\n                    nr: customer.delivery.address.nr,\r\n                    zip: customer.delivery.address.zip,\r\n                    city: customer.delivery.address.city,\r\n                    corrected: false,\r\n                    house_number: customer.delivery.address.nr,\r\n                    additional: ''\r\n                };                  \r\n            } else {\r\n                if(customer.address)  {\r\n                    this.delivery.address = {\r\n                            street: customer.address.street,\r\n                            nr: customer.address.nr,\r\n                            zip: customer.address.zip,\r\n                            city: customer.address.city,\r\n                            corrected: false,\r\n                            house_number: customer.address.nr,\r\n                            additional: ''\r\n                        };\r\n                    };\r\n            };\r\n\r\n            this.delivery.callbackTime = customer.delivery.callbackTime;\r\n            this.delivery.deliveryDate = customer.delivery.deliveryDate;\r\n\r\n            this.delivery.tel = customer.delivery.tel;\r\n        }\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.deliveryData,\r\n            transparent: false\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                    <Container>\r\n                        <AddressControl prefix=\"address\" source={this.delivery} onChange={undefined} preview={true}/>\r\n\r\n                        <Tel prefix=\"tel\" source={this.delivery} onChange={undefined} preview={true}/>\r\n                    </Container>\r\n\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.info} title={MainTexts.telCallback}\r\n                                        label={this.delivery.callbackTime}\r\n                                        preview={true}\r\n                                        onChange={undefined} name=\"delivery.callbackTime\" id=\"delivery-callbackTime\" />\r\n                            </Col> \r\n                        </Row>                         \r\n                        <Row>\r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LDate title={MainTexts.deliverydate} \r\n                                        datePicker = {true}\r\n                                        from = {Global.dateOnly(Global.addDays(new Date(), 0))}\r\n                                        to = {Global.dateOnly(Global.addDays(new Date(), 1827))}\r\n                                        id={'deliveryDate'} \r\n                                        name={'delivery.deliveryDate'} \r\n                                        onChange={undefined}\r\n                                        preview={true}\r\n                                        value={this.delivery.deliveryDate}/>\r\n                            </Col>                               \r\n                        </Row>                     \r\n                    </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default PreviewDelivery;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { ESalutation } from '../../../models/ordering/order';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport Global from '../../../utils/Global';\r\nimport { Hints, MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport * as page from '../../page/index';\r\nimport ActivationPreview from '../process/activationPreview';\r\n\r\nexport interface IPreviewActivationsProps {\r\n    parent: ActivationPreview;\r\n    customer: ICustomer;\r\n};\r\n\r\nexport interface IPreviewActivationsState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class PreviewCustomerData extends React.Component<IPreviewActivationsProps, IPreviewActivationsState> {\r\n    constructor(props: IPreviewActivationsProps) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.customerData,\r\n            transparent: false\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n\r\n                    <Row>\r\n                        <Col xs={4} md={4} className=\"np\">\r\n                            <page.LControl type={EControlType.info}\r\n                                label={this.props.customer.salutation ? (this.props.customer.salutation == ESalutation.mr ? MainTexts.mr : MainTexts.mrs) : ''}\r\n                                title=\"Anrede\" />\r\n                        </Col>\r\n                        <Col xs={4} md={4}>\r\n                            <page.LControl type={EControlType.info} label={this.props.customer.title ? this.props.customer.title : ''} title=\"Titel\" />\r\n                        </Col>\r\n                        <Col xs={4} md={4} className=\"npr\">\r\n                            <page.LControl type={EControlType.info} label={this.props.customer.nationality ? this.props.customer.nationality : ''} title={MainTexts.nationality} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <div className=\"spacer\" />\r\n\r\n                    <Row>\r\n                        <Col xs={4} md={4} className=\"np\">\r\n                            <page.LControl type={EControlType.info} label={this.props.customer.firstname ? this.props.customer.firstname : ''} title=\"Vorname\" />\r\n                        </Col>\r\n                        <Col xs={4} md={4}>\r\n                            <page.LControl type={EControlType.info} label={this.props.customer.surname ? this.props.customer.surname : ''} title=\"Nachname\" />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <div className=\"spacer\" />\r\n\r\n                    <Row>\r\n                        <Col xs={8} md={8} className=\"np\">\r\n                            <page.LControl type={EControlType.info} label={this.props.customer.address ? this.props.customer.address.street : ''} title=\"Straße\" />\r\n                        </Col>\r\n                        <Col xs={4} md={4}>\r\n                            <page.LControl type={EControlType.info} label={this.props.customer.address ? this.props.customer.address.nr : ''} title=\"Hausnummer\" />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <div className=\"spacer\" />\r\n\r\n                    <Row>\r\n                        <Col xs={4} md={4} className=\"np\">\r\n                            <page.LControl type={EControlType.info} label={this.props.customer.address ? this.props.customer.address.zip : ''} title={MainTexts.zip} />\r\n                        </Col>\r\n                        <Col xs={4} md={4}>\r\n                            <page.LControl type={EControlType.info} label={this.props.customer.address ? this.props.customer.address.city : ''}\r\n                                title={MainTexts.city} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <div className=\"spacer\" />\r\n\r\n                    <Row>\r\n                        <Col xs={4} md={4} className=\"np\">\r\n                            <page.LControl type={EControlType.info} label={this.props.customer.birthday ? Global.toGermanDate(this.props.customer.birthday) : ''}\r\n                                title={MainTexts.dateOfBirth} />\r\n                        </Col>\r\n                        <Col  xs={4} md={4}>\r\n                            <page.LControl type={EControlType.info} label={this.props.customer.email ? this.props.customer.email : ''} title=\"E-Mail-Adresse\" />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        this.props.customer.address && this.props.customer.address.corrected ? \r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl hideTitle={true} labelStyle={'tc-hint mwa'} type={EControlType.hint} label={Hints.addressCorrected} />\r\n                            </Col>\r\n                        </Row>    \r\n                        : null\r\n                    }\r\n\r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default PreviewCustomerData;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { ActivationWrapper } from '../../../models/ordering/activation';\r\nimport { IOrderData, OrderDataWrapper } from '../../../models/ordering/data';\r\nimport { EBusinessCase, EOrderProcessView } from '../../../models/ordering/order';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport Global from '../../../utils/Global';\r\nimport { MainTexts } from '../../../utils/messages';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport CustomVodafoneGigaCombi from '../../brand/gigaCombi';\r\nimport * as page from '../../page/index';\r\nimport CustomerConsent from '../customer/consent';\r\nimport PreviewContract from '../preview/contract';\r\nimport PreviewDelivery from '../preview/delivery';\r\nimport PreviewCustomerData from '../preview/newCustomerData';\r\n\r\nexport interface IActivationPreviewProps {\r\n    parent: ProcessNewScreen;\r\n    order: IOrderData;\r\n    preview: boolean;\r\n};\r\n\r\nexport interface IActivationPreviewState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class ActivationPreview extends React.Component<IActivationPreviewProps, IActivationPreviewState> {\r\n    constructor(props: IActivationPreviewProps) {\r\n        super(props);\r\n        \r\n        this.onNext = this.onNext.bind(this);\r\n        this.onBack = this.onBack.bind(this);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentDidMount() {\r\n        window.scrollTo(0,0);\r\n    };\r\n\r\n    public render() {\r\n        let aw = new ActivationWrapper(this.props.order);\r\n\r\n        let ctrl = (\r\n            <>\r\n                {\r\n                    this.props.preview ? null\r\n                    :   <>\r\n                            {this.renderHint()}\r\n\r\n                            {\r\n                                OrderDataWrapper.hasGiga(this.props.order) ? <CustomVodafoneGigaCombi/> : <></>\r\n                            }  \r\n\r\n                            <CustomerConsent \r\n                                customer={this.props.parent.data.customer} \r\n                                parentRefresh={()=>{\r\n                                    StorageHelper.addOrder(this.props.parent.data);\r\n                                    this.props.parent.refresh();\r\n                                }}/>\r\n                        </>\r\n                }            \r\n\r\n                {\r\n                    this.props.preview ? \r\n                    <div className=\"text-h2\">Aktivierungsbestätigung für</div>\r\n                    : null \r\n                }\r\n                \r\n                {aw.items.map((i, idx)=>\r\n                    (<PreviewContract \r\n                            key={\"pc-\" + idx}\r\n                            bc={this.props.order.type}\r\n                            customer={this.props.parent.data.customer}\r\n                            ah={i}\r\n                            preview={this.props.preview} \r\n                            refreshParent={()=>{this.props.parent.refresh();}}/> )\r\n                )}\r\n\r\n                {\r\n                    this.props.order.type == EBusinessCase.bnt ? this.renderSummaryPrice(aw) : null\r\n                }\r\n\r\n                <PreviewCustomerData parent={this} customer={this.props.order.customer}/>\r\n\r\n                {\r\n                    this.props.parent.props.preview && this.props.parent.dataWrapper.hasKabel() ?\r\n                    <PreviewDelivery parent={this}/>\r\n                    : null\r\n                }\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public renderHint() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: 'Grundgebühr wird im Voraus berechnet.',\r\n            styleContainer: 'clue',\r\n            transparent: false,\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <div className=\"subtitle\">Hinweis: Bitte Kunden aufklären!</div>\r\n                        </Col> \r\n                    </Row>    \r\n                    \r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <page.LControl type={EControlType.hint} label=\"Weisen Sie Ihren Kunden bitte darauf hin, dass bei Vodafone die Grundgebühr im Voraus berechnet wird. Ihr Kunde bekommt kurz nach Aktivierung eine Erstrechnung, die den Anschlusspreis und die anteiligen Gebühren des Aktivierungsmonats enthält. <br/><br/>Die erste reguläre Rechnung enthält dann die Nutzungskosten des Aktivierungsmonats sowie die Grundgebühr des kommenden Monats. (Ausnahme zur Erstrechnung siehe Klartext zur vorfälligen Grundgebühr)\"/>\r\n                        </Col> \r\n                    </Row>                             \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };        \r\n\r\n    public renderSummaryPrice(prw: ActivationWrapper) {\r\n        let cfg: IBlockConfiguration = {\r\n            title: 'Gesamtkosten',\r\n            styleContainer: 'hot print-hide',\r\n            transparent: false\r\n        }; \r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        {\r\n                            this.props.parent.data.type === EBusinessCase.bnt ? \r\n                            <Col xs={4} md={4} className=\"np\">\r\n                                    <page.LControl type={EControlType.info} style=\"big\" label={Global.feeToString(prw.getActivationFee())} title={MainTexts.feeActivation}/>\r\n                            </Col>    \r\n                            : null\r\n                        }\r\n                        <Col xs={4} md={4} className=\"\">\r\n                                <page.LControl type={EControlType.info} style=\"big\" label={Global.feeToString(prw.getOptionMonthlyFee())} title={MainTexts.feeBookedOptions}/>\r\n                        </Col>  \r\n                        <Col xs={4} md={4} className=\"npr\">\r\n                                <page.LControl type={EControlType.info} style=\"big\" label={Global.feeToString(prw.getMonthlyFee())} title=\"\"/>\r\n                        </Col>                                                                          \r\n                    </Row>                             \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public onNext() {\r\n        this.props.parent.gotoView(EOrderProcessView.done);\r\n    };\r\n\r\n    public onBack() {\r\n \r\n        this.props.parent.gotoView(EOrderProcessView.customer);\r\n    };      \r\n};\r\n\r\nexport default ActivationPreview;","import * as React from 'react';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport * as page from '../../page/index';\r\nimport * as m from '../../../models/index';\r\nimport { MainTexts, ValidationMessages } from '../../../utils/messages';\r\nimport { ECreditDebitType, EActivationType } from '../../../models/ordering/order';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\n\r\nexport interface IActivationMsisdnProps {\r\n    parent: ProcessNewScreen;\r\n    onChange: any;\r\n};\r\n\r\nexport interface IActivationMsisdnState {\r\n    msisdn: string;\r\n    code: string;\r\n    businessType: ECreditDebitType;\r\n};\r\n\r\nexport class ActivationMsisdn extends React.Component<IActivationMsisdnProps,IActivationMsisdnState> {\r\n    constructor(props: IActivationMsisdnProps) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            msisdn: '', code : '', \r\n            businessType: this.props.parent.selection ? this.props.parent.selection.creditDebitType : ECreditDebitType.postpaid\r\n        };\r\n    };\r\n    \r\n    public render() {\r\n        let businessType:ECreditDebitType = this.props.parent.selection ? this.props.parent.selection.creditDebitType : ECreditDebitType.postpaid;\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.msisdn,\r\n            transparent: false\r\n        };\r\n\r\n        let act: m.IActivation = this.props.parent.current ? this.props.parent.current : new m.IActivation(this.props.parent.selectedBrand);\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={6} md={6}>\r\n                            <Row>\r\n                                <Col xs={12} md={12}>\r\n                                    <page.LControl \r\n                                        preview={!this.props.parent.dataWrapper.canEditActivation(this.props.parent.currentIndex)}\r\n                                        type={m.EControlType.text} \r\n                                        value={act.msisdn} \r\n                                        label=\"MSISDN\" \r\n                                        id=\"msisdn\" \r\n                                        name=\"msisdn\" \r\n                                        trimValue={true}\r\n                                        onChange={this.props.onChange}\r\n                                        validationOptions={ \r\n                                            [\r\n                                                new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                                new ValidationOption({type: EValidationOption.maxLength, maxLength: 20, message: ValidationMessages.errorMaxLength }),\r\n                                                new ValidationOption({type: EValidationOption.numeric, message: ValidationMessages.errorNumeric })\r\n                                            ]\r\n                                        }/>\r\n                                </Col>\r\n                                {\r\n                                    act.activationType === EActivationType.actDefault ?\r\n                                    <Col xs={12} md={12}>\r\n                                    <page.LControl \r\n                                        preview={!this.props.parent.dataWrapper.canEditActivation(this.props.parent.currentIndex)}\r\n                                        type={m.EControlType.text} value={act.code} label={businessType === ECreditDebitType.prepaid? 'SIM-Seriennummer' : 'Aktivierungscode'} id=\"code\" name=\"code\" onChange={this.props.onChange}\r\n                                        validationOptions={ \r\n                                            [\r\n                                                new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                                new ValidationOption({type: EValidationOption.maxLength, maxLength: 15, message: ValidationMessages.errorMaxLength }),\r\n                                                new ValidationOption({type: EValidationOption.numeric, message: ValidationMessages.errorNumeric })\r\n                                            ]\r\n                                        }/>\r\n                                    </Col>  \r\n                                    : null\r\n                                }                              \r\n                            </Row>\r\n                        </Col>\r\n                        {\r\n                            act.activationType === EActivationType.actDefault ?\r\n                            <Col xs={6} md={6}><img className=\"fit\" src={\"/images/act-\" + act.brandKey + \"-\" + act.creditDebitType + \".jpg\"} /></Col> \r\n                            : null\r\n                        }\r\n                    </Row>                                \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default ActivationMsisdn;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport * as m from '../../../models/index';\r\nimport { EActivationType, ECreditDebitType } from '../../../models/ordering/order';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport { ValidationWrapper } from '../../../utils';\r\nimport { MainTexts, ValidationMessages } from '../../../utils/messages';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport BaseBlock from '../../page/block';\r\nimport * as page from '../../page/index';\r\n\r\nexport interface IActivationSimProps {\r\n    parent: ProcessNewScreen;\r\n    onChange: any;\r\n};\r\n\r\nexport interface IActivationSimState {\r\n    sim: string;\r\n    businessType: ECreditDebitType;\r\n};\r\n\r\nexport class ActivationSim extends React.Component<IActivationSimProps,IActivationSimState> {\r\n    constructor(props: IActivationSimProps) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            sim: '', \r\n            businessType: ECreditDebitType.postpaid\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IActivationSimProps) {\r\n        if(next.parent.selection) {\r\n            this.setState({businessType: next.parent.selection.creditDebitType});\r\n        };\r\n    };    \r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.textSIMCards,\r\n            transparent: false\r\n        };\r\n\r\n        if(this.props.parent.selection.activationType === EActivationType.portDefault) {\r\n            cfg.title = MainTexts.numberToBePorted;\r\n        } else if(this.props.parent.selection.activationType === EActivationType.cdChange) {\r\n            cfg.title = MainTexts.currentPrepaidNumber;\r\n        };\r\n\r\n        let act: m.IActivation = this.props.parent.current ? this.props.parent.current : new m.IActivation(this.props.parent.selectedBrand);\r\n        let lbl = this.props.parent.selection.activationType == EActivationType.actDefault || this.props.parent.selection.activationType == EActivationType.partnerCard ? \r\n            MainTexts.vfserial : MainTexts.msisdn;\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={6} md={6}>\r\n                            <Row>\r\n                                <Col xs={12} md={12}>\r\n                                    {\r\n                                        <page.LControl \r\n                                            preview={!this.props.parent.dataWrapper.canEditActivation(this.props.parent.currentIndex)}\r\n                                            error={ValidationWrapper.getErrorFromState(this.props.parent.modelState, 'msisdn')} \r\n                                            maxLength={lbl==MainTexts.vfserial? 14 : undefined}\r\n                                            type={m.EControlType.text} label={lbl} id=\"msisdn\" name=\"msisdn\" \r\n                                            onChange={this.props.onChange}\r\n                                            value={act.msisdn}\r\n                                            validationOptions={ \r\n                                                [\r\n                                                    new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                                    new ValidationOption({type: EValidationOption.numeric, message: ValidationMessages.errorNumeric })\r\n                                                ]\r\n                                            }/>\r\n                                    }\r\n                                </Col>                           \r\n                            </Row>\r\n                        </Col>\r\n                        {\r\n                            act.activationType === EActivationType.actDefault ?\r\n                            <Col xs={6} md={6}><img className=\"fit\" src={\"/images/act-\" + act.brandKey + \".jpg\"} /></Col> \r\n                            : null\r\n                        }\r\n                    </Row>                                \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default ActivationSim;","import * as React from 'react';\r\nimport BaseBlock from '../../page/block';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport * as page from '../../page/index';\r\nimport * as m from '../../../models/index';\r\nimport { MainTexts, ValidationMessages } from '../../../utils/messages';\r\nimport { ECreditDebitType, EActivationType } from '../../../models/ordering/order';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport Tel from '../global/tel';\r\nimport { Tel as TelModel } from '../../../models/ordering/tel';\r\nimport { IControlValue, IKeyTextNumber, IKeyValue } from '../../../models/page/interfaces';\r\nimport Global from '../../../utils/Global';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport * as linq from 'linq';\r\nimport { IAvailabilityBrand } from '../../../models/ordering/availability';\r\n\r\nexport interface IActivationTelProps {\r\n    parent: ProcessNewScreen;\r\n    onChange: any;\r\n    numbersToPort: number;\r\n};\r\n\r\nexport interface IActivationTelState {\r\n    changed: boolean;\r\n    numbersToPort: number;\r\n};\r\n\r\nexport class ActivationTel extends React.Component<IActivationTelProps, IActivationTelState> {\r\n    private tel: TelModel = new TelModel();\r\n    private msisdnArray:string[] = [];\r\n    private brandKey: string = '';\r\n\r\n    constructor(props: IActivationTelProps) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        let avl = StorageHelper.getAvailability();\r\n        this.tel = new TelModel();\r\n\r\n        this.brandKey = this.props.parent.current ? this.props.parent.current.brandKey : '';\r\n\r\n        if (avl && avl.brands) {\r\n            let br = linq.from<IAvailabilityBrand>(avl.brands).where(x => x.key === BrandKeys.dsl).firstOrDefault();\r\n            if (br && br.products && br.products.length > 0) {\r\n\r\n                let prod = br.products[0];\r\n                this.tel.prefix = prod.areaCode;\r\n            };\r\n        };\r\n\r\n        this.state = {\r\n            changed: false,\r\n            numbersToPort: this.props.numbersToPort\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IActivationTelProps) {\r\n        this.setState({numbersToPort: next.numbersToPort});\r\n    };\r\n\r\n    public render() {\r\n        if(this.props.parent.current){\r\n            this.msisdnArray =  this.props.parent.current.msisdn.split(\";\");\r\n        } else {\r\n            this.msisdnArray = new Array(this.state.numbersToPort);\r\n        }\r\n\r\n        if(!this.msisdnArray) {\r\n            this.msisdnArray = [];\r\n        };\r\n\r\n        let businessType: ECreditDebitType = this.props.parent.selection ? this.props.parent.selection.creditDebitType : ECreditDebitType.postpaid;\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.numberToBePorted,\r\n            transparent: false\r\n        };\r\n\r\n        let act: m.IActivation = this.props.parent.current ? this.props.parent.current : new m.IActivation(this.props.parent.selectedBrand);\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container id=\"allNumbersToPort\">\r\n                    {this.howManyElToDisplay()}\r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private howManyElToDisplay(): JSX.Element[] {\r\n        let elements: any = [];\r\n        \r\n        for (let i = 0; i < this.state.numbersToPort; i++) {\r\n            let temp = (i >= this.msisdnArray.length ? this.tel.prefix + '-' : this.msisdnArray[i]).split(\"-\");\r\n            let tel:TelModel = {\r\n                telType: m.ETelType.mobile,\r\n                prefix: temp[0] ? temp[0] : this.tel.prefix,\r\n                number: temp[1]\r\n            };\r\n\r\n            let pr = 'tel-' + i;\r\n            let ctrl = (\r\n                <Row>\r\n                    {\r\n                        this.brandKey == BrandKeys.dsl || this.brandKey == BrandKeys.kabel ? \r\n                        <div>\r\n                            <page.LControl \r\n                                    type={m.EControlType.info}\r\n                                    name={name}\r\n                                    id={\"tel-prefix-\" + i }\r\n                                    value={\"+49\"}\r\n                                    label=\"+49\" \r\n                                    style=\"ccode\"/>\r\n                        </div>                        \r\n                        : null\r\n                    }\r\n\r\n                    <Col xs={6} md={6} >\r\n                        <Tel \r\n                            source={this.tel}\r\n                            telModel = {tel}\r\n                            id={\"msisdn-\" + i.toString()}\r\n                            withPading={true}\r\n                            telTypeHidden={true}\r\n                            onChange={this.onChange}\r\n                            valueChange={true}\r\n                            prefix={pr}\r\n                            preview={false}\r\n                            disablePrefix={this.brandKey == BrandKeys.kabel || this.brandKey == BrandKeys.dsl ? true : false}/>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n            elements.push(ctrl);\r\n        }\r\n\r\n        return elements;\r\n    }\r\n\r\n    private onChange(e: IControlValue) {\r\n        let sa = e.id.split('-');\r\n        let id = 'msisdn-' + sa[1];\r\n        let msisdn = Global.GetComponent<Tel>(id);\r\n       \r\n        this.msisdnArray[sa[1]] = msisdn.getValue().value;\r\n\r\n        if (this.props.parent.current) {\r\n            this.props.parent.current.msisdn = this.msisdnArray.join(\";\");\r\n            if (this.props.parent.data.customer.mnp) {\r\n                this.props.parent.data.customer.mnp.countNumbers = this.state.numbersToPort;\r\n                this.props.parent.data.customer.mnp.numberPortingType = this.state.numbersToPort === 1 ? 1 : 2;\r\n\r\n            }\r\n            StorageHelper.addOrder(this.props.parent.data);\r\n        }\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n};\r\n\r\nexport default ActivationTel;","import * as React from 'react';\r\nimport BaseBlock from '../../page/block';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport * as page from '../../page/index';\r\nimport * as m from '../../../models/index';\r\nimport { MainTexts, ValidationMessages } from '../../../utils/messages';\r\nimport { ECreditDebitType, EActivationType, EOrderProcessView, ENumberPortingType } from '../../../models/ordering/order';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport Tel from '../global/tel';\r\nimport { Tel as TelModel } from '../../../models/ordering/tel';\r\nimport { IControlValue, IKeyText } from '../../../models/page/interfaces';\r\nimport Global from '../../../utils/Global';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport * as linq from 'linq';\r\nimport { IAvailabilityBrand } from '../../../models/ordering/availability';\r\n\r\nexport interface IPortingOptionsProps {\r\n    parent: ProcessNewScreen;\r\n    onChange: any;\r\n    //parentCallback: any;\r\n    //refreshParent: any;\r\n};\r\n\r\nexport interface IPortingOptionsState {\r\n    changed: boolean;\r\n    individualNumber: boolean;\r\n    multipleNumbers: boolean;\r\n};\r\n\r\nexport class PortingOptions extends React.Component<IPortingOptionsProps, IPortingOptionsState> {\r\n    public numbersToPort: number;\r\n    public portType:ENumberPortingType = ENumberPortingType.single;\r\n    private brandKey: string = '';\r\n    private avl: m.Availability;\r\n\r\n    constructor(props: IPortingOptionsProps) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.avl = StorageHelper.getAvailability();\r\n\r\n        this.numbersToPort = this.getFromNumbers();\r\n\r\n        this.state = {\r\n            changed: false,\r\n            individualNumber: true,\r\n            multipleNumbers: false\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.portingInformation,\r\n            transparent: false\r\n        };\r\n\r\n        this.brandKey = this.props.parent.current ?  this.props.parent.current.brandKey : '';\r\n\r\n        if(this.props.parent.data.customer.mnp){\r\n            this.portType = this.props.parent.data.customer.mnp.numberPortingType ? this.props.parent.data.customer.mnp.numberPortingType: 1; \r\n            this.numbersToPort = this.props.parent.data.customer.mnp.countNumbers ? this.props.parent.data.customer.mnp.countNumbers: this.getFromNumbers();\r\n        };\r\n\r\n        let multiplePortingAvailable: boolean = true;\r\n\r\n        if(this.props.parent.current && this.props.parent.current.brandKey == BrandKeys.dsl) {\r\n            if(this.avl.hasRegioOnly(BrandKeys.dsl, this.props.parent.current.productId)) { // && !this.avl.hasBasic(BrandKeys.dsl, this.props.parent.current.productId)) {\r\n                multiplePortingAvailable = false;\r\n            };\r\n        };\r\n\r\n        if(this.props.parent.current && this.props.parent.current.brandKey == BrandKeys.kabel) {\r\n            if(!this.avl.hasKip()) {\r\n                multiplePortingAvailable = false;\r\n            };\r\n        };        \r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={6} md={6}>\r\n                            <page.LControl type={m.EControlType.radio}\r\n                                onChange={this.onChange}\r\n                                value={ENumberPortingType.single}\r\n                                checked={this.portType == ENumberPortingType.single ? true: false}\r\n                                name=\"portOption_1\"\r\n                                id=\"portOption_1\" label={MainTexts.individualPorting} />\r\n                        </Col>\r\n\r\n                        {\r\n                            multiplePortingAvailable ? \r\n                            <Col xs={6} md={6}>\r\n                                <page.LControl type={m.EControlType.radio}\r\n                                    onChange={(v)=>{\r\n                                        this.onChange(v);\r\n                                    }}\r\n                                    value={ENumberPortingType.multiple}\r\n                                    checked={this.portType == ENumberPortingType.multiple ? true: false}\r\n                                    name=\"portOption_2\"\r\n                                    id=\"portOption_2\" label={MainTexts.multiplePorting} \r\n                                    hint={this.props.parent.current && (this.props.parent.current.brandKey == BrandKeys.dsl || this.props.parent.current.brandKey == BrandKeys.kabel) ? \"* + 9,99 € einmalig\" : \"\"}/>\r\n                            </Col>\r\n                            : null\r\n                        }\r\n\r\n                        {\r\n                            multiplePortingAvailable && this.brandKey === BrandKeys.kabel ? \r\n                            <Col xs={6} md={6}>\r\n                                <page.LControl type={m.EControlType.radio}\r\n                                    onChange={this.onChange}\r\n                                    value={ENumberPortingType.later}\r\n                                    checked={this.portType == ENumberPortingType.later ? true: false}\r\n                                    name=\"portOption_3\"\r\n                                    id=\"portOption_3\" label={MainTexts.laterPorting} />\r\n                            </Col>\r\n                            : null\r\n                        }\r\n                    </Row>\r\n                    {this.portType===2 ? <> <div className=\"spacer\"></div>\r\n                        <div className=\"spacer\"></div>\r\n                        <div className=\"spacer\"></div>\r\n                        <Row>\r\n                            <Col xs={6} md={6}>\r\n                                <page.LControl \r\n                                    type={m.EControlType.dropdown}\r\n                                    value={this.numbersToPort}\r\n                                    onChange={this.onChange}\r\n                                    name=\"numberOfItemsToPort\" \r\n                                    id=\"numberOfItemsToPort_id\" \r\n                                    title={MainTexts.numberOFPhonesToBePorted}\r\n                                    options={this.getNumberCount()} />\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                        : <></>\r\n                    }\r\n\r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private getFromNumbers() {\r\n        let start: number = 2;\r\n\r\n        if(this.brandKey == BrandKeys.dsl && this.props.parent.current && this.avl.hasBasic(BrandKeys.dsl, this.props.parent.current.productId)) {\r\n            start = 3;\r\n        };\r\n\r\n        return start;\r\n    };\r\n \r\n    private getNumberCount(): IKeyText[] {\r\n        let opt: IKeyText[] = [];\r\n        let start: number = this.getFromNumbers();\r\n\r\n        for (var _i = start; _i <= 10; _i++) {\r\n            opt.push({ key: _i.toString(), text: _i.toString() });\r\n        }\r\n\r\n        return opt;\r\n    };\r\n\r\n    private applyCablePortation(type: ENumberPortingType) {\r\n        if(this.brandKey == BrandKeys.kabel && this.props.parent.current) {\r\n            let svc = this.props.parent.current.services;\r\n            //.push('rufnummernmitnahme-x');\r\n            Global.removeElementFromArray(svc, 'rufnummernmitnahme-1');\r\n            Global.removeElementFromArray(svc, 'rufnummernmitnahme-x');\r\n\r\n            if(type == ENumberPortingType.multiple) {\r\n                this.props.parent.current.addRemoveService('rufnummernmitnahme-x', this.props.parent.current.selection.children[0].id)\r\n                svc.push('rufnummernmitnahme-x');\r\n            } else {\r\n                this.props.parent.current.addRemoveService('rufnummernmitnahme-1', this.props.parent.current.selection.children[0].id)\r\n                svc.push('rufnummernmitnahme-1');\r\n            };\r\n\r\n            this.props.parent.current.services = svc;\r\n        };\r\n    };\r\n\r\n    private onChange(e: IControlValue) {\r\n        if(this.props.parent.data.customer.mnp) {\r\n            if (e.type === m.EControlType.radio) {\r\n                let sa = e.name.split('_');\r\n\r\n                this.portType = Number.parseInt(sa[1]);\r\n                this.props.parent.data.customer.mnp.numberPortingType = Number.parseInt(sa[1]);\r\n                \r\n                this.applyCablePortation(this.portType);\r\n                \r\n                if(this.portType == ENumberPortingType.single) {\r\n                    this.numbersToPort = this.props.parent.data.customer.mnp.countNumbers = 1;\r\n                } else if(this.portType == ENumberPortingType.multiple) { \r\n                    this.numbersToPort = this.props.parent.data.customer.mnp.countNumbers = this.getFromNumbers();\r\n                };\r\n            } else {\r\n                this.numbersToPort = this.props.parent.data.customer.mnp.countNumbers = e.value;\r\n            };\r\n        };\r\n\r\n        StorageHelper.addOrder(this.props.parent.data);\r\n\r\n        this.props.parent.refresh();\r\n    }\r\n};\r\n\r\nexport default PortingOptions;","import * as React from 'react';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport * as page from '../../page/index';\r\nimport { IControlValue } from '../../../models/page/interfaces';\r\nimport { MainTexts, OrderingTexts, ValidationMessages } from '../../../utils/messages';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport { IActivation } from '../../../models';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { EActivationType } from '../../../models/ordering/order';\r\n\r\nexport interface IActivationHardwareProps {\r\n    //parent: ProcessNewScreen;\r\n    onChange: any;\r\n    preview: boolean;\r\n    activation: IActivation;\r\n};\r\n\r\nexport class ActivationHardware extends React.Component<IActivationHardwareProps, IBaseComponentState> {\r\n    constructor(props: IActivationHardwareProps) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        //vf gigakombi\r\n        if(this.props.activation.activationType == EActivationType.bookService) {\r\n            return <></>\r\n        };\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.sub,\r\n            id: \"hardwareSelection\",\r\n            transparent: false\r\n        };\r\n\r\n        let act: IActivation = this.props.activation;\r\n        \r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <Row>\r\n                                <Col xs={12} md={12}>\r\n                                    <page.LControl \r\n                                        //preview= {!this.props.parent.dataWrapper.canEditActivation(this.props.parent.currentIndex)}\r\n                                        preview={this.props.preview}\r\n                                        type={EControlType.text} label=\"IMEI\" id=\"imei\" name=\"imei\"\r\n                                        maxLength = {15}\r\n                                        onChange={this.props.onChange}\r\n                                        value={act.imei}\r\n                                        validationOptions={ \r\n                                            [\r\n                                                new ValidationOption({type: EValidationOption.exactLength, nullable: true, targetValue: 15, message: ValidationMessages.errorExactLength }),\r\n                                                new ValidationOption({type: EValidationOption.numeric, nullable: true, message: ValidationMessages.errorNumeric })\r\n                                            ]\r\n                                        }/>\r\n                                </Col>                             \r\n                            </Row>\r\n                        </Col>\r\n                    </Row>                                \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };  \r\n};\r\n\r\nexport default ActivationHardware;","import * as React from 'react';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport IActivation from '../../../models/ordering/activation';\r\nimport BrandThumb, { EBrandThumbType, EBrandThumbStatus } from '../brandThumb';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport linq from 'linq';\r\n\r\nexport interface IActivationContractBlockProps {\r\n    parent: ProcessNewScreen;\r\n    activation: IActivation\r\n};\r\n\r\nexport class ActivationContractBlock extends React.Component<IActivationContractBlockProps,any> {\r\n    constructor(props: IActivationContractBlockProps) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        let br = linq.from<IBrand>(StorageHelper.getBrands())\r\n            .where(x=>x.id == this.props.activation.brandKey)\r\n            .first();\r\n\r\n        let ctrl = (\r\n            <div className=\"block-contract\">\r\n                <div className=\"block block-act-contract\">\r\n                    <BrandThumb ckey={'bt-brand-' + br.id} item={br} onClick={undefined} type={EBrandThumbType.blister} status={EBrandThumbStatus.static}/>\r\n                    <div className=\"block-inner\">\r\n                        Aktivierung\r\n                        <br/>MSISDN: 0172\r\n                        <br/>Code\r\n                        <br/>Sofort aktivierung\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default ActivationContractBlock;","import * as React from 'react';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport IActivation from '../../../models/ordering/activation';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { ActivationContractBlock } from './activationContractBlock';\r\n\r\nexport interface IActivationContractContainerProps {\r\n    parent: ProcessNewScreen; \r\n    activations: IActivation[];\r\n};\r\n\r\nexport class ActivationContractContainer extends React.Component<IActivationContractContainerProps,any> {\r\n    constructor(props: IActivationContractContainerProps) {\r\n        super(props);\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = (<></>);\r\n\r\n        if(this.props.activations && this.props.activations.length > 0) {\r\n            let cfg: IBlockConfiguration = {\r\n                title: 'Vertrag',\r\n                transparent: true,\r\n                style: '',\r\n                styleContainer: 'block-full'\r\n            };\r\n    \r\n            ctrl = (\r\n                <>\r\n                <BaseBlock config={cfg}>\r\n                    {this.props.activations.map((i,idx)=>\r\n                            (this.renderActivation(i, idx))\r\n                    )}\r\n                </BaseBlock>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderActivation(act: IActivation, idx: number) : JSX.Element {\r\n        let ctrl = (\r\n            <ActivationContractBlock \r\n                activation={act}\r\n                key={idx}\r\n                parent={this.props.parent}\r\n                />\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default ActivationContractContainer;","import * as React from 'react';\r\nimport BaseBlock from '../../page/block';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { ECreditDebitType, EBusinessCase, ECustomerType, EActivationType, EMnpType } from '../../../models/ordering/order';\r\nimport IProduct from '../../../models/ordering/product';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport LButton from '../../page/button';\r\nimport LLabel from '../../page/label';\r\nimport LClear from '../../page/clear';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { ELElementStatus, ELButtonType } from '../../../models/page/diverse';\r\nimport linq from 'linq';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport { IActivationBlockProps, IActivationBlockState, IActivationBlockOptions} from './activationBlock';\r\nimport { MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport { BrandKeys, CatKeys } from '../../../utils/Defaults';\r\nimport EasyRouter from '../../../utils/router';\r\nimport { CustomerScreen } from '../../../screens/insex';\r\nimport { threadId } from 'worker_threads';\r\nimport Global from '../../../utils/Global';\r\n\r\nexport class ActivationBlockSimple extends React.Component<IActivationBlockProps, IActivationBlockState> {\r\n    private mounted: boolean = false;\r\n    private config: IActivationBlockOptions;\r\n    public static componentId = 'activationBlock';\r\n\r\n    constructor(props: IActivationBlockProps) {\r\n        super(props);\r\n        \r\n        this.handlePayment = this.handlePayment.bind(this);\r\n        this.handleActivationType = this.handleActivationType.bind(this);\r\n        this.handleCusomerType = this.handleCusomerType.bind(this);\r\n\r\n        this.config = { canMnpPredate: false, canMnpStandard: false, canSoho: false, canPrepaid: false };\r\n\r\n        this.state = {\r\n            businessType: ECreditDebitType.postpaid,\r\n            businessCase: EBusinessCase.bnt,\r\n            customerType: ECustomerType.personal,\r\n            activationType: this.props.parent.current ? this.props.parent.current.activationType : EActivationType.actDefault\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.mounted = true;\r\n    };\r\n\r\n    public componentWillReceiveProps(next: any){\r\n        this.setState(next);\r\n    };\r\n\r\n    public render() {\r\n        let act:JSX.Element = this.props.parent.dataWrapper.hasNextContract() ?\r\n            <LButton text={MainTexts.backToCustomer} css=\"fr\" icon=\"ok\"\r\n                type={ELButtonType.linkSimple}\r\n                onClick={() => {\r\n                    EasyRouter.route({ url: CustomerScreen.uri + this.props.parent.data.id, title: MainTexts.existingCustomerActivation });\r\n                }} />\r\n        : <></>;\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.productSelection,\r\n            transparent: false,\r\n            id: ActivationBlockSimple.componentId,\r\n            action: act\r\n        };\r\n\r\n        this.prepare();\r\n\r\n        let cfgCategory: IBlockConfiguration = {\r\n            transparent: true,\r\n            action: act\r\n        };        \r\n\r\n        let brand = Global.categoryWrapper.getCategoryBrandKey(this.props.parent.data);\r\n        let nextBrands = Global.categoryWrapper.getOtherBrandsAvailable(brand);\r\n\r\n        let ctrl = <>\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <LLabel text={MainTexts.businessCase}/>\r\n                        </Col>\r\n                    </Row>               \r\n\r\n                    {\r\n                        this.props.parent.current && (this.props.parent.current.activationType == EActivationType.partnerCard || this.props.parent.current.activationType == EActivationType.partnerCardPortation) ? \r\n                        <Row>\r\n                            <Col xs={6} md={6}>                         \r\n                                <LButton \r\n                                        text={OrderingTexts.pcBooking}\r\n                                        onClick={this.handleActivationType}\r\n                                        clickModel={EActivationType.partnerCard}\r\n                                        status={this.state.activationType === EActivationType.partnerCard ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                            </Col>      \r\n                            <Col xs={6} md={6}>                         \r\n                                <LButton \r\n                                        text={OrderingTexts.pcPortation}\r\n                                        onClick={this.handleActivationType}\r\n                                        clickModel={EActivationType.partnerCardPortation}\r\n                                        status={this.state.activationType === EActivationType.partnerCardPortation ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                            </Col>                           \r\n                        </Row>\r\n                        : null\r\n                    }\r\n\r\n                    {\r\n                         this.props.parent.current && (this.props.parent.current.activationType != EActivationType.partnerCard && this.props.parent.current.activationType != EActivationType.partnerCardPortation) ?     \r\n                        <Row>\r\n                            <Col xs={6} md={6}>\r\n                                <LButton text={OrderingTexts.activation}\r\n                                        onClick={this.handleActivationType}\r\n                                        clickModel={EActivationType.actDefault}\r\n                                        status={this.state.activationType === EActivationType.actDefault ? ELElementStatus.selected : ELElementStatus.normal}/> \r\n                            </Col>      \r\n                            \r\n                            {\r\n                                    this.config.canMnpStandard  ?       \r\n                                    <Col xs={6} md={6}>                         \r\n                                        <LButton text={OrderingTexts.portation}\r\n                                                onClick={this.handleActivationType}\r\n                                                clickModel={EActivationType.portDefault}\r\n                                                status={this.state.activationType === EActivationType.portDefault ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                                    </Col>     \r\n                                    : null\r\n                            }\r\n                        </Row> \r\n                        : null\r\n                    }\r\n\r\n                    <Row>\r\n                        {\r\n                            this.props.parent.current \r\n                            && this.props.parent.current.brandKey == BrandKeys.vodafone \r\n                            && (this.props.parent.current.activationType != EActivationType.partnerCard && this.props.parent.current.activationType != EActivationType.partnerCardPortation) ?\r\n                            <Col xs={6} md={6}>                         \r\n                                <LButton text={OrderingTexts.cdChange}\r\n                                        onClick={this.handleActivationType}\r\n                                        clickModel={EActivationType.cdChange}\r\n                                        status={this.state.activationType === EActivationType.cdChange ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                            </Col>\r\n                            : null\r\n                        }\r\n                    </Row>\r\n                    \r\n                    {\r\n                        this.props.parent.current && (this.props.parent.current.brandKey !== BrandKeys.unity && this.props.parent.current.brandKey !== BrandKeys.dsl && this.props.parent.current.brandKey !== BrandKeys.kabel) ? \r\n                        <>\r\n                        <Row>\r\n                            <Col xs={12} md={12}>\r\n                                <LLabel text={MainTexts.productSelection}/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={6} md={6}>\r\n                                <LButton \r\n                                    text=\"Postpaid\" \r\n                                    onClick={this.handlePayment}\r\n                                    clickModel={ECreditDebitType.postpaid}\r\n                                    status={this.props.parent.selection.creditDebitType === ECreditDebitType.postpaid ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                            </Col>\r\n                            <Col xs={6} md={6}> \r\n                                {\r\n                                    this.config.canPrepaid ?\r\n                                    <LButton text=\"Prepaid\"\r\n                                        onClick={this.handlePayment}\r\n                                        clickModel={ECreditDebitType.prepaid}\r\n                                        status={this.props.parent.selection.creditDebitType === ECreditDebitType.prepaid ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                                    : null\r\n                                }\r\n                            </Col>                   \r\n                        </Row>       \r\n                        </>                    \r\n                        : null\r\n                    }                                   \r\n                </Container>\r\n                <LClear />\r\n            </BaseBlock>\r\n            \r\n            {\r\n                Global.categoryWrapper.canSwitchCat(this.props.parent.data) ?\r\n                <BaseBlock config={cfgCategory}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={12} md={12}>\r\n                                <LButton\r\n                                    text={ Global.categoryWrapper.all  ? \"- Alle\" : \"+ Alle\"} \r\n                                    onClick={()=>{\r\n                                        Global.categoryWrapper.all = !Global.categoryWrapper.all;\r\n                                        this.props.parent.refresh();\r\n                                    }} \r\n                                    css=\"fl uc text-h2\"\r\n                                    type={ELButtonType.linkSimple} \r\n                                    icon=\"arrow-right\"/>    \r\n\r\n                                {\r\n                                    nextBrands.length == 0 ? null :\r\n                                    nextBrands.map((i, idx)=>{\r\n                                        return <LButton\r\n                                            text={\"-> \" + i.key + \" Tarife\"} \r\n                                            onClick={()=>{\r\n                                                this.handleCategoryBrand( i.key );\r\n                                            }} \r\n                                            css=\"fr uc text-h2\"\r\n                                            type={ELButtonType.linkSimple} \r\n                                            icon=\"arrow-right\"/>   \r\n                                    })                             \r\n                                }\r\n                            </Col>\r\n                        </Row>                                      \r\n                    </Container>\r\n                    <LClear />\r\n                </BaseBlock>  \r\n                : null\r\n            }      \r\n        </>\r\n\r\n        return ctrl;\r\n    };\r\n \r\n    private handleCategoryBrand = (id: string) =>{\r\n        this.props.parent.changeCatBrand(id);\r\n    };\r\n\r\n    private prepare() {\r\n        var brand = linq.from<IBrand>(StorageHelper.getBrands())\r\n            .where(x=>x.id == this.props.parent.selectedBrand)\r\n            .first();\r\n\r\n        this.config.canPrepaid = linq.from<IProduct>(brand.products)\r\n            .where(x=>x.creditDebitType === ECreditDebitType.prepaid)\r\n            .count() > 0;\r\n\r\n        this.config.canSoho = linq.from<IProduct>(brand.products)\r\n            .where(x=> (x.customerType & ECustomerType.soho) === ECustomerType.soho) \r\n            .count() > 0;   \r\n\r\n        this.config.canMnpStandard = linq.from<IProduct>(brand.products)\r\n            .where(x=> (x.activationType & EActivationType.portDefault) == EActivationType.portDefault) \r\n            .count() > 0;       \r\n        \r\n        if(brand.id === BrandKeys.kabel) {\r\n             this.config.canMnpStandard=true;\r\n        }\r\n    };\r\n\r\n    private handleCusomerType(value: ECustomerType) {\r\n        if(this.mounted) {\r\n            this.setState({customerType: value});\r\n            this.props.parent.applyCustomerType(value);\r\n        }\r\n    };\r\n\r\n    private handleActivationType(value: EActivationType) {\r\n        if(this.mounted) {\r\n            if(!this.props.parent.canEditActivation()) {return;};\r\n\r\n            this.setState({activationType: value});\r\n            \r\n            this.props.parent.applyActivationType(value);\r\n        }\r\n    };\r\n\r\n    private handlePayment(value: ECreditDebitType) {\r\n        if(this.mounted) {\r\n            if(!this.props.parent.canEditActivation()) {return;};\r\n            this.setState({businessType: value});\r\n            this.props.parent.applyPayment(value);\r\n        }\r\n    };\r\n};\r\n\r\nexport default ActivationBlockSimple;","import * as React from 'react';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { ECreditDebitType, EBusinessCase, ECustomerType, EActivationType, EMnpType } from '../../../models/ordering/order';\r\nimport IProduct from '../../../models/ordering/product';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport LButton from '../../../components/page/button';\r\nimport LLabel from '../../../components/page/label';\r\nimport LClear from '../../../components/page/clear';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { ELElementStatus, ELButtonType } from '../../../models/page/diverse';\r\nimport linq from 'linq';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport { MainTexts, OrderingTexts, ActionTexts } from '../../../utils/messages';\r\nimport EasyRouter from '../../../utils/router';\r\nimport { CustomerScreen } from '../../../screens/insex';\r\nimport Global from '../../../utils/Global';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\n\r\nexport interface IActivationBlockProps {\r\n    product?: IProduct;\r\n    parent: ProcessNewScreen;\r\n};\r\n\r\nexport interface IActivationBlockOptions {\r\n    canPrepaid: boolean;\r\n    canSoho: boolean;\r\n    canMnpStandard: boolean;\r\n    canMnpPredate: boolean;\r\n};\r\n\r\nexport interface IActivationBlockState {\r\n    businessType: ECreditDebitType;\r\n    businessCase: EBusinessCase;\r\n    customerType: ECustomerType;\r\n    activationType: EActivationType;\r\n};\r\n\r\nexport class ActivationBlock extends React.Component<IActivationBlockProps, IActivationBlockState> {\r\n    private mounted: boolean = false;\r\n    private config: IActivationBlockOptions;\r\n    constructor(props: IActivationBlockProps) {\r\n        super(props);\r\n        \r\n        this.handlePayment = this.handlePayment.bind(this);\r\n        this.handleActivationType = this.handleActivationType.bind(this);\r\n        this.handleCusomerType = this.handleCusomerType.bind(this);\r\n\r\n        this.config = { canMnpPredate: false, canMnpStandard: false, canSoho: false, canPrepaid: false };\r\n\r\n        this.state = {\r\n            businessType: ECreditDebitType.postpaid,\r\n            businessCase: EBusinessCase.bnt,\r\n            customerType: ECustomerType.personal,\r\n            activationType: EActivationType.actDefault\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.mounted = true;\r\n    };\r\n\r\n    public componentWillReceiveProps(next: any){\r\n        this.setState(next);\r\n    };\r\n\r\n    public render() {\r\n        let act:JSX.Element = <>\r\n        <LButton text={MainTexts.ready} css=\"fr\" icon=\"ok\"\r\n            type={ELButtonType.buttonWithIconRight}\r\n            onClick={() => {\r\n                EasyRouter.route({ url: CustomerScreen.uri + this.props.parent.data.id, title: MainTexts.existingCustomerActivation });\r\n            }} />\r\n        </>\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.productSelection,\r\n            transparent: false,\r\n            action: act\r\n        };\r\n\r\n        this.prepare();       \r\n\r\n        //let brand = Global.categoryWrapper.getCategoryBrandKey(this.props.parent.data);\r\n\r\n        let ctrl = (\r\n            <>\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={6} md={6}>\r\n                            <LLabel text={MainTexts.productSelection}/>\r\n                        </Col>\r\n                        <Col xs={6} md={6}>\r\n                            <LLabel text={MainTexts.businessCase}/>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={3} md={3}>\r\n                            <LButton \r\n                                text=\"Postpaid\" \r\n                                onClick={this.handlePayment}\r\n                                clickModel={ECreditDebitType.postpaid}\r\n                                status={this.props.parent.selection.creditDebitType === ECreditDebitType.postpaid ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                        </Col>\r\n                        <Col xs={3} md={3}> \r\n                            {\r\n                                this.config.canPrepaid ?\r\n                                <LButton text=\"Prepaid\"\r\n                                    onClick={this.handlePayment}\r\n                                    clickModel={ECreditDebitType.prepaid}\r\n                                    status={this.props.parent.selection.creditDebitType === ECreditDebitType.prepaid ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                                : null\r\n                            }\r\n                        </Col>\r\n                        <Col xs={6} md={6}>\r\n                            <LButton text={OrderingTexts.activation}\r\n                                    onClick={this.handleActivationType}\r\n                                    clickModel={EActivationType.actDefault}\r\n                                    status={this.state.activationType === EActivationType.actDefault ? ELElementStatus.selected : ELElementStatus.normal}/> \r\n                        </Col>                        \r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={3} md={3}>\r\n                            \r\n                        </Col>\r\n                        <Col xs={3} md={3}>\r\n                            \r\n                        </Col>\r\n                        <Col xs={6} md={6}>\r\n                        {\r\n                                this.config.canMnpStandard ?                                \r\n                                <LButton text={OrderingTexts.portation}\r\n                                        onClick={this.handleActivationType}\r\n                                        clickModel={EActivationType.portDefault}\r\n                                        status={this.state.activationType === EActivationType.portDefault ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                                : null\r\n                        }\r\n                        </Col>                        \r\n                    </Row>  \r\n\r\n                    <Row>\r\n                        <Col xs={3} md={3}>\r\n                            <LButton \r\n                                text=\"Privat\" \r\n                                onClick={this.handleCusomerType}\r\n                                clickModel={ECustomerType.personal}\r\n                                status={this.state.customerType === ECustomerType.personal ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                        </Col>\r\n                        <Col xs={3} md={3}> \r\n                        {\r\n                                this.config.canSoho ?                        \r\n                                <LButton \r\n                                        text=\"Geschäftlich\" \r\n                                        onClick={this.handleCusomerType}\r\n                                        clickModel={ECustomerType.soho}\r\n                                        status={this.state.customerType === ECustomerType.soho ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                                : null\r\n                        }\r\n                        </Col>\r\n                        {/* <Col xs={6} md={6}>\r\n                        {\r\n                                this.config.canMnpPredate ?                              \r\n                                <LButton text=\"Vorzeitige Portierung\"\r\n                                        onClick={this.handleActivationType}\r\n                                        clickModel={EActivationType.portPre}\r\n                                        status={this.state.activationType === EActivationType.portPre ? ELElementStatus.selected : ELElementStatus.normal}/>\r\n                                : null\r\n                        }\r\n                        </Col>                         */}\r\n                    </Row>                                       \r\n                </Container>\r\n                <LClear />\r\n            </BaseBlock>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private prepare() {\r\n        var brand = linq.from<IBrand>(StorageHelper.getBrands())\r\n            .where(x=>x.id == this.props.parent.selectedBrand)\r\n            .first();\r\n\r\n        this.config.canPrepaid = linq.from<IProduct>(brand.products)\r\n            .where(x=>x.creditDebitType === ECreditDebitType.prepaid)\r\n            .count() > 0;\r\n\r\n        this.config.canSoho = linq.from<IProduct>(brand.products)\r\n            .where(x=> (x.customerType & ECustomerType.soho) === ECustomerType.soho) \r\n            .count() > 0;   \r\n\r\n        this.config.canMnpStandard = linq.from<IProduct>(brand.products)\r\n            .where(x=> (x.mnpType & EMnpType.standard) === EMnpType.standard) \r\n            .count() > 0;            \r\n\r\n        this.config.canMnpPredate= linq.from<IProduct>(brand.products)\r\n            .where(x=> (x.mnpType & EMnpType.predate) === EMnpType.predate) \r\n            .count() > 0;                        \r\n    };\r\n\r\n    private handleCategoryBrand = (id: string) =>{\r\n\r\n    };\r\n\r\n    private handleCusomerType(value: ECustomerType) {\r\n        if(this.mounted) {\r\n            this.setState({customerType: value});\r\n            this.props.parent.applyCustomerType(value);\r\n        }\r\n    };\r\n\r\n    private handleActivationType(value: EActivationType) {\r\n        if(this.mounted) {\r\n            this.setState({activationType: value});\r\n            this.props.parent.applyActivationType(value);\r\n        }\r\n    };\r\n\r\n    private handlePayment(value: ECreditDebitType) {\r\n        if(this.mounted) {\r\n            this.setState({businessType: value});\r\n            this.props.parent.applyPayment(value);\r\n            // this.props.parent.handleActivation( this.state );\r\n        }\r\n    };\r\n};\r\n\r\nexport default ActivationBlock;","import * as React from 'react';\r\n// import { EControlType, EComponentState } from '../../../models/page/diverse';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport BlockBase from '../../../components/page/block';\r\nimport * as i from '../../../interfaces/index';\r\nimport { IApiResponse, ISocketPushModel } from '../../../interfaces/index';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport * as m from '../../../models/index';\r\nimport * as s from '../../../screens/insex';\r\nimport { ValidationWrapper } from '../../../utils';\r\nimport { StorageKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { MainTexts, ValidationMessages } from '../../../utils/messages';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport * as page from '../../page/index';\r\nimport Status, { EStatusState } from '../../support/status';\r\nimport ActivationResponseStatus from './activationResponseStatus';\r\n \r\nexport interface IActivationAvailabilityProps \r\n{\r\n    parent: s.WelcomeScreen;\r\n    status: m.EComponentState\r\n};\r\n\r\nexport interface IActivationAvailabilityState \r\n{\r\n    status: m.EComponentState;\r\n    corrected: boolean;\r\n    closed: boolean;\r\n};\r\n\r\nexport class ActivationAvailability extends React.Component<IActivationAvailabilityProps, IActivationAvailabilityState>\r\n{   \r\n    public static containerId: string = 'availability';\r\n    private api?: i.IApiResponse;\r\n    private process?: i.IProcessStatus;\r\n    private apiState: EStatusState;    \r\n    private current: m.Availability;\r\n    private currentId: string = '';\r\n    private timerId: string = 'availabilityTimer';\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.onStart = this.onStart.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.onCompleted = this.onCompleted.bind(this);\r\n        this.socketCallback = this.socketCallback.bind(this);\r\n        this.timerCallback = this.timerCallback.bind(this);\r\n        this.timerCompletedCallback = this.timerCompletedCallback.bind(this);\r\n\r\n        this.apiState = EStatusState.undefined;\r\n        this.current = StorageHelper.getAvailability();\r\n\r\n        if(this.current.executed != m.ERequestStatus.done) {\r\n            this.current = StorageHelper.resetAvailability(undefined, m.ERequestStatus.undefined);\r\n        }\r\n        \r\n        let cfg = Global.getConfiguration();\r\n\r\n        \r\n\r\n        if(cfg.debug) {\r\n             this.current.address = {\r\n                //street: 'Am Seestern', city:'Düsseldorf', zip:'40547', nr: '1', house_number: '1', corrected: false, additional: ''\r\n                //// unity\r\n                //street: 'Pingsdorfer Str.', city:'Brühl', zip:'50321', nr: '108', house_number: '108', corrected: false, additional: ''\r\n                //// unity promo\r\n                //street: 'Im Fuhlenbrock', city:'Bottrop', zip:'46242', nr: '187', house_number: '187', corrected: false, additional: ''\r\n                //// унитъ промо\r\n              //  street: \"Im Wolfsfeld\", nr: \"19\", house_number: '19', city:\"Bochum\", zip:\"44879\", corrected: false, additional: ''\r\n                //// mix\r\n                // street: 'Goethestr. ', city:'Wolfsburg', zip:'38440', nr: '54', house_number: '54', corrected: false, additional: ''                \r\n                //// cable\r\n                //street: 'Ludwigstr.', city:'Würzburg', zip:'97070', nr: '22', house_number: '22', corrected: false, additional: ''\r\n                //// dsl regio\r\n                //street: 'Schillstr.', city:'Saarbrücken', zip:'66113', nr: '3', house_number: '3', corrected: false, additional: ''\r\n                 street: 'Edith-Stein-Str.', city:'Köln', zip:'51063', nr: '12', house_number: '12', corrected: false, additional: ''\r\n             };\r\n        };\r\n\r\n        this.state = {\r\n            status: this.props.status,\r\n            corrected: false,\r\n            closed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IActivationAvailabilityProps) {\r\n        this.setState({status: next.status});\r\n    };\r\n\r\n    public render () {\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.textAvailability,\r\n            transparent: false\r\n        };\r\n\r\n        let ctrl = <></>;\r\n\r\n        if(this.current.executed == m.ERequestStatus.done) {\r\n            let info: string = 'Adresse: ' + this.current.forUI();\r\n            ctrl = (\r\n                <BlockBase config={cfg}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np black\">\r\n                                {info}\r\n                            </Col>                      \r\n                        </Row>\r\n                        <Row>\r\n                            <page.LButton text=\"Prüfung für eine neue Adresse starten\" \r\n                                onClick={this.onDelete} \r\n                                css=\"fr\"\r\n                                type={m.ELButtonType.buttonWithIconRight} \r\n                                icon=\"arrow-right\"/> \r\n                        </Row>                           \r\n                    </Container>\r\n                    <page.LClear />\r\n                </BlockBase>\r\n            );\r\n\r\n            return ctrl;\r\n        };\r\n\r\n        if(this.state.status != m.EComponentState.hidden) {\r\n            ctrl = (\r\n                <div id={ActivationAvailability.containerId}>\r\n                <BlockBase config={cfg}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={9} md={9} className=\"np\">\r\n                                {/* <a href=\"javascript:void()\" onClick={(a)=>{this.setState({closed: true})}}>close</a> */}\r\n\r\n                                <page.LControl type={m.EControlType.text} \r\n                                    value={this.current.address.street} \r\n                                    onChange={ (t)=> { Global.AutoInput(this, this.current, t); } } \r\n                                    title=\"Anschrift\" name=\"address.street\" id=\"street\" label={MainTexts.street}\r\n                                    validationOptions={ \r\n                                        [\r\n                                            new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError })\r\n                                        ]\r\n                                    }/>\r\n                            </Col>\r\n                            <Col xs={3} md={3} className=\"npr\">\r\n                                <page.LControl type={m.EControlType.text} value={this.current.address.nr} \r\n                                onChange={(t)=> { Global.AutoInput(this, this.current, t); }} name=\"address.nr\" id=\"nr\" label={MainTexts.stnr}\r\n                                validationOptions={ \r\n                                    [\r\n                                        new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError })\r\n                                    ]\r\n                                }/>\r\n                            </Col>                        \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col xs={3} md={3} className=\"np\">\r\n                            <page.LControl type={m.EControlType.text} value={this.current.address.zip} \r\n                                onChange={(t)=> { Global.AutoInput(this, this.current, t); }} name=\"address.zip\" id=\"zip\" label=\"PLZ\" hideTitle={true} \r\n                                validationOptions={ \r\n                                    [\r\n                                        new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                        new ValidationOption({type: EValidationOption.exactLength, targetValue: 5, message: ValidationMessages.errorExactLength })\r\n                                    ]\r\n                                }/>\r\n                            </Col>                       \r\n\r\n                            <Col xs={9} md={9} className=\"npr\">\r\n                            <page.LControl type={m.EControlType.text} value={this.current.address.city} \r\n                                onChange={(t)=> { Global.AutoInput(this, this.current, t); }} name=\"address.city\" id=\"city\" label=\"Ort\" hideTitle={true} \r\n                                validationOptions={ \r\n                                    [\r\n                                        new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError })\r\n                                    ]\r\n                                }/>\r\n                            </Col>                                 \r\n                        </Row>  \r\n\r\n                        <Row>\r\n                            {\r\n                                (this.state.status == m.EComponentState.visible || this.state.status === m.EComponentState.nextStep) && this.apiState != EStatusState.inprocess ? \r\n                                <page.LButton text=\"Starten\" \r\n                                    onClick={this.onStart} \r\n                                    css=\"fr\"\r\n                                    type={m.ELButtonType.buttonWithIconRight} \r\n                                    icon=\"arrow-right\"/>                       \r\n                                    :\r\n                                null\r\n                            }    \r\n                                 \r\n                            {\r\n                                (this.api && this.state.status == m.EComponentState.visible) || this.state.status == m.EComponentState.processing || this.state.status === m.EComponentState.nextStep ? \r\n                                <ActivationResponseStatus\r\n                                    timerId={this.timerId}\r\n                                    parent = {this}\r\n                                    apiState={this.apiState}\r\n                                    api={this.api} \r\n                                    process={this.process} \r\n                                    completedCallback={this.timerCompletedCallback}\r\n                                    processCallback={this.timerCallback}/>                \r\n                                    :\r\n                                null\r\n                            }               \r\n                        </Row>                           \r\n                    </Container>\r\n                    <page.LClear />\r\n                </BlockBase>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private timerCallback() {\r\n\r\n    };\r\n\r\n    private timerCompletedCallback() {\r\n        this.apiState = EStatusState.undefined;\r\n        this.setState({status: m.EComponentState.visible});\r\n    };    \r\n\r\n    public socketCallback(sock: ISocketPushModel) {\r\n        let api: IApiResponse = JSON.parse(sock.data);\r\n        this.api = api;\r\n        let inner = api.data;\r\n\r\n       \r\n        if (this.api.error != null) {\r\n\r\n            this.apiState = EStatusState.failed;\r\n            this.current.executed = m.ERequestStatus.undefined;\r\n            this.setState({corrected: false, status: m.EComponentState.visible});\r\n            return;\r\n        };\r\n\r\n        if(inner == null) {\r\n            return;\r\n        };\r\n\r\n            try {\r\n                let step: i.IApiStep = inner.steps[0];// ActivationApi.processStep(api, state);\r\n\r\n                if(step.status == m.ERequestStatus.done || step.status == m.ERequestStatus.tempResult) {\r\n                    this.apiState = step.status == m.ERequestStatus.done ? EStatusState.done : EStatusState.inprocess;\r\n                    this.current = StorageHelper.getAvailability();\r\n\r\n                    this.setState({corrected: false, \r\n                        status: this.current.executed == m.ERequestStatus.done ? m.EComponentState.visible : m.EComponentState.processing});\r\n                    this.props.parent.refresh();\r\n                } else if (step.status === m.ERequestStatus.corrected) {\r\n                    this.apiState = EStatusState.warning;\r\n                    this.process = {steps: [step]};\r\n                    let adr: m.Address = JSON.parse(step.message);\r\n\r\n                    if(adr) {\r\n                        this.current.address = adr;\r\n                        this.current.address.nr = adr.house_number;\r\n                        this.setState({corrected: true, status: m.EComponentState.nextStep});\r\n                    }\r\n                } else if (step.status === m.ERequestStatus.failed || step.status === m.ERequestStatus.invalid) {\r\n                    this.apiState = EStatusState.failed;\r\n                    this.current.executed = m.ERequestStatus.undefined;\r\n                    this.setState({corrected: false, status: m.EComponentState.visible});\r\n                };\r\n\r\n                Global.categoryWrapper.reset();\r\n            } catch(e) {\r\n                console.error(e);\r\n            }\r\n    };\r\n\r\n    private onCompleted(){\r\n        this.setState({status: m.EComponentState.visible});\r\n    };\r\n\r\n    private onDelete() {\r\n        this.current = new m.Availability();\r\n\r\n        this.api = undefined;\r\n\r\n        StorageHelper.set(StorageKeys.keyAvailability, this.current);\r\n\r\n        Global.categoryWrapper.resetCategory();\r\n\r\n        this.props.parent.refresh();\r\n\r\n        this.setState({status: m.EComponentState.visible});\r\n    };\r\n\r\n    private validate() : boolean {\r\n        let all = ValidationWrapper.getControls(ActivationAvailability.containerId, 'oe-control');\r\n        \r\n        for(let i = 0; i< all.length; i++) {\r\n            let element = document.getElementById(all[i].id);\r\n            let ctrl:page.LControl = Global.FindReact(element);\r\n                if(!ctrl.validate(undefined, true)) {\r\n                    return false;\r\n                }   \r\n        };\r\n        return true;\r\n    };\r\n\r\n    private onStart() {\r\n        if(!this.validate()) {\r\n            return;\r\n        }\r\n\r\n        if(!Global.easyApp.checkDefCon()) {\r\n            return;\r\n        };\r\n\r\n        this.process = {steps: []};\r\n        this.apiState = EStatusState.inprocessTimer;\r\n        this.api = undefined;\r\n\r\n        this.current = StorageHelper.resetAvailability(this.current.address, m.ERequestStatus.running);\r\n\r\n        Global.hub.send(JSON.stringify(this.current), \r\n            m.ERequestType.checkAvailability,\r\n            undefined);\r\n\r\n        this.setState({status: m.EComponentState.processing}, ()=>{\r\n            var timer = Global.GetComponent<Status>(this.timerId);\r\n            timer.resetTimer();   \r\n        });\r\n\r\n        //this.props.parent.refresh();\r\n    };\r\n};\r\n\r\n\r\nexport default ActivationAvailability;","import * as React from 'react';\r\nimport BaseBlock from '../../page/block';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { ECreditDebitType, EBusinessCase, ECustomerType, EActivationType, EMnpType } from '../../../models/ordering/order';\r\nimport IProduct from '../../../models/ordering/product';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport LButton from '../../page/button';\r\nimport LLabel from '../../page/label';\r\nimport LClear from '../../page/clear';\r\nimport { Row, Col, Container, Button } from 'react-bootstrap';\r\nimport { ELElementStatus, EPortationType, EControlType } from '../../../models/page/diverse';\r\nimport linq from 'linq';\r\nimport IBrand from '../../../models/ordering/brand';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport * as page from '../../page/index';\r\nimport { IActivationBlockProps, IActivationBlockState, IActivationBlockOptions} from './activationBlock';\r\nimport { MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { IActivation } from '../../../models';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { EDateType } from '../../page/date';\r\n\r\nexport interface IActivationMnpProps \r\n{\r\n    parent: ProcessNewScreen;\r\n    onChange: any;\r\n};\r\n\r\nexport class ActivationMnp extends React.Component<IActivationMnpProps, IBaseComponentState> {\r\n    constructor(props: IActivationMnpProps) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            changed: false\r\n        };\r\n    }\r\n\r\n    public componentWillReceiveProps(next: any){\r\n        this.setState(next);\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: MainTexts.portingInformation,\r\n            transparent: false\r\n        };\r\n\r\n        let act: IActivation = this.props.parent.current ? this.props.parent.current : new IActivation(this.props.parent.selectedBrand);\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <LLabel text={OrderingTexts.mnpDate}/>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        this.props.parent.current && this.props.parent.current.brandKey === BrandKeys.kabel ?\r\n                        <Row>\r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl onChange={this.props.onChange} checked={act.portationType === EPortationType.asap} \r\n                                type={EControlType.radio} name=\"portationType\" id=\"portationType_1\" label={OrderingTexts.mnpCable1}/>\r\n                            </Col> \r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl onChange={this.props.onChange} checked={act.portationType === EPortationType.contractEnd} \r\n                                type={EControlType.radio} name=\"portationType\" id=\"portationType_2\" label={OrderingTexts.mnpCable2}/>\r\n                            </Col> \r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl onChange={this.props.onChange} checked={act.portationType === EPortationType.custom} \r\n                                type={EControlType.radio} name=\"portationType\" id=\"portationType_3\" label={OrderingTexts.mnpCable4}/>\r\n                            </Col> \r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl onChange={this.props.onChange} checked={act.portationType === EPortationType.date} \r\n                                type={EControlType.radio} name=\"portationType\" id=\"portationType_4\" label={OrderingTexts.mnpCable3}/>\r\n                            </Col> \r\n                        </Row>\r\n                        : null\r\n                    }\r\n\r\n                    {\r\n                        this.props.parent.current && (this.props.parent.current.brandKey === BrandKeys.otelo || this.props.parent.current.brandKey === BrandKeys.vodafone) ?\r\n                        <Row>\r\n                            <Col xs={4} md={4} className=\"np\">\r\n                                <page.LControl onChange={this.props.onChange} checked={act.portationType === EPortationType.asap} \r\n                                type={EControlType.radio} name=\"portationType\" id=\"portationType_1\" label={OrderingTexts.mnp1}/>\r\n                            </Col>                         \r\n                            <Col xs={4} md={4} className=\"npr\">\r\n                                <page.LControl onChange={this.props.onChange} checked={act.portationType === EPortationType.contractEnd} \r\n                                type={EControlType.radio} name=\"portationType\" id=\"portationType_2\" label={OrderingTexts.mnp2}/>\r\n                            </Col>    \r\n                            {\r\n                                this.props.parent.current && this.props.parent.current.brandKey === BrandKeys.vodafone ?\r\n                                <Col xs={4} md={4} className=\"npr\">\r\n                                    <page.LControl onChange={this.props.onChange} checked={act.portationType === EPortationType.custom} \r\n                                    type={EControlType.radio} name=\"portationType\" id=\"portationType_3\" label={OrderingTexts.mnp3}/>\r\n                                </Col>                 \r\n                                : null           \r\n                            }\r\n                        </Row>\r\n                        : null\r\n                    }\r\n\r\n\r\n                    {\r\n                        act.portationType === EPortationType.custom ?\r\n                        <Row>\r\n                            <Col xs={8} md={8} className=\"np\">\r\n                                <page.LDate \r\n                                    onChange={this.props.onChange} \r\n                                    value={act.portationDate} \r\n                                    datePicker = {true}\r\n                                    type={EDateType.fixedStart}\r\n                                    from={Global.dateOnly(Global.addDays(new Date(), 0))}\r\n                                    to={Global.dateOnly(Global.addDays(new Date(), 720))}                                    \r\n                                    name=\"portationDate\" \r\n                                    id=\"portationDate\" title={MainTexts.date}/>\r\n                            </Col>                                                   \r\n                        </Row>\r\n                        : null\r\n                    }            \r\n\r\n                     {\r\n                        act.brandKey === BrandKeys.vodafone && act.portationType === EPortationType.contractEnd ?\r\n                        <Row>\r\n                            <Col xs={8} md={8} className=\"np\">\r\n                                <page.LDate \r\n                                    onChange={this.props.onChange} \r\n                                    value={act.portationDate} \r\n                                    datePicker = {true}\r\n                                    type={EDateType.fixedStart}\r\n                                    from={Global.dateOnly(Global.addDays(new Date(), 0))}\r\n                                    to={Global.dateOnly(Global.addDays(new Date(), 720))}                                    \r\n                                    name=\"portationDate\" \r\n                                    id=\"portationDate\" \r\n                                    title={MainTexts.contractEndDate}/>\r\n                            </Col>                                                   \r\n                        </Row>\r\n                        : null\r\n                    }                           \r\n                </Container>\r\n                <LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default ActivationMnp;","export {default as ActivationActions} from \"./activationActions\";\r\nexport {default as ActivationTariff} from \"./activationTariff\";\r\nexport {default as ActivationSummary} from \"./activationSummary\";\r\nexport {default as ActivationProgress} from \"./activationProgress\";\r\nexport {default as ActivationPreview} from \"./activationPreview\";\r\nexport {default as ActivationMsisdn} from \"./activationMsisdn\";\r\nexport {default as ActivationSim} from \"./activationSim\";\r\nexport {default as ActivationTel} from \"./activationTel\";\r\nexport {default as PortingOptions} from \"./portingOptions\";\r\nexport {default as ActivationHardware} from \"./activationHardware\";\r\nexport {default as ActivationCustomerData} from \"./activationCustomerData\";\r\nexport {default as ActivationContractContainer} from \"./activationContractContainer\";\r\nexport {default as ActivationContractBlock} from \"./activationContractBlock\";\r\nexport {default as ActivationBlock} from \"./activationBlock\";\r\nexport {default as ActivationBlockSimple} from \"./activationBlockSimple\";\r\nexport {default as ActivationAvailability} from \"./activationAvailability\";\r\nexport {default as ActivationServiceSelector} from './activationServiceSelector';\r\nexport {default as ActivationMnp} from './activationMnp';","import * as React from 'react';\r\nimport { LTimer } from '../page';\r\nimport { number } from 'prop-types';\r\n\r\nexport interface IStatusProps {\r\n    status: EStatusState;\r\n    stepCallback?: any;\r\n    tickCallback?: any;\r\n    completedCallback?: any;\r\n    counter?: number;\r\n    id: string;\r\n    autoRestart?: boolean;\r\n};\r\n\r\nexport interface IStatusState {\r\n    status: EStatusState;\r\n    changed: boolean;\r\n};\r\n\r\nexport enum EStatusState {\r\n    undefined = 0,\r\n    inprocess = 1,\r\n    done = 2,\r\n    failed = 4,\r\n    inprocessTimer = 8,\r\n    warning = 16\r\n};\r\n\r\nexport class Status extends React.Component<IStatusProps, IStatusState> {\r\n    private counter: number;\r\n    private counterDefault: number = 99;\r\n    public static defaultTimer: number = 99;\r\n    constructor(props: IStatusProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            status: this.props.status,\r\n            changed: false\r\n        };\r\n\r\n        this.counterDefault = Status.defaultTimer;\r\n\r\n        this.timerTick = this.timerTick.bind(this);\r\n\r\n        this.timerCompleted = this.timerCompleted.bind(this);\r\n\r\n        this.counter = this.props.counter ? this.props.counter : this.counterDefault;\r\n\r\n        if(this.state.status === EStatusState.inprocessTimer) {\r\n\r\n        }\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IStatusProps) {\r\n        if(next.counter) {\r\n            this.counter = 99;\r\n        }\r\n        //this.counter = 99;\r\n        this.setState({status: next.status});\r\n    };\r\n\r\n    public render() {\r\n        //we force to not show timer\r\n        let css: string = 'statusbox print-hide st' + (this.state.status == EStatusState.inprocessTimer ? EStatusState.inprocess : this.state.status );\r\n        let ctrl = (\r\n            <div id={this.props.id}>\r\n                {\r\n                    false && this.props.status === EStatusState.inprocessTimer ?\r\n                        this.renderTimer()\r\n                    :\r\n                    <div className={css} style={ {background: \"url()\" }}>\r\n                        <div className=\"icon\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public resetTimer() {\r\n        this.counter = this.counterDefault;\r\n        this.setState({changed: true});\r\n    };\r\n\r\n    public renderTimer() : JSX.Element {\r\n        //let procVal = this.counter / Status.defaultTimer \r\n        let proc: number = 2.6 * (Status.defaultTimer - this.counter) ;\r\n        let cssplus: string = this.counter < 10 ? ' single' : '';\r\n\r\n        let svg = '<div class=\"info ' + cssplus + '\">' + this.counter + '</div><div class=\"bg\"><svg class=\"circle-chart\" viewbox=\"0 0 94 94\" width=\"94\" height=\"94\" xmlns=\"http://www.w3.org/2000/svg\"><defs><linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"><stop offset=\"0%\" style=\"stop-color:rgb(170, 179, 56);stop-opacity:1\" /><stop offset=\"100%\" style=\"stop-color:rgb(223, 154, 54);stop-opacity:1\" /></linearGradient></defs><circle class=\"circle-chart__background\" stroke=\"#efefef\" stroke-width=\"5\" fill=\"none\" cx=\"47\" cy=\"47\" r=\"42\" /><circle class=\"circle-chart__circle\" stroke=\"url(#grad1)\" stroke-width=\"5\" stroke-dasharray=\"' + proc + ',534\" stroke-linecap=\"round\" fill=\"none\" cx=\"47\" cy=\"47\" r=\"42\"/></svg></div>';\r\n        \r\n        let ctrl = (\r\n            <>\r\n                {/* <div className=\"loadersvg\" dangerouslySetInnerHTML={{__html: svg}} /> */}\r\n                <LTimer \r\n                    count={this.counter} \r\n                    step={5} \r\n                    completed={this.timerCompleted} \r\n                    showUI={false} \r\n                    autoRestart={this.props.autoRestart}\r\n                    tickCallback={this.timerTick} \r\n                    stepCallback={this.props.stepCallback} /> \r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public timerCompleted() {\r\n        if(this.props.completedCallback) {this.props.completedCallback();}\r\n    };    \r\n\r\n    public timerTick(e: number) {\r\n        if(this.props.autoRestart && this.counter<=2) {\r\n            this.counter = this.counterDefault;\r\n        };\r\n    \r\n        this.counter--;\r\n\r\n        this.setState({changed:true});\r\n\r\n        if(this.props.tickCallback) {this.props.tickCallback();}\r\n    };\r\n};\r\n\r\nexport default Status;","export * from './app/IBaseComponentState';\r\nexport * from './app/IApiAction';\r\nexport * from './app/IApiAction';\r\nexport * from './app/IApiError';\r\nexport * from './app/IApiStep';\r\nexport * from './app/IApiResponse';\r\nexport * from './app/ISocketPushModel';\r\n// export {IProcessStatus as IProcessStatus} from './app/IApiResponse';\r\n// export {IApiStep as IApiStep} from './app/IApiResponse';\r\n// export {EApiResponseStatus as EApiResponseStatus} from './app/IApiResponse';\r\n// export {IApiStepMessage as IApiStepMessage} from './app/IApiResponse';","import { IKeyText } from \"../models/page/interfaces\";\r\n\r\nexport class StorageKeys {\r\n    public static keyUser: string = \"usr\";\r\n    public static keyBrands: string = \"bra\";\r\n    public static keySupport: string = \"sup\";\r\n    public static keyCombis: string = \"combis\";\r\n    public static keyOrders: string = \"ord\";\r\n    public static keyOrdersProducts: string = \"ordprd\";\r\n    public static keyApp: string = \"app\";\r\n    public static keyDefCon: string = \"dc\";\r\n    public static keyAvailability: string = 'avl';\r\n    public static keyTheme: string = 'theme';\r\n};\r\n\r\nexport class Themes {\r\n    public static light = 'theme-light';\r\n    public static dark = 'theme-dark';\r\n};\r\n\r\nexport class Lists {\r\n    public static brandCats: IKeyText[] = [\r\n        {key: 'vf', text: 'Vodafone'},\r\n        {key: 'otelo', text: 'Otelo'},\r\n        {key: 'fn', text: 'Festnetz'},\r\n        {key: 'tv', text: 'TV'}\r\n    ];\r\n};\r\n\r\nexport class BrandKeys {\r\n    public static vodafone: string = 'vf';\r\n    public static otelo: string = 'otelo';\r\n    public static kabel: string = 'kabel';\r\n    public static dsl: string = 'dsl';\r\n    public static unity: string = 'unity';\r\n};\r\n\r\nexport class CatKeys {\r\n    public static vodafone = 'vf';\r\n    public static otelo = 'otelo';\r\n    public static fn = 'fn';\r\n    public static tv = 'tv';\r\n    public static tv_fn = 'tv_fn'\r\n};\r\n\r\nexport class ConstantKeys {\r\n    public static devices = 'Devices';\r\n    public static options = 'Optionen';\r\n    public static user = 'user';\r\n    public static no = 'no';\r\n    public static current = 'cur';\r\n};\r\n\r\nexport class Roles {\r\n    public static Auftragsmanager = 'Auftragsmanager';\r\n    public static Backoffice = 'Backoffice';\r\n    public static CMSAdministrator = 'CMSAdministrator';\r\n    public static CMSBearbeiter = 'CMSBearbeiter';\r\n    public static E3_Backoffice = 'E3_Backoffice';\r\n    public static E3_EPM = 'E3_EPM';\r\n    public static E3_User = 'E3_User';\r\n    public static E3_UserForNewEmployee = 'Vodafone - Easy';\r\n    public static Hotline = 'Hotline';\r\n    public static Stornofreigabe = 'Stornofreigabe';\r\n    public static IdentityServerAdministrators = 'IdentityServerAdministrators';\r\n    public static IdentityServerDevelopers = 'IdentityServerDevelopers';\r\n    public static IdentityServerUsers = 'IdentityServerUsers';\r\n    public static PortalAdministrator = 'PortalAdministrator';\r\n    public static PortalTester = 'PortalTester';\r\n    public static PortalUser = 'PortalUser';\r\n    public static VodafoneSMS = 'VodafoneSMS';\r\n    public static XTND_Druckshop = 'XTND_Druckshop';\r\n    public static XTND_Kampagnen = 'XTND_Kampagnen';\r\n    public static XTND_Nutzerverwaltung = 'XTND_Nutzerverwaltung';\r\n    public static XTND_Produktbestellung = 'XTND_Produktbestellung';\r\n    public static XTND_Provisionen = 'XTND_Provisionen';\r\n    public static XTND_Provisionssimulation = 'XTND_Provisionssimulation';\r\n    public static XTND_Reporting = 'XTND_Reporting';\r\n    public static XTND_ShopManager = 'XTND_ShopManager';\r\n};\r\n\r\nexport class VodafonePositions {\r\n    public static Hotline = 'Hotline';\r\n    public static Hauptabteilungsleiter = 'Hauptabteilungsleiter';\r\n    //Key Account Manager\r\n    public static Backoffice = 'Backoffice';\r\n    public static Vertriebsleiter = 'Vertriebsleiter';\r\n    public static Vertriebsbeauftragter = 'Vertriebsbeauftragter';\r\n    public static Niederlassungsleiter = 'Niederlassungsleiter';\r\n    public static Niederlassungssupport = 'Niederlassungssupport';\r\n};\r\n\r\nexport class ErrorGroup {\r\n    public static form = 'form';\r\n    public static api = 'api';\r\n};\r\n\r\nexport class StringTokens {\r\n    public static brand: string = \"brand\";\r\n    public static product: string = \"product\";\r\n    public static id: string = \"id\";\r\n};\r\n\r\nexport class HttpMethods {\r\n    public static post: string = \"POST\";\r\n    public static get: string = \"GET\";\r\n};\r\n\r\nexport class AppIds {\r\n    public static app: string = \"app\";\r\n    public static container: string = \"container\";\r\n};\r\n\r\nexport class Defaults {\r\n    public static currencyUnit: string = '€';\r\n\r\n    public static listSeparator: string = ';';\r\n};","export class ModelStateError {\r\n    public key: string = '';\r\n    public value: string = '';\r\n    public path: string = '';\r\n\r\n    public constructor(k:string, v: string, p: string ) {\r\n        this.key = k;\r\n        this.value = v;\r\n        this.path = p;\r\n    };\r\n};\r\n\r\nexport class ModelState {\r\n    public errors: ModelStateError[] = [];\r\n    public specialCase: boolean = false;\r\n\r\n    public errorMessage: string = '';\r\n\r\n    public add(err: ModelStateError) {\r\n        this.errors.push(err);\r\n    };\r\n\r\n    public addValues(key: string, value: string, path: string) {\r\n        this.add(new ModelStateError(key, value, path));\r\n    };\r\n\r\n    public isValid() : boolean {\r\n        return !(this.errors.length > 0) && (this.errorMessage === '');\r\n    };\r\n\r\n    public reset() {\r\n        this.errors = [];\r\n        this.errorMessage = '';\r\n    };\r\n};\r\n\r\nexport default ModelState;","import * as linq from 'linq';\r\nimport * as m from '../../models/index';\r\nimport { EActivationType, ECreditDebitType, ENumberPortingType, EValidationGroupType } from '../../models/ordering/order';\r\nimport IService from '../../models/ordering/service';\r\nimport IServiceValidationGroup from '../../models/ordering/validationGroup';\r\nimport { BrandKeys } from '../Defaults';\r\nimport { ValidationMessages } from '../messages';\r\nimport StorageHelper from '../storage';\r\nimport ModelState from './modelState';\r\n\r\nexport class OrderingBase {\r\n    public validate(act: m.IActivation, modelState: ModelState, data: m.IOrderData | undefined) {\r\n        \r\n        if (!act.productId) {\r\n            \r\n            modelState.errorMessage = ValidationMessages.errorProd;\r\n            return;\r\n        };\r\n\r\n        if (!this.validateServiceGroups(act, modelState, data)) {\r\n            return;\r\n        };\r\n\r\n        //sub validate\r\n        // - if creditdebit in bnt\r\n        // - or Vf and VVL\r\n        if ((!act.sub || act.sub === '') &&\r\n            (act.creditDebitType === ECreditDebitType.postpaid || (act.activationType === EActivationType.existingCustomer && act.brandKey === BrandKeys.vodafone))) {\r\n            if (act.isWithHardware()) {\r\n                if (act.brandKey === BrandKeys.dsl) {\r\n                    modelState.errorMessage = ValidationMessages.errorHardware;\r\n                } else if (act.brandKey === BrandKeys.kabel) {\r\n                    if(!act.hardwareNecesseryAndSelected(undefined)) {\r\n                        modelState.errorMessage = ValidationMessages.errorHardware;                    \r\n                    }\r\n                } else {\r\n                    modelState.errorMessage = ValidationMessages.errorSub;\r\n                };\r\n            }\r\n        };\r\n\r\n        if (act.brandKey === BrandKeys.vodafone && !act.msisdn) {\r\n            modelState.errorMessage = ValidationMessages.errorSim;\r\n        };\r\n\r\n        if (act.brandKey === BrandKeys.vodafone && act.activationType === EActivationType.actDefault && !this.validateSim(act.msisdn)) {\r\n            modelState.errorMessage = ValidationMessages.errorSimNumeric14;\r\n        };\r\n\r\n        if (act.activationType === EActivationType.portDefault && !this.validateRequired(act.msisdn) && act.brandKey!==BrandKeys.unity) {\r\n            modelState.errorMessage = ValidationMessages.requiredError + act.msisdn;\r\n        };\r\n\r\n        if (act.activationType === EActivationType.portDefault && !this.validateNumeric(act.msisdn) && act.brandKey!==BrandKeys.unity) {\r\n            modelState.errorMessage = ValidationMessages.errorMsisdnNumeric + act.msisdn;\r\n\r\n            //2020-04-01 sm if kabel and later mnp then reset the error, msisdn is not needed\r\n            if(data && act.brandKey === BrandKeys.kabel && data.customer.mnp && data.customer.mnp.numberPortingType == ENumberPortingType.later) {\r\n                modelState.errorMessage = '';\r\n            };\r\n        };\r\n\r\n       \r\n\r\n        if (act.activationType === EActivationType.actDefault && act.imei && !this.validateNumeric(act.imei)) {\r\n            modelState.errorMessage = ValidationMessages.errorImeiNumeric;\r\n        };\r\n\r\n        if (act.activationType === EActivationType.existingCustomer \r\n            && act.sub != 'OS'\r\n            && act.brandKey === BrandKeys.vodafone \r\n            && !act.imei) {\r\n            modelState.errorMessage = ValidationMessages.errorImei;\r\n        };\r\n\r\n        if (act.imei && act.imei.length != 15) {\r\n            modelState.errorMessage = ValidationMessages.errorImei15;\r\n        };\r\n\r\n        if (act.brandKey === BrandKeys.otelo) {\r\n            if (\r\n                ((!act.msisdn || !act.code) && act.activationType === EActivationType.actDefault)\r\n                ||\r\n                ((!act.msisdn) && act.activationType === EActivationType.portDefault)\r\n            ) {\r\n                modelState.errorMessage = ValidationMessages.errorMsisndCode;\r\n            }\r\n        };\r\n    };\r\n\r\n    public validateRequired(val: string): boolean {\r\n        let hasErrors: boolean = true;\r\n\r\n        if (val.indexOf(\";\") > 0) {\r\n            let allNumbers = val.split(\";\");\r\n            let splitted: string[] = [];\r\n            for (let i = 0; i < allNumbers.length; i++) {\r\n                splitted = allNumbers[i].split(\"-\");\r\n                if (splitted[0] === \"\" || splitted[1] === \"\") {\r\n                    hasErrors = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else {\r\n            let numberInfo = val.split(\"-\");\r\n            if (numberInfo[0] === \"\" || numberInfo[1] === \"\") {\r\n                hasErrors = false;\r\n              \r\n            }\r\n        }\r\n        return hasErrors;\r\n\r\n    };\r\n\r\n    public validateSim(val: string): boolean {\r\n        let regexp = new RegExp(\"\\\\b\\\\d{14}\\\\b\", \"g\");\r\n        let res = regexp.test(val);\r\n        return res;\r\n    };\r\n\r\n    public validateNumeric(val: string): boolean {\r\n        let errorFound: boolean = false;\r\n        if (val.indexOf(\";\") >= 0) {\r\n            let tempArray = val.split(\";\");\r\n\r\n            for (let i = 0; i < tempArray.length; i++) {\r\n                let oneNumber = tempArray[i].split(\"-\");\r\n\r\n                let regexp = new RegExp(\"\\\\b\\\\d+\\\\b\", \"g\");\r\n                let res = regexp.test(oneNumber[0] + oneNumber[1]);\r\n                errorFound = res;\r\n                if (!res) {\r\n                    errorFound = res;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            let regexp = new RegExp(\"\\\\b\\\\d+\\\\b\", \"g\");\r\n            let res = regexp.test(val);\r\n            errorFound = res;\r\n            return res;\r\n        }\r\n\r\n        return errorFound;\r\n    };\r\n\r\n    public validateServiceGroups(act: m.IActivation, modelState: ModelState, data: m.IOrderData | undefined): boolean {\r\n        var br = StorageHelper.getBrand(act.brandKey);\r\n\r\n        if (br.serviceGroups) {\r\n            var gr = linq.from<IServiceValidationGroup>(br.serviceGroups)\r\n                .where(x => x.productId === act.productId && x.subId === act.sub && x.activationType === act.activationType)\r\n                .toArray();\r\n\r\n            for (let i = 0; i < gr.length; i++) {\r\n                let g = gr[i];\r\n\r\n                if (g.type === EValidationGroupType.oneMandatory) {\r\n                    let svc = linq.from<string>(act.services).where(x => g.services.indexOf(x) >= 0).toArray();\r\n\r\n                    if (svc.length === 0) {\r\n                        let svcNames: string[] = linq.from<IService>(br.services)\r\n                            .where(x => g.services.indexOf(x.id) >= 0)\r\n                            .select(x => x.name)\r\n                            .toArray();\r\n\r\n                        let msg: string = ValidationMessages.errorOneMandatoryOption.replace('{0}', svcNames.join(', '));\r\n\r\n                        modelState.errorMessage = msg;\r\n\r\n                        return false;\r\n                    };\r\n                };\r\n            };\r\n        };\r\n\r\n        return true;\r\n    };\r\n};\r\n\r\nexport default OrderingBase;","import { OrderingBase } from \"..\";\r\nimport * as linq from 'linq';\r\nimport ModelState from \"./modelState\";\r\nimport * as m from '../../models/index';\r\nimport Global from \"../Global\";\r\nimport { ValidationMessages } from \"../messages\";\r\nimport { EActivationType, ESubOptions } from \"../../models/ordering/order\";\r\nimport { OrderDataWrapper } from \"../../models/index\";\r\nimport StorageHelper from \"../storage\";\r\nimport { BrandKeys } from \"../Defaults\";\r\nimport ISub from \"../../models/ordering/sub\";\r\n\r\nexport class OrderingVodafone extends OrderingBase {\r\n    public validateOrder(act: m.IActivation, \r\n        modelState: ModelState, \r\n        data: m.IOrderData | undefined) {\r\n        super.validate(act, modelState, data);\r\n        \r\n        if(!act.imei) {\r\n            var br = StorageHelper.getBrand(BrandKeys.vodafone);\r\n            var sub = linq.from<ISub>(br.subs).where(x=>x.id == act.sub).firstOrDefault();\r\n            if(sub && OrderDataWrapper.subHasOption(sub, ESubOptions.ImeiRequired)) {\r\n                modelState.errorMessage = ValidationMessages.errorImei;\r\n            }\r\n        }\r\n\r\n        if(!act.msisdn || act.msisdn === '') {\r\n            modelState.addValues('msisdn', ValidationMessages.requiredError, Global.getPropertyPath('msisdn', act));\r\n        };\r\n    };\r\n};\r\n\r\nexport default OrderingVodafone;","import { OrderingBase } from \"..\";\r\nimport ModelState from \"./modelState\";\r\nimport * as m from '../../models/index';\r\nimport Global from \"../Global\";\r\nimport { ValidationMessages } from \"../messages\";\r\n\r\nexport class OrderingOtelo extends OrderingBase {\r\n    public validateOrder(act: m.IActivation, modelState: ModelState, data: m.IOrderData | undefined) {\r\n        super.validate(act, modelState, data);\r\n\r\n        //if(!act.msisdn || act.msisdn === '') { modelState.addValues('msisdn', ValidationMessages.requiredError, Global.getPropertyPath('msisdn', act)); }\r\n        //if(!act.code || act.code === '') { modelState.addValues('code', ValidationMessages.requiredError, Global.getPropertyPath('code', act)); }\r\n    };\r\n};\r\n\r\nexport default OrderingOtelo;","import { OrderingBase } from \"..\";\r\nimport ModelState from \"./modelState\";\r\nimport * as m from '../../models/index';\r\nimport Global from \"../Global\";\r\nimport { ValidationMessages } from \"../messages\";\r\nimport { EActivationType, ENumberPortingType } from \"../../models/ordering/order\";\r\n\r\nexport class OrderingDsl extends OrderingBase {\r\n    public validateOrder(act: m.IActivation, modelState: ModelState, data: m.IOrderData | undefined) {\r\n        super.validate(act, modelState, data);\r\n        \r\n        if(act.activationType === EActivationType.portDefault) {\r\n            if(data && data.customer.mnp && data.customer.mnp.numberPortingType === ENumberPortingType.multiple && act.services.indexOf('svc_dsl_comfort') < 0) {\r\n                modelState.errorMessage = ValidationMessages.multipleDslComfortError;\r\n                modelState.specialCase = true;\r\n            }\r\n        };\r\n    };\r\n}; \r\n\r\nexport default OrderingDsl;","import { OrderingBase } from \"..\";\r\nimport ModelState from \"./modelState\";\r\nimport * as m from '../../models/index';\r\nimport ValidationWrapper from \"./validationWrapper\";\r\nimport OptionGroup from \"../../components/process/optionGroup\";\r\nimport Global from \"../Global\";\r\nimport { MainTexts, ValidationMessages } from \"../messages\";\r\n\r\nexport class OrderingCable extends OrderingBase {\r\n    public validateOrder(act: m.IActivation, modelState: ModelState, data: m.IOrderData | undefined) {\r\n        super.validate(act, modelState, data);\r\n\r\n        let groups = ValidationWrapper.getControls('container-main', 'optiongroup');\r\n\r\n        for(let i = 0; i<groups.length; i++) {\r\n            let gr:OptionGroup = Global.FindReact(groups[i]);\r\n\r\n            if(!gr.validate()) {\r\n                Global.FocusComponent('hardwareSelection');\r\n\r\n                modelState.errorMessage = ValidationMessages.errorOption;\r\n                break;\r\n            };\r\n        };\r\n        \r\n        if(act.services.indexOf('kip-aio-marker')>=0) {\r\n            if(act.services.indexOf('kip-aio-marker/mobile-euro-flat') < 0 && act.services.indexOf('kip-aio-marker/mobile-international-flat') < 0 && act.services.indexOf('kip-aio-marker/mobile-international-allnet-flat') < 0 ) {\r\n                modelState.errorMessage = \"Einer der Optionen ('Mobile & Euro-Flat', 'Mobile & International-Flat' oder 'Mobile & International-Allnet-Flat') muss ausgewählt sein.\";\r\n            };\r\n        };\r\n\r\n        if(act.cart.length > 0) {\r\n            modelState.errorMessage = ValidationMessages.errorCart;\r\n        };\r\n    };\r\n};\r\n\r\nexport default OrderingCable;","import { OrderingBase } from \"..\";\r\nimport ModelState from \"./modelState\";\r\nimport * as m from '../../models/index';\r\nimport Global from \"../Global\";\r\nimport { ValidationMessages } from \"../messages\";\r\nimport { EActivationType, ENumberPortingType } from \"../../models/ordering/order\";\r\n\r\nexport class OrderingUnity extends OrderingBase {\r\n    public validateOrder(act: m.IActivation, modelState: ModelState, data: m.IOrderData | undefined) {\r\n        super.validate(act, modelState, data);\r\n        \r\n        if(act.activationType === EActivationType.portDefault) {\r\n        };\r\n    };\r\n}; \r\n\r\nexport default OrderingUnity;","import ModelState, { ModelStateError } from \"./modelState\";\r\nimport * as m from '../../models/index';\r\nimport { BrandKeys } from \"../Defaults\";\r\nimport { OrderingVodafone } from \"..\";\r\nimport Messages, { ValidationMessages } from \"../messages\";\r\nimport Global from \"../Global\";\r\nimport OrderingOtelo from \"./brandValidationOtelo\";\r\nimport OrderingDsl from \"./brandValidationDsl\";\r\nimport OrderingCable from \"./brandValidationCable\";\r\nimport linq from 'linq';\r\nimport * as page from '../../components/page/index'; \r\nimport StorageHelper from \"../storage\";\r\nimport { ISupportWrapper } from \"../../models/support/ISupportWrapper\";\r\nimport { OrderDataWrapper, IOrderData } from \"../../models/index\";\r\nimport { IField, IFieldConfig } from '../../models/support/field';\r\nimport { ECreditDebitType, EActivationType } from \"../../models/ordering/order\";\r\nimport ValidationOption, { IValidationOptionControl } from \"./validationOption\";\r\nimport OrderingUnity from \"./brandValidationUnity\";\r\n\r\nexport class ValidationWrapper {\r\n    public static controlSelector: string = 'oe-control';\r\n    \r\n    public static validateFormular(order: OrderDataWrapper | undefined,\r\n        showErrors: boolean,\r\n        container: string = '',\r\n        valop: IValidationOptionControl[] | undefined = []) {\r\n        let firstFailed: string | undefined;\r\n        let parent: any = document;\r\n\r\n        if (container) {\r\n            parent = document.getElementById(container);\r\n        };\r\n\r\n        //optimizations\r\n        if(order && order.data) {\r\n            if(order.data.customer && order.data.customer) {\r\n                if(order.data.customer.payment) { \r\n                    if(order.data.customer.payment.iban) {\r\n                        order.data.customer.payment.iban = order.data.customer.payment.iban.replace(/ /g, '');\r\n                    }\r\n                }\r\n            };\r\n        };\r\n\r\n        let all = parent.getElementsByClassName(ValidationWrapper.controlSelector);\r\n\r\n        return ValidationWrapper.validateControls(all, order, showErrors, valop);\r\n    };\r\n\r\n    public static resetFormular(container: string) {\r\n        let all: HTMLCollectionOf<Element> = ValidationWrapper.getControls(container, ValidationWrapper.controlSelector);\r\n\r\n        for (let i = 0; i < all.length; i++) {\r\n            if (!all[i].id) { continue; };\r\n\r\n            let element = document.getElementById(all[i].id);\r\n\r\n            let ctrl: page.LControl = Global.FindReact(element);\r\n\r\n            ctrl.setError('');\r\n        };\r\n    };\r\n\r\n    public static getControls(container: string = '', selector: string) {\r\n        let parent: any = document;\r\n\r\n        if (container) {\r\n            parent = document.getElementById(container);\r\n        };\r\n\r\n        let all = parent.getElementsByClassName(selector);\r\n\r\n        return all;\r\n    };\r\n\r\n    public static validateControls(all: HTMLCollectionOf<Element>,\r\n        order: OrderDataWrapper | undefined,\r\n        showErrors: boolean,\r\n        valop: IValidationOptionControl[] | undefined) {\r\n        let firstFailed: string | undefined;\r\n\r\n        let sup: ISupportWrapper = StorageHelper.getSupport();\r\n\r\n        var day = '';\r\n        var month = '';\r\n        var year = '';\r\n\r\n        for (let i = 0; i < all.length; i++) {\r\n            //some elements are dummy container and do not have id\r\n            if (!all[i].id) { continue; };\r\n\r\n            //fields in user menu not validated\r\n            //all[i].classList.contains()\r\n            //if(!all[i].id.startsWith('ec')) {continue;}\r\n\r\n            let element = document.getElementById(all[i].id);\r\n\r\n            let ctrl: page.LControl = Global.FindReact(element);\r\n\r\n            //control is child of other control so validation is done one level above\r\n            if (ctrl.props.isChild) { continue; };\r\n           \r\n            //control is disabled so continue\r\n            if (ctrl.props.disabled) { continue; };\r\n\r\n            var fld: IField = linq.from<IField | any>(sup.fields)\r\n                .where(x => x.key == ctrl.getKey())\r\n                .firstOrDefault();\r\n\r\n            if (fld && order) {\r\n                ValidationWrapper.applyFieldConfig(order, fld, ctrl);\r\n            };\r\n\r\n            if (valop && ctrl.getValidationOptions().length == 0) {\r\n                let vo = linq.from<IValidationOptionControl>(valop)\r\n                    .where(x => x.id == ctrl.getId())\r\n                    .firstOrDefault();\r\n                if (vo) {\r\n                    ctrl.setValidationOptions(vo.options);\r\n                };\r\n            };\r\n\r\n            let isValid: boolean = ctrl.validate(fld, showErrors);\r\n          \r\n            if (!isValid) {\r\n                if (!firstFailed) { firstFailed = ctrl.getId(); }\r\n                /*return false;*/\r\n            }\r\n        };\r\n\r\n        if (firstFailed) {\r\n            let el = document.getElementById('oec' + firstFailed);\r\n            if (el) {\r\n                el.scrollIntoView({ block: \"center\", inline: \"center\" });\r\n            };            \r\n\r\n            el = document.getElementById(firstFailed);\r\n            if (el) {\r\n                el.scrollIntoView({ block: \"center\", inline: \"center\" });\r\n            };\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    public static applyFieldConfig(order: OrderDataWrapper,\r\n        field: IField,\r\n        ctrl: page.LControl) {\r\n        let cfg: IFieldConfig[] = [];\r\n \r\n        for (let i = 0; i < field.config.length; i++) {\r\n            if (order.hasBrand(field.config[i].brand)) {\r\n                let add: boolean = false;\r\n                let pt: ECreditDebitType = field.config[i].creditDebitType;\r\n                let at: EActivationType = field.config[i].activation;\r\n\r\n                //partnerCard and actDefault are the same \r\n                if (at === EActivationType.partnerCard) {\r\n                    at = EActivationType.actDefault;\r\n                } else if (at === EActivationType.partnerCardPortation) {\r\n                    at = EActivationType.portDefault;\r\n                };    \r\n\r\n                if (pt === ECreditDebitType.postpaid && order.inPostpaid && (at === EActivationType.actDefault) && order.inActDefault) { add = true; }\r\n                else if (pt === ECreditDebitType.prepaid && order.inPrepaid && (at === EActivationType.actDefault) && order.inActDefault) { add = true; }\r\n                else if (pt === ECreditDebitType.postpaid && order.inPostpaid && at === EActivationType.portDefault && order.inActMnp) { add = true; }\r\n                else if (pt === ECreditDebitType.prepaid && order.inPrepaid && at === EActivationType.portDefault && order.inActMnp) { add = true; }\r\n                else if (pt === ECreditDebitType.postpaid && order.inPostpaid && at === EActivationType.cdChange && order.inCdChange) { add = true; }\r\n\r\n                if (add) {\r\n                    cfg.push(field.config[i]);\r\n                };\r\n            }\r\n        };\r\n\r\n        //not a single rule is available for this case, but component has ruls so =>  hide it\r\n        if (field.config.length > 0 && cfg.length === 0) {\r\n            ctrl.hideShow(true);\r\n        } else {\r\n            ctrl.hideShow(false);\r\n        };\r\n\r\n        field.config = cfg;\r\n    };\r\n\r\n    // public static startOrderingValidation(data: m.IOrderData): ModelState {\r\n        \r\n    //     let res: ModelState = new ModelState();\r\n\r\n    //     for (let i: number = 0; i < data.activations.length; i++) {\r\n    //         let act: m.IActivation = data.activations[i] as m.IActivation;\r\n\r\n    //         if (act.brandKey === BrandKeys.vodafone) {\r\n    //             let vf: OrderingVodafone = new OrderingVodafone();\r\n    //             vf.validateOrder(act, res, data)\r\n    //         } else if (act.brandKey === BrandKeys.otelo) {\r\n    //             let ot: OrderingOtelo = new OrderingOtelo();\r\n    //             ot.validateOrder(act, res, data)\r\n    //         } else if (act.brandKey === BrandKeys.dsl) {\r\n    //             let dsl: OrderingDsl = new OrderingDsl();\r\n    //             dsl.validateOrder(act, res, undefined)\r\n    //         }\r\n    //     }\r\n\r\n    //     return res;\r\n    // };\r\n\r\n    public static startActivationValidation(act: m.IActivation, data: OrderDataWrapper): ModelState {\r\n        let res: ModelState = new ModelState();\r\n\r\n        if (data.getPortationCount() > 1) {\r\n            res.errorMessage = ValidationMessages.errorPortationCount;\r\n        } else {\r\n            if (act.brandKey === BrandKeys.vodafone) {\r\n                let vf: OrderingVodafone = new OrderingVodafone();\r\n                vf.validateOrder(act, res, undefined);\r\n            } else if (act.brandKey === BrandKeys.otelo) {\r\n                let ot: OrderingOtelo = new OrderingOtelo();\r\n                ot.validateOrder(act, res, undefined);\r\n            } else if (act.brandKey === BrandKeys.dsl) {\r\n                let dsl: OrderingDsl = new OrderingDsl();\r\n                dsl.validateOrder(act, res, data.data);\r\n            } else if (act.brandKey === BrandKeys.kabel) {\r\n                let cab: OrderingCable = new OrderingCable();\r\n                cab.validateOrder(act, res, data.data);\r\n            } else if (act.brandKey === BrandKeys.unity) {\r\n                let uni: OrderingUnity = new OrderingUnity();\r\n                uni.validateOrder(act, res, data.data);\r\n            }\r\n        };\r\n\r\n        return res;\r\n    };\r\n\r\n    public static startExistingProcessValidation(act: m.IActivation): ModelState {\r\n        let res: ModelState = new ModelState();\r\n        act = OrderDataWrapper.ensureActivationIsObject(act);\r\n        if (act.brandKey === BrandKeys.vodafone) {\r\n            let vf: OrderingVodafone = new OrderingVodafone();\r\n            vf.validateOrder(act, res, undefined)\r\n        } else if (act.brandKey === BrandKeys.otelo) {\r\n            let ot: OrderingOtelo = new OrderingOtelo();\r\n            ot.validateOrder(act, res, undefined)\r\n        } else if (act.brandKey === BrandKeys.dsl) {\r\n            let dsl: OrderingDsl = new OrderingDsl();\r\n            dsl.validateOrder(act, res, undefined)\r\n        } else if (act.brandKey === BrandKeys.kabel) {\r\n            let cab: OrderingCable = new OrderingCable();\r\n            cab.validateOrder(act, res, undefined)\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    public static getErrorFromState(modelState: ModelState, key: string): string | undefined {\r\n        if (!modelState) { return undefined; }\r\n\r\n        let item: ModelStateError = linq.from<ModelStateError | any>(modelState.errors)\r\n            .where(x => x.key == key)\r\n            .firstOrDefault();\r\n\r\n        return item ? item.value : undefined;\r\n    };\r\n};\r\n\r\nexport default ValidationWrapper;","import { BrandKeys } from '../Defaults';\r\nimport * as o from '../../models/ordering/data';\r\nimport linq from 'linq';\r\nimport { IActivation } from \"../../models\";\r\nimport {IVisibilityConfiguration} from './visibilityConfiguration';\r\nimport { EActivationType } from '../../models/ordering/order';\r\n\r\nexport class VisibilityOrdering {\r\n    private static config: IVisibilityConfiguration[] = [\r\n        {name: \"nationality\", brands: [BrandKeys.otelo], activationTypes: [EActivationType.actDefault]},\r\n        {name: \"firstname\", brands: [BrandKeys.otelo, BrandKeys.dsl, BrandKeys.kabel, BrandKeys.vodafone], activationTypes: [EActivationType.actDefault]}\r\n    ];\r\n\r\n    constructor() {\r\n    };\r\n\r\n    public static checkVisibility(name: string, order: o.OrderDataWrapper) : boolean {\r\n        let cfg = linq.from<IVisibilityConfiguration>(this.config)\r\n            .where(x=>x.name === name)\r\n            .firstOrDefault();\r\n        \r\n        if(!cfg) { return true; }\r\n\r\n        for(let a of order.data.activations) {\r\n            if(cfg.brands.indexOf(a.brandKey)>=0)  {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n};\r\n\r\nexport default VisibilityOrdering;","export {default as ModelStete} from './validation/modelState';\r\nexport {default as ModelSteteError} from './validation/modelState';\r\nexport {default as OrderingBase} from './validation/orderingBase';\r\nexport {default as OrderingVodafone} from './validation/brandValidationVf';\r\nexport {default as ValidationWrapper} from './validation/validationWrapper';\r\nexport {default as OrderingOtelo} from './validation/brandValidationOtelo';\r\nexport {default as VisibilityOrdering} from './visibility/ordering';","import * as React from 'react';\r\nimport IBrand  from '../../models/ordering/brand';\r\nimport IProduct  from '../../models/ordering/product';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport TooltipWrapper, { ETooltipType } from '../page/tooltip';\r\nimport Global from '../../utils/Global';\r\nimport {ITooltipModel, ETooltipDataType} from '../../models/global/tooltip';\r\nimport { Hints } from '../../utils/messages';\r\nimport { ILinkConfig } from '../existing/data/services';\r\n\r\nexport interface ITariffThumbProps {\r\n    text: string;\r\n    detail?: string;\r\n    action?: ILinkConfig;\r\n\r\n    id: string;\r\n    idx: number;\r\n    tooltip?: string;\r\n    brandKey: string;\r\n    selected: boolean;\r\n    onClick: any;\r\n    clickModel?: any;\r\n    styleBrand: boolean;\r\n    cssStyle?: string;\r\n    tooltipModel?: any;\r\n\r\n    custom?: boolean;\r\n};\r\n\r\nexport interface ITariffThumbState {\r\n    selected: boolean;\r\n};\r\n\r\nexport class TariffThumb extends React.Component<ITariffThumbProps, ITariffThumbState> {\r\n\r\n    constructor(props: ITariffThumbProps) {\r\n        super(props);\r\n        this._onClick = this._onClick.bind(this);\r\n        this.state = {\r\n            selected: this.props.selected\r\n        };\r\n    }\r\n\r\n    public componentWillReceiveProps(next: ITariffThumbProps) {\r\n        this.setState({selected: next.selected});\r\n    };\r\n\r\n    public render() {\r\n        let cls: string = 'thumb thumb-tariff ' + (this.props.styleBrand ? this.props.brandKey : '');\r\n\r\n        cls += this.props.cssStyle ? this.props.cssStyle : '';\r\n\r\n        if(this.state.selected) {\r\n            cls += ' selected';\r\n        };\r\n        \r\n        let uid = Global.getUniqueId();\r\n\r\n        let ttm: ITooltipModel = {type: ETooltipDataType.html, body:'', style: ''};\r\n        \r\n        try {\r\n            if(this.props.tooltip && this.props.tooltip.indexOf(\"{\")>=0) {\r\n                ttm = this.props.tooltip ? JSON.parse(this.props.tooltip) : {};\r\n            } else {\r\n                if(this.props.tooltip) { \r\n                    ttm = { type: ETooltipDataType.formated, body: this.props.tooltip, style: '' };\r\n                } else {\r\n                    ttm = { type: ETooltipDataType.html, body: Hints.noMoreInfo, style: ''}\r\n                }\r\n            }\r\n        } catch(e) {}\r\n\r\n        let ctrl = (\r\n            <>\r\n            {\r\n                ttm && ttm.body ? \r\n                <ReactTooltip place=\"top\" type=\"light\" effect=\"solid\" id={'tt' + uid}>\r\n                    <div dangerouslySetInnerHTML={{__html: ttm.body}}/>\r\n                    {/* <TooltipWrapper brand={this.props.brandKey} type={ETooltipType.product} model={this.props.tooltipModel} /> */}\r\n                </ReactTooltip>\r\n                : <></>\r\n            }\r\n            <div className={cls} onClick={this._onClick} data-tip={this.props.tooltip} data-for={'tt' + uid}>\r\n                <span className=\"text\">\r\n                    {this.props.text}\r\n                </span>\r\n                {\r\n                    this.props.action ? \r\n                    <div className=\"action\" onClick={\r\n                         (e)=>{\r\n                                if(this.props.action) {\r\n                                    this.props.action.onClick(this)\r\n                                    e.preventDefault();\r\n                                };\r\n                            }\r\n                         }>\r\n                        {this.props.action.text}\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private _onClick() {\r\n        if(this.props.onClick){\r\n            if(this.props.clickModel) {\r\n                this.props.onClick(this.props.clickModel);\r\n            } else {\r\n                this.props.onClick(this.props.id);\r\n            };\r\n        }\r\n    };\r\n};\r\n\r\nexport default TariffThumb;","import * as React from 'react';\r\nimport * as m from '../../models';\r\nimport { EPreviewState } from './preview/contract';\r\n\r\nexport interface IBrandThumbProps {\r\n    item: m.InfoItem;\r\n    //info?: m.IInfoItem;\r\n    onClick: any;\r\n    type: EBrandThumbType;\r\n    status: EBrandThumbStatus;\r\n    activationStatus?: EPreviewState;\r\n    withoutInfo?: boolean;\r\n    ckey: string;\r\n    multiBasketId?: string;\r\n};\r\n\r\nexport enum EBrandThumbType {\r\n    blister = 'blister', // used for brand selection\r\n    square = 'square',  // used for secondary selection\r\n    squareSmall = 'squareSmall'\r\n};\r\n\r\nexport enum EBrandThumbStatus {\r\n    undefined = 0,\r\n    active = 1,\r\n    inactive = 2,\r\n    selected = 4,\r\n    static = 8,\r\n    loading = 16\r\n};\r\n\r\nexport interface IBrandThumbState {\r\n    status: EBrandThumbStatus;\r\n};\r\n\r\nexport class BrandThumb extends React.Component<IBrandThumbProps, IBrandThumbState> {\r\n    constructor(props: IBrandThumbProps) {\r\n        super(props);\r\n        \r\n        this._onClick= this._onClick.bind(this);\r\n        \r\n        this.state = {\r\n            status: this.props.status\r\n        };\r\n    }\r\n\r\n    public componentWillReceiveProps(next: IBrandThumbState){\r\n        this.setState(next);\r\n    };\r\n\r\n    public render() {\r\n        let cls: string = 'thumb-inner ' + this.props.item.id;\r\n        if(this.props.multiBasketId){\r\n            cls = 'thumb-inner ' + this.props.multiBasketId;\r\n        }\r\n        if((this.state.status & EBrandThumbStatus.selected) != 0){\r\n            cls += ' selected';\r\n        };\r\n        \r\n        if((this.state.status & EBrandThumbStatus.inactive) != 0){\r\n            cls += ' inactive';\r\n        };        \r\n\r\n        if((this.state.status & EBrandThumbStatus.static) != 0){\r\n            cls += ' static';\r\n        };        \r\n        \r\n        if((this.state.status & EBrandThumbStatus.loading) != 0){\r\n            cls += ' loading';\r\n        };  \r\n\r\n        //cls += ' ' + this.props.brand.style;\r\n\r\n        let clst: string = 'thumb thumb-brand-' + this.props.type.toString() + ' ' + (this.props.item ? this.props.item.css : '');\r\n        \r\n        let clin: string = 'info ' + (this.props.item ? this.props.item.css : '');\r\n\r\n        let ctrl = (\r\n            <div key={this.props.ckey} className={clst} onClick={this._onClick}>\r\n                <div className={cls} />\r\n\r\n                {\r\n                    this.props.item && this.props.type === EBrandThumbType.blister && !this.props.withoutInfo ? \r\n                    <div className={clin}><span>{this.props.item.text}</span></div>\r\n                    : null\r\n                }\r\n\r\n                {\r\n                    this.props.activationStatus && this.props.activationStatus === EPreviewState.activationDone ? \r\n                    <div className=\"markok\"/>\r\n                    : null\r\n                }\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private _onClick() {\r\n        if((this.state.status & EBrandThumbStatus.inactive) != 0){\r\n            return;\r\n        };         \r\n\r\n        if(this.props.onClick) {\r\n            this.props.onClick(this.props.item.id);\r\n        }\r\n    };\r\n};\r\n\r\nexport default BrandThumb;","import * as React from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { ETooltipDataType, ITooltipModel } from '../../models/global/tooltip';\r\nimport { ELButtonType, ELElementStatus } from '../../models/page/diverse';\r\nimport { ILElementProps, ILElementState } from '../../models/page/interfaces';\r\n\r\nexport interface ILButonProps extends ILElementProps {\r\n    type?: ELButtonType;\r\n    icon?: string;\r\n    inline?: boolean;\r\n    css?: string;\r\n    cssText?: string;\r\n    id?: string;\r\n    onClick?: any;\r\n    tooltip?: any;\r\n};\r\n\r\nexport class LButton extends React.Component<ILButonProps, ILElementState> {\r\n    constructor(props: ILButonProps) {\r\n        super(props);\r\n\r\n        this._onClick = this._onClick.bind(this);\r\n\r\n        this.state = {\r\n            status: this.props.status ? this.props.status : ELElementStatus.normal\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let type = this.props.type ? this.props.type : ELButtonType.normal;\r\n\r\n        if (type === ELButtonType.normal) {\r\n            return this.renderNormal();\r\n        } else if (type === ELButtonType.icon) {\r\n            return this.renderIcon();\r\n        } else if (type === ELButtonType.buttonWithIconRight) {\r\n            return this.renderButtonIcon();\r\n        } else if (type === ELButtonType.iconImage) {\r\n            return this.renderImageIcon();\r\n        } else if (type === ELButtonType.textWithIconLeft) {\r\n            return this.renderTextIcon();\r\n        } else if (type === ELButtonType.linkWithIconLeft || type === ELButtonType.linkWithIconRight) {\r\n            return this.renderLinkIcon();\r\n        } else if (type === ELButtonType.linkSimple) {\r\n            return this.renderLinkIcon();\r\n        } else if (type === ELButtonType.linkPanel) {\r\n            return this.renderLink();\r\n        }\r\n\r\n\r\n        return <></>\r\n    };\r\n\r\n    public renderIcon(): JSX.Element {\r\n        let css: string = 'bicon';\r\n\r\n        if (this.props.status === ELElementStatus.selected) {\r\n            css += ' selected';\r\n        } else if (this.props.status === ELElementStatus.disabled) {\r\n            css += ' disabled';\r\n        } else if (this.props.status === ELElementStatus.ready) {\r\n            css += ' ready';\r\n        }\r\n\r\n        if (this.props.inline) {\r\n            css += ' inline';\r\n        }\r\n\r\n        let cssi = \"icon \" + this.props.icon;\r\n        let ctrl = (\r\n            <div className={css}>\r\n                <div className={cssi}></div>\r\n                <div className=\"text\">{this.props.text}</div>\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public renderLink(): JSX.Element {\r\n        let css: string = 'link';\r\n\r\n        if (this.props.css) {\r\n            css += ' ' + this.props.css;\r\n        }\r\n\r\n        let ctrl = (\r\n            <button className={css} onClick={this._onClick}>\r\n                <div className=\"text\">{this.props.text}</div>\r\n            </button>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public renderLinkIcon(): JSX.Element {\r\n        let css: string = 'licon';\r\n\r\n        if (this.props.status === ELElementStatus.selected) {\r\n            css += ' selected';\r\n        } else if (this.props.status === ELElementStatus.disabled) {\r\n            css += ' disabled';\r\n        }\r\n\r\n        if (this.props.css) {\r\n            css += ' ' + this.props.css;\r\n        }\r\n\r\n        if (this.props.type === ELButtonType.linkSimple) {\r\n            css += ' noicon';\r\n        }\r\n\r\n        let cssi = \"icon \" + this.props.icon;\r\n        let icon = \"/assets/icons/\" + this.props.icon;\r\n        let ttm: ITooltipModel = { type: ETooltipDataType.html, body: this.props.tooltip, style: '' };\r\n        let ctrl = (\r\n            <div>\r\n             <ReactTooltip place=\"top\" type=\"light\" effect=\"solid\" id={this.props.id}>\r\n                 <div dangerouslySetInnerHTML={{ __html: ttm.body }} />\r\n             </ReactTooltip>\r\n            <button className={css} onClick={this._onClick} data-tip={this.props.tooltip} data-for={this.props.id}>\r\n                {\r\n                    this.props.type === ELButtonType.linkWithIconLeft ?\r\n                        <>\r\n\r\n                            <div className=\"text\">{this.props.text}</div>\r\n                            <div className={cssi} />\r\n                        </>\r\n                        : null\r\n                }\r\n\r\n                {\r\n                    this.props.type === ELButtonType.linkWithIconRight ?\r\n                        <>\r\n\r\n                            <div className={cssi + ''} />\r\n                            <div className=\"text\">{this.props.text}</div>\r\n                        </>\r\n                        : null\r\n                }\r\n\r\n                {\r\n                    this.props.type === ELButtonType.linkSimple ?\r\n                        <div className=\"text\">{this.props.text}</div> : null\r\n                }\r\n            </button>\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public renderTextIcon(): JSX.Element {\r\n        let css: string = 'ticon';\r\n\r\n        if (this.props.status === ELElementStatus.selected) {\r\n            css += ' selected';\r\n        } else if (this.props.status === ELElementStatus.disabled) {\r\n            css += ' disabled';\r\n        }\r\n\r\n        if (this.props.css) {\r\n            css += ' ' + this.props.css;\r\n        }\r\n\r\n        let cssi = \"icon \" + this.props.icon;\r\n        let icon = \"/assets/icons/\" + this.props.icon;\r\n        let ctrl = (\r\n            <button className={css} onClick={this._onClick}>\r\n                <div className=\"text\">{this.props.text}</div>\r\n                <div className={cssi} />\r\n            </button>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public renderButtonIcon(): JSX.Element {\r\n        let css: string = 'aicon';\r\n\r\n        if (this.props.status === ELElementStatus.selected) {\r\n            css += ' selected';\r\n        } else if (this.props.status === ELElementStatus.disabled) {\r\n            css += ' disabled';\r\n        }\r\n\r\n        if (this.props.css) {\r\n            css += ' ' + this.props.css;\r\n        }\r\n\r\n        let cssi = \"icon \" + this.props.icon;\r\n        let ctrl = (\r\n            <button className={css} onClick={this._onClick} id={this.props.id}>\r\n                <div className={'text ' + this.props.cssText} dangerouslySetInnerHTML={{ __html: this.props.text || '' }} />\r\n                <div className={cssi} />\r\n            </button>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public renderNormal(): JSX.Element {\r\n        let css: string = '';\r\n\r\n        if (this.props.status === ELElementStatus.selected) {\r\n            css += ' selected';\r\n        } else if (this.props.status === ELElementStatus.disabled) {\r\n            css += ' disabled';\r\n        }\r\n\r\n        let ctrl = (\r\n            <button className={css} onClick={this._onClick} id={this.props.id}>\r\n                {this.props.text}\r\n            </button>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n\r\n\r\n    public renderImageIcon(): JSX.Element {\r\n        let cssi = \"icon iicon red \" + this.props.icon;\r\n        if (this.props.css) {\r\n            cssi += ' ' + this.props.css;\r\n        }\r\n        let ctrl = (\r\n            <div className={cssi} onClick={this._onClick} id={this.props.id} />\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private _onClick(ev: any) {\r\n        if (this.props.css && this.props.css.indexOf('disabled') >= 0) {\r\n            return;\r\n        };\r\n\r\n        if (this.props.onClickEvent) {\r\n            this.props.onClickEvent(ev, this.props.clickModel);\r\n        };\r\n\r\n        if (this.props.onClick) {\r\n            this.props.onClick(this.props.clickModel);\r\n        }\r\n    };\r\n};\r\n\r\nexport default LButton;","import * as linq from 'linq';\r\nimport { BrandKeys, ConstantKeys, Defaults } from '../../utils/Defaults';\r\nimport Global from '../../utils/Global';\r\nimport StorageHelper from '../../utils/storage';\r\nimport * as m from '../index';\r\nimport { ERequestStatus } from '../page/diverse';\r\nimport { IKeyText } from '../page/interfaces';\r\nimport { ProductTree, TreeItem } from '../support/tree';\r\nimport Address from './../ordering/address';\r\nimport IActivation from './activation';\r\nimport IProduct from './product';\r\nimport IService from './service';\r\n\r\nexport interface IAvailabilityServiceSelection {\r\n    metaname: string;\r\n    selected: boolean;\r\n    sort?: number;\r\n\r\n    productId: string;\r\n};\r\n\r\nexport interface IAvailabilityService {\r\n    metaname: string;\r\n    available: boolean;\r\n    mandatory: boolean;\r\n    sort: number;\r\n    prices: IAvailabilityPrice[];\r\n    excludes: string[];\r\n    elements: IAvailabilityService[];\r\n    selected?: string;\r\n    type: string;\r\n    name: string;\r\n};\r\n\r\nexport enum EElementType {\r\n    undefined = 0,\r\n    product = 1,\r\n    sub = 2,\r\n    service = 3\r\n};\r\n\r\nexport class PriceWrapper {\r\n    public brand: string = '';\r\n    public id: string = '';\r\n    public type: EElementType = EElementType.product;\r\n    public prices: IAvailabilityPrice[] = [];\r\n    public price?: any;\r\n\r\n    constructor(id: string, brand: string, type: EElementType){\r\n        this.id = id;\r\n        this.brand = brand;\r\n        this.type = type;\r\n    };\r\n\r\n    static createInstance(id:string, brand: string, source: any, type: EElementType) {\r\n        let p: PriceWrapper = new PriceWrapper(id, brand, type);\r\n        if(source) {\r\n            if(source.prices) {\r\n                p.prices = source.prices;\r\n            } else if (source.price) {\r\n                p.price = source.price;\r\n            }\r\n        };\r\n\r\n        return p;\r\n    };\r\n\r\n    getMonthlyFee() {\r\n        let f = Global.getEmptyFee();\r\n        if(this.prices && this.prices.length) {\r\n            if(this.brand == BrandKeys.kabel) {\r\n                let p = linq.from<IAvailabilityPrice>(this.prices)\r\n                    .where(x=>x.billingFrequency == BillingFrequency.monthly && !x.periodEnd)\r\n                    .firstOrDefault();\r\n\r\n                if(p) {\r\n                    f.price = p.amount * 100;\r\n                };\r\n            } else if(this.brand == BrandKeys.unity) {\r\n                //f = { price: Number.parseInt(this.price!.toString()), unit: Defaults.currencyUnit};\r\n                f = this.price!;\r\n            };\r\n        } else { \r\n            if(this.brand == BrandKeys.unity) {\r\n                if(this.price){\r\n                    f = { price: Number.parseInt(this.price!.toString()), unit: Defaults.currencyUnit};\r\n                };\r\n            };            \r\n        }\r\n\r\n        return f;\r\n    };\r\n\r\n    getActivationFee() {\r\n        let f = Global.getEmptyFee();\r\n        if(this.prices && this.prices.length) {\r\n            if(this.brand == BrandKeys.kabel) {\r\n                let p = linq.from<IAvailabilityPrice>(this.prices)\r\n                    .where(x=>x.billingFrequency == BillingFrequency.once)\r\n                    .firstOrDefault();\r\n\r\n                if(p) {\r\n                    f.price = p.amount * 100;\r\n                };\r\n            } else if(this.brand == BrandKeys.unity) {\r\n                f = this.price!;\r\n            };\r\n        };\r\n\r\n        return f;\r\n    };\r\n};\r\n\r\nexport interface IAvailabilityPrice {\r\n    amount: number;\r\n    billingFrequency: string;\r\n    periodStart?: number;\r\n    periodEnd?: number;\r\n};\r\n\r\nexport class BillingFrequency {\r\n    public static monthly = 'MONTHLY';\r\n    public static once = 'ONCE';\r\n};\r\n\r\nexport enum EElementTypeUi\r\n{\r\n    undefined = 0,\r\n    mandatory = 1,\r\n    selectable = 2,\r\n    optional = 4,\r\n    selectedMandatory = 8,\r\n    children = 16,\r\n    childrenSelected = 32\r\n};\r\n\r\nexport enum EAvailabilityResultStatus {\r\n    undefined = 0,\r\n    ok = 1,\r\n    remove = 2,\r\n    add = 4\r\n};\r\n\r\nexport interface IAvailabilityResultItem {\r\n    status?: EAvailabilityResultStatus;\r\n    id: string;\r\n    text?: string;\r\n    path?: string[];\r\n};\r\n\r\nexport class AvailabilityWrapper {\r\n    products: AvailabilityProduct[] = [];\r\n    \r\n    private avlBrand: IAvailabilityBrand;\r\n\r\n    constructor(avl: Availability) {\r\n        this.avlBrand = linq.from<IAvailabilityBrand>(avl.brands).first(x=>x.key == BrandKeys.kabel);\r\n    };\r\n\r\n    applyChanges(act: IActivation) {\r\n        let res:AvailabilityProduct[] = [];\r\n        let sel = act.selection;\r\n\r\n        if(sel.children.length > 0) {\r\n            sel.children.map((i)=>{\r\n                let local = linq.from<AvailabilityProduct>(this.products).where(x=>x.productId == i.id).firstOrDefault();\r\n\r\n                if(!local) {\r\n                    local = linq.from<AvailabilityProduct>(this.avlBrand.products).where(x=>x.productId == i.id).first();\r\n\r\n                    local = AvailabilityProduct.ensure(local);\r\n                }\r\n\r\n                local.init(i.toArray(false, undefined));\r\n\r\n                res.push(local);\r\n            });\r\n        };\r\n\r\n        this.products = res;\r\n\r\n        this.applyAutoSelection(act);\r\n    };\r\n\r\n    getExcludes() {\r\n        this.products.map((i)=>{\r\n            //console.log('excludes for ' + i.productId, i.exc);\r\n        });\r\n    };\r\n\r\n    applyAutoSelection(act: IActivation) {\r\n        act.selection.children.map((i)=>{\r\n            let p = linq.from<AvailabilityProduct>(this.products).where(x=>x.productId == i.id).first();\r\n            this.applyElements(i, p.elements);\r\n        });\r\n    };\r\n\r\n    applyElements(item: TreeItem, elements: IAvailabilityService[]) {\r\n        item.children.map((i)=>{\r\n            let el = linq.from<IAvailabilityService>(elements).where(x=>x.metaname == i.id).firstOrDefault();\r\n            if(el) {\r\n                el.selected = ConstantKeys.user;\r\n\r\n                if(el.elements) {\r\n                    this.applyElements(i, el.elements);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    init(act:IActivation, productId: string | undefined) {\r\n        this.products.map((i)=>{\r\n            if(!productId || productId == i.productId) { \r\n                if(productId) {\r\n                    i.reset(undefined);\r\n                };\r\n\r\n                i.init(act.selection.toArray(false, productId));\r\n            };\r\n        });\r\n    };\r\n\r\n    prepareElements(type: EElementTypeUi, sel: ProductTree) : IAvailabilityServiceSelection[] {\r\n        let res:IAvailabilityServiceSelection[] = [];\r\n        this.products.map((i)=>{\r\n            let op:IAvailabilityServiceSelection[] = [];\r\n            i.prepareElements(type, op, 1, sel, [i.productId], undefined);\r\n            op.map((j)=>{\r\n                res.push(j);\r\n            })\r\n        });\r\n\r\n        return res;\r\n    };\r\n\r\n    prepare() {\r\n        this.products.map((i)=>{\r\n            i.prepare();\r\n        });\r\n    };\r\n\r\n    reset() {\r\n        this.products.map((i)=>{\r\n            i.reset(undefined);\r\n        });\r\n    };\r\n\r\n    validateAvailability(act:IActivation, brand: IAvailabilityBrand) {\r\n        let res:IAvailabilityResultItem[] = [];\r\n        this.products.map((i)=>{\r\n            i = linq.from<AvailabilityProduct>(brand.products).where(x=>x.productId == i.productId).first();\r\n            i = AvailabilityProduct.ensure(i);\r\n            let tmp: IAvailabilityResultItem[] = i.validateAvailability(act, brand);\r\n            res = res.concat(tmp);\r\n        });\r\n        return res;\r\n    };\r\n\r\n    getElement(productId: string, path: string[]) {\r\n        let prod = linq.from<AvailabilityProduct>(this.products).first(x=>x.productId == productId);\r\n        return prod.getElement(path);\r\n    };\r\n\r\n    getMandatory(productId: string) : string[] {\r\n        let prod = linq.from<AvailabilityProduct>(this.products).first(x=>x.productId == productId);\r\n        return prod.getMandatory();\r\n    };\r\n\r\n    getMandatoryForElement(productId: string, id: string) : string[] {\r\n        let prod = linq.from<AvailabilityProduct>(this.products).first(x=>x.productId == productId);\r\n        return prod.getMandatoryForElement(id);\r\n    };\r\n\r\n    inout(productId: string, path: string[], selected: boolean) {\r\n        let prod = linq.from<AvailabilityProduct>(this.products).first(x=>x.productId == productId);\r\n        prod.inout(path, selected);\r\n    };\r\n\r\n    static ensure(source:AvailabilityWrapper, avl : Availability) : AvailabilityWrapper{\r\n        let aw =  Object.assign(new AvailabilityWrapper(avl), source);\r\n        aw.products = [];\r\n\r\n        source.products.map((i)=>{\r\n            aw.products.push(AvailabilityProduct.ensure(i));\r\n        });\r\n\r\n        return aw;\r\n    };\r\n};\r\n\r\nexport interface IAvailabilityElement {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    selected: boolean;\r\n    mandatory: boolean;\r\n\r\n    options: IAvailabilityElement[];\r\n};\r\n\r\nexport class AvailabilityProduct {\r\n    //kabel\r\n    ////public key: string = '';\r\n    //public prices: IAvailabilityPrice[] = [];\r\n    public elements: IAvailabilityService[] =[];\r\n\r\n    //dsl\r\n    public productId: string = '';\r\n    public connectionTypes: string[] = [];\r\n    public asb: string = '';\r\n    public areaCode: string = '';\r\n    public offeredAccessTechnology: string = '';\r\n    public bandwidth: string = '';\r\n    public hasComfort: boolean = false;\r\n    public speed: number = 0;\r\n    public speedText: string = '';\r\n\r\n    //\r\n    public dropedServices:string[] = ['kas-an-opt', 'tv-connect'];\r\n\r\n    public price?: number;\r\n\r\n    public exc : string[] = [];\r\n    //private chi : string[] = [];\r\n\r\n    public subs: IAvailabilityElement[] = [];\r\n\r\n    private br = StorageHelper.getBrand(BrandKeys.kabel);\r\n\r\n    public static ensure(source: AvailabilityProduct) : AvailabilityProduct {\r\n        return Object.assign(new AvailabilityProduct(), source);\r\n    };\r\n\r\n    public getService(meta: string, source: IAvailabilityService[] | undefined) : IAvailabilityService | undefined {\r\n        let src = source;\r\n\r\n        if(!src) {\r\n            src = this.elements;\r\n        };\r\n        \r\n        for(let i = 0; i < src.length; i++) {\r\n            if(src[i].metaname == meta) {\r\n                return src[i];\r\n            };\r\n\r\n            if(src[i].elements && src[i].elements.length >0) {\r\n                let res = this.getService(meta, src[i].elements);\r\n\r\n                if(res) {\r\n                    return;\r\n                };\r\n            };\r\n        };\r\n\r\n        return undefined;\r\n    };\r\n\r\n    //** will deliver all eleemnts of type DEVICE - kabel only */\r\n    getServices() : string[] {\r\n        if(this.elements) {\r\n            return linq.from<IAvailabilityService>(this.elements).where(x=>x.type == ConstantKeys.devices).select(x=>x.metaname).toArray();\r\n        };\r\n\r\n        return [];\r\n    };\r\n\r\n    public init(selectionArray: string[]) {\r\n        var sel = selectionArray; //this.getSelection();\r\n        var excludes: string[] = [];\r\n        //this.elements = linq.from<IAvailabilityService>(this.elements).where(x=>x.metaname != 'kip-be-3p-REMOVED!!!!').toArray();\r\n        if(sel.length == 0) {\r\n            this.elements.map((i)=>{\r\n                if(i.type != ConstantKeys.devices) {\r\n                    if(i.mandatory && i.metaname.indexOf('rufnummer') < 0) {\r\n                        if(excludes.indexOf(i.metaname) < 0) {\r\n                            if(this.dropedServices.indexOf(i.metaname) < 0) {\r\n                                this.inout([i.metaname], true);\r\n                            }\r\n\r\n                            excludes = excludes.concat(i.excludes);\r\n                        }\r\n                    };\r\n                };\r\n            });\r\n        };\r\n    };\r\n\r\n    public hasDroppedServices() : boolean {\r\n        let cnt = 0;\r\n\r\n        this.dropedServices.map((i)=>{\r\n            if(linq.from<IAvailabilityService>(this.elements).where(x=>x.metaname == i).count() > 0) {\r\n                cnt++;\r\n            }\r\n        });\r\n\r\n        return cnt == this.dropedServices.length;\r\n    };\r\n\r\n    public reset(el: IAvailabilityService[] | undefined) {\r\n        let inner = el ? el : this.elements;\r\n\r\n        for(let i:number = 0; i<inner.length; i++){\r\n            inner[i].selected = ConstantKeys.no;\r\n            if(inner[i].elements) {\r\n                this.reset(inner[i].elements);\r\n            }\r\n        };\r\n    };\r\n\r\n    //** will add or remove a service */\r\n    public inout(path: string[], \r\n        selected: boolean) {\r\n        let el: IAvailabilityService[] = this.elements;\r\n\r\n        for(let i: number =0;i<path.length; i++){\r\n            var e = linq.from<IAvailabilityService>(el)\r\n                .where(x=>x.metaname == path[i])\r\n                .first();\r\n            if(i != path.length - 1) {\r\n                el = e.elements;\r\n            } else {\r\n                if(e.type == ConstantKeys.devices) {\r\n                    //this.deselectOtherDevices();\r\n                    \r\n                    if(selected) {\r\n                        this.selectMandatoryForParent(e);\r\n                    } else {\r\n                        this.reset(undefined);\r\n                    }\r\n                };\r\n\r\n                e.selected = selected ? ConstantKeys.user : ConstantKeys.no;\r\n\r\n                if(e.elements && e.elements.length >0 && !selected) {\r\n                    e.elements.map((j)=>{\r\n                        j.selected = ConstantKeys.no;\r\n                    });\r\n                }\r\n            };\r\n        };\r\n\r\n        this.prepare();\r\n    };\r\n\r\n    //** will fill a local array with services which are not bookable, according to other selection */\r\n    public getExcludes(exc:string[], elem: IAvailabilityService[]) {\r\n        let el: IAvailabilityService[] = elem;\r\n\r\n        el.map((i)=>{\r\n            if(i.excludes && i.excludes.length >0 && i.selected == ConstantKeys.user) {\r\n                i.excludes.map((j)=>{\r\n                    if(exc.indexOf(j)<0) { \r\n                        //console.log('excludes for: ' + i.metaname + ' drops ' + j);\r\n                        exc.push(j); \r\n                    };\r\n                })\r\n\r\n                if(i.elements && i.elements.length >0){\r\n                    i.elements.map((j)=>{\r\n                        this.getExcludes(exc, j.elements);\r\n                    });\r\n                };\r\n            };\r\n        });\r\n    };  \r\n\r\n    public getElement(path: string[]) {\r\n        //console.log('getelement', path);\r\n        let el: IAvailabilityService[] = this.elements;\r\n\r\n        for(let i: number =0;i<path.length; i++){\r\n            var e = linq.from<IAvailabilityService>(el)\r\n                .where(x=>x.metaname == path[i])\r\n                .firstOrDefault();\r\n            if(e) {\r\n                if(i == path.length - 1) {\r\n                    return e;\r\n                } else {\r\n                    el = e.elements;\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    public getDevice() : IAvailabilityService {\r\n        let d = linq.from<IAvailabilityService | any>(this.elements).where(x=>x.type == ConstantKeys.devices && x.selected == ConstantKeys.user).firstOrDefault();\r\n\r\n        return d;\r\n    };\r\n\r\n    public appendElements(tree: TreeItem, elements: IAvailabilityService[]) {\r\n        let all = linq.from<IAvailabilityService>(elements).where(x=>x.selected == ConstantKeys.user && x.type != ConstantKeys.devices).toArray();\r\n\r\n        all.map((i)=>{\r\n            let newparent = tree.add(i.metaname);\r\n\r\n            if(i.elements && i.elements.length > 0 ) {\r\n                this.appendElements(newparent, i.elements);\r\n            }\r\n        });\r\n    };\r\n\r\n    public prepareElements(type: EElementTypeUi, \r\n        target: IAvailabilityServiceSelection[],\r\n        level: number,\r\n        sel: ProductTree,\r\n        path: string[],\r\n        source: IAvailabilityService[] | undefined) {\r\n        let res:IAvailabilityServiceSelection[] = [];\r\n\r\n        let src: IAvailabilityService[] = source ? source : this.elements;\r\n\r\n        src.map((i)=>{\r\n            let currentPath = new Array().concat(path);\r\n            currentPath.push(i.metaname);\r\n            \r\n            let el = sel.findPath(currentPath);\r\n            \r\n            if(!el) {\r\n                i.selected = ConstantKeys.no;\r\n            } else {\r\n                i.selected = ConstantKeys.user;\r\n            }\r\n\r\n            if(type === EElementTypeUi.selectable || type === EElementTypeUi.children) {\r\n                let man : IAvailabilityServiceSelection[] = [];\r\n                this.prepareElements(EElementTypeUi.selectedMandatory, man, 1, sel, path, undefined);\r\n\r\n                if(i.type != ConstantKeys.devices) {\r\n                    if(i.metaname.indexOf('rufnummer') < 0 && this.dropedServices.indexOf(i.metaname) < 0) {\r\n                        if(type === EElementTypeUi.selectable && this.exc.indexOf(i.metaname) < 0) { \r\n                            res.push(this.toElementUi(i));\r\n                        } else if(type === EElementTypeUi.children) {\r\n                            res.push(this.toElementUi(i));\r\n                        };  \r\n                    };\r\n                };\r\n            } else if (type === EElementTypeUi.childrenSelected ) {\r\n                if(i.type != ConstantKeys.devices) {\r\n                    if(i.metaname.indexOf('rufnummer') < 0 && this.dropedServices.indexOf(i.metaname) < 0) {\r\n                        //no more children\r\n                        if((!i.elements || i.elements.length == 0) && level > 1) {\r\n                            if(i.selected == ConstantKeys.user) {\r\n                                res.push(this.toElementUi(i));\r\n                                //puch the excludes too so they are not available in 1 level\r\n                                if(i.excludes && i.excludes.length > 0) {\r\n                                    i.excludes.map((j)=>{\r\n                                        res.push(this.toElementUiString(j, false));\r\n                                    });\r\n                                };\r\n                            };\r\n                        } else {\r\n                            this.prepareElements(type, target, level + 1, sel, currentPath, i.elements);\r\n                        };\r\n                    };\r\n                };\r\n            } else if(type === EElementTypeUi.selectedMandatory) {\r\n                if(i.type != ConstantKeys.devices && i.mandatory && i.selected == ConstantKeys.user) {\r\n                    res.push(this.toElementUi(i));\r\n                };\r\n\r\n                if(i.elements && i.elements.length > 0) {\r\n                    this.prepareElements(type, target, level + 1, sel, path, i.elements);\r\n                };\r\n            };\r\n        });\r\n\r\n        if(res.length > 0) {\r\n            res.map((i)=>{ \r\n                //i.productId = this.key;\r\n                target.push(i);\r\n            })\r\n        };\r\n    };\r\n\r\n    public deselectOtherDevices() {\r\n        this.elements.map((i)=>{\r\n            if(i.type == ConstantKeys.devices) {\r\n                i.selected = ConstantKeys.no;\r\n\r\n                this.deselectElements(i.elements);\r\n            };\r\n        });\r\n    };\r\n\r\n    public deselectElements(el: IAvailabilityService[]) {\r\n        el.map((i)=>{\r\n            i.selected = ConstantKeys.no;\r\n            if(i.elements && i.elements.length >0){\r\n                this.deselectElements(i.elements);\r\n            };\r\n        })\r\n    };\r\n\r\n    public selectMandatoryForParent(el: IAvailabilityService) {\r\n        if(el.elements) {\r\n            el.elements.map((i)=>{\r\n                if(i.mandatory) {\r\n                    if(this.dropedServices.indexOf(i.metaname) < 0 ) {\r\n                        i.selected = ConstantKeys.user;\r\n                    };\r\n                };\r\n            });\r\n        };\r\n    }; \r\n\r\n    public getSubs() {\r\n        let res:string[] = [];\r\n        let br = StorageHelper.getBrand(BrandKeys.kabel);\r\n        let subs = linq.from(br.subs).select(x=>x.id).toArray();\r\n\r\n        this.elements.map((i)=>{\r\n            if(subs.indexOf(i.metaname)>=0) {\r\n                res.push(i.metaname);\r\n            };\r\n        });\r\n\r\n        return res;\r\n    };\r\n\r\n    public getMandatory() {\r\n        let res: string[] = [];\r\n        this.elements.map((i)=>{\r\n            if(i.mandatory && i.metaname.indexOf('rufnummer') < 0 && i.type == ConstantKeys.options && this.exc.indexOf(i.metaname) < 0 && this.dropedServices.indexOf(i.metaname) < 0) {\r\n                res.push(i.metaname);\r\n            };\r\n        });\r\n        return res;\r\n    };\r\n\r\n    public getMandatoryForElement(id: string) {\r\n        let res: string[] = [];\r\n        if(this.elements) {\r\n            let el = linq.from<IAvailabilityService>(this.elements).where(x=>x.metaname == id).firstOrDefault();\r\n            if(el && el.elements) {\r\n                el.elements.map((i)=>{\r\n                    if(i.mandatory && i.type != ConstantKeys.devices && this.exc.indexOf(i.metaname) < 0 && this.dropedServices.indexOf(i.metaname) < 0) {\r\n                        res.push(i.metaname);\r\n                    };\r\n                });\r\n            };\r\n        }\r\n        return res;\r\n    };\r\n\r\n    public validateAvailability(act: IActivation, avl: IAvailabilityBrand) : IAvailabilityResultItem[] {\r\n        let res:IAvailabilityResultItem[]=[];\r\n\r\n        let prod = linq.from<AvailabilityProduct>(avl.products).where(x=>x.productId == this.productId).firstOrDefault();\r\n\r\n        if(prod) {\r\n            let sel = act.selection.toArray(true, this.productId); //this.getSelection();\r\n            this.validateElements('', prod.elements, res, sel);\r\n        };\r\n\r\n        //filter\r\n        //1. remove rufnummer\r\n        res=linq.from<IAvailabilityResultItem>(res).where(x=>x.id.indexOf('rufnummern') < 0).toArray();\r\n        //2. remove excluded items\r\n        //let subs = this.getSubs();\r\n        let subs = linq.from<IAvailabilityService>(prod!.elements).where(x=>x.type == ConstantKeys.devices).select(x=>x.metaname).toArray();\r\n\r\n        subs.map((i)=>{\r\n            res=linq.from<IAvailabilityResultItem>(res).where(x=>x.id.indexOf(i)<0).toArray();\r\n        });\r\n\r\n        return linq.from<IAvailabilityResultItem>(res).orderBy(x=>x.id).toArray();\r\n    };\r\n\r\n    private validateElements(path: string, \r\n        elements: IAvailabilityService[],\r\n        target: IAvailabilityResultItem[],\r\n        sel: string[]) {\r\n            elements.map((i)=>{\r\n                target.push(this.getElementStatus(path, i, sel));\r\n\r\n                let spath = (path ? path + '/' : '') + i.metaname;\r\n\r\n                if(i.elements && i.elements.length > 0) {\r\n                    this.validateElements(spath, i.elements, target, sel);\r\n                };\r\n            });\r\n    };\r\n\r\n    private getElementStatus(path: string, item: IAvailabilityService, sel: string[]) : IAvailabilityResultItem {\r\n        let res: IAvailabilityResultItem = {\r\n            status: EAvailabilityResultStatus.ok,\r\n            id: this.productId + '/' + (path ? path + '/' : '') + item.metaname\r\n        };\r\n\r\n        ////console.log('element ' + item.metaname, item);\r\n        ////console.log('selection', sel);\r\n\r\n        if(this.dropedServices.indexOf(item.metaname) >= 0) {\r\n            res.status = EAvailabilityResultStatus.ok;\r\n        } else if(item.mandatory && item.available) {\r\n            // if in excludes then other element has driped it out so no error message to ui\r\n            if(sel.indexOf(res.id) < 0 && this.exc.indexOf(res.id) < 0) {\r\n                res.status = EAvailabilityResultStatus.add;\r\n                res.text = \"Hinzufügen: \" + this.getUserFriendlyPath(res.id);\r\n            };\r\n        } else if (!item.mandatory && item.available){\r\n            // in selection but avl.returns it with NO\r\n            // gigakombi excluded - logic dont works with other rules\r\n            if(sel.indexOf(res.id) >= 0 && item.selected == ConstantKeys.no) { //&& item.metaname.indexOf('-aio-') < 0) { \r\n                res.status = EAvailabilityResultStatus.remove;\r\n                res.text = \"Entfernen: \" + this.getUserFriendlyPath(res.id);\r\n            } else {\r\n                res.status = EAvailabilityResultStatus.ok;\r\n            }\r\n        } else if (!item.available) {\r\n            if(sel.indexOf(res.id) >= 0) {\r\n                res.status = EAvailabilityResultStatus.remove;\r\n                res.text = \"Entfernen: \" + this.getUserFriendlyPath(res.id);\r\n            };\r\n        };\r\n\r\n        res.path = this.getFullPath(res.id);\r\n\r\n        ////console.log('res: ' + res.path, item);\r\n\r\n        return res;\r\n    };\r\n\r\n    private getFullPath(p: string) {\r\n        let path = p.split('/');\r\n        let res: string[] = [];\r\n\r\n        path.map((i)=>{\r\n            let svc = linq.from<IService>(this.br.services).where(x=>x.id == i).firstOrDefault();\r\n            if(svc) {\r\n                res.push(svc.id);\r\n            } else {\r\n                let svc2 = this.getService(i, undefined);\r\n                if(svc2) {\r\n                    res.push(svc2.metaname);\r\n                } else {\r\n                    res.push(i);\r\n                }\r\n                \r\n            };\r\n        });\r\n\r\n        return res;\r\n    };\r\n\r\n    private getUserFriendlyPath(p: string) {\r\n        let path = p.split('/');\r\n        let res: string[] = [];\r\n        path.shift();\r\n\r\n        path.map((i)=>{\r\n            let svc = linq.from<IService>(this.br.services).where(x=>x.id == i).firstOrDefault();\r\n            if(svc) {\r\n                res.push(svc.name );\r\n            } else {\r\n                let svc2 = this.getService(i, undefined);\r\n                if(svc2) {\r\n                    if(svc2.name == 'n.a') {\r\n                        res.push(svc2.metaname);    \r\n                    } else {\r\n                        res.push(svc2.name);\r\n                    }\r\n                } else {\r\n                    res.push(i);\r\n                }\r\n                \r\n            };\r\n        });\r\n\r\n        return res.join(' \\\\ ');\r\n    };\r\n\r\n    private toElementUi(el:IAvailabilityService) : IAvailabilityServiceSelection {\r\n        return {\r\n            productId: this.productId,\r\n            metaname: el.metaname,\r\n            selected: el.selected == ConstantKeys.user,\r\n            sort: el.sort\r\n        };\r\n    };\r\n\r\n    private toElementUiString(metaname: string, selected: boolean) : IAvailabilityServiceSelection {\r\n        return {\r\n            productId: this.productId,\r\n            metaname: metaname,\r\n            selected: selected ,        \r\n        }; \r\n    };\r\n\r\n    prepare() {\r\n        this.exc = [];\r\n        this.getExcludes(this.exc, this.elements);\r\n\r\n        //this.prepareElements(EElementTypeUi.childrenSelected, children, 1, undefined);\r\n    };\r\n};\r\n\r\nexport interface IAvailabilityBrand {\r\n    key: string;\r\n    id?: string; \r\n    products: AvailabilityProduct[];\r\n    address?: Address;\r\n    data:string;\r\n    available?: boolean;\r\n    selection?: TreeItem;\r\n};\r\n\r\nexport class Availability {\r\n    public address: m.Address = new m.Address();\r\n    public id: string = '';\r\n    public isCrossSelling: boolean = false;\r\n    public executed: ERequestStatus = ERequestStatus.undefined;\r\n\r\n    public brands: IAvailabilityBrand[] = [];\r\n\r\n    public warning: string = '';\r\n\r\n    public cableServices: IKeyText[] = [];\r\n\r\n    static oneOfIsAvaialble(brands: IAvailabilityBrand[]) : boolean {\r\n        let res : boolean = false;\r\n        brands.map((i)=>{\r\n            if(i.products && i.products.length >0) {\r\n                res = true;\r\n            }\r\n        });\r\n        return res;\r\n    };\r\n\r\n    static getProducts(brand: IAvailabilityBrand) : string[] {\r\n        return linq.from<AvailabilityProduct>(brand.products).select(x=>x.productId).toArray();\r\n    };\r\n\r\n    public forUI() : string {\r\n        let s: string = '';\r\n        if(this.address) {\r\n            s = this.address.street + ' ' + this.address.nr + ', ' + this.address.zip + ' ' + this.address.city;\r\n        };\r\n        return s;\r\n    };\r\n \r\n    public hasKip() {\r\n        let kav = linq.from<IAvailabilityBrand>(this.brands).where(x=>x.key === BrandKeys.kabel).firstOrDefault();\r\n\r\n        if(kav) {\r\n            let pr = linq.from<AvailabilityProduct>(kav.products)\r\n                .where(x=>x.productId.indexOf(\"kip-\")>=0).toArray();\r\n                //.where(x=>x.productId.indexOf(\"tv-giga-wechselgarantie\")>=0).toArray();\r\n\r\n            if(pr) {\r\n                return pr.length > 0;\r\n            };\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    public getExecuted() {\r\n        return this.executed == ERequestStatus.done || this.executed == ERequestStatus.tempResult;\r\n    };\r\n\r\n    public hasKabel() {\r\n        let cab = linq.from<IAvailabilityBrand>(this.brands).where(x=>x.key == BrandKeys.kabel).firstOrDefault();\r\n\r\n        if(cab) {\r\n            if(cab.products && cab.products.length >0) return true;\r\n        };\r\n\r\n        return false;\r\n    };  \r\n\r\n    public hasDSL() {\r\n        let cab = linq.from<IAvailabilityBrand>(this.brands).where(x=>x.key == BrandKeys.dsl).firstOrDefault();\r\n\r\n        if(cab) {\r\n            if(cab.products && cab.products.length >0) return true;\r\n        };\r\n\r\n        return false;\r\n    };  \r\n\r\n\r\n    public getBrand(brandKey: string) : IAvailabilityBrand {\r\n        let br: IAvailabilityBrand = linq.from<IAvailabilityBrand | any>(this.brands)\r\n            .where(x=>x.key === brandKey)\r\n            .firstOrDefault();\r\n        \r\n        if(!br) {\r\n            br =  {\r\n                key: brandKey,\r\n                products: [],\r\n                data: ''\r\n            };\r\n        };\r\n\r\n        return br;\r\n    };\r\n\r\n    public getBrandProducts(brandKey: string) : AvailabilityProduct[] {\r\n        return this.getBrand(brandKey).products;\r\n    };\r\n\r\n    public getBrandProductIds(brandKey: string) : string[] {\r\n        \r\n        let pr = this.getBrand(brandKey).products;\r\n\r\n        return linq.from<AvailabilityProduct>(pr).select(x=>x.productId).toArray();\r\n    };\r\n\r\n    public getAvailableProducts(brandKey: string, avlBrand: IAvailabilityBrand) : string[] {\r\n        let prod:string[] = [];\r\n        let br = StorageHelper.getBrand(brandKey); // this.getBrand(brandKey);\r\n        let avl = linq.from<AvailabilityProduct>(avlBrand.products).select(x=>x.productId).toArray();\r\n\r\n        if(brandKey === BrandKeys.kabel || brandKey === BrandKeys.unity) {\r\n            prod = linq.from<IProduct>(br.products)\r\n                .where(x=>avl.indexOf(x.id)>=0)\r\n                .select(x=>x.id).toArray();            \r\n        } else {\r\n            let brdsl = this.getBrand(brandKey);\r\n            prod = linq.from<AvailabilityProduct>(brdsl.products).select(x=>x.productId).toArray();\r\n        };\r\n\r\n        return prod;\r\n    };\r\n\r\n    public getProduct(brand: string, productId: string) : AvailabilityProduct {\r\n        let br = this.getBrand(brand);\r\n\r\n        let p = brand === BrandKeys.kabel || brand === BrandKeys.unity ?\r\n            linq.from<AvailabilityProduct>(br.products).where(x=>x.productId === productId).firstOrDefault()\r\n            :\r\n            linq.from<AvailabilityProduct>(br.products).where(x=>x.productId === productId).firstOrDefault();\r\n\r\n        if(!p) {\r\n            p = new AvailabilityProduct()\r\n        };\r\n\r\n        return p;\r\n    };\r\n\r\n    public hasRegioOnly(brandKey: string, productId: string) : boolean {\r\n        let br = this.getBrand(brandKey);\r\n        let res : boolean = false;\r\n        if(br){\r\n            let pr = linq.from<AvailabilityProduct>(br.products).where(x=>x.productId === productId).firstOrDefault();\r\n            if(pr) {\r\n                res = linq.from<string>(pr.connectionTypes).where(x=>!x.endsWith('_Regio')).count() == 0;\r\n            };\r\n        };\r\n\r\n        return res;\r\n    };\r\n\r\n    public hasBasic(brandKey: string, productId: string) : boolean {\r\n        let br = this.getBrand(brandKey);\r\n        let res : boolean = false;\r\n        if(br){\r\n            let pr = linq.from<AvailabilityProduct>(br.products).where(x=>x.productId === productId).firstOrDefault();\r\n            if(pr) {\r\n                res = linq.from<string>(pr.connectionTypes).where(x=>x.startsWith('basic')).count() > 0;\r\n            };\r\n        };\r\n\r\n        return res;\r\n    };\r\n\r\n    //** will fill the local array of cable servies with all possible so the UI can get a name wich is not in the EPM */\r\n    public prepareCableServices(level: number, elements: IAvailabilityService[]) {\r\n        if(level == 0) {\r\n            this.cableServices = [];\r\n            \r\n            var br = linq.from<IAvailabilityBrand>(this.brands).first(x=>x.key == BrandKeys.kabel);\r\n            br.products.map((i)=>{\r\n                if(i.elements && i.elements.length > 0) {\r\n                    this.prepareCableServices(level + 1, i.elements)\r\n                };\r\n            })\r\n        } else {\r\n            elements.map((i)=>{\r\n                var isin = linq.from<IKeyText>(this.cableServices).firstOrDefault(x=>x.key == i.metaname);\r\n                if(!isin) {\r\n                    this.cableServices.push({key: i.metaname, text: i.name});\r\n                }\r\n\r\n                if(i.elements && i.elements.length > 0) {\r\n                    this.prepareCableServices(level + 1, i.elements)\r\n                };                \r\n            })\r\n        }\r\n    }\r\n};\r\n\r\nexport default Availability;","    export enum EServiceType {\r\n        undefined = 0,\r\n        option = 1,\r\n        promotion = 2,\r\n        inclusive = 3,\r\n        optionVirtual = 4,\r\n        optionBundle = 8\r\n    };\r\n\r\n    export enum EServiceRuleType {\r\n        undefined = 0,\r\n        canBeRemoved = 1,\r\n        notRemovable = 2\r\n    };\r\n\r\n    export enum EMnpType\r\n    {\r\n        undefined = 0,\r\n        standard = 1,\r\n        predate = 2\r\n    };\r\n\r\n    export enum EActivationFileType\r\n    { \r\n        undefined = 0,\r\n        contractMain = 1,\r\n        contractSecond = 2,\r\n        sepa = 4,\r\n        boni = 8\r\n    };\r\n\r\n    export enum ECreditDebitType\r\n    {\r\n        undefiend = 0,\r\n        postpaid = 1,\r\n        prepaid = 2\r\n    };\r\n\r\n    export enum EActionAddressType {\r\n        undefined = 0,\r\n        sameAddress = 1,\r\n        differentAddress = 2,\r\n        pickUp = 3\r\n    };\r\n\r\n    export enum EPreviousAccessOwner\r\n    {\r\n        undefined = 0,\r\n        previousOwner = 1,\r\n        noPreviousOwner =2\r\n    };\r\n\r\n    export enum EPaymentType {\r\n        undefined = 0,\r\n        iban = 1,\r\n        bank = 2,\r\n        creditcard = 3,\r\n        cash = 4\r\n    };\r\n\r\n    export enum ESubOptions\r\n    { \r\n        Undefined = 0,\r\n        KeyNecessery = 1,\r\n        KeyNotNecessery = 2,\r\n        ImeiRequired = 4,\r\n        ImeiOptional = 8\r\n    }\r\n\r\n    export enum EDocumentType {\r\n        undefined = 0,\r\n        evn = 1,\r\n        bill = 2\r\n    };\r\n\r\n    export enum EActivationType\r\n    {\r\n        undefined = 0,\r\n        actDefault = 1,\r\n        portDefault = 2,\r\n        portPre = 4,\r\n        existingCustomer = 8,\r\n        partnerCard = 16,\r\n        cancellation = 32,\r\n        bookService = 64,\r\n        cdChange = 128,\r\n        partnerCardPortation = 256\r\n    };\r\n\r\n    export enum ENumberPortingType\r\n    { \r\n        undefined = 0,\r\n        single =1,\r\n        multiple = 2,\r\n        later = 3\r\n    };\r\n\r\n    export enum ECustomerType {\r\n        undefined = 0,\r\n        personal = 1,\r\n        soho = 2\r\n    };\r\n    \r\n    export enum EBusinessCase {\r\n        undefined = 0,\r\n        bnt = 1,\r\n        vvl = 2,\r\n        tw = 4,\r\n        vvltw = 8,\r\n        login = 16,\r\n        cancel = 32,\r\n        bookService = 64,\r\n        cdChange = 128\r\n    };    \r\n\r\n    export enum EBonusType {\r\n        undefined = 0,\r\n        options = 1,\r\n        hardware = 2,\r\n        product = 3\r\n    };\r\n\r\n    export enum EValidationGroupType {\r\n        undefined = 0,\r\n        oneMandatory = 1\r\n    };\r\n\r\n    export interface IOrder {\r\n        id: string;\r\n        name: string;        \r\n        date?: Date;\r\n    };    \r\n\r\n    export enum EOrderProcessView {\r\n        tariff = 0, // 'tariff',\r\n        customer = 1, // 'customer',\r\n        // preview = 4, // 'preview',\r\n        done = 2, // 'ready',\r\n\r\n        dashboard = 10,\r\n\r\n        cancellation = 11,\r\n        overview = 12,\r\n        summary = 13,\r\n\r\n        selectProduct = 14,\r\n        deliveryAddress = 15,\r\n        orderOverview = 16\r\n    };\r\n\r\n  \r\n\r\n    export enum EcancellationProcessView {\r\n        cancellation = 0, \r\n        overview = 1, \r\n    \r\n        summary = 2, \r\n\r\n       \r\n    };\r\n\r\n    export enum ESalutation {\r\n        undefined = 0,\r\n        mr = 1,\r\n        mrs = 2\r\n    };\r\n\r\n    export enum EBillingType {\r\n        undefined = 0,\r\n        email = 1,\r\n        online = 2\r\n    };\r\n\r\n    export enum EEvnType {\r\n        undefined = 0,\r\n        fullEvn = 1,\r\n        shortEvn = 2,\r\n        noEvn = 3\r\n    };\r\n\r\n    export enum ETargetNumber {\r\n        undefined = 0,\r\n        complete = 1,\r\n        shortened = 2\r\n    };\r\n\r\n    export enum ETopupType {\r\n        undefined = 0,\r\n        auto = 1,\r\n        now = 2\r\n    };\r\n\r\n    export enum EIDCardType {\r\n        undefined = 0,\r\n        german = 1,\r\n        foreign = 2\r\n    };\r\n\r\n    export enum EHomeType {\r\n        undefined = 0,\r\n        detachedHouse = 1,\r\n        appartmentHouse = 2\r\n    };\r\n\r\n    export enum EHouseLocation {\r\n        undefined = 0,\r\n        front = 1,\r\n        back = 2\r\n    };\r\n\r\n    export enum ELRPosition {\r\n        undefined = 0,\r\n        left = 1,\r\n        middle = 2,\r\n        right = 3\r\n    };\r\n\r\n    // export enum EOrderType {\r\n    //     undefined = 0,\r\n    //     bnt = 1,\r\n    //     vvl = 2,\r\n    //     tw = 4,\r\n    //     login = 8\r\n    // };\r\n\r\n    export enum EPhonebookType {\r\n        no = 0,\r\n        yesDefault = 1,\r\n        yesIndividual = 2\r\n    };\r\n\r\n    export default {};","import * as React from 'react';\r\nimport { ELElementStatus } from '../../models/page/diverse';\r\nimport { ILElementProps, ILElementState } from '../../models/page/interfaces';\r\n\r\nexport class LLabel extends React.Component<ILElementProps, ILElementState> {\r\n\r\n    constructor(props: ILElementProps) {\r\n        super(props);\r\n\r\n        this._onClick = this._onClick.bind(this);\r\n\r\n        this.state = {\r\n            status: this.props.status ? this.props.status : ELElementStatus.normal\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let css = '';\r\n        if(this.props.css) {\r\n            css += ' ' + this.props.css;\r\n        }\r\n        let ctrl = (\r\n            <label onClick={this._onClick} className={css}>\r\n                {this.props.text}\r\n            </label>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private _onClick() {\r\n\r\n    };\r\n};\r\n\r\nexport default LLabel;","export enum BuildEnv {\r\n    Dev = 0,\r\n    Int = 1,\r\n    Prod = 2,\r\n    DevInt = 3\r\n}\r\n\r\n// SET THE BUILD ENV HERE:\r\nexport const build: BuildEnv = window.location.href.indexOf('//localhost') > 0 ? BuildEnv.Dev :\r\n    window.location.href.indexOf('vf-easy') > 0 ? BuildEnv.Prod : BuildEnv.Int;\r\n\r\nexport const debug: boolean = window.location.href.indexOf('//localhost') > 0 ? true : false;","import * as React from 'react';\r\nimport { LClear } from '.';\r\nimport { IFilter } from '../../models';\r\nimport { TablePaging } from './paging';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport { ErrorMessage } from '../dialogs/errorMessage/errorMessage';\r\n\r\nexport enum EPagingType {\r\n    none,\r\n    local,\r\n    server\r\n}\r\n\r\nexport interface ITablePagingProps {\r\n    type: EPagingType\r\n    page: number;\r\n    count: number;\r\n}\r\n\r\nexport interface IPagingModel {\r\n    page: number,\r\n    count: number\r\n}\r\nexport enum ESortDirection {\r\n    Asc, Desc\r\n}\r\n\r\nexport interface ITable {\r\n    coulmns: IColumn[];\r\n    data?: any;\r\n    id: string;\r\n    expnaded: boolean;\r\n    itemClick?: any;\r\n    dateColumn?: string;\r\n    filter?: IFilter;\r\n    pagingProps: ITablePagingProps;\r\n}\r\n\r\nexport interface ITableState {\r\n    sortSource?: string;\r\n    pagingModel: IPagingModel;\r\n    sortCol?: IColumn;\r\n    columns: IColumn[];\r\n}\r\n\r\nexport interface IColumn {\r\n    label: string;\r\n    labelShort?: string;\r\n    binding: string;\r\n    size: number;\r\n    sortable: boolean;\r\n    filterable?: boolean;\r\n    renderer?: any;\r\n    rendererHead?: any;\r\n    style?: string;\r\n    showTitle?: boolean;\r\n    isHtml?: boolean;\r\n    sortDirection?: ESortDirection\r\n}\r\n\r\nexport class Table extends React.Component<ITable, ITableState> {\r\n    private me: any;\r\n    public currentId: string = '';\r\n    private data?: any[];\r\n    private hasMoreItems: boolean = true;\r\n    private totalItemsCount: number = 0;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.me = React.createRef()\r\n\r\n        this.itemClick = this.itemClick.bind(this);\r\n        this.onPaginationPageChanged = this.onPaginationPageChanged.bind(this);\r\n\r\n        this.data = this.props.data;\r\n\r\n        this.state = {\r\n            columns: this.props.coulmns,\r\n            sortCol: undefined,\r\n            pagingModel: { page: this.props.pagingProps.page, count: this.props.pagingProps.count }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        this.data = this.props.data;\r\n        this.filterAndPaginate();\r\n        let css: string = 'oe-table';\r\n\r\n        let paging = <></>;\r\n\r\n        if (this.props.pagingProps.type !== EPagingType.none) {\r\n            const { pagingModel } = this.state;\r\n            paging = <TablePaging totalItemsCount={this.totalItemsCount}\r\n                parent={this}\r\n                pagesToRender={5}\r\n                model={pagingModel} />\r\n        }\r\n        \r\n        let ctrl = <div id={this.props.id} className={css} >\r\n            <div>\r\n                <ErrorMessage visible={this.totalItemsCount === 501 ? true : false} text=\"Es werden mehr als 500 Datensätze geliefert. Bitte Filter anwenden.\" />\r\n\r\n                {this.renderTable(paging)}\r\n            </div>\r\n        </div>;\r\n\r\n        return ctrl;\r\n    }\r\n\r\n    onPaginationPageChanged(page: number) {\r\n        let { pagingModel } = this.state;\r\n        pagingModel.page = page;\r\n        this.setState({ pagingModel });\r\n    }\r\n\r\n    private filterAndPaginate() {\r\n        let size = this.me.current;\r\n\r\n        this.data = this.props.data;\r\n\r\n        if (this.state.sortCol) {\r\n            this._sort(this.state.sortCol, this.data);\r\n        }\r\n\r\n        // apply filter\r\n        if (this.props.filter) {\r\n            this.data = this.applyFilter(this.data);\r\n        }\r\n\r\n        // apply paging\r\n        if (this.props.pagingProps.type === EPagingType.local) {\r\n            this.data = this.applyLocalPagging(this.data);\r\n        } else if (this.props.pagingProps.type === EPagingType.server) {\r\n            this.data = this.applyServerPagging(this.data);\r\n        }\r\n    }\r\n\r\n    private renderTable(pager: JSX.Element): JSX.Element[] {\r\n        let html: JSX.Element[] = [];\r\n\r\n        html.push(this.renderRow(0, true));\r\n\r\n        if (this.data && this.data.length > 0) {\r\n            for (let i: number = 0; i < this.data.length; i++) {\r\n                html.push(this.renderRow(i, false));\r\n            };\r\n        } else {\r\n            html.push(<div className=\"oe-row odd\">\r\n                <div className=\"col data\" style={{ width: this.getWidth(12) + \"%\" }}>\r\n                    <p className=\"text-center\"><strong>{MainTexts.noData}</strong></p>\r\n                </div>\r\n                <LClear />\r\n            </div>);\r\n        }\r\n\r\n        html.push(this.renderFooter(pager));\r\n\r\n        return html;\r\n    };\r\n\r\n    private renderHead(col: IColumn, index: number): JSX.Element {\r\n        let css: string = 'col head';\r\n\r\n        let val = col.rendererHead ? col.rendererHead(col) : \r\n        (!this.props.expnaded && col.labelShort ? col.labelShort : col.label);\r\n\r\n        let sortableHtml = <></>;\r\n\r\n        let sortButton = <div className=\"icon arrow-up\" onClick={() => { this._sortAscending(col) }} />;\r\n        if (col.sortDirection === ESortDirection.Asc) {\r\n            sortButton = <div className=\"icon arrow-down\" onClick={() => { this._sortDescending(col) }} />;\r\n        }\r\n\r\n        if (col.sortable) {\r\n            sortableHtml = <div className=\"col-head-sort-icons\">\r\n                {sortButton}\r\n            </div>;\r\n        }\r\n\r\n        return <div className={css} title={col.showTitle ? val : ''} key={\"head-\" + index} style={{ width: this.getWidth(col.size) + \"%\" }}>\r\n            <div className=\"col-head-text\">\r\n                {val}\r\n            </div>\r\n            {sortableHtml}\r\n        </div>;\r\n    }\r\n\r\n    _resetSortIcons = (sortCol) => {\r\n            let cols = this.state.columns;\r\n            for (let i: number = 0; i < cols.length; i++) {\r\n                let col = cols[i];\r\n                if (sortCol !== col && col.sortable) {\r\n                    col.sortDirection = ESortDirection.Desc;\r\n                }\r\n            }\r\n\r\n            return cols;\r\n    };\r\n\r\n    _sortDescending = (col: IColumn) => {\r\n        col.sortDirection = ESortDirection.Desc;\r\n        let cols = this._resetSortIcons(col);\r\n        this.setState({ sortCol: col, columns: cols });\r\n    };\r\n\r\n    _sortAscending = (col: IColumn) => {\r\n        col.sortDirection = ESortDirection.Asc;\r\n        let cols = this._resetSortIcons(col);\r\n        this.setState({ sortCol: col, columns: cols });\r\n    };\r\n\r\n    _sort = (col: IColumn, data: any[] | undefined) => {\r\n        \r\n        if (col && data && data.length > 0) {\r\n            if (col.sortDirection === ESortDirection.Asc) {\r\n                data.sort((a, b) => (a[col.binding] >= b[col.binding]) ? 1 : -1)\r\n            } else { // desc\r\n                data.sort((a, b) => (a[col.binding] <= b[col.binding]) ? 1 : -1)\r\n            }\r\n            \r\n            this.data = data;\r\n        }\r\n    };\r\n\r\n    private renderFooter(pager: JSX.Element): JSX.Element {\r\n        return <div key=\"footer\" className=\"oe-row last\">\r\n            {pager}\r\n        </div>;\r\n    };\r\n\r\n    private renderRow(idx: number, head: boolean): JSX.Element {\r\n        let html: JSX.Element[] = [];\r\n        let id: string = '';\r\n\r\n        for (let i: number = 0; i < this.state.columns.length; i++) {\r\n            if (head) {\r\n                html.push(this.renderHead(this.state.columns[i], i));\r\n            } else if (this.data !== undefined) {\r\n                let row = this.data[idx];\r\n                id = this.data[idx].id;\r\n\r\n                if(!id) {\r\n                    id = this.data[idx].Id;\r\n                };\r\n\r\n                html.push(this.renderColumn(row, this.state.columns[i], head, i));\r\n            }\r\n        }\r\n\r\n        let css: string = idx % 2 == 0 ? 'odd' : 'even';\r\n\r\n        //css += last ? ' last' : '';\r\n\r\n        return <div key={'key-' + (head ? 'head' : idx)}\r\n            id={id}\r\n            className={'oe-row ' + css}\r\n            onClick={head ? undefined : (e) => { this.itemClick(e, id) }}>\r\n            {html}\r\n            <LClear />\r\n        </div>;\r\n    };\r\n\r\n    private renderColumn(row: any, col: IColumn, head: boolean, index: number): JSX.Element {\r\n        let css: string = 'col data ' + (col.style ? col.style : '');\r\n\r\n        if (!col.renderer) {\r\n            css += ' text-sub';\r\n        };\r\n\r\n        let val = col.renderer && !head ? col.renderer(row, col) : row[col.binding];\r\n\r\n        // if(val && (typeof val === 'string' || val instanceof String)) {\r\n        //     val = val.toString().replace(/<br\\/>/g, '');\r\n        // }\r\n\r\n        if (col.showTitle) {\r\n            if (col.isHtml) {\r\n                return <div key={\"col\" + index} title={val} className={css} style={{ width: this.getWidth(col.size) + \"%\" }}\r\n                    dangerouslySetInnerHTML={{ __html: val }} />;\r\n            } else {\r\n                return <div key={\"col\" + index} title={val} className={css} style={{ width: this.getWidth(col.size) + \"%\" }}>{val}</div>;\r\n            }\r\n        }\r\n\r\n        return <div key={\"col\" + index} className={css} style={{ width: this.getWidth(col.size) + \"%\" }}>{val}</div>;\r\n    };\r\n\r\n    private applyLocalPagging(data?: any[]) {\r\n        if (data === undefined) {\r\n            return;\r\n        }\r\n\r\n        const { pagingModel } = this.state;\r\n        let totalCount = data.length || 0;\r\n\r\n        this.totalItemsCount = totalCount;\r\n\r\n        let page = pagingModel.page;\r\n        let count = pagingModel.count;\r\n\r\n        this.hasMoreItems = (page * count) < totalCount;\r\n        // if user wants page that is negative we return first page\r\n        if (page <= 1) {\r\n            page = 0;\r\n        }\r\n        else { // we need to decrement the page always by 1 \r\n            page--;\r\n        }\r\n\r\n        if (count <= 0) {\r\n            count = 10;\r\n        } else if (count > totalCount) {\r\n            count = totalCount;\r\n        }\r\n\r\n        if (page * count >= totalCount) // we need to return last page\r\n        {\r\n            if ((totalCount / count) % 2 == 0) {\r\n                page = (totalCount / count) - 1;\r\n            }\r\n            else {\r\n                page = (totalCount / count);\r\n            }\r\n        }\r\n\r\n        // do the paging\r\n        let result: any[] = [];\r\n        let i = page * count; // skip\r\n        let take = i + count;\r\n\r\n        if (take > data.length) {\r\n            take = data.length;\r\n        }\r\n\r\n\r\n        for (i; i < take; i++) { // take\r\n            result.push(data[i])\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    private applyServerPagging(data) {\r\n        return data; // TODO implement server paging\r\n    };\r\n\r\n    private applyFilter(data) {\r\n        let d = [] as any;\r\n\r\n        if (this.props.filter && this.data !== undefined) {\r\n            if (this.props.filter.to) { this.props.filter.to.setHours(0, 0, 0, 0); }\r\n            if (this.props.filter.from) { this.props.filter.from.setHours(0, 0, 0, 0); }\r\n            let f = this.props.filter;\r\n            for (let i = 0; i < data.length; i++) {\r\n                let row = data[i];\r\n                let dateok: boolean = true;\r\n\r\n                if (this.props.dateColumn) {\r\n                    let v = new Date(Date.parse(row[this.props.dateColumn].substring(0, 10)));\r\n\r\n                    v.setHours(0, 0, 0, 0);\r\n\r\n                    if (this.props.filter.from && this.props.filter.to && v >= this.props.filter.from && v <= this.props.filter.to) {\r\n                        dateok = true;\r\n                    };\r\n                };\r\n\r\n                for (let j = 0; j < this.state.columns.length; j++) {\r\n                    if (!this.state.columns[j].filterable) {\r\n                        continue;\r\n                    };\r\n\r\n                    let c = this.state.columns[j];\r\n\r\n                    if (!c.binding) { continue; };\r\n\r\n                    if (dateok && row[c.binding] && (typeof row[c.binding] === 'string') && row[c.binding].toLowerCase().indexOf(f.needle.toLowerCase()) >= 0) {\r\n                        d.push(row);\r\n                        break;\r\n                    };\r\n                };\r\n            };\r\n        } else {\r\n            return data;\r\n        }\r\n\r\n        return d;\r\n    };\r\n\r\n    private getWidth(size: number): number {\r\n        return 100 * size / 12;\r\n    };\r\n\r\n    private itemClick(ev: any, id: string) {\r\n        this.currentId = id;\r\n        if (this.props.itemClick && id) {\r\n            this.props.itemClick(ev, id);\r\n        } else {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n        };\r\n    };\r\n};\r\n\r\nexport default Table;","import * as React from 'react';\r\nimport Table, { IPagingModel } from './table';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport '../../styles/paging.scss';\r\nimport * as page from '../page/index';\r\nimport { EControlType } from '../../models';\r\nimport { IKeyTextNumber } from '../../models/page/interfaces';\r\nimport Global from '../../utils/Global';\r\n\r\nexport interface IPagingProps {\r\n    model: IPagingModel;\r\n    pagesToRender: number;\r\n    parent: Table,\r\n    totalItemsCount: number\r\n}\r\nexport interface IPagingState {\r\n    selectedPage: number,\r\n    changed: boolean\r\n}\r\n\r\nexport class TablePaging extends React.Component<IPagingProps, IPagingState> {\r\n    private options: IKeyTextNumber[] = Global.getPaginationItemsPerPage();\r\n    private itemsPerPage: number = 10;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onFirstPageClick = this.onFirstPageClick.bind(this);\r\n        this.onLastPageClick = this.onLastPageClick.bind(this);\r\n\r\n        this.onPrevPageClick = this.onPrevPageClick.bind(this);\r\n        this.onNextPageClick = this.onNextPageClick.bind(this);\r\n\r\n        this.onPageClick = this.onPageClick.bind(this);\r\n\r\n        this.state = { selectedPage: this.props.model.page,changed:false };\r\n    }\r\n\r\n    render() {\r\n\r\n        const { pagesToRender } = this.props;\r\n        const { selectedPage } = this.state;\r\n\r\n        let lastPage: number = Math.ceil(this.props.totalItemsCount / this.props.model.count);\r\n       \r\n        let items: JSX.Element[] = [];\r\n        items.push(\r\n            <Pagination.Item key={selectedPage} active={true}>\r\n                {selectedPage}\r\n            </Pagination.Item>\r\n        );\r\n\r\n        for (let number = selectedPage + 1; number < pagesToRender + selectedPage; number++) {\r\n            items.push(\r\n                <Pagination.Item id={number + ''} key={number + ''} active={false} disabled={number > lastPage} onClick={() => this.onPageClick(number)}>\r\n                    {number}\r\n                </Pagination.Item>\r\n            );\r\n        }\r\n\r\n        return <Pagination size=\"lg\">\r\n            <Pagination.First disabled={selectedPage === 1} onClick={this.onFirstPageClick} />\r\n            <Pagination.Prev disabled={selectedPage === 1} onClick={this.onPrevPageClick} />\r\n            {items}\r\n            <Pagination.Next disabled={selectedPage >= lastPage} onClick={this.onNextPageClick} />\r\n            <Pagination.Last disabled={selectedPage >= lastPage} onClick={this.onLastPageClick} />\r\n\r\n            <Pagination.Item>\r\n                <select name={'temp1'} id={'temp1'} onChange={event => { this.onChangeDropDown(event) }} value={this.itemsPerPage.toString()} style={{ borderRadius: '15px', height: '20px', width: '60px', backgroundColor: '#333', borderColor: '#6c757d', color: '#6c757d' }}>\r\n                    {this.renderOptions()}\r\n                </select>\r\n\r\n            </Pagination.Item>\r\n\r\n        </Pagination>\r\n\r\n    }\r\n\r\n    private onChangeDropDown(e: any) {\r\n       this.itemsPerPage = Number(e.target.value);\r\n       this.props.model.count = this.itemsPerPage;\r\n        this.setState({ changed: true });\r\n        this.props.parent.onPaginationPageChanged(1);\r\n    }\r\n\r\n    private renderOptions(): JSX.Element[] {\r\n\r\n        let elements: JSX.Element[] = [];\r\n\r\n        this.options.forEach(option => {\r\n            elements.push(<option value={option.text} selected={option.key === 1 ? true : false}>{option.text}</option>)\r\n        })\r\n\r\n        return elements;\r\n    }\r\n\r\n    private onFirstPageClick() {\r\n        this.setState({ selectedPage: 1 });\r\n        this.props.parent.onPaginationPageChanged(1);\r\n    }\r\n\r\n    private onLastPageClick() {\r\n        const lastPage: number = Math.ceil(this.props.totalItemsCount / this.props.model.count);\r\n        this.setState({ selectedPage: lastPage });\r\n        this.props.parent.onPaginationPageChanged(lastPage);\r\n    }\r\n\r\n    private onPrevPageClick() {\r\n        const page = this.state.selectedPage - 1;\r\n        this.setState({ selectedPage: page });\r\n        this.props.parent.onPaginationPageChanged(page);\r\n    }\r\n\r\n    private onNextPageClick() {\r\n        const page = this.state.selectedPage + 1;\r\n        this.setState({ selectedPage: page });\r\n        this.props.parent.onPaginationPageChanged(page);\r\n    }\r\n\r\n    private onPageClick(page: number) {\r\n        this.setState({ selectedPage: page });\r\n        this.props.parent.onPaginationPageChanged(page);\r\n    }\r\n}","import linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport * as constants from '../../../constants';\r\nimport * as e3c from '../../../constants';\r\nimport * as i from '../../../interfaces/index';\r\nimport { EApiResponseStatus, IApiResponse, IApiStep, IApiSummary, IProcessStatus, ISocketPushModel } from '../../../interfaces/index';\r\nimport IUser from '../../../models/environment/user';\r\nimport * as m from '../../../models/index';\r\nimport { IOrderData } from '../../../models/index';\r\nimport { ActivationHelper, ActivationUI } from '../../../models/ordering/activation';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { EActivationFileType, EActivationType, EBusinessCase } from '../../../models/ordering/order';\r\nimport IService from '../../../models/ordering/service';\r\nimport { EControlType, ELButtonType, ERequestStatus, ERequestType } from '../../../models/page/diverse';\r\nimport { IKeyValue } from '../../../models/page/interfaces';\r\nimport Api from '../../../utils/api';\r\nimport ActivationApi from '../../../utils/apiActivation';\r\nimport { BrandKeys, CatKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport GlobalJSX from '../../../utils/GlobalJSX';\r\nimport { ActivationMessages, Hints, MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport EasyRouter from '../../../utils/router';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport { EPopupType, IPopupProps } from '../../dialogs/popup';\r\nimport * as page from '../../page/index';\r\nimport { EStatusState } from '../../support/status';\r\nimport BrandThumb, { EBrandThumbStatus, EBrandThumbType } from '../brandThumb';\r\nimport ActivationResponseStatus from '../process/activationResponseStatus';\r\n\r\nexport interface IPreviewContractProps {\r\n    preview: boolean;\r\n    customer: ICustomer;\r\n    ah: ActivationHelper;\r\n    refreshParent: any;\r\n    bc: EBusinessCase;\r\n};\r\n\r\nexport interface IPreviewContractState {\r\n    status: EPreviewState;\r\n    mounted: boolean;\r\n    changed: boolean;\r\n    loading: boolean;\r\n    confirmSigned: boolean;\r\n    confirmBoni: boolean;\r\n};\r\n\r\nexport enum EPreviewState {\r\n    undefined = 0,\r\n    requestNeeded = 1,\r\n    contractRequested = 2,\r\n    requestReady = 4,\r\n    printReady = 8,\r\n    printNeeded = 16,\r\n    activationStarted = 32,\r\n    activationDone = 64,\r\n    apiFailed = 128,\r\n    printFailed = 256,\r\n    timeout = 512,\r\n    printReadyBoni = 1024\r\n    // ,executeDirect = 512\r\n    // ,executeStarted = 1024\r\n    // ,executeFailed = 2048\r\n    // ,executeDone = 4096\r\n};\r\n\r\nexport class PreviewContract extends React.Component<IPreviewContractProps, IPreviewContractState> {\r\n    private failedOnce: boolean = false;\r\n    private api?: i.IApiResponse;\r\n    private prevStatus: EPreviewState = EPreviewState.undefined;\r\n    private downloads: IKeyValue[] = [];\r\n    /**\r\n     * true if the customer data was refreshed after an vvl/tw\r\n     */\r\n    private customerUpdated: boolean = false;\r\n\r\n    constructor(props: IPreviewContractProps) {\r\n        super(props);\r\n\r\n        this.processCallback = this.processCallback.bind(this);\r\n        this.socketCallback = this.socketCallback.bind(this);\r\n        this.socketCallbackCustomer = this.socketCallbackCustomer.bind(this);\r\n        this.timerCompletedCallback = this.timerCompletedCallback.bind(this);\r\n\r\n        let tempStatus = EPreviewState.requestNeeded;\r\n\r\n        if (this.props.ah.activation.isActivated()) {\r\n            tempStatus = EPreviewState.activationDone;\r\n        } else if (this.props.ah.activation.isTimedout()) {\r\n            tempStatus = EPreviewState.timeout;\r\n        }else {\r\n            this.props.ah.activation.resetSteps(ERequestType.activation);\r\n        };\r\n\r\n        this.state = {\r\n            status: tempStatus,\r\n            mounted: false,\r\n            changed: false,\r\n            loading: false,\r\n            confirmSigned: false,\r\n            confirmBoni: false\r\n        };\r\n    };\r\n\r\n    public componentDidMount() {\r\n        this.setState({ mounted: true });\r\n        this.checkStatus();\r\n    };\r\n\r\n    public render() {\r\n        if (!this.state.mounted) {\r\n            return <></>\r\n        };\r\n\r\n        return this.renderMultiple();\r\n    };\r\n\r\n    public renderMultiple() {\r\n        \r\n        let item=Global.categoryWrapper.getCategoryByProduct(this.props.ah.activation.productId);\r\n        let catKey = item.id;\r\n      \r\n        if(this.props.ah.activation.selection.children.length>1){\r\n           \r\n            let categoryOne=Global.categoryWrapper.getCategoryByProduct(this.props.ah.activation.selection.children[0].id);\r\n            let categoryTwo=Global.categoryWrapper.getCategoryByProduct(this.props.ah.activation.selection.children[1].id); \r\n            \r\n            if((categoryOne.id == CatKeys.tv && categoryTwo.id == CatKeys.fn) || (categoryOne.id == CatKeys.fn && categoryTwo.id == CatKeys.tv)){\r\n                catKey = 'tv_fn';\r\n            }\r\n        }\r\n\r\n        let ctrl = (\r\n            <div className=\"block-contract\" id={this.props.ah.activation.id} key={'prevc-' + this.props.ah.activation.id}>\r\n                {this.renderPopup()}\r\n\r\n                {this.renderPopupConfirmSigned()}\r\n                {this.renderPopupConfirmBoniSigned()}\r\n\r\n                <div className=\"action-top\">\r\n                    {this.renderActionCustomer()}\r\n                </div>\r\n\r\n                <div className=\"action\">\r\n                    {this.renderAction()}\r\n                </div>\r\n\r\n                <div className=\"block block-act-contract block-act-preview\">\r\n                    <BrandThumb \r\n                        ckey={'bt-cat-' + catKey}\r\n                        item={item}\r\n                        multiBasketId={catKey}\r\n                        onClick={undefined} \r\n                        type={EBrandThumbType.blister}\r\n                        withoutInfo={true} \r\n                        status={EBrandThumbStatus.static | EBrandThumbStatus.selected}\r\n                        activationStatus={this.state.status} />\r\n\r\n                    {\r\n                        this.props.ah.items.map((i)=>{\r\n                            return this.renderMain(i)\r\n                        })\r\n                    }\r\n\r\n                    {this.renderPrice()}\r\n\r\n                    {this.renderStatusBlock()}\r\n\r\n                    <page.LClear />\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderStatusBlock() {\r\n        return this.props.preview || this.props.ah.activation.inCurrent ?\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12} md={12} className=\"np\">\r\n                        <div className=\"spacer-medium\" />\r\n                        <div className=\"spacer-line\" />\r\n                        <div className=\"spacer-medium\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12} className=\"np\">\r\n                        {this.renderStatus()}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n    :\r\n        <Container>\r\n            <Row>\r\n                <Col xs={12} md={12} className=\"np\">\r\n                    <div className=\"spacer-medium\" />\r\n                    <div className=\"spacer-line\" />\r\n                    <div className=\"spacer-medium\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            {\r\n                this.props.ah.activation.brandKey === BrandKeys.vodafone && this.props.bc === EBusinessCase.bnt ?\r\n                    <>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                {Hints.hintMandatoryServicesVodafone}\r\n                            </Col>\r\n                        </Row>\r\n                        <div className=\"spacer-medium\" />\r\n                        <div className=\"spacer-line\" />\r\n                        <div className=\"spacer-medium\" />\r\n                    </>\r\n                    : null\r\n            }\r\n\r\n            <Row>\r\n                <Col md={12} className=\"np\">\r\n                    {this.renderStatus()}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    };\r\n\r\n    private renderMain(act: ActivationUI) {\r\n        let user: IUser | undefined = StorageHelper.getUser();\r\n\r\n        let ctrl = <Container>\r\n            {\r\n                this.props.ah.activation.activationType === EActivationType.existingCustomer && this.props.preview ?\r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <div className=\"title\">{act.getActionName()}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    null\r\n            }\r\n\r\n            {\r\n                this.props.ah.activation.inCurrent ?\r\n                    <Row>\r\n                        <Col xs={12} md={12} className='title'>\r\n                            {ActivationMessages.prolongateWithCurrent}\r\n                        </Col>\r\n                    </Row>\r\n                    : null\r\n            }\r\n\r\n            {\r\n                this.props.ah.activation.brandKey == BrandKeys.unity ?\r\n                    <Row>\r\n                        <Col xs={12} md={12} className='text-hint np'>\r\n                            {Hints.dataCorrectCheck} \r\n                            <br/> &nbsp;\r\n                        </Col>\r\n                    </Row>\r\n                    : null\r\n            }\r\n\r\n            <Row>\r\n                <Col xs={6} md={6} className=\"np\">\r\n                    <page.LControl type={EControlType.info} title=\"Tarif\" label={act.getProductName()} />\r\n                </Col>\r\n                {\r\n                    this.props.preview ?\r\n                        <>\r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl type={EControlType.info} title=\"VOID\" label={ user ? user.username : ''} />\r\n                            </Col>\r\n                            <div className=\"spacer\" />\r\n                            {\r\n                                this.props.ah.activation.activationType == EActivationType.bookService ? null :\r\n                                    <Col xs={6} md={6} className=\"np\">\r\n                                        <page.LControl type={EControlType.info} title={MainTexts.contractType} label={act.getContractType()} />\r\n                                    </Col>\r\n                            }\r\n                        </>\r\n                        : null\r\n                }\r\n            </Row>\r\n\r\n            {\r\n                this.props.ah.activation.brandKey == BrandKeys.otelo ?\r\n                    <Row>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LControl type={EControlType.info} label={act.getMsisdn()} title=\"MSISDN\" />\r\n                        </Col>\r\n\r\n                        {\r\n                            this.props.customer.contracts ? \r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl type={EControlType.info} label={act.getCustomerId()} \r\n                                    title={MainTexts.customerId} />\r\n                            </Col>\r\n                            : \r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl type={EControlType.info} label={act.getContractIdUi()} title={MainTexts.contractId} />                     \r\n                            </Col>\r\n                        }\r\n\r\n                        <div className=\"spacer\" />\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LControl type={EControlType.info}\r\n                                label={Global.toGermanDate(act.activationDate)}\r\n                                title={act.activationDateTitleUI} />\r\n                        </Col>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LControl type={EControlType.info} title={\"IMEI\"} label={this.props.ah.activation.imei} />\r\n                        </Col>\r\n                    </Row>\r\n                    : null\r\n            }\r\n\r\n            {\r\n                this.props.ah.activation.brandKey == BrandKeys.dsl ?\r\n                    <Row>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LControl type={EControlType.info} label={act.getContractId()} title=\"Barcode\" />\r\n                        </Col>\r\n                    </Row>\r\n                    : null\r\n            }\r\n\r\n            {\r\n                this.props.ah.activation.brandKey == BrandKeys.kabel ?\r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <page.LControl type={EControlType.info} label={act.getContractIdUi()} title={MainTexts.webOrderId} />\t                            \r\n                        </Col>\r\n                        {\r\n                            act.isDone() || true ? \r\n                                <Col xs={12} md={12} className=\"np\">\r\n                                    <page.LControl style=\"text-hint\" type={EControlType.info} label={\"Bitte fülle das Feld Weborder-ID, in der oberen rechten Ecke des Vertragsdokumentes, manuell aus.\"} />\r\n                                </Col>\r\n                            : null\r\n                        }                        \r\n                    </Row>\r\n                    : null\r\n            }\r\n\r\n            {/* vf sim msisdn */}\r\n            {\r\n                this.props.ah.activation.brandKey == BrandKeys.vodafone ?\r\n                    <Row>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LControl type={EControlType.info}\r\n                                label={act.getMsisdn()}\r\n                                title=\"MSISDN\" />\r\n                        </Col>\r\n                        {\r\n                            this.props.ah.activation.activationType === EActivationType.existingCustomer || this.props.ah.activation.activationType === EActivationType.bookService || this.props.ah.activation.activationType === EActivationType.cdChange ? null :\r\n                                <Col xs={6} md={6} className=\"np\">\r\n                                    <page.LControl type={EControlType.info} label={act.getSim()} title=\"SIM\" />\r\n                                </Col>\r\n                        }\r\n                        {\r\n                            this.props.ah.activation.activationType === EActivationType.bookService || this.props.ah.activation.activationType === EActivationType.cdChange ? null :\r\n                                <Col xs={6} md={6} className=\"np\">\r\n                                    <page.LControl type={EControlType.info} title={\"IMEI\"} label={this.props.ah.activation.imei} />\r\n                                </Col>\r\n                        }\r\n                    </Row>\r\n                    : null\r\n            }\r\n\r\n            {\r\n                this.props.ah.activation.brandKey == BrandKeys.vodafone && this.props.preview && !this.props.ah.activation.inCurrent ?\r\n                    <Row>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LControl type={EControlType.info} label={!this.props.customer.contracts? act.customerId : act.getCustomerId()} title={MainTexts.customerId} />\r\n                        </Col>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LControl type={EControlType.info}\r\n                                label={Global.toGermanDate(act.activationDate)}\r\n                                title={act.activationDateTitleUI} />\r\n                        </Col>\r\n                    </Row>\r\n                    : null\r\n            }\r\n\r\n            <div className=\"spacer\" />\r\n            <Row>\r\n                {\r\n                    this.props.ah.activation.activationType == EActivationType.bookService || this.props.ah.activation.inCurrent ? null :\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LControl type={EControlType.info} label={act.subUI} title={OrderingTexts.sub} />\r\n                        </Col>\r\n                }\r\n                {\r\n                    this.props.ah.activation.brandKey !== BrandKeys.vodafone ?\r\n                        <Col xs={6} md={6} className=\"npr\">\r\n                            <page.LControl type={EControlType.info} label={act.optionsUI} title={MainTexts.bookedOptions} />\r\n                        </Col>\r\n                        : null\r\n                }\r\n            </Row>\r\n            <div className=\"spacer\" />\r\n            {/* vf services */}\r\n            {\r\n                this.props.ah.activation.brandKey === BrandKeys.vodafone && !this.props.ah.activation.inCurrent ?\r\n                    <>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LControl type={EControlType.info} title={MainTexts.bookedServices} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                {act.optionsUI}\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        {\r\n                            this.props.ah.activation.inCurrent ? null :\r\n                                <Row>\r\n                                    <Col xs={12} md={12} className=\"np\">\r\n                                        <page.LControl type={EControlType.info} label={act.promotionsUI} title={MainTexts.bookedPromotions} />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                        }\r\n                    </>\r\n            }\r\n        </Container>\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderPrice() {\r\n        let ctrl =  this.props.ah.activation.inCurrent ? <></> :\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <div className=\"spacer-medium\" />\r\n                            <div className=\"spacer-line\" />\r\n                            <div className=\"spacer-medium\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <div className=\"title\">{this.props.ah.activation.activationType === EActivationType.bookService ? MainTexts.costsAll : MainTexts.costs}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {\r\n                            this.props.ah.activation.activationType === EActivationType.existingCustomer || this.props.ah.activation.activationType === EActivationType.bookService ? null\r\n                                :\r\n                                <Col xs={4} md={4} className=\"np\">\r\n                                    <page.LControl type={EControlType.info} style=\"big\" label={Global.feeToString(this.props.ah.getActivationFee())} title={MainTexts.feeActivation} />\r\n                                </Col>\r\n                        }\r\n\r\n                        <Col xs={4} md={4} >\r\n                            <page.LControl type={EControlType.info}\r\n                                label={Global.feeToString(this.props.ah.getOptionMonthlyFee())}\r\n                                title={this.props.ah.activation.activationType === EActivationType.bookService ? MainTexts.costsBookedOptions : MainTexts.bookedServices}\r\n                                style=\"big\" />\r\n                        </Col>\r\n\r\n                        {\r\n                            this.props.ah.activation.activationType === EActivationType.bookService ? null :\r\n                                <Col xs={4} md={4} className=\"npr\">\r\n                                    <page.LControl type={EControlType.info} label={Global.feeToString(this.props.ah.getMonthlyFee())} title={MainTexts.feeMonthly} style=\"big\" />\r\n                                </Col>\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n        \r\n        return ctrl;\r\n    };\r\n\r\n    public makeServicesRenderable(allServices: IService[]): JSX.Element {\r\n        let ctr = <></>;\r\n\r\n        ctr = (<ul>\r\n            {allServices.map(i => {\r\n                return <li key={'allsvc-' + i.id}>{i.name}</li>;\r\n            })}\r\n        </ul>\r\n        )\r\n        return ctr;\r\n    };\r\n\r\n    /**\r\n     * Renders the action like Anfordern und Aktivieren\r\n     */\r\n    public renderAction() {\r\n        let ctrl = <></>;\r\n        let bcss: string = 'a1 disabled';\r\n        let msg: string = 'Bitte bestätigen Sie zuerst die Einverständniserklärung';\r\n        let consentSet: boolean = false;\r\n\r\n        if (this.props.preview) {\r\n            ctrl = <page.LButton type={ELButtonType.buttonWithIconRight} icon=\"print\" css={\"no-print\"}\r\n                text={ActivationMessages.print} onClick={this.onPrintDocument} />\r\n            return ctrl;\r\n        };\r\n\r\n        if (this.props.customer.bew && this.props.customer.bew.consent) {\r\n            bcss = 'a1';\r\n            consentSet = true;\r\n        };\r\n\r\n        if (    this.state.status === EPreviewState.contractRequested \r\n            ||  this.state.status === EPreviewState.activationStarted\r\n            ||  this.state.status === EPreviewState.timeout) {\r\n            ctrl = (\r\n                <></>\r\n                // <page.LTimer count={3000} step={5} stepCallback={this.processCallback} showUI={true} />\r\n            );\r\n        } else if (this.state.status == EPreviewState.requestNeeded || this.state.status == EPreviewState.printReadyBoni) {\r\n            if(this.props.ah.activation.brandKey == BrandKeys.unity && this.state.status != EPreviewState.printReadyBoni) {\r\n                if(!this.props.ah.activation.hasBoniFile()) {\r\n                    ctrl = <page.LButton type={ELButtonType.buttonWithIconRight} \r\n                        icon=\"print\"\r\n                        css={bcss}\r\n                        text={'Bonitätsprüfung starten'}\r\n                        onClick={() => { this.checkBoni() }} /> \r\n                } else {\r\n                    var f = this.props.ah.activation.getFile(EActivationFileType.boni);\r\n                    ctrl = <page.LButton type={ELButtonType.buttonWithIconRight} \r\n                        icon=\"print\"\r\n                        css={bcss}\r\n                        text={'Bonitätsprüfung ausdrucken'}\r\n                        onClick={() => { this.onDownload(f!.Name, EPreviewState.printReadyBoni) }} />                     \r\n                }\r\n            } else {\r\n                ctrl = (\r\n                    <>\r\n                        {\r\n                            consentSet ? null :\r\n                                <ReactTooltip place=\"top\" type=\"light\" effect=\"solid\" id={'tt_buttonRequestContract'}>\r\n                                    <div>{msg}</div>\r\n                                </ReactTooltip>\r\n                        }\r\n                        <span data-for=\"tt_buttonRequestContract\" data-tip={msg}>\r\n                            <page.LButton\r\n                                type={ELButtonType.buttonWithIconRight}\r\n                               // icon=\"print\"\r\n                                css={bcss}\r\n                                id=\"buttonRequestContract\"\r\n                                text={this.props.ah.activation.activationType == EActivationType.bookService ? ActivationMessages.requestContractOptions : ActivationMessages.requestContract}\r\n                                onClick={(e)=> {\r\n                                    if(this.props.ah.activation.brandKey == BrandKeys.unity) {\r\n                                        this.setState({confirmBoni: true});\r\n                                    } else {\r\n                                        this.onRequestPrint();\r\n                                    }\r\n                                }} />\r\n                        </span>\r\n                    </>\r\n                );\r\n            }\r\n        } else if (this.state.status === EPreviewState.printNeeded) {\r\n            var step = this.props.ah.activation.getStep(ERequestType.print);\r\n\r\n            let info = JSON.parse(step.message);\r\n\r\n            this.downloads = linq.from<string>(info.Binary.split(';'))\r\n                .select(x => {\r\n                    return {\r\n                        Key: x,\r\n                        Value: '0'\r\n                    }\r\n                }).toArray();\r\n            \r\n            if (this.props.ah.activation.brandKey === BrandKeys.kabel && this.downloads.length > 1) {\r\n                ctrl = (\r\n                    <>\r\n                        <div>Ausdrucken:</div>\r\n                        {\r\n                            this.downloads.map((i, idx)=>{\r\n                                let s = MainTexts.contract;\r\n                                \r\n                                if(i.Key.toLowerCase().indexOf('kabelkip')>0) {\r\n                                    s = MainTexts.contractFn;\r\n                                } else if(i.Key.toLowerCase().indexOf('tvkabel')>0) {\r\n                                    s = MainTexts.contractTv;\r\n                                } else if(idx > 0) {\r\n                                    s = MainTexts.sepa;\r\n                                }\r\n\r\n                                return <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                    icon=\"print\" css={bcss}\r\n                                    text={s}\r\n                                    onClick={() => { this.onDownloadNotReady(i.Key) }} />\r\n                            })\r\n                        }\r\n                    </>\r\n                );\r\n            } else {\r\n                ctrl = (\r\n                    <>\r\n                        {\r\n                            <page.LButton \r\n                                type={ELButtonType.buttonWithIconRight} \r\n                                icon=\"print\" \r\n                                css={bcss}\r\n                                text={ActivationMessages.print} \r\n                                onClick={()=>\r\n                                    {this.onDownload('', EPreviewState.printReady);}\r\n                                } />\r\n                        }\r\n\r\n                    </>\r\n                );\r\n            }\r\n        } else if (this.state.status === EPreviewState.printReady) {\r\n            ctrl = (\r\n                <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                     css={bcss}\r\n                    text={this.props.ah.activation.activationType == EActivationType.bookService ? ActivationMessages.completeContractOptions : ActivationMessages.completeContract}\r\n                    onClick={this.onActivateConfirm} />\r\n            );\r\n        } else if (this.state.status === EPreviewState.activationDone) {\r\n            ctrl = (\r\n                <>\r\n                    <page.LButton type={ELButtonType.buttonWithIconRight} icon=\"print\" css={bcss}\r\n                        text={ActivationMessages.overview}\r\n                        onClick={() => { this.onOverview() }} />\r\n                </>\r\n            );\r\n        };\r\n\r\n        let ctrldbg: JSX.Element = <></>;\r\n\r\n        if (e3c.build !== constants.BuildEnv.Prod) {\r\n            ctrldbg = (\r\n                <>\r\n                    <page.LButton type={ELButtonType.buttonWithIconRight} icon=\"print\"\r\n                        css={bcss}\r\n                        text={'Set Done'}\r\n                        onClick={() => { this.setActivationDone() }} />                       \r\n                </>\r\n            );\r\n        };\r\n\r\n        return [ctrl, ctrldbg];\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param api will be called after an print or activation action\r\n     */\r\n    public socketCallback(api: IApiResponse) {\r\n        this.api = api;\r\n\r\n        if (api.error) {\r\n            this.setState({ status: this.prevStatus });\r\n        } else {\r\n           \r\n            let steps = ActivationApi.getSteps(api);\r\n            if(api.data.responseObject) {\r\n                this.props.ah.activation.files = api.data.responseObject.Files;\r\n            };\r\n            this.props.ah.activation.updateSteps(steps);\r\n\r\n            this.checkStatus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * will be called after loadCustomerRefresh\r\n     */\r\n    public socketCallbackCustomer(sock: ISocketPushModel) {\r\n        let api = JSON.parse(sock.data);\r\n\r\n        if (!api.error) {\r\n            let inner = api.data;\r\n\r\n            let proc = JSON.parse(inner.data);\r\n            let step: IApiStep = proc.steps[0];\r\n\r\n\r\n            if (step.status === ERequestStatus.done) {\r\n                let process = JSON.parse(step.message);\r\n\r\n                StorageHelper.addOrderAndReset(process);\r\n\r\n                this.api = undefined;\r\n                this.setState({ loading: false });\r\n\r\n                EasyRouter.route({ url: '/customer/dashboard/' + process.id, title: MainTexts.existingCustomerActivation });\r\n            }\r\n        }\r\n\r\n        {\r\n            this.api = api;\r\n            this.setState({ loading: false });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * will create an checkBoni request and sends it via api to backend\r\n     */\r\n    private checkBoni = () => {\r\n        let model = {\r\n            brand: this.props.ah.activation.brandKey,\r\n            orderId: this.props.ah.activation.id,\r\n            type: ERequestType.checkBoni\r\n        };\r\n\r\n        this.setState({loading: true});\r\n        this.api = undefined;\r\n\r\n        Api.fetch('activation/checkBoni', model, \"POST\", (api: IApiResponse) => {\r\n            if(api.status == EApiResponseStatus.ok) {\r\n                this.props.ah.activation.files = api.data.files;\r\n                StorageHelper.updateActivation(this.props.ah.activation);\r\n                this.setState({loading: false});\r\n            } else {\r\n                var sum = Api.parseSummary(api, undefined);\r\n                this.api = api;\r\n                this.setState({changed: true});\r\n            };\r\n        });\r\n    };\r\n\r\n    private onPrintDocument=()=> {\r\n        window.print();\r\n    };\r\n\r\n    /**\r\n     * will set current activation to status done\r\n     * so use only for debug\r\n     */\r\n    private setActivationDone=()=> {\r\n        if (!e3c.debug) { console.error('Use only on local'); return; };\r\n\r\n        this.props.ah.activation.activateManually();\r\n        StorageHelper.updateActivation(this.props.ah.activation);\r\n        this.setState({ changed: true, status: EPreviewState.activationDone });\r\n    };\r\n\r\n    /**\r\n     * will be called when the button \"Zu den Kundendaten\" is being clicked\r\n     */\r\n    private onBackToCustomer=()=> {\r\n        if (!this.customerUpdated && this.props.ah.activation.isActivated()) {\r\n            var parent = StorageHelper.getParentOfProcess(this.props.ah.activation.processId);\r\n\r\n            Global.hub.send('{ \"type\": ' + m.ERequestType.loadCustomerRefresh + ', \"receiverId\":\"' + this.props.ah.activation.id + '\", \"id\":\"' + Global.getUniqueId() + '\", \"parentId\": \"' + parent.id + '\", \"brandKey\": \"' + this.props.ah.activation.brandKey + '\" }',\r\n                m.ERequestType.loadCustomerRefresh,\r\n                () => {\r\n                    this.setState({ changed: true, loading: true });\r\n                });\r\n        } else {\r\n            this.props.ah.activation.activateManually();\r\n            this.setState({ changed: true, status: EPreviewState.activationDone });\r\n        };\r\n    };\r\n\r\n    private renderPopup(): JSX.Element {\r\n        let cfg: IPopupProps = {\r\n            title: 'Anforderung wird verarbeitet',\r\n            closable: false,\r\n            id: \"existingRefreshPopup\",\r\n            visible: false,\r\n            type: EPopupType.pleaseWait\r\n        };\r\n\r\n        if (this.state.loading) {\r\n            cfg.visible = true;\r\n        };\r\n\r\n        let content: JSX.Element = <></>;\r\n\r\n        if (this.api && this.api.status != EApiResponseStatus.ok) {\r\n            let pr: IProcessStatus = JSON.parse(this.api.data);\r\n            let sum: IApiSummary = Api.parseSummary(this.api, pr);\r\n\r\n            cfg.closable = true;\r\n            cfg.visible = true;\r\n            cfg.type = EPopupType.info;\r\n            content = <div>{sum.message}</div>\r\n        };\r\n\r\n        let ctrl = GlobalJSX.GetPopup(cfg, content, undefined);\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderPopupConfirmSigned=():JSX.Element => {\r\n        let cfg: IPopupProps = {\r\n            title: MainTexts.printFile,\r\n            closable: true,\r\n            id: \"newconfirmPopup\",\r\n            visible: false,\r\n            height: 200,\r\n            textPositive: MainTexts.yes,\r\n            textNegative: MainTexts.no,\r\n            type: EPopupType.confirmCustom,\r\n            onDismiss: () => {\r\n                this.setState({ confirmSigned: false })\r\n            },\r\n            onNegative: () => {\r\n                this.setState({ confirmSigned: false })\r\n            },\r\n            onPositive: () => {\r\n                this.setState({ confirmSigned: false }, () => {\r\n                    this.onActivate();\r\n                });\r\n            }\r\n        };\r\n\r\n        if (this.state.confirmSigned) {\r\n            cfg.visible = true;\r\n        };\r\n\r\n        let content: JSX.Element = <div>{Hints.customerSignedDocument}</div>;\r\n\r\n        let ctrl = GlobalJSX.GetPopup(cfg, content, undefined);\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderPopupConfirmBoniSigned=():JSX.Element => {\r\n        let cfg: IPopupProps = {\r\n            title: MainTexts.hint,\r\n            closable: true,\r\n            id: \"newconfirmPopup\",\r\n            visible: false,\r\n            height: 200,\r\n            textPositive: MainTexts.yes,\r\n            textNegative: MainTexts.no,\r\n            type: EPopupType.confirmCustom,\r\n            onDismiss: () => {\r\n                this.setState({ confirmBoni: false })\r\n            },\r\n            onNegative: () => {\r\n                this.setState({ confirmBoni: false })\r\n            },\r\n            onPositive: () => {\r\n                this.setState({ confirmBoni: false }, () => {\r\n                    this.onRequestPrint();\r\n                });\r\n            }\r\n        };\r\n\r\n        if (this.state.confirmBoni) {\r\n            cfg.visible = true;\r\n        };\r\n\r\n        let content: JSX.Element = <div>{Hints.customerSignedBoni}</div>;\r\n\r\n        let ctrl = GlobalJSX.GetPopup(cfg, content, undefined);\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderActionCustomer(): JSX.Element {\r\n        if ((this.props.ah.activation.activationType !== EActivationType.existingCustomer)\r\n            || !this.props.ah.activation.isActivated()\r\n            || this.props.preview) {\r\n            return <></>;\r\n        };\r\n\r\n        let ctrl = <>\r\n            <page.LButton text={MainTexts.backToCustomer}\r\n                onClick={this.onBackToCustomer}\r\n                type={ELButtonType.linkSimple}\r\n                css=\"action3\"\r\n                icon=\"chevron\" />\r\n        </>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private onDownload = (file: string, state: EPreviewState) => {\r\n        this.setState({ status: state });\r\n\r\n        ActivationApi.download(this.props.ah.activation, file, (api: i.IApiResponse) => { });\r\n    };\r\n\r\n    private onDownloadNotReady(file: string) {\r\n        let f = linq.from<IKeyValue>(this.downloads).where(x => x.Key == file).first();\r\n        f.Value = '1';\r\n        let a = linq.from<IKeyValue>(this.downloads).where(x => x.Value == '1').count();\r\n\r\n        ActivationApi.download(this.props.ah.activation, file, (api: i.IApiResponse) => { });\r\n\r\n        if (a == this.downloads.length) {\r\n            this.setState({ status: EPreviewState.printReady });\r\n        };\r\n    };\r\n\r\n    private processCallback() {\r\n        return;\r\n    };\r\n\r\n    private onRequestPrint = () => {\r\n        Global.hub.send('{ \"processId\": \"' + this.props.ah.activation.processId + '\", \"orderId\": \"' + this.props.ah.activation.id + '\" }',\r\n            m.ERequestType.print,\r\n            undefined);\r\n\r\n        this.props.ah.activation.resetSteps(ERequestType.print);\r\n\r\n        this.prevStatus = this.state.status;\r\n\r\n        this.setState({ status: EPreviewState.contractRequested });\r\n    };\r\n\r\n    private onActivateConfirm=()=> {\r\n        this.setState({ confirmSigned: true });\r\n    };\r\n\r\n    private onActivate = () => {\r\n        this.api = undefined;\r\n\r\n        Global.hub.send('{ \"processId\": \"' + this.props.ah.activation.processId + '\", \"orderId\": \"' + this.props.ah.activation.id + '\" }',\r\n            m.ERequestType.activation,\r\n            undefined);\r\n\r\n        this.props.ah.activation.resetSteps(ERequestType.activation);\r\n\r\n        this.prevStatus = this.state.status;\r\n\r\n        this.setState({ status: EPreviewState.activationStarted });\r\n    };\r\n\r\n    private onOverview=()=> {\r\n        let url = '/ordering/preview/' + this.props.ah.activation.processId + '/' + this.props.ah.activation.id;\r\n        let w = window.open(url, '_blank');\r\n    };\r\n\r\n    private checkStatus() {\r\n        try {\r\n            let tempStatus = EPreviewState.requestNeeded;\r\n\r\n            var stepPrint: i.IApiStep = this.props.ah.activation.getStep(ERequestType.print);\r\n            var stepAct: i.IApiStep = this.props.ah.activation.getStep(ERequestType.activation);\r\n\r\n            if (!stepPrint || !stepAct) { return; };\r\n\r\n            if (stepPrint && stepAct.status == ERequestStatus.undefined) {\r\n                if (stepPrint.status === ERequestStatus.done) {\r\n                    tempStatus = EPreviewState.printNeeded;\r\n                } else if (stepPrint.status === ERequestStatus.failed || stepPrint.status === ERequestStatus.invalid) {\r\n                    tempStatus = EPreviewState.requestNeeded;\r\n                    this.failedOnce = true;\r\n                } else if (stepPrint.status === ERequestStatus.running) {\r\n                    tempStatus = EPreviewState.contractRequested;\r\n                }\r\n            };\r\n\r\n            if (stepAct) {\r\n                if (stepAct.status != ERequestStatus.running) {\r\n                    if (stepAct.status === ERequestStatus.done) {\r\n                        tempStatus = EPreviewState.activationDone;\r\n                        this.checkSuccess(stepAct);\r\n                    } else if (stepAct.status === ERequestStatus.failed || stepAct.status === ERequestStatus.invalid) {\r\n                        tempStatus = EPreviewState.printReady;\r\n                        this.failedOnce = true;\r\n                    } else if (stepAct.status === ERequestStatus.timeout) {\r\n                        tempStatus = EPreviewState.timeout;\r\n                    };\r\n                } else {\r\n                    tempStatus = EPreviewState.activationStarted;\r\n                }\r\n            };\r\n\r\n            this.setState({ status: tempStatus });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    private checkSuccess(step: i.IApiStep) {\r\n        let info: m.IAnswerInfo = JSON.parse(step.message);\r\n\r\n        this.props.ah.activation.msisdn = info.MobileNumber;\r\n\r\n        StorageHelper.updateActivation(this.props.ah.activation);\r\n\r\n        /**\r\n         * otelo customer is being refreshed directly after vvl/tw\r\n         */\r\n        if (step.type == ERequestType.activation &&\r\n            step.status == ERequestStatus.done &&\r\n            this.props.ah.activation.brandKey === BrandKeys.otelo &&\r\n            this.props.ah.activation.activationType === EActivationType.existingCustomer) {\r\n            try {\r\n                let inner = JSON.parse(step.message);\r\n                let proc = StorageHelper.getParentOfProcess(this.props.ah.activation.processId);\r\n\r\n                let data: IOrderData = inner.uiUpdate;\r\n\r\n                if (this.props.customer.contracts && data.customer.contracts) {\r\n                    this.props.customer.contracts[0].actions = data.customer.contracts[0].actions;\r\n                    this.customerUpdated = true;\r\n                    StorageHelper.updateCustomer(proc.id, data.customer);\r\n                };\r\n                this.customerUpdated = true;\r\n            } catch (e) {\r\n                console.error(e);\r\n            };\r\n        };\r\n\r\n        if (this.props.refreshParent) {\r\n            this.props.refreshParent();\r\n        };\r\n        //this.props.parent.refresh();\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private timerCompletedCallback() {\r\n        this.setState({ status: this.prevStatus });\r\n    };\r\n\r\n    private renderStatus(): JSX.Element {\r\n        let status: EStatusState = EStatusState.undefined;\r\n        let message = '';\r\n\r\n        if (this.failedOnce == false &&\r\n            (this.state.status === EPreviewState.printReadyBoni || this.state.status === EPreviewState.printReady || this.state.status === EPreviewState.printNeeded || this.state.status === EPreviewState.undefined || this.state.status === EPreviewState.requestNeeded)) {\r\n            return <></>;\r\n        }\r\n\r\n        if (this.state.status == EPreviewState.contractRequested\r\n            || this.state.status == EPreviewState.activationStarted) {\r\n            status = EStatusState.inprocessTimer;\r\n        } else if (this.state.status == EPreviewState.activationDone) {\r\n            status = EStatusState.done;\r\n        } else if (this.state.status == EPreviewState.timeout) {\r\n            status = EStatusState.warning;\r\n            message = 'Überprüfe den Status deines Auftrags zu einem späteren Zeitpunkt im Auftragsmanager'\r\n        } else {\r\n            status = EStatusState.failed;\r\n        };\r\n\r\n        if (this.api && this.api.error) {\r\n            status = EStatusState.failed;\r\n        };\r\n\r\n        let ctrl = <ActivationResponseStatus\r\n            apiState={status}\r\n            title=\"Deine Anfrage wurde übermittelt.\"\r\n            message={message}\r\n            api={this.api}\r\n            resetTimer={true}\r\n            autoRestart={true}\r\n            completedCallback={this.timerCompletedCallback}\r\n            process={this.props.ah.activation.processStatus}\r\n            processCallback={this.processCallback} />\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default PreviewContract;","export enum EEasyTransactionType\r\n{\r\n    NeuerAuftrag = 1,\r\n    NeuerAuftragmitMNP = 2,\r\n    Vertragsverlaengerung = 3,\r\n    Tarifwechsel = 4,\r\n    StornoNeuerAuftrag = 5,\r\n    StornoVVL = 6,\r\n    StornoTW = 7,\r\n    Optionsbuchung = 8,\r\n    Optionsbuchungbeendet = 9,\r\n    Direktaufladung = 10,\r\n    Komfortaufladung = 11,\r\n    Komfortaufladungbeendet = 12,\r\n    Topstop = 13,\r\n    TopstopBeendet = 14,\r\n    KundendatenAktualisiert = 15,\r\n    ZahlungsdatenAktualisiert = 16,\r\n    SubStufeEntfernen = 17,\r\n    VertragsverlaengerungMitTariffwechsel = 18,\r\n    KennwrotAktualisiert = 19,\r\n\r\n    VertagstorniertbeiLevel1beantrargt = 24,\r\n    TW_TWVVL_storniert_bei_Level_1_beantrargt = 25,\r\n    VVL_storniert_bei_Level_1 = 26,\r\n\r\n    StornierungdurchLevel1freigegeben = 27,\r\n    StornierungdurchLevel1abgelehnt = 33,\r\n    \r\n    Frei = 36,\r\n    IMEIUpload = 37,\r\n    StornierungdurchVfFreigegeben = 38,\r\n    StornierungdurchVfAbgelehnt = 39,\r\n    ForwardedToHotline = 40,\r\n    StornierungAuto = 41,\r\n\r\n    ForwardedToKAM = 42,\r\n    ForwardedToVL = 43,\r\n    ApprovedByKAM = 44,\r\n    RejectedByKAM = 45,\r\n    ApprovedByVL = 46,\r\n    RejectedByVL = 47,\r\n\r\n    RechnungsArtUpdated = 48,\r\n    EMailValidated = 49,\r\n    PasswordChanged = 50,\r\n    ConsentsUpdated = 51,\r\n\r\n\r\n    BelatedPortation = 80\r\n};\r\n\r\nexport enum EEasttransactionStatus {\r\n    undefined = 0,\r\n    done = 1,\r\n    timedout = 2\r\n};\r\n\r\nexport enum ELElementStatus {\r\n    normal = 0,\r\n    selected = 1,\r\n    disabled = 2,\r\n    ready = 4\r\n};\r\n\r\nexport enum ECustomerEmailStatus {\r\n    UNDEFIEND = 0,\r\n    CREATED = 1,\r\n    REMINDED = 2,\r\n    VALIDATED = 4,\r\n    NOT_VALIDATED = 8,\r\n    NO_PROCESS_FOUND = 16\r\n};\r\n\r\nexport enum ELButtonType {\r\n    normal = 0,\r\n    icon = 1,\r\n    buttonWithIconRight = 2,\r\n    iconImage = 4,\r\n    textWithIconLeft = 8,\r\n    linkWithIconLeft = 16,\r\n    linkWithIconRight = 32,\r\n    linkPanel = 64,\r\n    linkSimple = 128\r\n};\r\n\r\nexport enum EDesiredSchedule {\r\n    undefined = 0,\r\n    asap = 1,\r\n    custom = 2\r\n};\r\n\r\nexport enum EPortationType {\r\n    undefined = 0,\r\n    asap = 1,\r\n    contractEnd = 2,\r\n    custom = 3,\r\n    date = 4\r\n};\r\n\r\nexport enum EExistingCustomerLoginMode {\r\n    password = 0,\r\n    birthday = 1,\r\n    contractId = 2,\r\n    customerId = 4\r\n};\r\n\r\nexport enum ETelType {\r\n    undefined = 0,\r\n    mobile = 1,\r\n    home = 2\r\n};\r\n\r\nexport enum EControlType {\r\n    undefined = 0,\r\n    text = 1,\r\n    textArea = 2,\r\n    password = 3,\r\n    checkbox = 4,\r\n    radio = 5,\r\n    dropdown = 6,\r\n    hint = 7,\r\n    title = 8,\r\n    info = 9,\r\n    date = 10,\r\n    toggle = 11,\r\n    tel = 12,\r\n    time = 13\r\n};\r\n\r\nexport enum EValueType {\r\n    text = 0,\r\n    numberInt = 1\r\n};\r\n\r\nexport enum EActivationTime {\r\n    now = 0,\r\n    future = 1\r\n};\r\n\r\nexport class DateValue {\r\n    public day: number = 1;\r\n    public month: number = 1;\r\n    public year: number = 2000;\r\n};\r\n\r\nexport enum EComponentState {\r\n    undefiend = 0,\r\n    visible = 1,\r\n    hidden = 2,\r\n    processing = 4,\r\n    nextStep = 8\r\n};\r\n\r\nexport enum ECancellationType {\r\n    bntL1 = 1,\r\n    vvlL1 = 2,\r\n    twL1 = 3,\r\n    bntL2 = 4,\r\n    vvlL2 = 5,\r\n    twL2 = 6,\r\n    extraordinary = 7\r\n};\r\n\r\nexport enum ERequestType {\r\n    undefined = 0,\r\n    print = 1,\r\n    activation = 2,\r\n    validateAddress = 3,\r\n    validatePayment = 4,\r\n    checkAddress = 5,\r\n    create = 6,\r\n    checkAvailability = 7,\r\n    checkMsisdn = 8,\r\n    status = 9,\r\n    statusRequest = 10,\r\n    serviceAddress = 11,\r\n    environment = 12,\r\n    checkAvailabilitySingle = 13,\r\n    checkBoni = 14,\r\n    \r\n    loadCustomer = 100,\r\n    loadCustomerConsumption = 101,\r\n    loadCustomerConsents = 102,\r\n    loadCustomerEMailValidation = 103,\r\n    loadCustomerGdpr = 104,\r\n    loadCustomerPayment = 105,\r\n    createCustomerProcess = 106,\r\n    createCancellationProcess = 107,\r\n    loadCustomerBookableTariffs = 108,\r\n    loadCustomerBookedTariffs = 109,\r\n    loadCustomerSimReplacement = 110,\r\n    loadCustomerEvn = 111,\r\n    loadCustomerTopstop = 112,\r\n    loadCustomerAutotop = 113,\r\n    loadCustomerSingleTopup = 114,\r\n    loadProfile = 115,\r\n    loadAccount = 116,\r\n    loadCustomerRefresh = 117,\r\n    loadContact = 118,\r\n    loadDealerCancellation = 119,\r\n    loadCustomerContractData = 120,\r\n    saveOrderPoducts = 121,\r\n    getOrderDetail = 122,\r\n    syncOrder = 123,\r\n\r\n    saveDraft = 200,\r\n    getDrafts = 201,\r\n    removeDraft = 202,\r\n    loadDraft = 203,\r\n\r\n    saveProfile = 204,\r\n    saveAccount = 205,\r\n    changePassword = 206,\r\n    saveImei = 207,\r\n    saveImeiList = 208,\r\n    saveContact = 209,\r\n\r\n    getContracts = 210,\r\n    getMnpPortingStatus = 211,\r\n    getMnpPortingStatusDetails = 212,\r\n    getOrderProducts = 213,\r\n    getOrdersList = 214,\r\n\r\n    startApp = 220,\r\n\r\n    getShopContacts = 250,\r\n    setShopContact = 251,\r\n    getContacts = 252,\r\n    getContractDetails = 253,\r\n\r\n    customerGroupGet = 300,\r\n    customerGroupCreate = 301,\r\n    customerGroupPartnerCardAdd = 302,\r\n    customerChangeAddService = 303,\r\n    customerChangeRemoveService = 304,\r\n    customerChangeAddRemoveServices = 305,\r\n    customerChangePayment = 306,\r\n    customerChangeData = 307, \r\n    customerChangePassword = 308,\r\n    customerOrderSim = 309,\r\n    customerGetCanellation = 310,\r\n    customerSetCancellation = 311,\r\n    customerUploadImei = 312,\r\n    customerChangeAddCombi = 315,\r\n    customerValidateEMail = 316,\r\n    customerUpdateConsents = 317,\r\n    customerPrintBEW = 318,\r\n    contractSummaryPost = 320,\r\n\r\n    belatedPortation = 313,\r\n    loadPortingStatus = 314,\r\n    \r\n    activateUser = 400,\r\n    deactivateUser = 401,\r\n\r\n    dealerGetCancellation = 500,\r\n    dealerSetCancellation = 501,\r\n\r\n    notify = 1000,\r\n    defconChanged = 1001\r\n}\r\n\r\nexport enum ERequestStatus {\r\n    undefined = 0,\r\n    running = 1,\r\n    failed = 2,\r\n    done = 4,\r\n    invalid = 8,\r\n    created = 16,\r\n    corrected = 32,\r\n    timeout = 64,\r\n    notAvailable = 128,\r\n    inProcess = 256,\r\n    tempResult = 512\r\n};\r\n\r\nexport default { ELButtonType, EActivationTime, DateValue, ERequestType, ERequestStatus, EComponentState, EControlType };\r\n// export default IKeyValue;","import linq from 'linq';\r\nimport * as m from '../models/index';\r\nimport StorageHelper from './storage';\r\nimport { BrandKeys } from './Defaults';\r\nimport { AvailabilityProduct, IAvailabilityBrand, IAvailabilityService } from '../models/ordering/availability';\r\nimport IProduct from '../models/ordering/product';\r\nimport IBrand from '../models/ordering/brand';\r\nimport ISub from '../models/ordering/sub';\r\nimport IService from '../models/ordering/service';\r\nimport { EServiceType, EBusinessCase, EActivationType } from '../models/ordering/order';\r\nimport { MainTexts } from './messages';\r\n\r\nexport class OrderingHelper {\r\n    public static filterProducts(brandKey: string, \r\n        products: IProduct[],\r\n        bc: EBusinessCase) : IProduct[] {\r\n        let prod = linq.from<IProduct>(products).toArray();\r\n\r\n        let avl: m.Availability = StorageHelper.getAvailability();\r\n        /** \r\n         * for DSL, kabel, unity products we apply additional filter for the given address\r\n        */\r\n        if(brandKey === BrandKeys.dsl || brandKey === BrandKeys.kabel || brandKey == BrandKeys.unity) {\r\n            let avlBrand = avl.getBrand(brandKey);\r\n            let avlProd = avl.getAvailableProducts(brandKey, avlBrand);\r\n\r\n            if(avl && avlProd) {\r\n                let prid = avlProd;\r\n\r\n                prod = linq.from<IProduct>(prod)\r\n                    .where(x=> prid.indexOf(x.id) > -1 )\r\n                    .toArray();\r\n\r\n                if(brandKey === BrandKeys.kabel) {\r\n                    prod.map((i)=>{\r\n                        let p = linq.from<AvailabilityProduct>(avlBrand.products)\r\n                            .where(x=>x.productId === i.id)\r\n                            .firstOrDefault();\r\n                        if(p) {\r\n                            let el = linq.from<IAvailabilityService>(p.elements)\r\n                                .where(x=>x.metaname === 'rufnummernmitnahme-1')\r\n                                .firstOrDefault();\r\n                            if(el) {\r\n                                i.activationType |= EActivationType.portDefault;\r\n                            };\r\n                        }\r\n                    });\r\n                };\r\n            } else {\r\n                prod = [];\r\n            }\r\n        } else {\r\n            prod = products;\r\n        }\r\n\r\n        if(bc != EBusinessCase.undefined) {\r\n            prod = linq.from<IProduct>(prod)\r\n                .where(x=>x.businessCases.indexOf(bc) >=0 )\r\n                .toArray();\r\n        };\r\n\r\n        return prod;\r\n    };\r\n\r\n    public static filterServices(brand: IBrand, act: m.IActivation, type: EServiceType) : string[] {\r\n        if(brand.id == BrandKeys.kabel) {\r\n            return OrderingHelper.filterServicesFromAvailability(brand, act, type);\r\n        };\r\n\r\n        let res: string[] = [];\r\n        var svcAll = linq.from<IService>(brand.services)\r\n            .where(x=> ((type & x.type) === x.type))\r\n            .toArray();\r\n\r\n        var svcSel = linq.from<IService>(brand.services)\r\n            .join(act.services, s=>s.id, a=>a, (s,a) => { \r\n                return {\r\n                    S: s,\r\n                    A: a\r\n                };\r\n             })\r\n            //.where(x=>!x.S.hidden)\r\n            .select(x=>x.S)\r\n            .toArray();\r\n            \r\n    //console.log('svcSel', svcSel);\r\n    //console.log('svcAll', svcAll);\r\n\r\n        svcAll.map((i,idx)=>{\r\n            let add: boolean = true;\r\n            for(let a=0;a<svcSel.length;a++) {\r\n                if(svcSel[a].notbookableWith && svcSel[a].notbookableWith.indexOf(i.id)>=0){\r\n                    add=false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(add) {res.push(i.id);}\r\n        });\r\n\r\n        return res;\r\n    };\r\n\r\n    public static filterServicesFromAvailability(brand: IBrand, act: m.IActivation, type: EServiceType) : string[] {\r\n        let res: string[] = [];\r\n        let avl: m.Availability = StorageHelper.getAvailability();\r\n        // var avl: IAvailabilityBrand = linq.from<IAvailabilityBrand>(StorageHelper.getAvailability().brands)\r\n        //     .where(x=>x.key == brand.id)\r\n        //     .firstOrDefault();\r\n\r\n        var pr:AvailabilityProduct = avl.getProduct(brand.id, act.productId);\r\n        // linq.from<AvailabilityProduct>(avl.getAvailableProducts(brand.id))\r\n        //     .where(x=>x.productId == act.productId)\r\n        //     .first();\r\n\r\n        var svcAll = linq.from<IAvailabilityService>(pr.elements)\r\n            .where(x=> x.available == true)\r\n            .toArray();\r\n\r\n        var svcSel = linq.from<IService>(brand.services)\r\n            .join(act.services, s=>s.id, a=>a, (s,a) => { \r\n                return {\r\n                    S: s,\r\n                    A: a\r\n                };\r\n             })\r\n            //.where(x=>!x.S.hidden)\r\n            .select(x=>x.S)\r\n            .toArray();\r\n\r\n        svcSel.map((i,idx)=>{\r\n            let el = linq.from<IAvailabilityService>(pr.elements).where(x=>x.metaname === i.id).firstOrDefault();\r\n            if(el) {\r\n                i.notbookableWith = el.excludes;\r\n            };\r\n        });\r\n\r\n        svcAll.map((i,idx)=>{\r\n            let add: boolean = true;\r\n            for(let a=0;a<svcSel.length;a++) {\r\n                if(svcSel[a].notbookableWith && svcSel[a].notbookableWith.indexOf(i.metaname)>=0){\r\n                    add=false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(add) {res.push(i.metaname);}\r\n        });\r\n\r\n        return res;\r\n    };    \r\n\r\n    public static getSub(brand: IBrand, id: string) : ISub  {\r\n        if(!id && brand.id === BrandKeys.vodafone) {\r\n            id = 'OS';  \r\n        };\r\n        let sub = linq.from<ISub>(brand.subs)\r\n            .where(x=>x.id === id)\r\n            .first();\r\n\r\n        return sub;\r\n    };    \r\n\r\n    public static getSubName(brand: IBrand, id: string, fallback: string ) : string  {\r\n        if(!id && brand.id === BrandKeys.vodafone) {\r\n            return fallback;\r\n        };\r\n\r\n        let sub = linq.from<ISub>(brand.subs)\r\n            .where(x=>x.id === id)\r\n            .firstOrDefault();\r\n\r\n        if(sub) {\r\n            return sub.name;\r\n        } else {\r\n            return MainTexts.na;\r\n        };\r\n    };        \r\n\r\n    public static getBrand(key: string) : IBrand {\r\n        return linq.from<IBrand>(StorageHelper.getBrands())\r\n            .where(x=> x.id === key) \r\n            .first();        \r\n    };\r\n};\r\n\r\nexport default OrderingHelper;","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { EControlType, EValueType } from '../../models/page/diverse';\r\nimport { IControlValue, IKeyText } from '../../models/page/interfaces';\r\nimport { IField } from '../../models/support/field';\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport * as val from '../../utils/validation/validationOption';\r\n\r\nexport interface ILControlProps {\r\n    type: EControlType;\r\n    valueType?: EValueType;\r\n    id?: string;\r\n    name?: string;\r\n    targetName?: string;\r\n\r\n    label?: string;\r\n    labelStyle?: string;\r\n    checked?: boolean;\r\n    disabled?: boolean;\r\n    visible?: boolean;\r\n    hint?: string;\r\n    hintObject?: any;\r\n    error?: string;\r\n    title?: string;\r\n    titleDesc?: string;\r\n    placeholder?: string;\r\n    autoComplete?: string;\r\n    maxLength?: number;\r\n    minLength?: number;\r\n\r\n    hideLabel?: boolean;\r\n    hideTitle?: boolean;\r\n    hideHint?: boolean;\r\n    options?: IKeyText[];\r\n    value?: any;\r\n    style?: string;\r\n\r\n    trimValue?: boolean;\r\n\r\n    icon?: string;\r\n    controlStlye?: string;\r\n\r\n    onChange?: any;\r\n    onClick?: any;\r\n    onEnter?: any;\r\n\r\n    validationOptions?: val.ValidationOption[];\r\n    preview?: boolean;\r\n\r\n    tooltip?: string;\r\n    isHtml?: boolean;\r\n    overflowEnabled?: boolean;\r\n    isChild?: boolean;\r\n    pasteDisabled?: boolean;\r\n};\r\n\r\nexport interface ILControlState {\r\n    changed: boolean;\r\n    disabled?: boolean;\r\n    hidden?: boolean;\r\n    error?: string;\r\n    visible?: boolean;\r\n};\r\n\r\nexport class LControl extends React.Component<ILControlProps, ILControlState> {\r\n    private value: IControlValue = { id: '', name: '', type: EControlType.undefined };\r\n    private rules: val.ValidationOption[] = [];\r\n\r\n    constructor(props: ILControlProps) {\r\n        super(props);\r\n\r\n        //this.onChange = this.onChange.bind(this);\r\n        this.disable = this.disable.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.hideShow = this.hideShow.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n        this.setError = this.setError.bind(this);\r\n\r\n        this.state = {\r\n            changed: false,\r\n            visible: this.props.visible != undefined ? this.props.visible : true,\r\n            error: this.props.error\r\n        };\r\n\r\n        this.value = {\r\n            id: this.props.id ? this.props.id : '',\r\n            name: this.props.name ? this.props.name : '',\r\n            type: this.props.type,\r\n            value: this.props.value,\r\n            checked: this.props.checked,\r\n            targetName: this.props.targetName\r\n        };\r\n\r\n        if (this.props.type === EControlType.checkbox) {\r\n            \r\n            this.value.value = this.value.checked ? 1 : 0;\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: ILControlProps) {\r\n        \r\n    };\r\n\r\n    public getKey(): string | undefined {\r\n        return this.props.name ? this.props.name : undefined;\r\n    };\r\n\r\n    public render() {\r\n        this.value = {\r\n            id: this.props.id ? this.props.id : '',\r\n            name: this.props.name ? this.props.name : '',\r\n            type: this.props.type,\r\n            value: this.props.value,\r\n            checked: this.props.checked\r\n        };\r\n\r\n        if (this.props.type === EControlType.checkbox) {\r\n            this.value.value = this.value.checked ? 1 : 0;\r\n        };\r\n\r\n        if (this.state.hidden) {\r\n            return <></>\r\n        };\r\n\r\n        if (this.props.type === EControlType.title) {\r\n            return this.renderTitle();\r\n        }\r\n        if (this.props.type === EControlType.hint) {\r\n            return this.renderHint();\r\n        }\r\n\r\n        let cssHint = \"hint\";\r\n        let hintText: any = this.props.hint;\r\n\r\n        if(this.props.hintObject) {\r\n            hintText = this.props.hintObject;\r\n        }\r\n\r\n        if (this.state.error ) {\r\n            cssHint += ' hint-error';\r\n            hintText = this.state.error;\r\n        }\r\n\r\n        //needed for birthday manual error\r\n        if (this.props.error) {\r\n            cssHint += ' hint-error';\r\n            hintText = this.props.error;\r\n        }\r\n\r\n        let id = 'oec';\r\n\r\n        if (this.props.id) {\r\n            id += this.props.id;\r\n        } else if (this.props.name) {\r\n            id += this.props.name;\r\n        } else {\r\n            id += Global.getUniqueId();\r\n        }\r\n\r\n        let css = \"oe-control \" + this.props.style;\r\n\r\n        if (!this.state.visible) {\r\n            css += ' dn';\r\n        };\r\n\r\n        return <div className={css} id={id}>\r\n            {this.props.hideTitle ? null : <div className=\"title\">{this.props.title ? this.props.title : '\\u00A0'}</div>}\r\n            {this.renderAuto()}\r\n            {\r\n                this.props.type === EControlType.info || this.props.hideHint || !hintText ? null : \r\n                <>\r\n                \r\n                <div className={cssHint}>\r\n                    {hintText}\r\n                </div>\r\n                <div className=\"spacer\"/>\r\n                </>\r\n            }\r\n        </div>\r\n    };\r\n\r\n    public getId() {\r\n        return this.props.id;\r\n    };\r\n\r\n    public hideShow(state: boolean) {\r\n        this.setState({ hidden: state });\r\n    };\r\n\r\n    public disable() {\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public getValue(): IControlValue {\r\n        return this.value;\r\n    };\r\n\r\n    public setValue(val: any) {\r\n        this.value.value = val;\r\n        this.value.targetName = this.props.targetName;\r\n        this.setState({changed: true});\r\n    };\r\n\r\n    public getValidationOptions() : val.ValidationOption[] {\r\n        return this.rules ? this.rules : [];\r\n    };\r\n\r\n    public setValidationOptions(value : val.ValidationOption[]) {\r\n        this.rules = value;\r\n    };    \r\n\r\n    public validate(field: IField | undefined,\r\n        showErrors: boolean): boolean {\r\n        \r\n        //reset due dynamic rules in existing customer search\r\n        if(this.rules.length > 0) {\r\n            this.rules = [];\r\n        };\r\n\r\n        if (this.rules.length === 0) {\r\n            if (this.props.validationOptions) {\r\n                this.props.validationOptions.map((i, idx) => {\r\n                    this.rules.push(i);\r\n                });\r\n            }\r\n\r\n            if (field && field.config.length > 0) {\r\n                field.config.map((i, idx) => {\r\n                    i.rules.map((ii, iidx) => {\r\n                        this.rules.push(new val.ValidationOption(ii));\r\n                    });\r\n                });\r\n            };\r\n        }\r\n\r\n        if (this.rules.length > 0) {\r\n            for (let i = 0; i < this.rules.length; i++) {\r\n                let msg: string = this.rules[i].isValid(this);\r\n                if (msg && msg.length > 0) {\r\n                    if (showErrors) {\r\n                        this.setState({ error: msg });\r\n                    }\r\n                    return false;\r\n                }\r\n            };\r\n        };\r\n\r\n       \r\n        this.setState({ error: '' });\r\n\r\n        return true;\r\n    };\r\n\r\n    public setError(message: string) {    \r\n        this.setState({ error: message });\r\n    };\r\n\r\n    private renderAuto(): JSX.Element {\r\n        let ctrl: JSX.Element = <></>;\r\n\r\n        if (this.props.type === EControlType.password) {\r\n            ctrl = this.renderPassword();\r\n        } else if (this.props.type === EControlType.text) {\r\n            ctrl = this.renderTextbox();\r\n        } else if (this.props.type === EControlType.radio) {\r\n            ctrl = this.renderRadio();\r\n        } else if (this.props.type === EControlType.checkbox) {\r\n            ctrl = this.renderCheckbox();\r\n        } else if (this.props.type === EControlType.dropdown) {\r\n            ctrl = this.renderDropDown();\r\n        } else if (this.props.type === EControlType.info) {\r\n            ctrl = this.renderInfo();\r\n        } else if (this.props.type === EControlType.toggle) {\r\n            ctrl = this.renderToggle(); \r\n        }\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderHint(): JSX.Element {\r\n        const additionalClasses = this.props.labelStyle || '';\r\n        return <div className=\"oe-control\">\r\n            <div className={\"hint hint-huge \" + additionalClasses} dangerouslySetInnerHTML={{ __html: this.props.label ? this.props.label : '' }} />\r\n        </div>\r\n    };\r\n\r\n    private renderInfo(): JSX.Element {\r\n        let css: string = 'info noov';\r\n\r\n        if(this.props.overflowEnabled) {\r\n            css = 'info';\r\n        };\r\n \r\n        if (this.props.style) {\r\n            css += ' ' + this.props.style;\r\n        }\r\n        return <div className=\"oe-info\">\r\n            <div className={css} title={this.props.label} dangerouslySetInnerHTML={{ __html: (this.props.label ? this.props.label : '')}}>\r\n                {/* {\r\n                    this.props.isHtml ? \r\n                        <div dangerouslySetInnerHTML={{ __html: (this.props.label ? this.props.label : '')}}/> \r\n                        : this.props.label\r\n                } */}\r\n            </div>\r\n        </div>\r\n    };\r\n\r\n    private renderTitle(): JSX.Element {\r\n        let css: string = 'title';\r\n        if (this.props.style) {\r\n            css += ' ' + this.props.style;\r\n        }\r\n        return <div className=\"oe-control\">\r\n            <div className={css}>\r\n                <div className=\"text\">{this.props.title}</div>\r\n                {this.props.titleDesc ? <div className=\"desc\">{this.props.titleDesc}</div> : null}\r\n            </div>\r\n        </div>\r\n    };\r\n\r\n    private renderPassword(): JSX.Element {\r\n\r\n        return <div className=\"input-group\">\r\n            <input type=\"password\" onChange={this.onChange}\r\n                className=\"form-control\"\r\n                id={this.props.id}\r\n                name={this.props.name}\r\n                value={this.props.value}\r\n                onKeyDown={this.onKeyDown}\r\n                placeholder={this.props.placeholder ? this.props.placeholder : ''}\r\n                autoComplete={this.props.autoComplete ? this.props.autoComplete : ''} />\r\n\r\n            {\r\n                this.props.hideLabel ? <></> :\r\n                    <>\r\n                        <span className=\"bar\"></span>\r\n                        <label className=\"oe-label\">{this.props.label}</label>\r\n                    </>\r\n            }\r\n        </div>;\r\n    };\r\n\r\n    private renderTextbox(): JSX.Element {\r\n        //console.log('render text:' + this.props.id + '=' + this.props.disabled);\r\n        let ctrl =\r\n            this.props.preview ?\r\n                <LControl id={this.props.id} type={EControlType.info} label={this.props.value} title={this.props.label} />\r\n                : (\r\n                    <div className=\"input-group\">\r\n                        <input type=\"text\"\r\n                            id={this.props.id}\r\n                            value={this.props.value}\r\n                            name={this.props.name}\r\n                            disabled={this.props.disabled}\r\n                            maxLength = {this.props.maxLength? this.props.maxLength: undefined}\r\n                            minLength = {this.props.minLength? this.props.minLength: undefined}\r\n                            className=\"form-control\"\r\n                            placeholder={this.props.placeholder}\r\n                            onKeyDown={this.onKeyDown}\r\n                            onPaste={(e)=>{ \r\n                                if(this.props.pasteDisabled) {\r\n                                    e.preventDefault(); \r\n                                    return false;\r\n                                }\r\n                            }}\r\n                            autoComplete={this.props.autoComplete ? this.props.autoComplete : ''}\r\n                            onChange={this.onChange} \r\n                            onClick={()=>{ if(this.props.onClick) {this.props.onClick(this);}}}/>\r\n\r\n                        {\r\n                            this.props.hideLabel ? <></> :\r\n                                <>\r\n                                    <span className=\"bar\"></span>\r\n                                    <label className=\"oe-label\">{this.props.label}</label>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderToggle(): JSX.Element {\r\n        let css: string = 'oe-toggle';\r\n        if (this.props.disabled) {\r\n            css += ' disabled';\r\n        }\r\n\r\n        let ctrl = (\r\n            <div className={css} >\r\n                <input type=\"checkbox\" className=\"oe-checkbox\" id={this.props.id} name={this.props.name} checked={this.props.checked} onChange={this.onChange} />\r\n                <label htmlFor={this.props.id}></label>\r\n                <span className={this.props.labelStyle}>{this.props.label}</span>\r\n                <div className=\"oe-border\" />\r\n            </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderCheckbox(): JSX.Element {\r\n        let css: string = 'oe-checkbox';\r\n\r\n        if (this.props.disabled) {\r\n            css += ' disabled';\r\n        }\r\n        \r\n        let ctrl = \r\n            <div className={css}>\r\n                {\r\n                    this.props.tooltip ? \r\n                    <ReactTooltip place=\"top\" type=\"light\" effect=\"solid\" id={'ttctrl' + this.props.id}>\r\n                        <div dangerouslySetInnerHTML={{__html: this.props.tooltip}}/>\r\n                    </ReactTooltip>\r\n                    : null\r\n                }\r\n                \r\n                <input type=\"checkbox\" className=\"oe-checkbox\" \r\n                    id={this.props.id} \r\n                    name={this.props.name} \r\n                    checked={this.props.checked} \r\n                    //onClick={this.onChange}\r\n                    onChange={this.onChange} \r\n                    />\r\n                <label htmlFor={this.props.id}>\r\n                    <span className={this.props.labelStyle} data-tip={this.props.tooltip} data-for={'ttctrl' + this.props.id} dangerouslySetInnerHTML={{__html: this.props.label ? this.props.label : '' }} />\r\n                </label>\r\n                <div className=\"oe-border\" />\r\n            </div>;\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderRadio(): JSX.Element {\r\n        let ctrl = (\r\n            <div className=\"oe-radio\">\r\n                <input type=\"radio\" id={this.props.id} name={this.props.name} checked={this.props.checked} onClick={this.onChange} onChange={this.onChange} />\r\n                <label htmlFor={this.props.id}>\r\n                    <span className={this.props.labelStyle}>{this.props.label}</span>\r\n                </label>\r\n                <div className=\"oe-border\" />\r\n            </div>\r\n        );\r\n        return ctrl;\r\n    };\r\n\r\n    private renderDropDown(): JSX.Element {\r\n        let op: IKeyText[] = this.props.options ? this.props.options : new Array<IKeyText>();\r\n\r\n        let val:IKeyText|undefined = this.props.options ? \r\n            linq.from<IKeyText>(this.props.options).where(x=>x.key == this.props.value).firstOrDefault() : undefined;\r\n\r\n        let ctrl = (\r\n            this.props.preview ?\r\n                <LControl id={this.props.id} type={EControlType.info} label={val ? val.text : MainTexts.na} title={this.props.label} />\r\n                :            \r\n                <div className=\"oe-select\">\r\n                    <select name={this.props.name}\r\n                        defaultValue={this.props.value}\r\n                        id={this.props.id} className=\"selectbox\" onChange={this.onChange}>\r\n                        {op.map((i, idx) => \r\n                            <option selected={i.key === this.props.value} value={i.key} key={idx}>{i.text}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private onKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\r\n        if (e.key == \"Enter\") {\r\n            if (this.props.onEnter) {\r\n\r\n                this.props.onEnter(e);\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    private onChange = (e: any) => {\r\n        if (this.props.disabled) {\r\n            return;\r\n        };\r\n\r\n        let val: IControlValue = {\r\n            id: this.props.id ? this.props.id : '',\r\n            name: this.props.name ? this.props.name : '',\r\n            type: this.props.type,\r\n            targetName: this.props.targetName\r\n        };\r\n\r\n        if (this.props.type === EControlType.checkbox || this.props.type === EControlType.radio || this.props.type ===EControlType.toggle) {\r\n            val.value = e.target.checked ? \"1\" : \"0\";\r\n            val.checked = e.target.checked;\r\n        } else {\r\n            val.value = e.target.value;\r\n        };\r\n\r\n        if(this.props.trimValue) {\r\n            val.value = val.value.toString().trim();\r\n        };\r\n\r\n        if(this.props.valueType) {\r\n            if(this.props.valueType == EValueType.numberInt) {\r\n                val.value = Number.parseInt(val.value);\r\n            }\r\n        };\r\n\r\n        this.value = val;\r\n\r\n        if (this.rules.length > 0) {\r\n            if (!this.validate(undefined, true)) { }\r\n        };\r\n\r\n        if (this.props && this.props.onChange) {\r\n            this.props.onChange(val); //e.target);\r\n            //e.stopPropagation();\r\n            //e.preventDefault();\r\n        };\r\n    };\r\n};\r\n\r\nexport default LControl;","import * as React from 'react';\r\n\r\nexport class LClear extends React.Component {\r\n    public render() {\r\n        return <div className=\"clear\"></div>\r\n    }\r\n};\r\n\r\nexport default LClear;","import linq from 'linq';\r\nimport * as i from \"../../interfaces/index\";\r\nimport { IApiStep } from \"../../interfaces/index\";\r\nimport { BrandKeys, ConstantKeys, Defaults } from \"../../utils/Defaults\";\r\nimport Global from \"../../utils/Global\";\r\nimport { MainTexts, OrderingTexts } from \"../../utils/messages\";\r\nimport StorageHelper from \"../../utils/storage\";\r\nimport { IAnswerInfo } from \"../global/answerInfo\";\r\nimport { EActivationTime, EPortationType, ERequestStatus, ERequestType } from \"../page/diverse\";\r\nimport { ProductTree, TreeItem } from \"../support/tree\";\r\nimport Availability, { AvailabilityProduct, IAvailabilityResultItem, IAvailabilityService } from \"./availability\";\r\nimport IBrand from \"./brand\";\r\nimport { ICustomer } from './customer';\r\nimport { ICustomerAction } from './customerAction';\r\nimport { IOrderData } from \"./data\";\r\nimport IFee from './fee';\r\nimport { EActivationFileType, EActivationType, ECreditDebitType, EServiceType } from \"./order\";\r\nimport IProduct from \"./product\";\r\nimport IService from \"./service\";\r\nimport ISub from \"./sub\";\r\n\r\nexport class ActivationPrice {\r\n    //priceSub?: number;\r\n    //priceOptions: number=0;\r\n    //pricePromotions: number=0;\r\n\r\n    monthlyFeeProduct: number = 0;\r\n    monthlyFeeSub: number = 0;\r\n    monthlyFeeOptions: number = 0;\r\n\r\n    activationFeeProduct: number = 0;\r\n    activationFeeSub: number = 0;\r\n    activationFeeOptions: number = 0;\r\n\r\n    public add(pr: ActivationPrice) {\r\n        this.monthlyFeeProduct += pr.monthlyFeeProduct;\r\n        this.monthlyFeeSub += pr.monthlyFeeSub;\r\n        this.activationFeeProduct += pr.activationFeeProduct;\r\n        this.activationFeeSub += pr.activationFeeSub;\r\n        this.monthlyFeeOptions += pr.monthlyFeeOptions;\r\n    };\r\n\r\n    public getActivationFee() {\r\n        var fee: IFee = {\r\n            price: (this.activationFeeSub || 0) + (this.activationFeeProduct || 0) + (this.activationFeeOptions || 0),\r\n            unit: MainTexts.euro\r\n        };\r\n\r\n        return fee;\r\n    };\r\n\r\n    public getOptionsFeeMonthly() {\r\n        var fee: IFee = {\r\n            price: (this.monthlyFeeOptions || 0),\r\n            unit: MainTexts.euro\r\n        };\r\n\r\n        return fee;\r\n    };\r\n\r\n    public getMonthlyFee() {\r\n        var fee: IFee = {\r\n            price: (this.monthlyFeeProduct || 0) + (this.monthlyFeeOptions || 0) + (this.monthlyFeeSub || 0),\r\n            unit: MainTexts.euro\r\n        };\r\n\r\n        return fee;\r\n    };\r\n};\r\n\r\nexport class ActivationWrapper {\r\n    public items: ActivationHelper[] = [];\r\n    public priceTotal: ActivationPrice = new ActivationPrice();\r\n\r\n    constructor(data: IOrderData) {\r\n        let br = StorageHelper.getBrands();\r\n        data.activations.map((i) => {\r\n            let b = linq.from<IBrand>(br).where(x => x.id == i.brandKey).first();\r\n            let ah = new ActivationHelper(i, b, data.customer);\r\n            this.priceTotal.add(ah.priceTotal);\r\n            this.items.push(ah);\r\n        });\r\n    };\r\n\r\n    getMonthlyFee(): IFee {\r\n        let pr: IFee = {\r\n            price: 0,\r\n            unit: MainTexts.euro\r\n        };\r\n\r\n        this.items.map((i)=>{\r\n            pr.price += (i.getMonthlyFee().price);\r\n        });\r\n\r\n        return pr;\r\n    };\r\n \r\n    getActivationFee(): IFee {\r\n        let pr: IFee = {\r\n            price: 0,\r\n            unit: MainTexts.euro\r\n        };\r\n\r\n        this.items.map((i)=>{\r\n            pr.price += (i.getActivationFee().price);\r\n        });\r\n\r\n        return pr;\r\n    };\r\n\r\n    getOptionMonthlyFee(): IFee {\r\n        let pr: IFee = {\r\n            price: 0,\r\n            unit: MainTexts.euro\r\n        };\r\n\r\n        this.items.map((i)=>{\r\n            pr.price += (i.getOptionMonthlyFee().price);\r\n        });\r\n\r\n        return pr;\r\n    };\r\n\r\n    getActivationByIndexes(act: number, inner: number) : ActivationUI {\r\n        return this.items[act].items[inner];\r\n    };\r\n};\r\n\r\n//** activation helper to handle more than one activation */\r\nexport class ActivationHelper {\r\n    public items: ActivationUI[] = [];\r\n    public activation: IActivation;\r\n    private brand: IBrand;\r\n\r\n    private customer: ICustomer;    \r\n    public priceTotal: ActivationPrice = new ActivationPrice();\r\n\r\n    constructor(act: IActivation, \r\n        brand: IBrand,\r\n        customer: ICustomer) {\r\n        this.brand = brand;\r\n        this.customer = customer;\r\n        this.activation = act;\r\n\r\n        if (act.selection.children.length > 0 && brand.id == BrandKeys.kabel) {\r\n            act.selection.children.map((i) => {\r\n                let a = IActivation.fromSelection(act.brandKey, i)\r\n                a.activationType = act.activationType;\r\n                a.activationDate = act.activationDate;\r\n                a.contractId = act.contractId;\r\n                a.processStatus = act.processStatus;\r\n\r\n                this.add(ActivationUI.fromActivation(a, brand, customer));\r\n            });\r\n        } else {\r\n            this.add(ActivationUI.fromActivation(act, brand, customer));\r\n        }\r\n\r\n        this.init();\r\n\r\n        this.calculatePrices();\r\n    };\r\n\r\n    getMonthlyFee(): IFee {\r\n        let pr: IFee = {\r\n            price: 0,\r\n            unit: MainTexts.euro\r\n        };\r\n\r\n        this.items.map((i)=>{\r\n            pr.price += (i.getMonthlyFee().price);\r\n        });\r\n\r\n        return pr;\r\n    };\r\n\r\n    getOptionMonthlyFee(): IFee {\r\n        let pr: IFee = {\r\n            price: 0,\r\n            unit: MainTexts.euro\r\n        };\r\n\r\n        this.items.map((i)=>{\r\n            pr.price += (i.getOptionMonthlyFee().price);\r\n        });\r\n\r\n        return pr;\r\n    };\r\n\r\n    getActivationFee(): IFee {\r\n        let pr: IFee = {\r\n            price: 0,\r\n            unit: MainTexts.euro\r\n        };\r\n\r\n        this.items.map((i)=>{\r\n            pr.price += (i.getActivationFee().price);\r\n        });\r\n\r\n        return pr;\r\n    };\r\n\r\n    hasMultiple() {\r\n        return this.items && this.items.length > 1;\r\n    };\r\n\r\n    private init() {\r\n        this.items.map((i:any) => {\r\n            i.productUI = linq.from<ISub>(this.brand.products)\r\n                .where(x => x.id === i.productId)\r\n                .select(x => x.name)\r\n                .firstOrDefault();\r\n\r\n            i.subUI = linq.from<ISub>(this.brand.subs)\r\n                .where(x => x.id === i.sub)\r\n                .select(x => x.name)\r\n                .firstOrDefault();\r\n\r\n            i.promotionsUI = linq.from<string>(i.services)\r\n                .join(this.brand.services, a => a, s => s.id, (a, s) => { return { A: a, S: s } })\r\n                .where(x => x.S.type === EServiceType.promotion)\r\n                .select(x => x.S.name)\r\n                .toArray()\r\n                .join(', ');\r\n\r\n            i.optionsUI = linq.from<string>(i.services)\r\n                .join(this.brand.services, a => a, s => s.id, (a, s) => { return { A: a, S: s } })\r\n                .where(x => x.S.type === EServiceType.option)\r\n                .select(x => x.S.name)\r\n                .toArray()\r\n                .join(', ');\r\n\r\n            i.activationDateTitleUI = i.activationType === EActivationType.existingCustomer ? OrderingTexts.prolongationDate :\r\n                i.activationType === EActivationType.actDefault ? OrderingTexts.activationDate : OrderingTexts.portationDate;\r\n        })\r\n    };\r\n\r\n    private add(act: ActivationUI) {\r\n        this.items.push(act);\r\n    };\r\n\r\n    private calculatePrices() {\r\n        this.items.map((a) => {\r\n            //this.calculateSingle(a)\r\n            this.priceTotal.add(a.price);\r\n        });\r\n    };\r\n\r\n    private getOptionPriceMonthly(act: IActivation): IFee {\r\n        let res: number = 0;\r\n        for (let i = 0; i < act.services.length; i++) {\r\n            let opt = linq.from(this.brand.services)\r\n                .where(x => x.id === act.services[i] && x.type === EServiceType.option)\r\n                .firstOrDefault();\r\n\r\n            if (opt) {\r\n                if (this.brand.id === BrandKeys.kabel && opt.id.indexOf('bereitstellungsentgelt') >= 0) {\r\n                    continue;\r\n                };\r\n\r\n                if (opt && opt.monthlyFee) {\r\n                    res += opt.monthlyFee.price;\r\n                };\r\n            };\r\n\r\n            //2020-06-18\r\n            //special case - otelo, option is delivered as promotions\r\n            //if monthlyfee then add it to the option price\r\n            if (act.brandKey === BrandKeys.otelo) {\r\n                let prom = linq.from(this.brand.services)\r\n                    .where(x => x.id === act.services[i] && x.type === EServiceType.promotion)\r\n                    .firstOrDefault();\r\n\r\n                if (prom && prom.monthlyFee) {\r\n                    res += prom.monthlyFee.price;\r\n                };\r\n            };\r\n        };\r\n\r\n        let f: IFee = {\r\n            price: res,\r\n            unit: Defaults.currencyUnit\r\n        };\r\n\r\n        return f;\r\n    };\r\n\r\n    private getOptionPriceActivation(act: IActivation): IFee {\r\n        let res: number = 0;\r\n        for (let i = 0; i < act.services.length; i++) {\r\n            let oid = act.getOptionUniqueId(act.services[i]);\r\n            let opt = linq.from(this.brand.services)\r\n                .where(x => x.id === oid && x.type === EServiceType.option)\r\n                .firstOrDefault();\r\n\r\n            if (opt) {\r\n                if (act.brandKey === BrandKeys.kabel && opt.id.indexOf('bereitstellungsentgelt') >= 0) {\r\n                    continue;\r\n                };\r\n\r\n                if (opt && opt.activationFee) {\r\n                    res += opt.activationFee.price;\r\n                };\r\n            };\r\n        };\r\n\r\n        let f: IFee = {\r\n            price: res,\r\n            unit: Defaults.currencyUnit\r\n        };\r\n\r\n        return f;\r\n    };\r\n\r\n    private getProductPrice(act: IActivation, product: IProduct): IFee {\r\n        let fee: IFee = JSON.parse(JSON.stringify(product.monthlyFee));\r\n        if (act.brandKey === BrandKeys.vodafone) {\r\n            if (act.services.indexOf('SOHOV15_1') >= 0) {\r\n                fee.price = fee.price * 0.9;\r\n            };\r\n        };\r\n\r\n        return fee;\r\n    };\r\n\r\n    private getPromoPrice(act: IActivation) {\r\n        let res: number = 0;\r\n        for (let i = 0; i < act.services.length; i++) {\r\n            let opt = linq.from(this.brand.services)\r\n                .where(x => x.id === act.services[i] && x.type === EServiceType.promotion)\r\n                .firstOrDefault();\r\n            if (opt && opt.activationFee) {\r\n                res += opt.activationFee.price;\r\n            };\r\n        }\r\n\r\n        let f: IFee = {\r\n            price: res,\r\n            unit: Defaults.currencyUnit\r\n        };\r\n\r\n        return f;\r\n    };\r\n};\r\n\r\nexport interface IActivationFile {\r\n    id: string;\r\n    OrderId: string;\r\n    Name: string;\r\n    Type: EActivationFileType;\r\n};\r\n\r\n//** the base activation object */\r\nexport class IActivation {\r\n    public id: string = Global.getUniqueId();\r\n    public idx: number = 0;\r\n    public processId: string = '';\r\n    public catKey: string = '';\r\n    public brandKey: string = '';\r\n    public familyId: number = 0;\r\n    public sub: string = '';\r\n    public productId: string = '';\r\n    public services: string[] = [];\r\n    public servicesRemove: string[] = [];\r\n    // public activationDate: Date = new Date();\r\n    public msisdn: string = '';\r\n    public code: string = '';\r\n    public imei: string = '';\r\n    public barcode: string = '';\r\n    public contractId: string = '';\r\n    public activationDate: Date = Global.convertUTCDateToLocalDate(new Date());\r\n    public activationTime: EActivationTime = EActivationTime.now;\r\n    public creditDebitType: ECreditDebitType = ECreditDebitType.postpaid;\r\n    public activationType: EActivationType = EActivationType.actDefault;\r\n    public availability: Availability = new Availability();\r\n    public portationType: EPortationType = EPortationType.undefined;\r\n    public portationDate: Date = new Date();\r\n    public availabilityId: string = '';\r\n    public inCurrent: boolean = false;\r\n    public draftId?: string = '';\r\n\r\n    //public nbaId?: number;\r\n\r\n    public cart: IAvailabilityResultItem[] = [];\r\n\r\n    //cable multiple\r\n    public selection: TreeItem = new TreeItem('root');\r\n\r\n    public additional: boolean = false;\r\n    //** used for otelo to mark an \"weiteren Vertrag\" */\r\n    public nextContract: boolean = false;\r\n    public customerId: string = '';\r\n    public customerPassword: string = '';\r\n\r\n    public isSimulation: boolean = false;\r\n\r\n    public price: ActivationPrice = new ActivationPrice();\r\n \r\n    public processStatus: i.IProcessStatus = { steps: [] };\r\n\r\n    public action?: ICustomerAction;\r\n\r\n    public files?: IActivationFile[];\r\n\r\n    constructor(brand: string) {\r\n        this.brandKey = brand;\r\n        this.validateService = this.validateService.bind(this);\r\n        this.getActivationDate = this.getActivationDate.bind(this);\r\n    };\r\n\r\n    isMultiple = () =>{\r\n        if(this.selection && this.selection.children.length > 1) {\r\n            return true;\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    isNba = () =>{\r\n        return this.action && this.action.nbaId ? true : false;\r\n    };\r\n\r\n    getFile = (type: EActivationFileType) => {\r\n        if(!this.files) { return undefined; }\r\n\r\n        return linq.from<IActivationFile>(this.files).where(x=>x.Type == type).firstOrDefault();\r\n    };\r\n\r\n    hasBoniFile = () => {\r\n        return this.getFile(EActivationFileType.boni) != undefined;\r\n    }; \r\n\r\n    hasContractFile = () => {\r\n        return this.getFile(EActivationFileType.contractMain) != undefined;\r\n    }; \r\n\r\n    public static createInstance(brand: string,\r\n        processId: string,\r\n        catKey: string): IActivation {\r\n        let act: IActivation = new IActivation(brand);\r\n        act.activationType = EActivationType.actDefault;\r\n        act.portationType = EPortationType.undefined;\r\n        act.processId = processId;\r\n        act.catKey = catKey;\r\n        act.id = Global.getUniqueId();\r\n        return act;\r\n    };\r\n\r\n    //**used to create a new Activation object from selection.TreeItem */\r\n    public static fromSelection(brandKey: string, ti: TreeItem): IActivation {\r\n        let a = new IActivation(brandKey);\r\n        a.productId = ti.id;\r\n\r\n        let br = StorageHelper.getAvailabilityForBrand(brandKey);\r\n        \r\n        let pr = linq.from<AvailabilityProduct>(br.products).where(x => x.productId == ti.id).firstOrDefault();\r\n\r\n        let sub = linq.from<TreeItem>(ti.children)\r\n            .join(pr!.elements, i => i.id, p => p.metaname, (i, p) => {\r\n                return { I: i, P: p };\r\n            })\r\n            .where(x => x.P.type == ConstantKeys.devices)\r\n            .firstOrDefault();\r\n\r\n        if (sub) {\r\n            a.sub = sub.P.metaname;\r\n\r\n            a.services = linq.from<TreeItem>(ti.children)\r\n                .join(pr!.elements, i => i.id, p => p.metaname, (i, p) => {\r\n                    return { I: i, P: p };\r\n                })\r\n                .where(x => x.P.type != ConstantKeys.devices)\r\n                .select(x => x.I.id)\r\n                .toArray();\r\n        }\r\n\r\n        return a;\r\n    };\r\n\r\n    public static clone(a: IActivation) {\r\n        let act = JSON.parse(JSON.stringify(a));\r\n        return IActivation.ensure(act);\r\n    };\r\n\r\n    public static ensure(a: IActivation) {\r\n        let aaa:IActivation = Object.assign(new IActivation(a.brandKey), a);\r\n        aaa.selection = TreeItem.ensure(aaa.selection);\r\n        return aaa;\r\n    };\r\n\r\n    public updateSelection(sel: TreeItem) {\r\n        this.selection = sel;\r\n    };\r\n\r\n    public getProductsTree() : ProductTree[] {\r\n        let ti = new ProductTree(this.brandKey, this.catKey);\r\n\r\n        ti.familyId = this.familyId;\r\n        ti.id = this.productId;\r\n        ti.brand = this.brandKey;\r\n\r\n        if(this.brandKey == BrandKeys.kabel) {\r\n            let res:ProductTree[] = [];\r\n            let br = StorageHelper.getBrand(this.brandKey);\r\n\r\n            this.selection.children.map((i, idx)=>{\r\n                let p = linq.from<IProduct>(br.products).where(x=>x.id == i.id).first();\r\n\r\n                ti = new ProductTree(this.brandKey, p.catKey);\r\n\r\n                ti.familyId = p.familyId;\r\n                ti.id = p.id;\r\n                ti.brand = this.brandKey;\r\n\r\n                let a = ProductTree.FromTree(i);\r\n                a.idx = idx;\r\n                ti.children.push(a);\r\n\r\n                res.push(ti);\r\n            });\r\n\r\n            return res;\r\n        } else {\r\n            let sub = new ProductTree(this.sub, '');\r\n\r\n            this.services.map((i)=>{\r\n                sub.add(i);\r\n            });\r\n\r\n            ti.addChildren([sub]);\r\n        }\r\n\r\n        return [ti];\r\n    };\r\n\r\n    public addRemoveProduct(id: string) {\r\n        if (this.brandKey != BrandKeys.kabel) {\r\n            this.selection = new TreeItem('root');\r\n        };\r\n\r\n        //remove products form the same category\r\n        let insel = this.selection.getChildrenIds();\r\n        let currentInSel = insel.indexOf(id);\r\n        let thisCat = Global.categoryWrapper.getCategoryByProduct(id);\r\n        insel.map((i) => {\r\n            let c = Global.categoryWrapper.getCategoryByProduct(i);\r\n\r\n            if (c == thisCat) {\r\n                //console.log('remove cat:' + thisCat + ' / ' + c + '   ' + i);\r\n                this.selection.remove(i);\r\n            };\r\n        });\r\n       \r\n        //console.log('proceed');\r\n        if (currentInSel == -1) {\r\n            //console.log('insel add ' + thisCat + ':' + id);\r\n            this.selection.addOrRemove(id);\r\n        };\r\n\r\n        this.productId = id;\r\n    };\r\n\r\n    public addRemoveService(id: string, productId: string | undefined) {\r\n        if(this.hasService(id, productId)) {\r\n            this.removeService(id, undefined);\r\n        } else {\r\n            this.addService(id, productId);\r\n        };\r\n    };\r\n\r\n    public addRemoveServiceRemove(id: string, productId: string | undefined) {\r\n        let i = this.servicesRemove.indexOf(id);\r\n        if (i >= 0) {\r\n            this.servicesRemove.splice(i, 1);\r\n        } else {\r\n            this.servicesRemove.push(id);\r\n        };\r\n        StorageHelper.updateActivation(this);\r\n    };\r\n\r\n    public removeService(service: string, productId: string | undefined) {\r\n        let i = this.services.indexOf(service);\r\n        if (i >= 0) {\r\n            this.services.splice(i, 1);\r\n            StorageHelper.updateActivation(this);\r\n        };\r\n    };\r\n\r\n    public addService(service: string, productId: string  | undefined) {\r\n        if(this.hasService(service, productId)) { return; };\r\n\r\n        if(this.brandKey == BrandKeys.kabel) {\r\n            var p = linq.from<TreeItem>(this.selection.children).where(x=>x.id == productId).firstOrDefault();\r\n\r\n            if(p) {\r\n                p.addOrRemove(service);\r\n            }\r\n        } else {\r\n            this.services.push(service);\r\n        }\r\n        \r\n        StorageHelper.updateActivation(this);\r\n    };\r\n\r\n    public reset() {\r\n        this.productId = this.sub = '';\r\n        this.services = [];\r\n        this.servicesRemove = [];\r\n        this.selection.reset();\r\n    };\r\n\r\n    public getProducts() {\r\n        return this.selection.getChildrenIds();\r\n    };\r\n\r\n    public hasProduct(id: string) {\r\n        if(this.brandKey == BrandKeys.kabel) {\r\n            return this.selection.getChildrenIds().indexOf(id) >= 0;\r\n        } else {\r\n            return this.productId == id;\r\n        };\r\n    };\r\n\r\n    public getSubs(productId: string) {\r\n        let el = this.selection.find(productId);\r\n        return el!.getChildrenIds();\r\n        //return this.subs.join(';');\r\n    };\r\n\r\n    public addRemoveSub(productId: string, id: string) {\r\n        let el = this.selection.find(productId);\r\n        if (this.brandKey != BrandKeys.kabel) {\r\n            this.selection.children = [];\r\n        }\r\n\r\n        this.sub = id;\r\n        el!.addOrRemove(id);\r\n    };\r\n\r\n    public isActivated(): boolean {\r\n        if (!this.processStatus || !this.processStatus.steps) { return false; }\r\n\r\n        let s = this.getStep(ERequestType.activation);\r\n\r\n        if (s) {\r\n            return s.status === ERequestStatus.done;\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    public isTimedout(): boolean {\r\n        if (!this.processStatus || !this.processStatus.steps) { return false; }\r\n\r\n        let s = this.getStep(ERequestType.activation);\r\n\r\n        if (s) {\r\n            return s.status === ERequestStatus.timeout;\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    public getProductPrice(product: IProduct): IFee {\r\n        let fee: IFee = JSON.parse(JSON.stringify(product.monthlyFee));\r\n        if (this.brandKey === BrandKeys.vodafone) {\r\n            if (this.services.indexOf('SOHOV15_1') >= 0) {\r\n                fee.price = fee.price * 0.9;\r\n            };\r\n        };\r\n\r\n        let found: boolean = false;\r\n\r\n\r\n        return fee;\r\n    };\r\n\r\n    public getMonthlyFee(): IFee {\r\n        let br = StorageHelper.getBrand(this.brandKey);\r\n\r\n        var prBrand = linq.from<IProduct>(br.products).where(x => x.id === this.productId).first();\r\n        var sub = linq.from<ISub>(br.subs).where(x => x.id === this.sub).firstOrDefault();\r\n\r\n        let pr: IFee = {\r\n            price: prBrand.monthlyFee.price,\r\n            unit: MainTexts.euro\r\n        };\r\n\r\n        if (sub && sub.monthlyFee) {\r\n            pr.price += sub.monthlyFee.price;\r\n        };\r\n\r\n        return pr;\r\n    };\r\n\r\n    public activateManually() {\r\n        if (!this.processStatus || !this.processStatus.steps) { return false; }\r\n\r\n        this.processStatus.steps.forEach((i, idx) => {\r\n            i.status = ERequestStatus.done;\r\n        });\r\n\r\n        StorageHelper.updateActivation(this);\r\n    };\r\n\r\n    public isPrinted(): boolean {\r\n        if (!this.processStatus || !this.processStatus.steps) { return false; }\r\n\r\n        let s = this.getStep(ERequestType.print);\r\n\r\n        if (s) {\r\n            return s.status === ERequestStatus.done;\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    public getStep(type: ERequestType): i.IApiStep {\r\n        //console.log('getstep');\r\n        //console.log(this.processStatus); \r\n\r\n        if (!this.processStatus) {\r\n            this.processStatus = { steps: [] };\r\n        }\r\n\r\n        var st = linq.from<i.IApiStep | any>(this.processStatus.steps)\r\n            .where(x => x.type == type)\r\n            .firstOrDefault();\r\n\r\n        return st;\r\n    };\r\n\r\n    public resetSteps(type: ERequestType) {\r\n        let step = this.getStep(type);\r\n\r\n        if (!step) { return; }\r\n\r\n        step.status = ERequestStatus.undefined;\r\n        step.message = '';\r\n\r\n        this.updateStep(step);\r\n    };\r\n\r\n    public updateStep(step: i.IApiStep) {\r\n        var st = linq.from<i.IApiStep | any>(this.processStatus.steps)\r\n            .where(x => x.type == step.type)\r\n            .firstOrDefault();\r\n\r\n        this.processStatus.steps[this.processStatus.steps.indexOf(st)] = step;\r\n\r\n        StorageHelper.updateActivation(this);\r\n    };\r\n\r\n    public updateSteps(steps: i.IApiStep[]) {\r\n        this.processStatus.steps = steps;\r\n\r\n        StorageHelper.updateActivation(this);\r\n    };\r\n\r\n    public isDone(): boolean {\r\n        if (this.processStatus && this.processStatus.steps && this.processStatus.steps.length > 0) {\r\n            var done = linq.from<i.IApiStep>(this.processStatus.steps)\r\n                .where(x => x.status === ERequestStatus.done)\r\n                .count();\r\n\r\n            return done == this.processStatus.steps.length;\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    public resetSeetedsubsAndServices() {\r\n        this.sub = '';\r\n        this.services = [];\r\n        this.servicesRemove = [];\r\n    };\r\n\r\n    public isWithHardware(): boolean {\r\n        // some kabel products can be booked without hardware e.g. Apps, so this\r\n        // rule applies only for kabel \r\n        if (this.brandKey != BrandKeys.kabel) {\r\n            return true;\r\n        };\r\n\r\n        let br = linq.from<IBrand>(Global.categoryWrapper.bra).where(x => x.id == this.brandKey).first();\r\n\r\n        let p = linq.from<IProduct>(br.products).where(x => x.id == this.productId).first();\r\n\r\n        if (!p.subs || p.subs.length == 0) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        };\r\n    };\r\n\r\n    //** will compare the selection children with the brands and return TRUE if all of them have HW selected */\r\n    public hardwareNecesseryAndSelected(productId: string | undefined) {\r\n        if (this.brandKey != BrandKeys.kabel) {\r\n            return true;\r\n        };\r\n\r\n        let br = linq.from<IBrand>(Global.categoryWrapper.bra).where(x => x.id == this.brandKey).first();\r\n        let ok : number = 0;\r\n\r\n        //iterate products\r\n        this.selection.children.map((i)=>{\r\n            if(!productId || productId && i.id == productId) { \r\n                let p = linq.from<IProduct>(br.products).where(x => x.id == this.productId).first();\r\n\r\n                //no subs required so this one is fine\r\n                if (!p.subs || p.subs.length == 0) {\r\n                    ok++;\r\n                } else {\r\n                    let avlp = AvailabilityProduct.ensure(Global.categoryWrapper.avl.getProduct(this.brandKey, i.id));\r\n                    if((Global.indexOfAny(i.getChildrenIds(), avlp.getServices()))) {\r\n                        ok++; \r\n                    }\r\n                };\r\n            };\r\n        });\r\n\r\n        return productId ? ok == 1 : ok == this.selection.children.length;\r\n    };\r\n\r\n    /** \r\n     * will check if an activation has service, compatible with SELECTION\r\n    */\r\n    public hasService(service: string, productId: string | undefined): boolean {\r\n        if(this.brandKey == BrandKeys.kabel) {\r\n            var p = linq.from<TreeItem>(this.selection.children).where(x=>x.id == productId).firstOrDefault();\r\n\r\n            if(p) {\r\n                return p.getChildrenIds().indexOf(service) >= 0;\r\n            }\r\n        } else {\r\n            return this.services.indexOf(service) >= 0;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /** will check if a service can be added to an existing activation\r\n     * - v1. excludes are beining checked \r\n    */\r\n    checkServiceCompatibility(service: string, brand: IBrand) : string[] {\r\n        for (let i = 0; i < this.services.length; i++) {\r\n            var s = linq.from<IService>(brand.services).where(x=>x.id == this.services[i]).firstOrDefault();\r\n\r\n            if(s && s.notbookableWith && s.notbookableWith.indexOf(service) >= 0) {\r\n                return [s.id];\r\n            };\r\n        };\r\n\r\n        return [];\r\n    };\r\n\r\n    public hasHardware() : boolean {\r\n        var hw:string[] = [];\r\n        var hwbr:string[] = linq.from<ISub>(StorageHelper.getBrand(this.brandKey).subs).select(x=>x.id).toArray();\r\n\r\n        if(this.brandKey == BrandKeys.kabel) {\r\n            //for cabl one of the keys is the hardware \r\n            this.selection.children.map((i)=>{\r\n                hw = hw.concat(i.getChildrenIds());\r\n            })\r\n        } else {\r\n            hw.push(this.sub);\r\n        };\r\n\r\n        return Global.containsAny<string>(hwbr, hw);\r\n    };\r\n\r\n    public removeServiceLike(pattern: string) {\r\n        let all = linq.from<string>(this.services)\r\n            .where(x => x.indexOf(pattern) >= 0)\r\n            .toArray();\r\n        all.map((i) => {\r\n            this.removeService(i,undefined);\r\n        });\r\n    };\r\n\r\n    public getOptionUniqueId(id: string) {\r\n        if (id.indexOf('/') > 0) {\r\n            let sa = id.split('/');\r\n            return sa[sa.length - 1];\r\n        } else {\r\n            return id;\r\n        };\r\n    };\r\n\r\n    public getOptionPriceActivation(brand: IBrand): IFee {\r\n        let res: number = 0;\r\n        for (let i = 0; i < this.services.length; i++) {\r\n            let oid = this.getOptionUniqueId(this.services[i]);\r\n            let opt = linq.from(brand.services)\r\n                .where(x => x.id === oid && x.type === EServiceType.option)\r\n                .firstOrDefault();\r\n\r\n            if (opt) {\r\n                if (brand.id === BrandKeys.kabel && opt.id.indexOf('bereitstellungsentgelt') >= 0) {\r\n                    continue;\r\n                };\r\n\r\n                if (opt && opt.activationFee) {\r\n                    res += opt.activationFee.price;\r\n                };\r\n            };\r\n        };\r\n\r\n        let f: IFee = {\r\n            price: res,\r\n            unit: Defaults.currencyUnit\r\n        };\r\n\r\n        return f;\r\n    };\r\n\r\n    public getPromoPrice(brand: IBrand) {\r\n        let res: number = 0;\r\n        for (let i = 0; i < this.services.length; i++) {\r\n            let opt = linq.from(brand.services)\r\n                .where(x => x.id === this.services[i] && x.type === EServiceType.promotion)\r\n                .firstOrDefault();\r\n            if (opt && opt.activationFee) {\r\n                res += opt.activationFee.price;\r\n            };\r\n        }\r\n\r\n        let f: IFee = {\r\n            price: res,\r\n            unit: Defaults.currencyUnit\r\n        };\r\n\r\n        return f;\r\n    };\r\n\r\n    public validateService(id: string): boolean {\r\n        let brand = linq.from(StorageHelper.getBrands()).where(x => x.id == this.brandKey).first();\r\n\r\n        let svc = linq.from(brand.services)\r\n            .where(x => x.id === id)\r\n            .firstOrDefault();\r\n\r\n        // self \r\n        if (svc) {\r\n            if (svc.notbookableWith) {\r\n                let which = this.services.some(x => svc!.notbookableWith.indexOf(x) >= 0);\r\n                if (which && this.services.indexOf(svc.id)>=0) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // other\r\n        for (let i = 0; i < this.services.length; i++) {\r\n            if (this.services[i] === id) { continue; }\r\n            let svc = linq.from(brand.services)\r\n                .where(x => x.id === this.services[i])\r\n                .firstOrDefault();\r\n\r\n            if (svc && svc.notbookableWith) {\r\n                if (svc.notbookableWith.indexOf(id) >= 0  && this.services.indexOf(svc.id)>=0) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    public getBarcode(): string | undefined {\r\n        if (this.processStatus && this.processStatus.steps) {\r\n            let step = linq.from<IApiStep>(this.processStatus.steps)\r\n                .where(x => x.type == ERequestType.activation)\r\n                .firstOrDefault();\r\n\r\n            if (step && step.message) {\r\n                let info: IAnswerInfo = JSON.parse(step.message);\r\n\r\n                if (info.ContractId) { return info.ContractId; }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n\r\n    public getContractId(): string | undefined {\r\n        if (this.processStatus && this.processStatus.steps) {\r\n            let step = linq.from<IApiStep>(this.processStatus.steps)\r\n                .where(x => x.type === ERequestType.activation)\r\n                .firstOrDefault();\r\n\r\n            if (step && step.message) {\r\n                let info: IAnswerInfo = JSON.parse(step.message);\r\n                if (info.ContractId) { return info.ContractId; }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n\r\n    public getActivationDate(): string {\r\n        if (this.activationType === EActivationType.portDefault) {\r\n            return Global.toGermanDate(this.portationDate);\r\n        } else {\r\n            return Global.toGermanDate(this.activationDate);\r\n        }\r\n    };\r\n\r\n    public getCustomerId(): string | undefined {\r\n        if (this.processStatus && this.processStatus.steps) {\r\n            let step = linq.from<IApiStep>(this.processStatus.steps)\r\n                .where(x => x.type === ERequestType.activation)\r\n                .firstOrDefault();\r\n\r\n            if (step && step.message) {\r\n                let info: IAnswerInfo = JSON.parse(step.message);\r\n                if (info.CustomerId) { return info.CustomerId; }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n\r\n    public getSim(): string | undefined {\r\n        // if(this.activationType == EActivationType.actDefault && this.brandKey == BrandKeys.vodafone) {\r\n        //     return this.msisdn;\r\n        // };\r\n\r\n        if (this.processStatus && this.processStatus.steps) {\r\n            let step = linq.from<IApiStep>(this.processStatus.steps)\r\n                .where(x => x.type === ERequestType.activation)\r\n                .firstOrDefault();\r\n\r\n            if (step && step.message) {\r\n                let info: IAnswerInfo = JSON.parse(step.message);\r\n                if (info.Sim) { return info.Sim; }\r\n            }\r\n        }\r\n\r\n        return MainTexts.unkonwnAtThisTime;\r\n    };\r\n};\r\n\r\nexport class ActivationUI extends IActivation {\r\n    public product?: IProduct;\r\n    public hardware?: ISub;\r\n    public options?: IService[];\r\n\r\n    public brand?: IBrand;\r\n\r\n    public ttProduct?: string;\r\n    public ttHardware?: string;\r\n    public ttOptions?: string;\r\n    public ttActivation?: string;\r\n\r\n    private customer: ICustomer;\r\n\r\n    //UI only\r\n    public subUI: string = '';\r\n    public productUI: string = '';\r\n    public optionsUI: string = '';\r\n    public promotionsUI: string = '';\r\n    public activationDateUI: string = '';\r\n    public msisdnUI: string = MainTexts.unkonwnAtThisTime;\r\n    public barcodeUI: string = MainTexts.unkonwnAtThisTime;\r\n    public simUI: string = MainTexts.unkonwnAtThisTime;\r\n    public customerIdUI: string = MainTexts.unkonwnAtThisTime;\r\n    public activationDateTitleUI: string = '';\r\n\r\n    public constructor(brand: string, customer: ICustomer) {\r\n        super(brand);\r\n\r\n        this.customer = customer;\r\n    };\r\n\r\n    public static fromActivation(act: IActivation, brand: IBrand, customer: ICustomer): ActivationUI {\r\n        let a = act as ActivationUI;\r\n        a = ActivationUI.ensureUi(a, customer);\r\n        a.init(brand);\r\n        a.processStatus = act.processStatus;\r\n        a.customer = customer;\r\n        return a;\r\n    };\r\n\r\n    static ensureUi(act: ActivationUI, customer: ICustomer) : ActivationUI {\r\n        let a = Object.assign(new ActivationUI(act.brandKey, customer), act);\r\n        a.customer = customer;\r\n        return a;\r\n    };\r\n\r\n    init(br: IBrand) {\r\n        this.brand = br;\r\n        if(this.productId) {\r\n            this.product = linq.from<IProduct>(br.products).where(x=>x.id == this.productId).firstOrDefault();\r\n\r\n            if(this.product) {\r\n                this.ttProduct = this.product!.tooltipExtra;\r\n\r\n                if(this.sub) {\r\n                    this.hardware = linq.from<ISub>(br.subs).where(x=>x.id == this.sub).firstOrDefault();\r\n        \r\n                    if(this.hardware) {\r\n                        this.ttHardware = this.hardware!.tooltipExtra;\r\n        \r\n                        if(this.services && this.services.length) {\r\n                            this.options = linq.from<IService>(br.services).where(x=>this.services.indexOf(x.id)>=0).toArray();\r\n                            this.ttOptions = this.getTooltipOptions();\r\n\r\n                            this.ttActivation = this.getTooltipActivation();\r\n                        };\r\n                    }\r\n                };\r\n            } else {\r\n                let t = {\r\n                    id: this.productId, \r\n                    name: this.customer.contracts![0].bookedProduct!.name\r\n                };\r\n\r\n                this.product = t as IProduct;\r\n            }\r\n        };\r\n    };\r\n\r\n    getActivationFee(): IFee {\r\n        let br = StorageHelper.getBrand(this.brandKey);\r\n        let avl = StorageHelper.getAvailabilityForBrand(this.brandKey);\r\n        var prBrand = linq.from<IProduct>(br.products).where(x => x.id === this.productId).firstOrDefault();\r\n\r\n        var fee: IFee;\r\n\r\n        if (!prBrand) {\r\n            return {\r\n                price: 0,\r\n                unit: MainTexts.euro\r\n            };\r\n        };\r\n\r\n        if (this.brandKey === BrandKeys.kabel) {\r\n            let prAvl = linq.from<AvailabilityProduct>(avl.products).where(x => x.productId === this.productId).firstOrDefault();\r\n\r\n            let bse = linq.from<string>(this.services).where(x => x.indexOf(\"bereitstellungsentgelt\") >= 0).firstOrDefault();\r\n            if (bse) {\r\n                let el = linq.from<IAvailabilityService>(prAvl!.elements).where(x => x.metaname === bse).firstOrDefault();\r\n\r\n                if (el) {\r\n                    return {\r\n                        price: el.prices[0].amount * 100,\r\n                        unit: MainTexts.euro\r\n                    };\r\n                };\r\n            };\r\n        };\r\n\r\n        fee = {\r\n            price: prBrand.activationFee ? prBrand.activationFee.price : 0,\r\n            unit: MainTexts.euro\r\n        };\r\n\r\n        if (this.options) {\r\n            this.options.map((i) => {\r\n                //if (i.id == 'rufnummernmitnahme-x') {\r\n                    //let svc = linq.from<IService>(br.services).where(x => x.id == i.id).firstOrDefault();\r\n\r\n                    if (i && i.activationFee) {\r\n                        fee.price += i.activationFee.price;\r\n                    };\r\n                //};\r\n            });\r\n        };\r\n\r\n        return fee;\r\n    };    \r\n\r\n    getSubMonthlyFee() : IFee {\r\n        if(this.hardware) {\r\n            return this.hardware.monthlyFee;\r\n        };\r\n\r\n        return Global.getEmptyFee();\r\n    };\r\n\r\n    getProductMonthlyFee() : IFee {\r\n        if(this.product) {\r\n            return this.product.monthlyFee;\r\n        };\r\n\r\n        return Global.getEmptyFee();\r\n    };\r\n\r\n    getOptionMonthlyFee() : IFee {\r\n        let all: number = 0;\r\n        if(this.options) {\r\n            all = linq.from<IService>(this.options).select(x=>x.monthlyFee.price).sum();\r\n        };\r\n\r\n        let fee = Global.getEmptyFee();\r\n        fee.price = all;\r\n        return fee;\r\n    };\r\n\r\n    getOptionActivationFee() : IFee {\r\n        let all: number = 0;\r\n        if(this.options) {\r\n            all = linq.from<IService>(this.options).select(x=>x.activationFee.price).sum();\r\n        };\r\n\r\n        let fee = Global.getEmptyFee();\r\n        fee.price = all;\r\n        return fee;\r\n    };\r\n\r\n    getProductActivationFee() : IFee {\r\n        if(this.product) {\r\n            return this.product.activationFee;\r\n        };\r\n\r\n        return Global.getEmptyFee();\r\n    };\r\n\r\n    getMonthlyFee() : IFee {\r\n        let f = Global.getEmptyFee();\r\n\r\n        f.price += this.getProductMonthlyFee().price;\r\n        f.price += this.getSubMonthlyFee().price;\r\n        f.price += this.getOptionPriceMonthly().price;\r\n\r\n        return f;\r\n    };\r\n\r\n    public getOptionPriceMonthly(): IFee {\r\n        let res: number = 0;\r\n        for (let i = 0; i < this.services.length; i++) {\r\n            let opt = linq.from(this.brand!.services)\r\n                .where(x => x.id === this.services[i] && x.type === EServiceType.option)\r\n                .firstOrDefault();\r\n\r\n            if (opt) {\r\n                if (this.brand!.id === BrandKeys.kabel && opt.id.indexOf('bereitstellungsentgelt') >= 0) {\r\n                    continue;\r\n                };\r\n\r\n                if (opt && opt.monthlyFee) {\r\n                    res += opt.monthlyFee.price;\r\n                };\r\n            };\r\n\r\n            //2020-06-18\r\n            //special case - otelo, option is delivered as promotions\r\n            //if monthlyfee then add it to the option price\r\n            if (this.brand!.id === BrandKeys.otelo) {\r\n                let prom = linq.from(this.brand!.services)\r\n                    .where(x => x.id === this.services[i] && x.type === EServiceType.promotion)\r\n                    .firstOrDefault();\r\n\r\n                if (prom && prom.monthlyFee) {\r\n                    res += prom.monthlyFee.price;\r\n                };\r\n            };\r\n        };\r\n\r\n        let f: IFee = {\r\n            price: res,\r\n            unit: Defaults.currencyUnit\r\n        };\r\n\r\n        return f;\r\n    };\r\n\r\n    private getTooltipOptions(): string {\r\n        if (this.options) {\r\n            let res = linq.from<IService>(this.options)\r\n                //options with activation fee are being rendered in Einmalbetrag\r\n                .where(x=>!x.activationFee || x.activationFee.price == 0)\r\n                .select(x => x.tooltipExtra ? '<li>' + x.tooltipExtra + '</li>' : '')\r\n                .toArray();\r\n\r\n            return res.join('');\r\n        };\r\n\r\n        return '';\r\n    };\r\n\r\n    private getTooltipActivation(): string {\r\n        if (this.options) {\r\n            let res = linq.from<IService>(this.options)\r\n                .where(x=>x.activationFee!=undefined && x.activationFee.price != 0)\r\n                .select(x => x.tooltipExtra ? '<li>' + x.tooltipExtra + '</li>' : '')\r\n                .toArray();\r\n\r\n            return res.join('');\r\n        };\r\n\r\n        return '';\r\n    };\r\n\r\n    getCustomerName() {\r\n        return this.customer.firstname + \" \" + this.customer.surname;\r\n    };\r\n\r\n    getContractType() : string {\r\n        let s: string = MainTexts.contractTypeBnt;    \r\n        if(this.activationType == EActivationType.actDefault) {\r\n            s = MainTexts.contractTypeBnt;\r\n        } else if (this.activationType === EActivationType.portDefault) {\r\n            s = MainTexts.contractTypePort;\r\n        } else if (this.activationType === EActivationType.existingCustomer) {\r\n            s = MainTexts.contractTypeProlong;\r\n        } else if (this.activationType === EActivationType.bookService) {\r\n            this.activationDateTitleUI = OrderingTexts.bookDate;\r\n            this.customerIdUI = this.customer.contracts && this.customer.contracts[0].customerId ? this.customer.contracts[0].customerId : MainTexts.unkonwnAtThisTime;\r\n            document.title = this.customerIdUI + ' ' + Global.toGermanDate(new Date());\r\n        };\r\n\r\n        return s;\r\n    };\r\n\r\n    getActionName() {\r\n        return MainTexts.thankYouFor + ' ' + (this.customer.action ? this.customer.action.name : MainTexts.na);\r\n    };\r\n\r\n    getCustomerId() {\r\n        let s = MainTexts.unkonwnAtThisTime;\r\n\r\n        s = this.customer.contracts && this.customer.contracts[0]  ? (this.customer.contracts[0].customerId || MainTexts.na) : MainTexts.na;\r\n\r\n        return s;\r\n    };\r\n\r\n    getMsisdn(): string | undefined {\r\n        if (this.processStatus && this.processStatus.steps) {\r\n            let step = linq.from<IApiStep>(this.processStatus.steps)\r\n                .where(x => x.type === ERequestType.activation)\r\n                .firstOrDefault();\r\n\r\n            if (step && step.message) {\r\n                let info: IAnswerInfo = JSON.parse(step.message);\r\n                if (info.MobileNumber) { return info.MobileNumber; }\r\n            }\r\n        }\r\n\r\n        if(this.inCurrent || this.activationType == EActivationType.existingCustomer) {\r\n            return this.customer.contracts && this.customer.contracts[0] ? this.customer.contracts[0].msisdn : MainTexts.na\r\n        };\r\n\r\n        if(this.activationType == EActivationType.portDefault) {\r\n            return this.msisdn;\r\n        };\r\n\r\n        return MainTexts.unkonwnAtThisTime;\r\n    };\r\n\r\n    getProductName() {\r\n        return this.product ? this.product.name : MainTexts.na;\r\n    };\r\n\r\n    getContractIdUi() : string {\r\n        let u = StorageHelper.getUser();\r\n        let s = this.contractId ? this.contractId : MainTexts.unkonwnAtThisTime;\r\n\r\n        if(this.activationType == EActivationType.portDefault && this.brandKey == BrandKeys.otelo) {\r\n            var step = this.getStep(ERequestType.activation);\r\n            if(step && step.message) {\r\n                var data = JSON.parse(step.message);\r\n                if(data) {\r\n                    s = data.ContractId;\r\n                }\r\n            };\r\n        } else if(this.isDone()) {\r\n            let step = this.getStep(ERequestType.activation);\r\n\r\n            let info = JSON.parse(step.message);\r\n\r\n            s = info.ContractId;\r\n        }\r\n\r\n        if(s && s.endsWith(u!.username.replace('-',''))) {\r\n            s = MainTexts.unkonwnAtThisTime;\r\n        };\r\n\r\n        return s;\r\n    };\r\n};\r\n\r\nexport default IActivation;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppC, {App} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Global from './utils/Global';\r\nimport StorageHelper from './utils/storage';\r\nimport configureStore from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst appStore = configureStore();\r\n\r\n\r\nappStore.subscribe(()=>{\r\n  console.log('subscribe', appStore.getState());\r\n})\r\n\r\nlet cfg = Global.getConfiguration();\r\n\r\nif (!cfg.debug) {\r\n    //console = console || {};\r\n    //console.log = function(){};\r\n}\r\n\r\n//let usr = StorageHelper.getUser();\r\n\r\nReactDOM.render(\r\n    <Provider store={appStore}>\r\n      <AppC />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n\r\nexport function getStore() {\r\n  return appStore;\r\n};","import de from \"date-fns/locale/de\"; // the locale you want\r\nimport * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { EControlType } from '../../models/page/diverse';\r\nimport { IControlValue, IKeyText } from '../../models/page/interfaces';\r\nimport { IField } from '../../models/support/field';\r\nimport Global from '../../utils/Global';\r\nimport { ValidationMessages } from '../../utils/messages';\r\nimport * as val from '../../utils/validation/validationOption';\r\nimport ValidationOption, { EValidationOption, IValidationOptionControl } from '../../utils/validation/validationOption';\r\nimport LClear from './clear';\r\nimport LControl from './control';\r\nregisterLocale(\"de\", de);\r\n\r\nexport enum EDateType {\r\n    default = 0,\r\n    fixedStart = 1\r\n};\r\n\r\nexport enum EDateInputMode {\r\n    undefined = 0,\r\n    withToggle = 1,\r\n    textInput = 2\r\n};\r\n\r\nexport interface ILDateProps {\r\n    value?: Date;\r\n    onChange?: any;\r\n    id: string;\r\n    name?: string;\r\n    title: string;\r\n    preview?: boolean;\r\n    style?: string;\r\n    type?: EDateType;\r\n    from?: Date;\r\n    to?: Date;\r\n    mode?: EDateInputMode;\r\n    datePicker?: boolean;\r\n    validationOptions?: val.ValidationOption[];\r\n    hasKabel?: boolean;\r\n    minimumBdayYear?: number;\r\n};\r\n\r\nexport interface ILDateState {\r\n    changed: boolean;\r\n    startDate: Date;\r\n};\r\n\r\nexport class LDate extends React.Component<ILDateProps, ILDateState> {\r\n    private value: Date = new Date();\r\n    private type: EDateType = EDateType.default;\r\n    private datePicker: boolean = false;\r\n    private textFieldDate: string = '';\r\n    private errorMessage: string | undefined;\r\n    private rules: val.ValidationOption[] = [];\r\n    private valueControl: IControlValue = { id: '', name: '', type: EControlType.undefined };\r\n    private valop: IValidationOptionControl[] = [];\r\n    private mode: EDateInputMode;\r\n\r\n    constructor(props: ILDateProps) {\r\n        super(props);\r\n\r\n        this.onChangeD = this.onChangeD.bind(this);\r\n        this.onChangeM = this.onChangeM.bind(this);\r\n        this.onChangeY = this.onChangeY.bind(this);\r\n      \r\n        if (this.props.type) { this.type = this.props.type; };\r\n        let v = Global.toDate(this.props.value);\r\n\r\n      \r\n\r\n        this.value = v ? v : new Date();\r\n\r\n        if (this.props.from) {\r\n            this.value = this.props.from;\r\n        };\r\n\r\n        if (this.props.datePicker && this.props.datePicker === true) {\r\n            this.datePicker = true;\r\n        };\r\n\r\n        this.mode = this.props.mode ? this.props.mode : EDateInputMode.undefined;\r\n\r\n        if ((this.mode & EDateInputMode.withToggle) === EDateInputMode.withToggle) {\r\n            this.textFieldDate = Global.toGermanDate(this.value);\r\n        };\r\n\r\n        this.valop.push(\r\n            {\r\n                id: 'birthday',\r\n                options: [\r\n                    new ValidationOption({ type: EValidationOption.regEx, message: ValidationMessages.errorDateFormat }),\r\n                ]\r\n            });\r\n\r\n        this.state = {\r\n            changed: false,\r\n            // startDate: this.props.value ? new Date(this.props.value) : new Date()\r\n            startDate:  this.props.value ? new Date(this.props.value) : new Date()\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let v = Global.toDate(this.value);\r\n\r\n        this.value = v ? v : new Date();\r\n\r\n       \r\n\r\n        if (!this.props.preview && this.props.type !== EDateType.default) {\r\n            this.applyValue();\r\n        };\r\n\r\n        if (this.props.preview) {\r\n            return this.renderPreview(this.value);\r\n        } else {\r\n            return this.renderControl(this.value);\r\n        }\r\n    };\r\n\r\n    private renderPreview(value: Date): JSX.Element {\r\n        let ctrl =\r\n            (\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={3} md={3} className=\"np\">\r\n                            <LControl type={EControlType.info}\r\n                                label={Global.toGermanDate(this.value)}\r\n                                onChange={this.onChangeD} name={this.props.id + 'Day'}\r\n                                style={this.props.style}\r\n                                id={this.props.id + '-day'} title={this.props.title} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n            );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderControl(value: Date): JSX.Element {\r\n        let dateWrapper = <LControl onClick={() => { }} type={EControlType.text} onChange={onchange} label={this.props.title} value={value}></LControl>;\r\n\r\n\r\n        let ctrl =\r\n            (\r\n                <Container className={\"oe-control\"}>\r\n                    {\r\n                        this.props.mode && this.props.mode === EDateInputMode.withToggle ?\r\n                            <Row>\r\n                                <LControl type={EControlType.toggle}\r\n                                    onChange={(e) => {\r\n                                        if ((this.mode & EDateInputMode.textInput) === EDateInputMode.textInput) {\r\n                                            this.mode &= ~EDateInputMode.textInput;\r\n                                        } else {\r\n                                            this.mode |= EDateInputMode.textInput;\r\n                                        };\r\n\r\n                                        if ((this.mode & EDateInputMode.withToggle) === EDateInputMode.withToggle) {\r\n                                            this.textFieldDate = Global.toGermanDate(this.value);\r\n                                        };\r\n\r\n                                        this.setState({ changed: true });\r\n                                    }}\r\n                                    hideTitle={true}\r\n                                    hideHint={true}\r\n                                    id=\"switch\"\r\n                                    label=\"Benutzereingabemodus\" />\r\n                            </Row>\r\n                            : null\r\n                    }\r\n                    <Row>\r\n                        {(this.mode & EDateInputMode.textInput) === EDateInputMode.textInput ?\r\n                            <>\r\n                                <LControl\r\n                                    id={'bdayfield'}\r\n                                    onClick={() => { }}\r\n                                    name={'birthday'}\r\n                                    type={EControlType.text}\r\n                                    onChange={e => { this.handleChangeTextInput(e) }}\r\n                                    label={this.props.title}\r\n                                    value={this.textFieldDate}\r\n                                    validationOptions={\r\n                                        [\r\n                                            new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                            new ValidationOption({ type: EValidationOption.bdayValidation, message: '' })\r\n                                        ]\r\n                                    }\r\n                                ></LControl>\r\n\r\n                                <LControl hideTitle={true}\r\n                                    labelStyle={'tc-hint mwa'}\r\n                                    type={EControlType.hint}\r\n                                    label=\"Die Eingabe muss im Format TT.MM.JJJJ erfolgen.\" />\r\n                                <LClear />\r\n                            </>\r\n\r\n                            : <></>}\r\n\r\n                        {(this.mode & EDateInputMode.textInput) === EDateInputMode.textInput ? <></> : <>\r\n                            {\r\n                                this.datePicker === true ?\r\n                                    <>\r\n                                        <DatePicker\r\n                                            id={this.props.id}\r\n                                            popperClassName=\"some-custom-class\"\r\n                                            locale=\"de\"\r\n                                            dateFormat={Global.toGermanDate(this.state.startDate)}\r\n                                            onChange={this.handleChange}\r\n                                            selected={this.state.startDate}\r\n                                            showYearDropdown\r\n                                            showMonthDropdown\r\n                                            maxDate={this.props.to ? this.props.to : new Date(2500, 1, 1)}\r\n                                            minDate={this.props.from ? this.props.from : new Date(1900, 1, 1)}\r\n                                            popperModifiers={{\r\n                                                offset: {\r\n                                                    enabled: true,\r\n                                                    offset: \"60px, 10px\"\r\n                                                },\r\n                                                preventOverflow: {\r\n                                                    enabled: true,\r\n                                                    escapeWithReference: false,\r\n                                                    boundariesElement: \"viewport\"\r\n                                                }\r\n                                            }}\r\n                                            showDisabledMonthNavigation\r\n                                            popperPlacement=\"right\"\r\n                                            customInput={dateWrapper} />\r\n                                            <Row>\r\n                                                <Col xs={12} md={12} className=\"np\">\r\n                                                    <LControl  type={EControlType.date} id={\"deliveryDateValidationKabel\"} value={this.state.startDate} visible={this.props.hasKabel&& this.props.id==='deliveryDate'} validationOptions={\r\n                                                        [\r\n                                                            new ValidationOption({ type: EValidationOption.errorDeliveryDate, message: ValidationMessages.errorDeliveryDate }),\r\n                                                        ]\r\n                                                    } />\r\n                                                </Col>\r\n                                            </Row>\r\n                                            \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n\r\n                                        <Col xs={3} md={3} className=\"np\">\r\n                                            <LControl\r\n                                                type={EControlType.dropdown}\r\n                                                value={value.getDate().toString()}\r\n                                                style={this.props.style}\r\n                                                onChange={this.onChangeD}\r\n                                                name={this.props.id + 'Day'}\r\n                                                id={this.props.id + '-day'}\r\n                                                title={this.props.title}\r\n                                                isChild={true}\r\n                                                options={this.getDynamicDays()} />\r\n                                        </Col>\r\n\r\n                                        <Col xs={5} md={5} >\r\n                                            <LControl type={EControlType.dropdown}\r\n                                                value={(value.getMonth() + 1)}\r\n                                                style={this.props.style}\r\n                                                onChange={this.onChangeM}\r\n                                                name={this.props.id + 'Month'}\r\n                                                id={this.props.id + '-month'}\r\n                                                isChild={true}\r\n                                                options={this.getDynamicMonths()} />\r\n                                        </Col>\r\n\r\n                                        <Col xs={4} md={4} className=\"np\">\r\n                                            <LControl type={EControlType.dropdown}\r\n                                                value={value.getFullYear().toString()}\r\n                                                style={this.props.style}\r\n                                                onChange={this.onChangeY}\r\n                                                name={this.props.id + 'Year'}\r\n                                                id={this.props.id + '-year'}\r\n                                                isChild={true}\r\n                                                options={this.getDynamicYears()} />\r\n                                        </Col>\r\n                                        <Row>\r\n                                            <Col xs={12} md={12} className=\"np\">\r\n                                                <LControl type={EControlType.date} id={\"bdaydropdownfulldate\"} value={this.value} visible={true} validationOptions={\r\n                                                    [\r\n                                                        new ValidationOption({ type: EValidationOption.bdayValidationVeryPrecise, message: '' }),\r\n                                                    ]\r\n                                                } />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </>\r\n                            }\r\n                        </>\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    handleChange = date => {\r\n        this.value.setDate(date);\r\n\r\n        if (this.props.onChange) {\r\n            this.props.onChange({ type: EControlType.date, name: this.props.name, id: this.props.id, dateValue: Global.dateToString(date) });\r\n        };\r\n        this.setState({\r\n            changed: true,\r\n            startDate: date\r\n        });\r\n    };\r\n\r\n    public handleChangeTextInput(e: any) {\r\n        var d = Global.fromGermanDateString(e.value);\r\n\r\n        this.textFieldDate = e.value;\r\n\r\n        if (d && Global.dateIsValid(d)) {\r\n            this.value = d;\r\n            this.props.onChange({ type: EControlType.date, name: this.props.name, id: this.props.id, dateValue: Global.dateToString(this.value) });\r\n        };\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private onChangeD(e: IControlValue) {\r\n        this.value.setDate(parseInt(e.value ? e.value : \"1\"));\r\n        if (this.props.onChange) {\r\n            this.props.onChange({ type: EControlType.date, name: this.props.name, id: this.props.id, dateValue: Global.dateToString(this.value) });\r\n        };\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private onChangeM(e: IControlValue) {\r\n        let val = parseInt(e.value ? e.value : \"1\") - 1;\r\n        this.value.setMonth(val);\r\n        if (this.props.onChange) {\r\n            this.props.onChange({ type: EControlType.date, name: this.props.name, id: this.props.id, dateValue: Global.dateToString(this.value) });\r\n        };\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public validate(field: IField | undefined,\r\n        showErrors: boolean): boolean {\r\n\r\n        if (this.rules.length === 0) {\r\n            if (this.props.validationOptions) {\r\n                this.props.validationOptions.map((i, idx) => {\r\n\r\n                    this.rules.push(i);\r\n                });\r\n            }\r\n\r\n            if (field && field.config.length > 0) {\r\n                field.config.map((i, idx) => {\r\n                    i.rules.map((ii, iidx) => {\r\n                        this.rules.push(new val.ValidationOption(ii));\r\n                    });\r\n                });\r\n            };\r\n        }\r\n\r\n        if (this.rules.length > 0) {\r\n            for (let i = 0; i < this.rules.length; i++) {\r\n                let msg: string = this.errorMessage !== undefined ? this.errorMessage : '';\r\n                if (msg && msg.length > 0) {\r\n                    if (showErrors) {\r\n                        this.setState({ changed: true });\r\n                    }\r\n                    return false;\r\n                }\r\n            };\r\n        };\r\n        return false;\r\n    }\r\n\r\n    public getId() {\r\n        return this.props.id;\r\n    };\r\n\r\n    public getValue(): IControlValue {\r\n        return this.valueControl;\r\n    };\r\n\r\n    private onChangeY(e: IControlValue) {\r\n        this.value.setFullYear(parseInt(e.value ? e.value : \"1\"));\r\n        if (this.props.onChange) {\r\n            this.props.onChange({ type: EControlType.date, name: this.props.name, id: this.props.id, dateValue: Global.dateToString(this.value) });\r\n        };\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    private applyValue() {\r\n        if (this.props.type === EDateType.fixedStart && this.props.from && this.props.to) {\r\n            if (this.props.value && (this.value < this.props.from || this.value > this.props.to)) {\r\n                this.value = new Date(this.value.getFullYear(), this.props.from.getMonth(), this.props.from.getDate());\r\n            }\r\n        }\r\n        // var m = this.value.getMonth() + 1;\r\n        // var months = linq.from<IKeyText>(this.getDynamicMonths()).select(x=>x.key).toArray();\r\n        // if(months.indexOf(m) <= 0){\r\n        //     this.value = new Date(this.value.getFullYear(), months[0] - 1, this.value.getDate());\r\n        // };\r\n    };\r\n\r\n    private getDynamicDays() {\r\n        if (this.type === EDateType.default) { return Global.getDays(1, Global.getDaysInMonth(this.value)); }\r\n\r\n        let res: number[] = [];\r\n        let from = this.props.from ? this.props.from : new Date();\r\n        let to = this.props.to ? this.props.to : new Date();\r\n        let days = Global.getDaysInMonth(this.value);\r\n\r\n        for (let i = 1; i <= days; i++) {\r\n            let ch: Date = new Date(this.value.getFullYear(), this.value.getMonth(), i);\r\n            if (this.props.id === 'contractEndDate') {\r\n            }\r\n\r\n            if (ch >= from && ch <= to) {\r\n                res.push(i);\r\n            }\r\n        };\r\n\r\n        return linq.from<number>(res)\r\n            .select((x) => {\r\n                return { key: x.toString(), text: x.toString() }\r\n            }).toArray();\r\n    };\r\n\r\n    private getDynamicMonths(): IKeyText[] {\r\n        if (this.type === EDateType.default) { return Global.getMonths(1); }\r\n\r\n        let res: number[] = [];\r\n        let from = this.props.from ? this.props.from : new Date();\r\n        let to = this.props.to ? this.props.to : new Date();\r\n        for (let i = 0; i <= 11; i++) {\r\n            let ch: Date = new Date(this.value.getFullYear(), i, this.value.getDate());\r\n            if (ch >= from && ch <= to) {\r\n                res.push(i + 1);\r\n            };\r\n\r\n            if (ch >= from && ch <= to) {\r\n                res.push(i + 1);\r\n            }\r\n        };\r\n\r\n        let ml = Global.getMonths(1);\r\n\r\n        let tmp = linq.from<number>(res)\r\n            .join(ml, a => a, b => b.key, (a, b) => { return { N: a, M: b } })\r\n            .toArray();\r\n\r\n        return linq.from(tmp).select((x) => {\r\n            return { key: x.M.key.toString(), text: x.M.text }\r\n        }).toArray();\r\n    };\r\n\r\n    private getDynamicYears(): IKeyText[] {\r\n        if (this.type === EDateType.default) { return Global.getYears(1900, (this.props.minimumBdayYear? this.props.minimumBdayYear: (new Date()).getFullYear())); }\r\n\r\n        let res: number[] = [];\r\n        let from = this.props.from ? this.props.from : new Date();\r\n        let to = this.props.to ? this.props.to : new Date();\r\n\r\n        for (let i = from.getFullYear(); i <= to.getFullYear(); i++) {\r\n            let ch: Date = new Date(i, this.value.getMonth(), this.value.getDate());\r\n            if (res.indexOf(i) < 0) {\r\n                res.push(i);\r\n            };\r\n        };\r\n\r\n        return linq.from<number>(res)\r\n            .select((x) => {\r\n                return { key: x.toString(), text: x.toString() }\r\n            }).toArray();\r\n    };\r\n};\r\n\r\nexport default LDate;","import * as React from 'react';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport ActivationCustomerData from '../process/activationCustomerData';\r\nimport * as page from '../../page/index';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport { IEvn } from '../../../models/ordering/evn';\r\nimport { EBillingType, EEvnType, ETargetNumber } from '../../../models/ordering/order';\r\nimport { OrderingTexts, MainTexts } from '../../../utils/messages';\r\n\r\nexport interface ICustomerEVNProps {\r\n    parent: ActivationCustomerData;\r\n    evn?: IEvn;\r\n    onChange: any;\r\n};\r\n\r\nexport interface ICustomerEVNState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class CustomerEVN extends React.Component<ICustomerEVNProps, ICustomerEVNState> {\r\n    constructor(props: ICustomerEVNProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.customerBills,\r\n            transparent: false\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <page.LControl type={EControlType.title} \r\n                                title={OrderingTexts.billType}/>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        this.props.parent.props.parent.dataWrapper.hasVodafone() || this.props.parent.props.parent.dataWrapper.hasDsl()  ? \r\n                        <Row>\r\n                            <Col xs={6} md={6}>\r\n                                <page.LControl onChange={this.props.onChange} checked={this.props.evn != null && this.props.evn.billingType == EBillingType.online} \r\n                                type={EControlType.radio} hideTitle={true} name=\"evn.billingType\" id=\"billingType_2\" label=\"Online\"/>\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        <Row>\r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl onChange={this.props.onChange} checked={this.props.evn != null && this.props.evn.billingType == EBillingType.email} \r\n                                    type={EControlType.radio} hideTitle={true} name=\"evn.billingType\" id=\"billingType_1\" label=\"per E-Mail \"/>\r\n                            </Col>\r\n                            <Col xs={6} md={6}>\r\n                                <page.LControl onChange={this.props.onChange} checked={this.props.evn != null && this.props.evn.billingType == EBillingType.online} \r\n                                type={EControlType.radio} hideTitle={true} name=\"evn.billingType\" id=\"billingType_2\" label=\"Online und App\"/>\r\n                            </Col>\r\n                        </Row>                        \r\n                    }\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <page.LControl hideTitle={true} type={EControlType.hint} label={OrderingTexts.evnDesc}/>\r\n                            <page.LClear />\r\n                        </Col>\r\n                    </Row> \r\n\r\n                    { \r\n                        this.props.parent.props.parent.dataWrapper.hasOtelo() || this.props.parent.props.parent.dataWrapper.hasVodafone() ?\r\n                        <>\r\n                            <Row>\r\n                                <Col xs={12} md={12} className=\"np\">\r\n                                    <page.LControl type={EControlType.title} title={OrderingTexts.evn}/>\r\n                                </Col>\r\n                            </Row>                        \r\n                            <Row>\r\n                                <Col xs={4} md={4} className=\"np\">\r\n                                    <page.LControl onChange={this.props.onChange} checked={this.props.evn != null && this.props.evn.evnType == EEvnType.fullEvn} \r\n                                        type={EControlType.radio} name=\"evn.evnType\" id=\"evnType_1\" hideTitle={true}\r\n                                        label={this.props.parent.props.parent.dataWrapper.hasVodafone() ? OrderingTexts.evnVf1 : OrderingTexts.evn1}/>\r\n                                </Col>\r\n                                <Col xs={4} md={4} >\r\n                                    <page.LControl onChange={this.props.onChange} \r\n                                        checked={this.props.evn != null && this.props.evn.evnType == EEvnType.shortEvn} \r\n                                        type={EControlType.radio} name=\"evn.evnType\" id=\"evnType_2\" hideTitle={true}\r\n                                        label={this.props.parent.props.parent.dataWrapper.hasVodafone() ? OrderingTexts.evnVf2 : OrderingTexts.evn2}/>\r\n                                </Col>        \r\n                                <Col xs={4} md={4} className=\"npr\">\r\n                                    <page.LControl onChange={this.props.onChange} \r\n                                        checked={this.props.evn != null && this.props.evn.evnType == EEvnType.noEvn} \r\n                                        type={EControlType.radio} name=\"evn.evnType\" id=\"evnType_3\" hideTitle={true}\r\n                                        label={this.props.parent.props.parent.dataWrapper.hasVodafone() ? OrderingTexts.evnVf3 : OrderingTexts.evn3}/>\r\n                                </Col>                                          \r\n                            </Row>\r\n                        </>\r\n                        : null\r\n                    }\r\n\r\n                    { \r\n                        this.props.parent.props.parent.dataWrapper.hasVodafone() && (this.props.parent.props.parent.dataWrapper.data.customer.evn && this.props.parent.props.parent.dataWrapper.data.customer.evn.evnType != EEvnType.noEvn)?\r\n                        <>\r\n                            <Row>\r\n                                <Col xs={12} md={12} className=\"np\">\r\n                                    <page.LControl type={EControlType.title} title={OrderingTexts.targetNumber}/>\r\n                                </Col>\r\n                            </Row>                        \r\n                            <Row>\r\n                                <Col xs={4} md={4} className=\"np\">\r\n                                    <page.LControl onChange={this.props.onChange} checked={this.props.evn != null && this.props.evn.targetNumberType == ETargetNumber.complete} \r\n                                        hideTitle={true}\r\n                                        type={EControlType.radio} name=\"evn.targetNumberType\" id=\"targetNumberType_1\" \r\n                                        label={MainTexts.complete}/>\r\n                                </Col>\r\n                                <Col xs={4} md={4} >\r\n                                    <page.LControl onChange={this.props.onChange} \r\n                                        hideTitle={true}\r\n                                        checked={this.props.evn != null && this.props.evn.targetNumberType == ETargetNumber.shortened} \r\n                                        type={EControlType.radio} name=\"evn.targetNumberType\" id=\"targetNumberType_2\" \r\n                                        label={MainTexts.shortened}/>\r\n                                </Col>                                         \r\n                            </Row>\r\n                        </>\r\n                        : null\r\n                    }                    \r\n                    \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };    \r\n};\r\n\r\nexport default CustomerEVN;","import * as linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { IAvailabilityBrand } from '../../../models/ordering/availability';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { House } from '../../../models/ordering/house';\r\nimport { EHomeType } from '../../../models/ordering/order';\r\nimport { EControlType, ETelType } from '../../../models/page/diverse';\r\nimport { IKeyText } from '../../../models/page/interfaces';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport { MainTexts, OrderingTexts, ValidationMessages } from '../../../utils/messages';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport BaseBlock from '../../page/block';\r\nimport * as page from '../../page/index';\r\nimport { Tel } from '../global/tel';\r\nimport { ActivationCustomerData } from '../process';\r\n\r\nexport interface ICustomerDSLProps {\r\n    parent: ActivationCustomerData;\r\n    house?: House;\r\n    customer: ICustomer;\r\n    onChange: any;\r\n    showTel: boolean;\r\n    showAddress: boolean;\r\n};\r\n\r\nexport class CustomerDSL extends React.Component<ICustomerDSLProps, IBaseComponentState> {\r\n    constructor(props: ICustomerDSLProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: ICustomerDSLProps) {\r\n        this.setState( {changed: true});\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.dslHouse,\r\n            transparent: false\r\n        };\r\n\r\n        if(this.props.parent.props.parent.data.customer.mnp && this.props.parent.props.parent.data.customer.mnp.provider == '1') {\r\n            cfg.title = 'Kontakt';\r\n        };        \r\n\r\n        let title: string = 'Rückrufnummer'; \r\n\r\n        let house: House = this.props.house ? this.props.house : new House();\r\n\r\n        let detailsValOpt:ValidationOption[] = [];\r\n\r\n        let onlyDsl = this.props.parent.props.parent.dataWrapper.hasDslOnly();\r\n\r\n        let prefixDisabled: boolean = false;\r\n \r\n        if(onlyDsl) {\r\n            var avl = StorageHelper.getAvailability();\r\n            let br = linq.from<IAvailabilityBrand>(avl.brands).where(x => x.key === BrandKeys.dsl).firstOrDefault();\r\n\r\n            if(this.props.parent.props.parent.data.customer.house && this.props.parent.props.parent.data.customer.house.tel.telType == ETelType.mobile) {\r\n                prefixDisabled = false;\r\n\r\n                if(this.props.parent.props.customer.house && this.props.parent.props.customer.house.tel.prefix == br!.products[0].areaCode) {\r\n                    this.props.parent.props.customer.house.tel.prefix = '';\r\n                };\r\n            } else {\r\n                prefixDisabled = true;\r\n\r\n                if (br && br.products && br.products.length > 0 && this.props.parent.props.customer.house) {\r\n                    this.props.parent.props.customer.house.tel.prefix = br.products[0].areaCode;\r\n                };                \r\n            }\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    {\r\n                        this.props.showAddress ?  \r\n                        <>\r\n                            <Row>\r\n                                <Col xs={6} md={6} className=\"np\">\r\n                                    <page.LControl type={EControlType.radio} \r\n                                        onChange={this.props.onChange} \r\n                                        name=\"house.homeType\" \r\n                                        id=\"homeType_1\" \r\n                                        value={EHomeType.detachedHouse.toString()} \r\n                                        checked={house.homeType == EHomeType.detachedHouse }\r\n                                        label=\"Einfamilienhaus\" title=\"Gebäudeart\"/>\r\n                                </Col>\r\n                                <Col xs={6} md={6}>\r\n                                    <page.LControl type={EControlType.radio} \r\n                                        onChange={this.props.onChange} \r\n                                        name=\"house.homeType\" \r\n                                        id=\"homeType_2\" \r\n                                        value={EHomeType.appartmentHouse.toString()} \r\n                                        checked={house.homeType == EHomeType.appartmentHouse }\r\n                                        label=\"Mehrfamilienhaus\"/>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {\r\n                                house.homeType == EHomeType.appartmentHouse  ?\r\n                                <>\r\n                                    <Row>\r\n                                        <Col xs={6} md={6} className=\"np\">\r\n                                            <page.LControl type={EControlType.radio} \r\n                                                onChange={this.props.onChange} \r\n                                                name=\"house.entranceLocation\" \r\n                                                id=\"entranceLocation_Vorderhaus\" \r\n                                                checked={house.entranceLocation == 'Vorderhaus' }\r\n                                                label=\"Vorderhaus\" title=\"Lage der Wohnung\"/>\r\n                                        </Col>\r\n                                        <Col xs={6} md={6} className=\"\">\r\n                                            <page.LControl type={EControlType.radio} \r\n                                                onChange={this.props.onChange} \r\n                                                name=\"house.entranceLocation\" \r\n                                                id=\"entranceLocation_Hinterhaus\" \r\n                                                checked={house.entranceLocation == 'Hinterhaus' }\r\n                                                label=\"Hinterhaus\"/>\r\n                                        </Col>                                \r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs={4} md={4} className=\"np\">\r\n                                            <page.LControl type={EControlType.radio} \r\n                                                onChange={this.props.onChange} \r\n                                                name=\"house.appartmentLocation\" \r\n                                                id=\"appartmentLocation_Links\" \r\n                                                checked={house.appartmentLocation == 'Links' }\r\n                                                label=\"Links\" title=\"Lage des Eingangs\"/>\r\n                                        </Col>\r\n                                        <Col xs={4} md={4} className=\"\">\r\n                                            <page.LControl type={EControlType.radio} \r\n                                                onChange={this.props.onChange} \r\n                                                name=\"house.appartmentLocation\" \r\n                                                id=\"appartmentLocation_Mitte\" \r\n                                                checked={house.appartmentLocation == 'Mitte' }\r\n                                                label=\"Mitte\"/>\r\n                                        </Col>\r\n                                        <Col xs={4} md={4} className=\"\">\r\n                                            <page.LControl type={EControlType.radio} \r\n                                                onChange={this.props.onChange} \r\n                                                name=\"house.appartmentLocation\" \r\n                                                id=\"appartmentLocation_Rechts\" \r\n                                                checked={house.appartmentLocation == 'Rechts' }\r\n                                                label=\"Rechts\"/>\r\n                                        </Col>                                                             \r\n                                    </Row>                             \r\n                                    <Row>\r\n                                        <Col xs={6} md={6} className=\"np\">\r\n                                            <page.LControl type={EControlType.dropdown} \r\n                                                value={house.floor}\r\n                                                onChange={this.props.onChange} \r\n                                                name=\"house.floor\" \r\n                                                id=\"floor\" \r\n                                                title={MainTexts.floor}\r\n                                                options={this.getFllors()} />                                    \r\n                                        </Col>      \r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs={12} md={12} className=\"np\">\r\n                                            <page.LControl type={EControlType.text} \r\n                                                onChange={this.props.onChange} name=\"house.details\" \r\n                                                id=\"details\" value={house.details} label={'Lage der Telefondose'}\r\n                                                hint=\"z.B. Flur oder Wohnzimmer\"/>\r\n                                        </Col>   \r\n                                    </Row>                        \r\n                                </>\r\n                                : \r\n                                <>\r\n                                    <Row>\r\n                                        <Col xs={12} md={12} className=\"np\">\r\n                                            <page.LControl type={EControlType.text} \r\n                                                onChange={this.props.onChange} name=\"house.details\" \r\n                                                id=\"details\" value={house.details} label={'Lage der Telefondose'}\r\n                                                validationOptions={\r\n                                                    [new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError })]\r\n                                                }\r\n                                                hint=\"z.B. Flur oder Wohnzimmer\"/>\r\n                                        </Col>   \r\n                                    </Row>  \r\n                                </>\r\n                            }\r\n                            \r\n                            <div className=\"spacer\"/>                        \r\n                        </>                        \r\n                        : null\r\n                    }\r\n                    \r\n                    {\r\n                        this.props.showTel ?  \r\n                            <Tel \r\n                                source={this.props.customer} \r\n                                onChange={this.props.onChange} \r\n                                prefix=\"house.tel\" \r\n                                preview={false}\r\n                                titleTel={title}\r\n                                disablePrefix={prefixDisabled}\r\n                                />\r\n                            : null\r\n                    }\r\n                \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };   \r\n\r\n    private getFllors() : IKeyText[] {\r\n        let opt:IKeyText[] = [];\r\n\r\n        opt.push({key: 'K', text:'Keller'});\r\n        opt.push({key: 'EG', text:'EG'});\r\n        opt.push({key: 'DG', text:'DG'});\r\n\r\n        for(let i:number = 1; i<= 20; i++){\r\n            opt.push({key: i, text: i.toString()});\r\n        };\r\n\r\n        opt.push({key: '20+', text:'20+'});\r\n\r\n        return opt;\r\n    };\r\n};\r\n\r\nexport default CustomerDSL;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport imageInfo from '../../../assets/icons/info-circle.svg';\r\nimport imageInfoIdCard from '../../../assets/images/idcard.jpg';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport { Address } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { ILegitimation } from '../../../models/ordering/legitimation';\r\nimport { EActionAddressType, EIDCardType, EPaymentType } from '../../../models/ordering/order';\r\nimport { IPayment } from '../../../models/ordering/payment';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport { CustomerTexts, MainTexts, ValidationMessages } from '../../../utils/messages';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport * as page from '../../page/index';\r\nimport ActivationCustomerData from '../process/activationCustomerData';\r\n\r\nexport interface ICustomerLegitimationProps {\r\n    parent: ActivationCustomerData;\r\n    onChange?: any;\r\n    legitimation?: ILegitimation;\r\n    payment?: IPayment;\r\n    preview: boolean;\r\n};\r\n\r\nexport interface ICustomerLegitimationState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class CustomerLegitimation extends React.Component<ICustomerLegitimationProps, ICustomerLegitimationState> {\r\n    private legitimation:ILegitimation;\r\n    private payment: IPayment;\r\n   \r\n\r\n    constructor(props: ICustomerLegitimationProps) {\r\n        super(props);\r\n\r\n         this.legitimation = this.props.legitimation ? this.props.legitimation : {type: EIDCardType.german, id: '', authority: ''};\r\n        this.payment = this.props.payment ? this.props.payment : { paymentType: EPaymentType.bank, addressType: EActionAddressType.sameAddress, address: new Address() };\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: any) {\r\n        \r\n     \r\n        this.setState({changed: true});\r\n    };\r\n    \r\n    public render() {\r\n        //if cable only then no legitimation is needed\r\n        if(this.props.parent.props.parent.dataWrapper.hasKabelOnly()) {\r\n           return <></>\r\n        };\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: CustomerTexts.legitimation,\r\n            transparent: false\r\n        };\r\n\r\n        //let idText = this.legitimation.type === EIDCardType.german ? MainTexts.idGerman : MainTexts.idNotGerman;\r\n\r\n        let hintIdCard = <div className=\"contentTooltip\">\r\n            <ReactTooltip style={{ width: '700px', height: '300px', maxWidth: 'fit-content' }} place=\"top\" type=\"light\" effect=\"solid\" id={'infoTooltipIDCard'}>\r\n                <div><img  src={imageInfoIdCard}/></div>\r\n            </ReactTooltip>\r\n            <span>Unterscheidung zwischen DE- und EU-Personalausweis</span>\r\n            <img src={imageInfo} className=\"icon action4\" data-tip={\"bbbbbb\"} data-for=\"infoTooltipIDCard\"/>\r\n            {/* <page.LButton type={ELButtonType.iconImage} \r\n                icon=\"trash\" \r\n                id=\"infoTooltipIDCard\"\r\n                onClick={()=>{\r\n\r\n                }} />   */}\r\n        </div>\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                {/* Don't remove !!!!!! */}\r\n                {/* <BaseBlockAction>\r\n                    {\r\n                        this.props.preview ? <></> : <page.LControl type={EControlType.toggle} hideTitle={true} hideHint={true} id=\"legitimation.forAll\" label=\"Übernehmen für alle Verträge\"/>\r\n                    }\r\n                    <></>\r\n                </BaseBlockAction> */}\r\n                {\r\n                    this.props.parent.props.parent.dataWrapper.hasVodafoneOrDsl() ? \r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl preview={this.props.preview}\r\n                                    checked={this.legitimation.type == EIDCardType.german ? true : false}\r\n                                    type={EControlType.radio} onChange={this.props.onChange} \r\n                                    name=\"legitimation.type\" id=\"type_1\" label={MainTexts.idGerman}/>\r\n                            </Col>\r\n                            <Col xs={6} md={6} className=\"npr\">\r\n                                <page.LControl \r\n                                    preview={this.props.preview}\r\n                                    checked={this.legitimation.type == EIDCardType.foreign ? true : false}\r\n                                    type={EControlType.radio} onChange={this.props.onChange} \r\n                                    name=\"legitimation.type\" id=\"type_2\" label={MainTexts.idNotGerman}/>\r\n                            </Col>                        \r\n                        </Row>\r\n                    </Container>\r\n                    : null \r\n                }\r\n                <Container>\r\n                    <Row> \r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            {\r\n                                this.legitimation && this.legitimation.type == EIDCardType.german ?\r\n                                <page.LControl preview={this.props.preview}\r\n                                    value={this.legitimation ? this.legitimation.id : ''} \r\n                                    type={EControlType.text} onChange={this.props.onChange} name=\"legitimation.id\" id=\"idCard\" maxLength={10}\r\n                                    validationOptions = {[\r\n                                        new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                       // new ValidationOption({ type: EValidationOption.alphanumericWithoutGermanChars, message: ValidationMessages.alphanumericNoUmlauts })                                      \r\n                                    ]}\r\n                                    label={MainTexts.personalIdNr}\r\n                                    hintObject={hintIdCard}/>\r\n                                :\r\n                                <page.LControl preview={this.props.preview}\r\n                                    value={this.legitimation ? this.legitimation.id : ''} \r\n                                    type={EControlType.text} onChange={this.props.onChange} name=\"legitimation.idInt\" targetName=\"legitimation.id\" id=\"idCard\" \r\n                                    label={MainTexts.personalIdNr}\r\n                                    hintObject={hintIdCard}/>                                    \r\n                            }\r\n                        </Col>\r\n                        <Col xs={6} md={6} className=\"npr\">\r\n                            <page.LControl \r\n                                preview={this.props.preview}\r\n                                maxLength={20}\r\n                                value={this.legitimation ? this.legitimation.authority : ''} \r\n                                validationOptions={ \r\n                                    [\r\n                                        new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                        new ValidationOption({type: EValidationOption.alphanumeric, message: ValidationMessages.alphanumeric })\r\n                                    ]\r\n                                } \r\n                                type={EControlType.text} onChange={this.props.onChange} name=\"legitimation.authority\" id=\"idAuthority\" label=\"Ausstellende Behörde\"/>\r\n                        </Col>                        \r\n                    </Row>\r\n                    {\r\n                        \r\n                        this.props.parent && !this.props.parent.props.parent.dataWrapper.hasOtelo() && this.props.parent.props.parent.dataWrapper.hasVodafoneOrDsl() && this.legitimation.type == EIDCardType.foreign ?\r\n\r\n                        <>\r\n                            <Row>\r\n                                <Col xs={6} md={6} className=\"np\">\r\n                                    <page.LControl preview={this.props.preview}\r\n                                        value={this.payment ? this.payment.ccNumber : ''} \r\n                                        maxLength = {16}\r\n                                        type={EControlType.text} onChange={this.props.onChange} \r\n                                        name=\"payment.ccNumber\" id=\"payment-ccNumber\" label={MainTexts.legitimationCreditCard}\r\n                                        validationOptions={ \r\n                                            [\r\n                                                new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                                new ValidationOption({type: EValidationOption.numeric, message: ValidationMessages.errorNumeric })\r\n                                            ]\r\n                                        } \r\n                                        />\r\n                                </Col>\r\n                                <Col xs={6} md={6} className=\"npr\">\r\n                                    <page.LControl preview={this.props.preview}\r\n                                            value={this.payment ? this.payment.ccBank : ''} \r\n                                            type={EControlType.text} onChange={this.props.onChange} \r\n                                            name=\"payment.ccBank\" id=\"payment-ccBank\" label={MainTexts.legitimationCreditCardAt}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={6} md={6} className=\"np\">\r\n                                    <page.LControl preview={this.props.preview}\r\n                                        value={this.payment ? this.payment.ccMonth : ''} \r\n                                        type={EControlType.text} onChange={this.props.onChange} \r\n                                        maxLength = {2}\r\n                                        name=\"payment.ccMonth\" id=\"payment-ccMonth\" label={MainTexts.month}\r\n                                        validationOptions={ \r\n                                            [\r\n                                             new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                             new ValidationOption({type: EValidationOption.monthRange, message: ValidationMessages.errorMonthFormat })\r\n                                            ]\r\n                                        }\r\n                                        />\r\n                                </Col> \r\n                                <Col xs={6} md={6} className=\"npr\">\r\n                                    <page.LControl preview={this.props.preview}\r\n                                            maxLength = {2}\r\n                                            value={this.payment ? this.payment.ccYear : ''} \r\n                                            type={EControlType.text} onChange={this.props.onChange} \r\n                                            validationOptions={ \r\n                                                [\r\n                                                 new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                                 new ValidationOption({type: EValidationOption.yearFieldValidity, message: ValidationMessages.errorYearFormat })\r\n                                                ]\r\n                                            }\r\n                                            name=\"payment.ccYear\" id=\"payment-ccYear\" label={MainTexts.year}/>\r\n                                </Col>                        \r\n                            </Row>                            \r\n                        </>\r\n                       : null\r\n                    }\r\n\r\n                    {\r\n                        this.props.parent && this.props.parent.props.parent.dataWrapper.hasOteloPrepaid() ?\r\n                        <Row> \r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LDate\r\n                                    onChange={this.props.onChange}\r\n                                    datePicker={true}\r\n                                    value={this.legitimation ? this.legitimation.validFrom : new Date()} \r\n                                    key={\"legitimation.validFrom\"}\r\n                                    name={\"legitimation.validFrom\"} \r\n                                    id={\"validFrom\"}\r\n                                    title={MainTexts.validFrom}/>\r\n                            </Col>\r\n                            <Col xs={6} md={6} className=\"npr\">\r\n                                <page.LDate\r\n                                        onChange={this.props.onChange}\r\n                                        datePicker={true}\r\n                                        value={this.legitimation ? this.legitimation.validTo : new Date()} \r\n                                        key={\"legitimation.validTo\"}\r\n                                        name={\"legitimation.validTo\"} \r\n                                        id={\"validTo\"}\r\n                                        title={MainTexts.validTo}/>\r\n                            </Col>                        \r\n                        </Row>             \r\n                        : <></>\r\n                    }\r\n\r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };    \r\n};\r\n\r\nexport default CustomerLegitimation;","import { ESalutation } from \"./order\";\r\n\r\nexport class AccessOwner\r\n{\r\n  public salutation: ESalutation = ESalutation.undefined; \r\n  public firstname: string = ''; \r\n  public surname: string = ''; \r\n  public birthday: Date = new Date(); \r\n}\r\n\r\nexport class AccessNumber\r\n{\r\n    public  prefix: string =  '';\r\n    public  number: string = '';\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { IBaseComponentState } from '../../../interfaces/index';\r\nimport { ESalutation } from '../../../models/ordering/order';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport GlobalJSX from '../../../utils/GlobalJSX';\r\nimport { MainTexts, ValidationMessages } from '../../../utils/messages';\r\nimport ValidationOption, { EValidationOption, IValidationOptionControl } from '../../../utils/validation/validationOption';\r\nimport * as page from '../../page/index';\r\n\r\n\r\n\r\nexport interface IPersonProps {\r\n    prefix: string;\r\n    onChange: any;\r\n    source: any;\r\n    //componentTitle: string;\r\n\r\n    salutation: ESalutation;\r\n    title: string;\r\n    firstname: string;\r\n    surname: string;\r\n    hideTitle?: boolean;\r\n    validationOptions?: ValidationOption[];\r\n\r\n    birthday?: Date;\r\n    showBirthday?: boolean;\r\n};\r\n\r\nexport class Person extends React.Component<IPersonProps, IBaseComponentState> {\r\n    private valop: IValidationOptionControl[] = [];\r\n    constructor(props: IPersonProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IPersonProps) {\r\n        this.setState({changed: true});\r\n    };\r\n\r\n    public render() {\r\n        let bdid = GlobalJSX.getKeyFromPrefix(this.props.prefix, 'birthday', true);\r\n        let bdname = GlobalJSX.getKeyFromPrefix(this.props.prefix, 'birthday', false);\r\n\r\n        let sal = this.props.source ? this.props.source.salutation : 0;\r\n\r\n        if(this.props.salutation != ESalutation.undefined) {\r\n            sal = this.props.salutation;\r\n        }\r\n\r\n        let ctrl = (<>\r\n                <Container  className=\"np\">\r\n                    <Row>\r\n                        <Col xs={6} md={6}>\r\n                            <Row>\r\n                                \r\n                                <Col xs={6} md={6} className=\"\">\r\n                                    <page.LControl type={EControlType.radio} \r\n                                        onChange={this.props.onChange} \r\n                                        name={GlobalJSX.getKeyFromPrefix(this.props.prefix, \"salutation\", false)} \r\n                                        id={GlobalJSX.getKeyFromPrefix(this.props.prefix, \"salutation_1\", true)} \r\n                                        checked={sal == ESalutation.mr}\r\n                                        validationOptions={\r\n                                            [\r\n\r\n                                                new ValidationOption({ targetControl: 'salutation', source: this.props.source, type: EValidationOption.oneOf, targetValue: ['1', '2'],  message: MainTexts.genderError}),\r\n                                            ]\r\n                                        }\r\n                                        label={MainTexts.mr} title={MainTexts.salutation}/>\r\n                                </Col>\r\n                                <Col xs={6} md={6}>\r\n                                    <page.LControl type={EControlType.radio} onChange={this.props.onChange} \r\n                                        name={ GlobalJSX.getKeyFromPrefix(this.props.prefix, \"salutation\", false)} \r\n                                        id={ GlobalJSX.getKeyFromPrefix(this.props.prefix, \"salutation_2\", true)} \r\n                                        checked={sal == ESalutation.mrs}\r\n                                        label={MainTexts.mrs}/>\r\n                                </Col>\r\n                               \r\n                            </Row>\r\n                        </Col>\r\n                        <Col xs={6} md={6} className=\"npr\">\r\n                            {this.props.hideTitle? <></> : GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'title', undefined, MainTexts.title, false,undefined,undefined,undefined,16)}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            {GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'firstname', undefined, MainTexts.firstname, false,undefined,undefined,\r\n                                            [\r\n                                                 new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                                new ValidationOption({type: EValidationOption.validateNames,  message: \"Der Vorname beginnt mit einem Großbuchstaben und ist zwischen 2 und 30 Zeichen lang. Nur Buchstaben, Bindestriche und Leerzeichen sind erlaubt\"})\r\n                                            ],30\r\n                                        )}\r\n                        </Col>\r\n                        <Col xs={6} md={6} className=\"npr\">\r\n                            {GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'surname', undefined, MainTexts.surname, false,undefined,undefined, this.props.validationOptions? this.props.validationOptions : [\r\n                                                new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                                new ValidationOption({type: EValidationOption.validateSurname,  message: \"Es sind nur Buchstaben, Bindestriche und Leerzeichen zulässig und die Länge liegt zwischen 2 und 30 Zeichen.\"})\r\n                                            ],30)}\r\n                        </Col>                        \r\n                    </Row>     \r\n\r\n                    {\r\n                        this.props.showBirthday ? \r\n                        <Row>\r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LDate title={MainTexts.dateOfBirth} \r\n                                datePicker = {false}\r\n                                    id={bdid} \r\n                                    name={bdname} \r\n                                    onChange={this.props.onChange}\r\n                                    value={this.props.birthday}/>\r\n                            </Col>\r\n                        </Row>\r\n                        : null\r\n                    }               \r\n                </Container>\r\n                <page.LClear />\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default Person;","import linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport { IActivation, IOrderData } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { IAvailabilityBrand } from '../../../models/ordering/availability';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { EActionAddressType, EActivationType, ECreditDebitType, EPreviousAccessOwner, ESalutation } from '../../../models/ordering/order';\r\nimport PersonAndAddress, { CallbackTimeSplitted } from '../../../models/ordering/personWithAddress';\r\nimport { AccessNumber, AccessOwner } from '../../../models/ordering/previousAccessOwner';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { MainTexts, OrderingTexts, ValidationMessages } from '../../../utils/messages';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport { EDateInputMode } from '../../page/date';\r\nimport * as page from '../../page/index';\r\nimport Address from '../global/address';\r\nimport Person from '../global/person';\r\nimport Tel from '../global/tel';\r\nimport ActivationCustomerData from '../process/activationCustomerData';\r\n\r\nexport interface ICustomerDataMainProps {\r\n    parent: ActivationCustomerData;\r\n    data: IOrderData;\r\n    customer: ICustomer;\r\n    onChange: any;\r\n};\r\n\r\nexport interface ICustomerDataMainState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class CustomerDataMain extends React.Component<ICustomerDataMainProps, ICustomerDataMainState> {\r\n    private customer: ICustomer;\r\n    private activations: IActivation[];\r\n\r\n    constructor(props: ICustomerDataMainProps) {\r\n        super(props);\r\n\r\n        this.customer = props.customer;\r\n        this.activations = props.data.activations;\r\n\r\n        //this.customer.salutation = ESalutation.undefined;\r\n\r\n        if(props.customer.email){\r\n            this.customer.email2 = props.customer.email;\r\n        }\r\n\r\n        // if(props.customer.payment!.iban){\r\n        //     this.customer.payment!.iban = '';\r\n        // }\r\n\r\n        let order2 = linq.from<IOrderData>(StorageHelper.getOrders())\r\n            .where(x => x.id == this.props.data.id)\r\n            .firstOrDefault();\r\n\r\n\r\n        if (new Date(this.customer.birthday!).getFullYear() === new Date().getFullYear()) {\r\n            this.customer.birthday = this.createDate(0, 0, this.props.parent.props.parent.current!.creditDebitType == ECreditDebitType.prepaid && this.props.parent.props.parent.current!.brandKey === BrandKeys.otelo ? 16 : 0);\r\n        }\r\n\r\n        if (this.customer.delivery) {\r\n            if (this.customer.delivery && new Date(this.customer.delivery.deliveryDate).setHours(0, 0, 0, 0) == new Date().setHours(0, 0, 0, 0)) {\r\n                this.customer.delivery.deliveryDate = Global.dateOnly(Global.addDays(new Date(this.activations[0].activationDate), 1))\r\n            } else if (this.customer.delivery && new Date(this.customer.delivery.deliveryDate).setHours(0, 0, 0, 0) < new Date(this.activations[0].activationDate).setHours(0, 0, 0, 0)) {\r\n                this.customer.delivery.deliveryDate = Global.dateOnly(Global.addDays(new Date(this.activations[0].activationDate), 1))\r\n            } else if (this.customer.delivery && new Date(this.activations[0].activationDate).setHours(0, 0, 0, 0) == new Date().setHours(0, 0, 0, 0)) {\r\n                this.customer.delivery.deliveryDate = Global.dateOnly(Global.addDays(new Date(this.activations[0].activationDate), 1))\r\n            }\r\n\r\n            this.customer.delivery!.deliveryDate = new Date(new Date(this.customer.delivery!.deliveryDate).setHours(4, 0, 0, 0));\r\n\r\n            this.customer.delivery!.callbackTimeSplitted = new CallbackTimeSplitted();\r\n\r\n            // if(this.customer.delivery && !this.customer.delivery.callbackTime && this.props.parent.props.parent.dataWrapper.hasKabel()){\r\n            //     this.customer.delivery.callbackTime = \"12:00\";\r\n            //     this.customer.delivery.callbackTimeSplitted.hour = \"12\"\r\n            //     this.customer.delivery.callbackTimeSplitted.minutes = \"0o0\";\r\n            // }\r\n\r\n\r\n            StorageHelper.updateCustomer(this.props.parent.props.parent.data.id, this.customer);\r\n        }\r\n\r\n        //split strnumber and extra in two fields\r\n        if (this.props.parent.props.parent.dataWrapper.hasKabelOnly()) {\r\n            let avl = Global.categoryWrapper.avl.getBrand(BrandKeys.kabel);\r\n            if (avl && avl.address) {\r\n                this.customer.address!.nr = avl.address.nr;\r\n                this.customer.address!.nre = avl.address.nre;\r\n            };\r\n        };\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: ICustomerDataMainProps) {\r\n        this.customer = next.customer;\r\n        this.activations = next.data.activations;\r\n\r\n\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public render() {\r\n\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.customerData,\r\n            transparent: false\r\n        };\r\n\r\n        let needTel: boolean = false;\r\n        //for the future if they want this for young tariffs make it dynamic, for now only otelo prepaid\r\n        let minYear = new Date().getFullYear() - 16;\r\n        let pwAdditional = this.props.parent.props.parent.dataWrapper.getPasswordForAdditionalContract();\r\n        let noPasswordNeeded = this.props.parent.props.parent.dataWrapper.hasKabelOnly()\r\n            || this.props.parent.props.parent.dataWrapper.hasUnityOnly()\r\n            || this.props.parent.props.parent.current!.activationType == EActivationType.partnerCard\r\n            || this.props.parent.props.parent.current!.activationType == EActivationType.partnerCardPortation;\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <div style={{ marginBottom: '30px' }}>\r\n                        <Person prefix=\"+customer\" onChange={this.props.onChange} source={this.customer}\r\n                            salutation={this.customer.salutation ? this.customer.salutation : ESalutation.undefined}\r\n                            firstname={this.customer.firstname ? this.customer.firstname : ''}\r\n                            surname={this.customer.surname ? this.customer.surname : ''}\r\n                            title={this.customer.title ? this.customer.title : ''} />\r\n                    </div>\r\n\r\n                    <Row >\r\n                        <Col xs={7} md={7} className=\"np\">\r\n                            <page.LDate\r\n                                onChange={this.props.onChange}\r\n                                datePicker={false}\r\n                                mode={EDateInputMode.withToggle}\r\n                                value={this.customer.birthday}\r\n                                key={\"birthday\"}\r\n                                minimumBdayYear={this.props.parent.props.parent.current!.creditDebitType == ECreditDebitType.prepaid && this.props.parent.props.parent.current!.brandKey === BrandKeys.otelo ? minYear : undefined}\r\n                                name={\"birthday\"} id={\"birthday\"}\r\n                                title={MainTexts.dateOfBirth}\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col xs={5} md={5} className=\"npr\">\r\n                            <page.LControl type={EControlType.dropdown}\r\n                                value={this.customer.nationality}\r\n                                style=\"nationality\"\r\n                                onChange={this.props.onChange} name=\"nationality\" id=\"nationality\" title={MainTexts.nationality}\r\n                                options={Global.getNationalities()}\r\n                                validationOptions={\r\n                                    [\r\n                                        new ValidationOption({\r\n                                            type: EValidationOption.nationalityError,\r\n                                            message: ValidationMessages.nationalityError\r\n                                        })\r\n                                    ]\r\n                                }\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <div className=\"spacer-big\" />\r\n\r\n                    <Address onChange={this.props.onChange}\r\n                        source={this.props.customer}\r\n                        prefix=\"address\"\r\n                        withAditional={false}\r\n                        showStrnAdditional={this.props.parent.props.parent.dataWrapper.hasKabel()}\r\n                        preview={this.props.parent.props.parent.dataWrapper.hasKabel() || this.props.parent.props.parent.dataWrapper.hasDsl() || this.props.parent.props.parent.dataWrapper.hasUnity()} />\r\n\r\n                    <div className=\"spacer-big\" />\r\n\r\n                    {\r\n                        this.props.parent.props.parent.dataWrapper.hasUnity() ?\r\n                            <>\r\n                                <Tel titleTel={MainTexts.contactNumber} prefix=\"tel\" onChange={this.props.onChange} source={this.customer} preview={false} />\r\n                                <div className=\"spacer-big\" />\r\n                            </>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        this.props.parent.props.parent.dataWrapper.hasDsl() || this.props.parent.props.parent.dataWrapper.hasKabel() || this.props.parent.props.parent.dataWrapper.hasUnity() ?\r\n                            <>\r\n                                {this.renderDelivery()}\r\n                                <div className=\"spacer-big\" />\r\n                            </>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        this.props.parent.props.parent.dataWrapper.hasDsl() ?\r\n                            <>\r\n                                {this.renderInst()}\r\n                                <div className=\"spacer-big\" />\r\n                            </>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        this.props.parent.props.parent.dataWrapper.hasDsl() ?\r\n                            <>\r\n                                {this.renderPreviousAccessOwner()}\r\n                                <div className=\"spacer-big\" />\r\n                            </>\r\n                            : null\r\n                    }\r\n\r\n                    <Row>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LControl type={EControlType.text} value={this.customer.email}\r\n                                onChange={this.props.onChange} name=\"email\" id=\"email\" label=\"Email\"\r\n                                title=\"E-Mail-Adresse für Bestätigungs E-Mail\"\r\n                                validationOptions={\r\n                                    [\r\n                                        new ValidationOption({\r\n                                            type: EValidationOption.email,\r\n                                            message: ValidationMessages.errorEmail\r\n                                        })\r\n                                    ]\r\n                                } />\r\n                        </Col>\r\n                        <Col xs={6} md={6} className=\"npr\">\r\n                            <page.LControl type={EControlType.text} value={this.customer.email2}\r\n                                onChange={this.props.onChange} name=\"email2\" id=\"email2\" label=\"Email\"\r\n                                pasteDisabled={true}\r\n                                validationOptions={\r\n                                    [\r\n                                        new ValidationOption({ type: EValidationOption.email, message: ValidationMessages.errorEmail }),\r\n                                        new ValidationOption({ type: EValidationOption.match, message: ValidationMessages.errorEmailMatch, source: this.customer, targetMatch: 'email' })\r\n                                    ]\r\n                                } />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {this.props.data.currentBrand === BrandKeys.vodafone || this.props.data.currentBrand === BrandKeys.dsl || this.props.data.currentBrand === BrandKeys.otelo ? <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <page.LControl hideTitle={true} labelStyle={'tc-hint mwa'} type={EControlType.hint} label={this.props.data.currentBrand === BrandKeys.vodafone || this.props.data.currentBrand === BrandKeys.dsl ? MainTexts.vf_dsl_email_text : MainTexts.otelo_email_text} />\r\n                            <page.LClear />\r\n                        </Col>\r\n                    </Row> : <></>}\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <page.LControl type={EControlType.checkbox} onChange={this.props.onChange}\r\n                                checked={this.customer.emailApproved ? (this.customer.emailApproved > 0) : false}\r\n                                name=\"emailApproved\" id=\"emailApproved\"\r\n                                label=\"Bitte bestätigen Sie die E-Mail Adresse\"\r\n                                labelStyle=\"blue\" />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        //if only cable then no pw required\r\n                        noPasswordNeeded ? null :\r\n                            <Row>\r\n                                <Col xs={12} md={12} className=\"np\">\r\n                                    <page.LControl type={EControlType.text}\r\n                                        disabled={pwAdditional ? true : false}\r\n                                        value={pwAdditional ? pwAdditional : (this.customer.password ? this.customer.password : '')}\r\n                                        onChange={this.props.onChange} name=\"password\" id=\"password\"\r\n                                        validationOptions={[\r\n                                            new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                            new ValidationOption({ type: EValidationOption.password, message: ValidationMessages.errorPassword })\r\n                                        ]}\r\n                                        title={MainTexts.customerPassword} />\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n\r\n                    {\r\n                        this.props.parent.props.parent.current && !noPasswordNeeded && this.props.parent.props.parent.current.activationType != EActivationType.partnerCard ?\r\n                            <Row>\r\n                                <Col xs={12} md={12} className=\"np\">\r\n                                    <page.LControl hideTitle={true} labelStyle={'tc-hint mwa'} maxLength={30} type={EControlType.hint} label=\"Das Kunden-Kennwort muss aus mindestens 8 und höchstens 10 Zeichen bestehen. Es muss Buchstaben und Ziffern enthalten. Ä, Ö, Ü und ß sind nicht zulässig\" />\r\n                                    <page.LClear />\r\n                                </Col>\r\n                            </Row>\r\n                            : null\r\n                    }\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <page.LControl hideTitle={true} type={EControlType.hint} label=\"Hinweis: Die Vodafone GmbH darf meine Telefonnummer sowie meine Post- und E-Mail-Adresse nutzen, um mir per Messenger, SMS, MMS, Post und E-Mail Infos zur Beratung, zur Werbung für eigene ähnliche Angebote und zur Marktforschung zu schicken. Ich kann der Nutzung meiner Telefonnummer und Adressen zu diesem Zwecke jederzeit ganz oder teilweise schriftlich oder elektronisch für die Zukunft widersprechen.\" />\r\n                            <page.LClear />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public createDate(days, months, years) {\r\n        var date = new Date();\r\n        date.setDate(date.getDate() + days);\r\n        date.setMonth(date.getMonth() + months);\r\n        date.setFullYear(date.getFullYear() - years);\r\n        return date;\r\n    }\r\n\r\n    public renderDelivery() {\r\n        let dt: EActionAddressType = this.props.customer.deliveryType ? this.props.customer.deliveryType : EActionAddressType.sameAddress;\r\n        let bt: EActionAddressType = this.props.customer.payment && this.props.customer.payment.addressType ? this.props.customer.payment.addressType : EActionAddressType.sameAddress;\r\n        let del: PersonAndAddress = this.customer.delivery ? this.customer.delivery : new PersonAndAddress();\r\n\r\n        if (!del.person) {\r\n            del.person = { salutation: ESalutation.undefined, firstname: '', surname: '', birthday: new Date(), title: '' }\r\n        }\r\n\r\n        if (this.props.parent.props.parent.dataWrapper.hasUnityOnly()) {\r\n            return <></>\r\n        };\r\n\r\n        let ctrl = (\r\n            <>\r\n                <Row>\r\n                    <Col xs={12} md={12} className=\"np\">\r\n                        <page.LControl type={EControlType.title} title={OrderingTexts.productDeliveryAddress}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={12} className=\"np\">\r\n                        <page.LControl type={EControlType.radio} hideTitle={true}\r\n                            checked={dt === EActionAddressType.sameAddress}\r\n                            onChange={this.props.onChange} name=\"deliveryType\" id=\"deliveryType_1\"\r\n                            label={OrderingTexts.deliveryType1} />\r\n                    </Col>\r\n                    <Col xs={12} md={12} className=\"np\">\r\n                        <page.LControl type={EControlType.radio} hideTitle={true}\r\n                            checked={dt === EActionAddressType.differentAddress}\r\n                            onChange={this.props.onChange} name=\"deliveryType\" id=\"deliveryType_2\"\r\n                            label={OrderingTexts.deliveryType2} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {\r\n                    dt === EActionAddressType.differentAddress ?\r\n                        <>\r\n                            <Address onChange={this.props.onChange} showStrnAdditional={this.props.parent.props.parent.dataWrapper.hasKabel()} source={this.customer} prefix=\"delivery.address\"\r\n                                preview={false} />\r\n                            <Person prefix=\"delivery.person\" onChange={this.props.onChange}\r\n                                source={this.customer}\r\n                                salutation={del.person.salutation}\r\n                                firstname={del.person.firstname}\r\n                                surname={del.person.surname}\r\n                                title={del.person.title} />\r\n                            <Col xs={7} md={7} className=\"np\">\r\n                                <page.LDate\r\n                                    onChange={this.props.onChange}\r\n                                    datePicker={false}\r\n                                    mode={EDateInputMode.undefined}\r\n                                    value={this.customer.delivery ? this.customer.delivery.person.birthday : new Date()}\r\n                                    key={\"birthdayDelivery\"}\r\n                                    name={\"delivery.person.birthday\"} id={\"birthdayDelivery\"}\r\n                                    title={MainTexts.dateOfBirth}\r\n                                />\r\n                            </Col>\r\n                            <Tel prefix=\"delivery.tel\" onChange={this.props.onChange} source={this.customer} preview={false} />\r\n                            <Row>\r\n\r\n                            </Row>\r\n                            {this.props.parent.props.parent.dataWrapper.hasDsl() ? <></> : <Row>\r\n                                <Col xs={12} md={12} className=\"np\">\r\n                                    <page.LControl type={EControlType.text} title={MainTexts.telCallback}\r\n                                        value={del.callbackTime}\r\n                                        onChange={this.props.onChange} name=\"delivery.callbackTime\" id=\"delivery-callbackTime\"\r\n                                        label='z.b. gegen 9:00' />\r\n                                </Col>\r\n                            </Row>}\r\n                            {this.props.parent.props.parent.dataWrapper.hasDsl() ? <></> : <Row>\r\n                                <Col xs={6} md={6} className=\"np\">\r\n                                    <page.LDate title={MainTexts.deliverydate}\r\n                                        id={'deliveryDate'}\r\n                                        datePicker={true}\r\n                                        from={Global.dateOnly(Global.addDays(new Date(), 0))}\r\n                                        to={Global.dateOnly(Global.addDays(new Date(), 1827))}\r\n                                        hasKabel={this.props.parent.props.parent.dataWrapper.hasKabel()}\r\n                                        name={'delivery.deliveryDate'}\r\n                                        onChange={this.props.onChange}\r\n                                        value={this.customer.delivery ? this.customer.delivery.deliveryDate : new Date()}\r\n                                    />\r\n                                </Col>\r\n                            </Row>}\r\n                        </>\r\n                        : null\r\n                }\r\n\r\n                {\r\n                    this.props.parent.props.parent.dataWrapper.hasUnity() ?\r\n                        <>\r\n                            <Row>\r\n                                <Col xs={12} md={12} className=\"np\">\r\n                                    <page.LControl type={EControlType.title} title={OrderingTexts.billAddress}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={12} className=\"np\">\r\n                                    <page.LControl type={EControlType.radio} hideTitle={true}\r\n                                        checked={bt === EActionAddressType.sameAddress}\r\n                                        onChange={this.props.onChange} name=\"payment.addressType\" id=\"addressType_1\"\r\n                                        label={OrderingTexts.billAddress1} />\r\n                                </Col>\r\n                                <Col xs={12} md={12} className=\"np\">\r\n                                    <page.LControl type={EControlType.radio} hideTitle={true}\r\n                                        checked={bt === EActionAddressType.differentAddress}\r\n                                        onChange={this.props.onChange} name=\"payment.addressType\" id=\"addressType_2\"\r\n                                        label={OrderingTexts.billAddress2} />\r\n                                </Col>\r\n                            </Row>\r\n                            {\r\n                                this.customer.payment!.addressType == EActionAddressType.differentAddress ?\r\n                                    <Address onChange={this.props.onChange} source={this.customer} prefix=\"payment.address\"\r\n                                        preview={false} />\r\n                                    : null\r\n                            }\r\n                        </>\r\n                        : null\r\n                }\r\n\r\n                {/* {\r\n                    // numberprotation option is selected\r\n                    // 2020-03-21 sm not needed anymore but !!!!! dont delete !!!!\r\n                    this.props.parent.props.parent.dataWrapper.hasNumberProtability() ?\r\n                        <>\r\n                            <div className=\"spacer\" />\r\n                            <Row>\r\n                                <Col xs={12} md={12} className=\"\">\r\n                                    <page.LControl type={EControlType.title} title={MainTexts.numberPortability}\r\n                                         />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={12} className=\"\">\r\n                                    <Tel prefix=\"numberPort\"\r\n                                        telTypeHidden={true}\r\n                                        onChange={this.props.onChange}\r\n                                        source={this.customer} preview={false} />\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                        : null\r\n                } */}\r\n\r\n                {\r\n                    //special case tel is needed for Kabel\r\n                    dt === EActionAddressType.sameAddress && this.props.parent.props.parent.dataWrapper.hasKabel() ?\r\n                        <>\r\n                            <Tel prefix=\"delivery.tel\" onChange={this.props.onChange} source={this.customer} preview={false} />\r\n                            <Row>\r\n                                {/* <Col xs={12} md={12} className=\"np\">\r\n                                    <page.LControl type={EControlType.text} title={MainTexts.telCallback}\r\n                                        value={del.callbackTime}\r\n                                        onChange={this.props.onChange} name=\"delivery.callbackTime\" id=\"delivery-callbackTime\"\r\n                                        label='z.b. gegen 9:00' />\r\n                                </Col> */}\r\n                                <page.LTime value={del.callbackTime} name={\"delivery.callbackTime\"} id={'delivery-callbackTime'} onChange={this.props.onChange} />\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={6} md={6} className=\"np\">\r\n                                    <page.LDate title={MainTexts.deliverydate}\r\n                                        datePicker={true}\r\n                                        from={Global.dateOnly(Global.addDays(new Date(this.activations[0].activationDate), 1))}\r\n                                        to={Global.dateOnly(Global.addDays(new Date(), 1827))}\r\n                                        id={'deliveryDateKabel'}\r\n                                        name={'delivery.deliveryDate'}\r\n                                        hasKabel={this.props.parent.props.parent.dataWrapper.hasKabel()}\r\n                                        onChange={this.props.onChange}\r\n                                        value={this.customer.delivery ? this.customer.delivery.deliveryDate : Global.dateOnly(Global.addDays(new Date(this.activations[0].activationDate), 1))}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                        : null\r\n                }\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public renderPreviousAccessOwner() {\r\n\r\n        let prev: EPreviousAccessOwner = this.props.customer.prevOwner ? this.props.customer.prevOwner : EPreviousAccessOwner.noPreviousOwner;\r\n        let prevOwner: AccessOwner = this.props.customer.previousAccessOwner ? this.props.customer.previousAccessOwner : new AccessOwner();\r\n        let prevOwnerNumber: AccessNumber = this.props.customer.previousAccessNumber ? this.props.customer.previousAccessNumber : new AccessNumber();\r\n       \r\n        var avl = StorageHelper.getAvailability();\r\n        let br = linq.from<IAvailabilityBrand>(avl.brands).where(x => x.key === BrandKeys.dsl).firstOrDefault();\r\n\r\n        if (br && br.products && br.products.length > 0 && !this.props.customer.previousAccessNumber) {\r\n            this.props.customer.previousAccessNumber = new AccessNumber();\r\n            this.props.customer.previousAccessNumber.prefix = br.products[0].areaCode;\r\n        };\r\n\r\n        let ctrl = (\r\n            <>\r\n                <Row>\r\n                    <Col xs={12} md={12} className=\"np\">\r\n                        <page.LControl type={EControlType.title} title={OrderingTexts.previousAccessOwner} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={6} md={6} className=\"np\">\r\n                        <page.LControl type={EControlType.radio} hideTitle={true}\r\n                            checked={prev == EPreviousAccessOwner.previousOwner}\r\n                            onChange={this.props.onChange} name=\"prevOwner\" id=\"prevOwner-1\"\r\n                            label={OrderingTexts.previousAccessOwnerLabelYes} />\r\n                    </Col>\r\n                    <Col xs={6} md={6} className=\"np\">\r\n                        <page.LControl type={EControlType.radio} hideTitle={true}\r\n                            checked={prev == EPreviousAccessOwner.noPreviousOwner}\r\n                            onChange={this.props.onChange} name=\"prevOwner\" id=\"prevOwner-2\"\r\n                            label={OrderingTexts.previousAccessOwnerLabelNo} />\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    prev === EPreviousAccessOwner.previousOwner ?\r\n                        <>\r\n                            <Person prefix=\"previousAccessOwner\"\r\n                                onChange={this.props.onChange}\r\n                                source={this.customer}\r\n                                salutation={prevOwner.salutation}\r\n                                firstname={prevOwner.firstname}\r\n                                birthday={prevOwner.birthday}\r\n                                showBirthday={true}\r\n                                surname={prevOwner.surname}\r\n                                validationOptions={[\r\n                                    new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                    new ValidationOption({ type: EValidationOption.validateSurname, message: 'Es sind nur Buchstaben, Bindestriche und Leerzeichen zulässig und die Länge liegt zwischen 2 und 30 Zeichen.' })\r\n                                ]}\r\n                                hideTitle={true}\r\n                                title={''} />\r\n                            <Tel\r\n                                telTypeHidden={true}\r\n                                source={this.props.customer}\r\n                                onChange={this.props.onChange}\r\n                                prefix=\"previousAccessNumber\"\r\n                                preview={false}\r\n                                disablePrefix={true}\r\n                                titleTel={\"Festnetz\"}\r\n                            />\r\n                        </>\r\n                        : null\r\n                }\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public renderInst() {\r\n        let dt: EActionAddressType = this.props.customer.instType ? this.props.customer.instType : EActionAddressType.sameAddress;\r\n        let inst: PersonAndAddress = this.props.customer.inst ? this.props.customer.inst : new PersonAndAddress();\r\n\r\n        let ctrl = (\r\n            <>\r\n                <Row>\r\n                    <Col xs={12} md={12} className=\"np\">\r\n                        <page.LControl type={EControlType.title} title={OrderingTexts.installationAddress} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} md={12} className=\"np\">\r\n                        <page.LControl type={EControlType.radio} hideTitle={true}\r\n                            checked={dt === EActionAddressType.sameAddress}\r\n                            onChange={this.props.onChange} name=\"instType\" id=\"instType_1\"\r\n                            label={OrderingTexts.installationType1} />\r\n                    </Col>\r\n                    <Col xs={12} md={12} className=\"np\">\r\n                        <page.LControl type={EControlType.radio} hideTitle={true}\r\n                            checked={dt === EActionAddressType.differentAddress}\r\n                            onChange={this.props.onChange} name=\"instType\" id=\"instType_2\"\r\n                            label={OrderingTexts.installationType2} />\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    dt === EActionAddressType.differentAddress ?\r\n                        <>\r\n                            <Address onChange={this.props.onChange} source={this.customer}\r\n                                prefix=\"inst.address\" preview={false} />\r\n\r\n                            <Person prefix=\"inst.person\"\r\n                                onChange={this.props.onChange}\r\n                                source={this.customer}\r\n                                salutation={inst.person.salutation}\r\n                                firstname={inst.person.firstname}\r\n                                surname={inst.person.surname}\r\n                                title={inst.person.title} />\r\n                        </>\r\n                        : null\r\n                }\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default CustomerDataMain;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport * as page from '../../../components/page';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport { Address } from '../../../models';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { EActionAddressType, ECreditDebitType, EPaymentType } from '../../../models/ordering/order';\r\nimport { IPayment } from '../../../models/ordering/payment';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport Global from '../../../utils/Global';\r\nimport { OrderingTexts, ValidationMessages } from '../../../utils/messages';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\nimport { ActivationCustomerData } from '../process';\r\n\r\n\r\n\r\nexport interface ICustomerPaymentProps {\r\n    parent: ActivationCustomerData;\r\n    onChange: any;\r\n    payment?: IPayment;\r\n};\r\n\r\nexport interface ICustomerPaymentState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class CustomerPayment extends React.Component<ICustomerPaymentProps, ICustomerPaymentState> {\r\n    private payment: IPayment;\r\n    constructor(props: ICustomerPaymentProps) {\r\n        super(props);\r\n\r\n        this.payment = this.props.payment ? this.props.payment : { owner: \"\", paymentType: EPaymentType.bank, addressType: EActionAddressType.sameAddress, address: new Address()};\r\n        this.payment.iban = '';\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: any) {\r\n        if(next.payment) {\r\n            this.payment = next.payment;\r\n        }\r\n        this.setState({changed: true});\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.payment,\r\n            transparent: false\r\n        };\r\n\r\n        let unityOnly = this.props.parent.props.parent.dataWrapper.hasUnityOnly();\r\n        let oteloOnly = this.props.parent.props.parent.dataWrapper.hasOteloOnly();\r\n        let oteloPrepaid = this.props.parent.props.parent.dataWrapper.hasOteloPrepaid();\r\n        let age = Global.getAgeFromDate(this.props.parent.props.parent.data.customer.birthday);\r\n\r\n        let canIban = true;\r\n\r\n        if(oteloPrepaid && age < 18){\r\n            canIban = false;\r\n        }\r\n\r\n        if(!oteloOnly && !canIban) {\r\n            return <></>\r\n        }\r\n\r\n        if(!canIban) {\r\n            this.props.payment!.paymentType = EPaymentType.cash;\r\n        }\r\n\r\n        if(unityOnly) {\r\n            if(!this.props.parent.props.parent.data.customer.payment) {\r\n                this.props.parent.props.parent.data.customer.payment = this.props.payment;\r\n            };\r\n\r\n            this.props.parent.props.parent.data.customer.payment!.owner = \r\n                this.props.parent.props.parent.data.customer.firstname + ' ' + this.props.parent.props.parent.data.customer.surname\r\n        }\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    <Row>\r\n                        {\r\n                            canIban ? \r\n                            <Col xs={4} md={4} className=\"np\">\r\n                                <page.LControl type={EControlType.radio} hideTitle={true}\r\n                                        checked={this.payment.paymentType === EPaymentType.iban}\r\n                                        onChange={this.props.onChange} name=\"payment.paymentType\" \r\n                                        id=\"paymentType_1\" label={OrderingTexts.payment1}/>\r\n                            </Col>\r\n                            : null\r\n                        }\r\n\r\n\r\n                        {\r\n                            this.props.parent.props.parent.current \r\n                            && this.props.parent.props.parent.current.creditDebitType === ECreditDebitType.prepaid \r\n                            && (!this.props.parent.props.customer.topup || (this.props.parent.props.customer.topup && this.props.parent.props.customer.topup.amount == 0))\r\n                            ?\r\n                            <Col xs={4} md={4} className=\"np\">\r\n                                <page.LControl type={EControlType.radio} \r\n                                        hideTitle={true}\r\n                                        checked={this.payment.paymentType === EPaymentType.cash}\r\n                                        onChange={this.props.onChange} name=\"payment.paymentType\" \r\n                                        id=\"paymentType_4\" label={OrderingTexts.payment4}/>\r\n                            </Col>                                          \r\n                            : null\r\n                        }\r\n                    </Row>                    \r\n\r\n                    <Row>\r\n                        {\r\n                            canIban && this.payment.paymentType === EPaymentType.iban ?\r\n                            <Col xs={6} md={6} className=\"npr\">\r\n                                <page.LControl type={EControlType.text} onChange={this.props.onChange} \r\n                                maxLength={22}\r\n                                  validationOptions={ \r\n                                    [\r\n                                        new ValidationOption({type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                        \r\n                                    ]\r\n                                } \r\n                                    name=\"payment.iban\" id=\"iban\" label={OrderingTexts.payment1} value={this.payment.iban}/>\r\n                            </Col>  \r\n                            : null\r\n                        }   \r\n                        {\r\n                            canIban && (this.payment.paymentType === EPaymentType.bank || this.payment.paymentType === EPaymentType.iban) ?\r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl type={EControlType.text} onChange={this.props.onChange} \r\n                                maxLength={32}\r\n                                    preview={unityOnly}\r\n                                    name=\"payment.owner\" id=\"owner\" label=\"Kontoinhaber\" \r\n                                    validationOptions={[\r\n                                        new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError }),\r\n                                        new ValidationOption({ type: EValidationOption.validateNames, message: 'Der Kontoinhaber beginnt mit einem Großbuchstaben. Die Eingabe sollte nur aus Buchstaben, Bindestrichen und Leezeichen bestehen' })\r\n                                    ]}\r\n                                    value={this.payment.owner}/>\r\n                            </Col>\r\n                            : null\r\n                        }\r\n                            \r\n\r\n                        {\r\n                            canIban && this.payment.paymentType === EPaymentType.bank ?\r\n                            <>\r\n                                <Col xs={6} md={6} className=\"npr\">\r\n                                    <page.LControl type={EControlType.text} onChange={this.props.onChange} \r\n                                        name=\"payment.bankId\" id=\"bankId\" label=\"BLZ\" value={this.payment.bankId}/>\r\n                                </Col>  \r\n                                <Col xs={6} md={6} className=\"np\">\r\n                                    <page.LControl type={EControlType.text} onChange={this.props.onChange} \r\n                                        name=\"payment.accountId\" id=\"accountId\" label=\"Kontonummer\" value={this.payment.accountId}/>\r\n                                </Col>\r\n                            </>\r\n                            : null\r\n                        }                                                               \r\n                    </Row>\r\n\r\n                    \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };    \r\n};\r\n\r\nexport default CustomerPayment;","import * as React from 'react';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport ActivationCustomerData from '../process/activationCustomerData';\r\nimport * as page from '../../page/index';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport { IBew } from '../../../models/ordering/bew';\r\n\r\nexport interface ICustomerConsultingProps {\r\n    parent: ActivationCustomerData;\r\n    onChange: any;\r\n    bew?: IBew;\r\n};\r\n\r\nexport interface ICustomerConsultingState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class CustomerConsulting extends React.Component<ICustomerConsultingProps, ICustomerConsultingState> {\r\n    private bew: IBew;\r\n    constructor(props: ICustomerConsultingProps) {\r\n        super(props);\r\n\r\n        this.bew = this.props.bew ? this.props.bew  : {consulting1: false, consulting2: false};\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: ICustomerConsultingProps) {\r\n        this.bew = this.props.bew ? this.props.bew  : {consulting1: false, consulting2: false};\r\n        this.setState({changed: true});\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: 'Beratungseinwilligung',\r\n            transparent: false\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>\r\n                    {/* fix for kabel not displaying */}\r\n                    <div className=\"dn\">  \r\n                            <page.LControl \r\n                                onChange={this.props.onChange} \r\n                                checked = { this.bew && this.bew.consulting1 } \r\n                                type={EControlType.checkbox} hideTitle={true} \r\n                                style=\"check\"\r\n                                visible={true}\r\n                                name=\"bew.consulting1\" id=\"consulting1_true\" label=\"\"/>   \r\n                            <page.LControl onChange={this.props.onChange} \r\n                                checked = { this.bew && this.bew.consulting2 } \r\n                                type={EControlType.checkbox} hideTitle={true} \r\n                                style=\"check\"\r\n                                visible={true}\r\n                                name=\"bew.consulting2\" id=\"consulting2_true\" label=\"\"/>                                                                     \r\n                    </div>\r\n                    <Row>\r\n                        <Col xs={1} md={1} className=\"np\">\r\n                            <page.LControl \r\n                                onChange={this.props.onChange} \r\n                                checked = { this.bew && this.bew.consulting1 } \r\n                                type={EControlType.checkbox} hideTitle={true} \r\n                                style=\"check\"\r\n                                visible={true}\r\n                                name=\"bew.consulting1\" id=\"consulting1_true\" label=\"\"/>                                                         \r\n                        </Col>\r\n                        <Col xs={11} md={11} className=\"npr\">\r\n                            <page.LControl type={EControlType.hint} label=\"Ja, ich willige ein, dass die Vodafone GmbH* <br/>als Inhaberin der Marke otelo und die Vodafone Kabel Deutschland GmbH* meine Bestandsdaten untereinander austauschen, um mich individuell zu beraten, für ihre Angebote zu werben und Marktforschung zu betreiben. Meine Bestandsdaten sind Angaben rund um mein Vertragsverhältnis, z.B. Name, Adresse und Geburtsdatum sowie Tarife, Optionen und Services. Ja, ich willige ein, dass meine Nutzungsdaten und meine Verkehrsdaten höchstens 6 Monate verwendet werden, um Telekommunikations- und Telemedien-Dienste bedarfsgerecht und individuell zu gestalten und zu vermarkten sowie Dienste mit Zusatznutzen für mich bereitzustellen. Meine Nutzungsdaten sind Informationen über Art, Umfang und Zeitpunkt der Nutzung der Webseiten von otelo/Vodafone, Vodafone Kabel Deutschland oder Kooperations- und Werbepartnern. Die Daten identifizieren mich oder mein Gerät direkt und sind zum Teil in meinem Gerät gespeichert, z.B. als Cookies. Meine Verkehrsdaten sind z.B. die Art des genutzten Telekommunikationsdienstes, Anfang, Ende und Dauer der Verbindungen, das genutzte Datenvolumen, an der Kommunikation beteiligte Personen, Geräte oder Anschlüsse sowie deren Standorte. Ich kann meine Einwilligung jederzeit ganz oder teilweise mit Wirkung für die Zukunft widerrufen. *Die Vodafone GmbH, Ferdinand-Braun-Platz 1, 40549 Düsseldorf (Vodafone) und die Vodafone Kabel Deutschland GmbH, Betastraße 6-8, 85774 Unterföhring (Vodafone Kabel Deutschland) sind wirtschaftlich ein Unternehmen und bieten Telekommunikationsdienstleistungen an, die sich ergänzen.\"/>\r\n                        </Col>                        \r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={1} md={1} className=\"np\">\r\n                            <page.LControl onChange={this.props.onChange} \r\n                                checked = { this.bew && this.bew.consulting2 } \r\n                                type={EControlType.checkbox} hideTitle={true} \r\n                                style=\"check\"\r\n                                visible={true}\r\n                                name=\"bew.consulting2\" id=\"consulting2_true\" label=\"\"/>                                                            \r\n                        </Col>\r\n                        <Col xs={11} md={11} className=\"npr\">\r\n                            <page.LControl type={EControlType.hint} label=\"Ja, ich willige ein, dass Vodafone und Vodafone Kabel Deutschland mich telefonisch, per E-Mail, Messenger, SMS und MMS über Angebote von otelo/Vodafone und Vodafone Kabel Deutschland informieren. Ich kann meine Einwilligung jederzeit ganz oder teilweise mit Wirkung für die Zukunft widerrufen.\"/>\r\n                        </Col>                        \r\n                    </Row>\r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };    \r\n};\r\n\r\nexport default CustomerConsulting;","import * as React from 'react';\r\nimport ProcessNewScreen from '../../../screens/ordering/process';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport BaseBlock from '../../../components/page/block';\r\nimport ActivationCustomerData from '../process/activationCustomerData';\r\nimport * as page from '../../page/index';\r\nimport { ELButtonType } from '../../../models/page/diverse';\r\nimport { MainTexts } from '../../../utils/messages';\r\n\r\nexport interface ICustomerActionProps {\r\n    parent: ActivationCustomerData\r\n};\r\n\r\nexport interface ICustomerActionState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class CustomerAction extends React.Component<ICustomerActionProps, ICustomerActionState> {\r\n    constructor(props: ICustomerActionProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: '',\r\n            transparent: true,\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container className=\"container-action\">\r\n                    <Row>\r\n                        <Col xs={4} md={4}>\r\n                            <page.LButton text={MainTexts.back} \r\n                                onClick={this.props.parent.onBack} \r\n                                type={ELButtonType.linkSimple} \r\n                                css=\"action3\"\r\n                                icon=\"chevron\"/>\r\n                        </Col>\r\n                        <Col xs={8} md={8} className=\"toright\">                      \r\n                            <page.LButton text={MainTexts.next}\r\n                                css=\"fr\"\r\n                                onClick={this.props.parent.onNext} \r\n                                type={ELButtonType.buttonWithIconRight} \r\n                                icon=\"arrow-right\"/>      \r\n                            {/* <page.LButton text={MainTexts.save}\r\n                                type={ELButtonType.linkSimple} \r\n                                css=\"action fr\"\r\n                                icon=\"chevron\"/>                                                             */}\r\n                        </Col>\r\n                    </Row>                                \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };    \r\n};\r\n\r\nexport default CustomerAction;","import linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { ESalutation } from '../../../models/ordering/order';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport { IControlValue, IKeyText, IListItem } from '../../../models/page/interfaces';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport { MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport BelatedPorting from '../../existing/data/Belatedporting';\r\nimport BaseBlock from '../../page/block';\r\nimport { EDateType } from '../../page/date';\r\nimport * as page from '../../page/index';\r\nimport Person from '../global/person';\r\nimport ActivationCustomerData from '../process/activationCustomerData';\r\n\r\nexport interface ICustomerMnpProps {\r\n    parent: ActivationCustomerData | BelatedPorting;\r\n    onChange: any;\r\n    //mnp?: m.IMnp;\r\n    customer: ICustomer;\r\n    preview: boolean;\r\n};\r\n\r\nexport interface ICustomerMnpState extends IBaseComponentState {\r\n    customer: ICustomer;\r\n}\r\n\r\nexport class CustomerMnp extends React.Component<ICustomerMnpProps, ICustomerMnpState> {\r\n    //private mnp: m.IMnp;\r\n    private all: IListItem[];\r\n\r\n    constructor(props: ICustomerMnpProps) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.all = StorageHelper.getSupport().networks;\r\n\r\n        //this.mnp = this.props.mnp ? this.props.mnp : { provider: '', network: '', differentCustomer: false, birthday: new Date() };\r\n\r\n        let customer = this.props.customer;\r\n\r\n        if (!customer.mnp) {\r\n            customer.mnp = { provider: '', network: '', differentCustomer: false, birthday: new Date() };\r\n            customer.mnp.differentCustomer = false;\r\n            customer.mnp.birthday = new Date();\r\n            customer.mnp.cancellationDate = new Date();\r\n            customer.mnp.contractEndDate = new Date();\r\n\r\n\r\n            customer.bew\r\n        };\r\n\r\n        if(customer.mnp && !customer.mnp.cancellationDate){\r\n            customer.mnp.cancellationDate = new Date();\r\n        }\r\n        if(customer.mnp && !customer.mnp.contractEndDate){\r\n            customer.mnp.contractEndDate = new Date();\r\n        }\r\n\r\n        this.state = {\r\n            changed: false,\r\n            customer: customer\r\n        };\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.mnpContract,\r\n            transparent: false\r\n        };\r\n\r\n        let portBrand = this.props.parent.props.parent.dataWrapper.getPortationBrand();\r\n\r\n        let inCdChange = this.props.parent.props.parent.dataWrapper.hasCdChange();\r\n\r\n        let network = <></>;\r\n\r\n        if (portBrand === BrandKeys.otelo && this.props.parent instanceof ActivationCustomerData) {\r\n            network = <page.LControl type={EControlType.dropdown} value={this.state.customer.mnp ? this.state.customer.mnp.network : ''}\r\n                preview={this.props.preview}\r\n                onChange={this.onChange} name=\"mnp.network\" id=\"network\" title={OrderingTexts.mnpNetwork}\r\n                options={this.getNetworks(portBrand)} />\r\n        } else if (this.props.parent instanceof BelatedPorting) {\r\n            network = <page.LControl type={EControlType.dropdown} value={this.state.customer.mnp ? this.state.customer.mnp.network : ''}\r\n                preview={this.props.preview}\r\n                onChange={this.onChange} name=\"mnp.network\" id=\"network\" title={OrderingTexts.mnpNetwork}\r\n                options={this.getNetworks(portBrand)} />\r\n        };\r\n\r\n        const ctrl =\r\n            <>\r\n                <Row>\r\n                    {network}\r\n\r\n                    <Col xs={6} md={6} className=\"npr\">\r\n                        <page.LControl type={EControlType.dropdown} value={this.state.customer.mnp ? this.state.customer.mnp.provider : ''}\r\n                            preview={this.props.preview}\r\n                            onChange={this.onChange} name=\"mnp.provider\" id=\"provider\" title={OrderingTexts.mnpProvider}\r\n                            options={this.getProviders(portBrand)} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {\r\n                    (portBrand !== BrandKeys.dsl && portBrand !== BrandKeys.kabel) && this.props.parent instanceof ActivationCustomerData ?\r\n                        <Row>\r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl type={EControlType.radio}\r\n                                    checked={this.state.customer.mnp && !this.state.customer.mnp.differentCustomer}\r\n                                    preview={this.props.preview}\r\n                                    onChange={this.props.onChange} name=\"mnp.differentCustomer\" id=\"differentCustomer_0\"\r\n                                    title={OrderingTexts.mnpSameCustomer} />\r\n                            </Col>\r\n                            <Col xs={6} md={6} className=\"npr\">\r\n                                <page.LControl type={EControlType.radio}\r\n                                    checked={this.state.customer.mnp && this.state.customer.mnp.differentCustomer}\r\n                                    preview={this.props.preview}\r\n                                    onChange={this.props.onChange} name=\"mnp.differentCustomer\" id=\"differentCustomer_1\"\r\n                                    title={OrderingTexts.mnpDiffCustomer} />\r\n                            </Col>\r\n                        </Row>\r\n                        : null\r\n                }\r\n\r\n                {\r\n                    (portBrand !== BrandKeys.dsl) && this.props.parent instanceof ActivationCustomerData && (this.props.parent.props.parent.dataWrapper.hasVodafoneWithMnp() || this.props.parent.props.parent.dataWrapper.hasCableWithMnp()) ?\r\n                        <Row>\r\n                            {\r\n                                portBrand == BrandKeys.kabel && this.state.customer.mnp && this.state.customer.mnp.provider !== 'DEU.VFDE' ?\r\n                                    null :\r\n                                    <Col xs={6} md={6} className=\"np\">\r\n                                        <page.LControl type={EControlType.text}\r\n                                            value={this.state.customer.mnp ? this.state.customer.mnp.customerNr : ''}\r\n                                            preview={this.props.preview}\r\n                                            onChange={this.onChange} name=\"mnp.customerNr\" id=\"customerNr\"\r\n                                            title={OrderingTexts.mnpCustomerNr}\r\n                                            options={this.getProviders(portBrand)} />\r\n                                    </Col>\r\n                            }\r\n                            {\r\n                                portBrand !== BrandKeys.kabel ?\r\n                                    <>\r\n                                        <Col xs={6} md={6} className=\"npr\">\r\n                                            {this.props.parent.props.parent.dataWrapper.hasVodafoneWithMnpANDPortierungandASAP() ? <></> : <page.LDate onChange={this.props.onChange}\r\n                                                preview={this.props.preview}\r\n                                                datePicker={true}\r\n                                                value={this.state.customer.mnp ? this.state.customer.mnp.contractEndDate : new Date()}\r\n                                                from={Global.dateOnly(Global.addDays(new Date(), 0))}\r\n                                                to={Global.dateOnly(Global.addDays(new Date(), 720))}\r\n                                                type={EDateType.fixedStart}\r\n                                                name=\"mnp.contractEndDate\" id=\"contractEndDate\"\r\n                                                title={OrderingTexts.mnpContractEnd} />\r\n                                            }\r\n                                        </Col>\r\n                                        {\r\n                                            inCdChange ? null :\r\n                                                <Col xs={6} md={6} className=\"np\">\r\n                                                    <page.LDate onChange={this.props.onChange}\r\n                                                        preview={this.props.preview}\r\n                                                        datePicker={true}\r\n                                                        type={EDateType.fixedStart}\r\n                                                        //  from={Global.dateOnly(Global.addDays(new Date(), 0))}\r\n                                                        from={undefined}\r\n                                                        to={Global.dateOnly(Global.addDays(new Date(), 720))}\r\n                                                        value={this.state.customer.mnp ? this.state.customer.mnp.cancellationDate : new Date()}\r\n                                                        name=\"mnp.cancellationDate\" id=\"cancellationDate\" title={OrderingTexts.mnpCancellationDate} />\r\n                                                </Col>\r\n                                        }\r\n\r\n                                    </> : null\r\n                            }\r\n                        </Row>\r\n                        : null\r\n                }\r\n\r\n                {\r\n                    (portBrand !== BrandKeys.dsl && portBrand !== BrandKeys.kabel) && this.props.parent instanceof ActivationCustomerData && this.state.customer.mnp && this.state.customer.mnp.differentCustomer ?\r\n                        <Person prefix=\"mnp\"\r\n                            title='Kunde'\r\n                            showBirthday={true}\r\n                            onChange={this.props.onChange}\r\n                            source={this.state.customer}\r\n                            salutation={this.state.customer.mnp && this.state.customer.mnp.salutation ? this.state.customer.mnp.salutation : ESalutation.mr}\r\n                            firstname={this.state.customer.mnp && this.state.customer.mnp.firstname ? this.state.customer.mnp.firstname : ''}\r\n                            surname={this.state.customer.mnp && this.state.customer.mnp.surname ? this.state.customer.mnp.surname : ''}\r\n                            birthday={this.state.customer.mnp ? this.state.customer.mnp.birthday : new Date()} />\r\n                        : null\r\n                }\r\n            </>;\r\n\r\n        let container = <>{ctrl}</>;\r\n\r\n        if (!(this.props.parent instanceof BelatedPorting)) {\r\n            container = <BaseBlock config={cfg}>\r\n                <Container>\r\n                    {ctrl}\r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        };\r\n\r\n        return container;\r\n    };\r\n\r\n    private onChange(e: IControlValue) {\r\n        let customer = this.state.customer;\r\n\r\n        if (e && e.id == 'network' && customer.mnp) {\r\n            customer.mnp.provider = '';\r\n        };\r\n\r\n        Global.onInput(customer, e, () => {\r\n            this.setState({ customer: customer });\r\n        });\r\n\r\n        this.props.onChange(e);\r\n    };\r\n\r\n    private getNetworks(brand: string): IKeyText[] {\r\n        let res: IKeyText[] = [{ key: \"\", text: MainTexts.pleaseSelect }];\r\n\r\n        let res1 = linq.from<IListItem>(this.all)\r\n            .where(x => x.value !== BrandKeys.vodafone)\r\n            .orderByDescending(x => x.text)\r\n            .select((x, i) => {\r\n                return { key: x.value, text: x.text };\r\n            })\r\n            .cast<IKeyText>()\r\n            .toArray();\r\n\r\n        res1.map((i, idx) => { res.push(i); });\r\n\r\n        return res;\r\n    };\r\n\r\n    private getProviders(brand: string): IKeyText[] {\r\n        if (this.state.customer.mnp && !this.state.customer.mnp.network) {\r\n            this.state.customer.mnp.network = this.all[0].value;\r\n        };\r\n\r\n        if ((brand === BrandKeys.vodafone || brand === BrandKeys.dsl || brand === BrandKeys.kabel) && this.state.customer.mnp) {\r\n            this.state.customer.mnp.network = brand; //linq.from<IListItem>(this.all).where(x=>x.text === brand).first();\r\n        };\r\n\r\n        let res: IKeyText[] = [{ key: \"\", text: MainTexts.pleaseSelect }];\r\n\r\n        let net = linq.from<IListItem>(this.all)\r\n            .where(x => x.value == (this.state.customer.mnp ? this.state.customer.mnp.network : ''))\r\n            .first();\r\n\r\n        let res1 = linq.from<IListItem>(net.children)\r\n            .select((x, i) => {\r\n                return { key: x.value, text: x.text };\r\n            })\r\n            //.cast<IKeyText>()\r\n            .toArray();\r\n\r\n        res1.map((i, idx) => { res.push(i); });\r\n\r\n        return res;\r\n    };\r\n};\r\n\r\nexport default CustomerMnp;","import * as React from 'react';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport BaseBlock from '../../page/block';\r\nimport ActivationCustomerData from '../process/activationCustomerData';\r\nimport * as page from '../../page/index';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport * as m from '../../../models/index';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport linq from 'linq';\r\nimport { IListItem, IKeyText } from '../../../models/page/interfaces';\r\nimport { MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { EPhonebookType } from '../../../models/ordering/order';\r\nimport { IDesiredSchedule } from '../../../models/ordering/desiredSchedule';\r\n\r\nexport interface ICustomerDesiredScheduleProps {\r\n    parent: ActivationCustomerData;\r\n    customer: ICustomer;\r\n    onChange: any;\r\n};\r\n\r\nexport interface ICustomerDesiredScheduleState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class CustomerDesiredSchedule extends React.Component<ICustomerDesiredScheduleProps, ICustomerDesiredScheduleState> {\r\n    constructor(props: ICustomerDesiredScheduleProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: ICustomerDesiredScheduleProps) {\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.desiredSchedule,\r\n            // titleDesc:OrderingTexts.forDSL,\r\n            transparent: false\r\n        };\r\n\r\n        let ds: IDesiredSchedule = this.props.customer.installationSchedule ? this.props.customer.installationSchedule : { dateType: m.EDesiredSchedule.asap, date: new Date() };\r\n        let dateVisible:boolean = ds.dateType === m.EDesiredSchedule.custom;\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>            \r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <page.LControl type={EControlType.radio} hideTitle={true}\r\n                                    checked={ds.dateType === m.EDesiredSchedule.asap}\r\n                                    onChange={this.props.onChange} name=\"installationSchedule.dateType\" id=\"dateType_1\" label={OrderingTexts.desiredSchedule1}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={12} className=\"np\">\r\n                            <page.LControl type={EControlType.radio} hideTitle={true}\r\n                                    checked={ds.dateType === m.EDesiredSchedule.custom}\r\n                                    onChange={this.props.onChange} name=\"installationSchedule.dateType\" id=\"dateType_2\" label={OrderingTexts.desiredSchedule2}/>\r\n                        </Col>\r\n                    </Row>      \r\n                    {\r\n                        dateVisible ? \r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                <page.LDate value={ds.date} title={\"\"} \r\n                                datePicker = {true}\r\n                                    onChange={this.props.onChange} name=\"installationSchedule.date\" id=\"installationSchedule-date\"/>\r\n                            </Col>                         \r\n                        </Row>\r\n                        : null\r\n                    }\r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };               \r\n};\r\n\r\nexport default CustomerDesiredSchedule;","import * as React from 'react';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport BaseBlock from '../../page/block';\r\nimport ActivationCustomerData from '../process/activationCustomerData';\r\nimport * as page from '../../page/index';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport * as m from '../../../models/index';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport linq from 'linq';\r\nimport { IListItem, IKeyText } from '../../../models/page/interfaces';\r\nimport { MainTexts, OrderingTexts } from '../../../utils/messages';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { EPhonebookType } from '../../../models/ordering/order';\r\n\r\nexport interface ICustomerPhonebookProps {\r\n    parent: ActivationCustomerData;\r\n    customer: ICustomer;\r\n    onChange: any;\r\n};\r\n\r\nexport interface ICustomerPhonebookState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class CustomerPhonebook extends React.Component<ICustomerPhonebookProps, ICustomerPhonebookState> {\r\n    constructor(props: ICustomerPhonebookProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: ICustomerPhonebookProps) {\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.phoneBookEntry,\r\n            titleDesc:OrderingTexts.forDSL,\r\n            transparent: false\r\n        };\r\n\r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>            \r\n                    <div className=\"spacer-dim2\"></div>\r\n                    <Row>\r\n                        <Col className=\"np\">\r\n                            <page.LControl type={EControlType.hint} label=\"Telefonbucheintrag gewünscht?\"/>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"spacer-dim2\"></div>\r\n                    <Row>\r\n                        <Col xs={4} md={4} className=\"np\">\r\n                            <page.LControl type={EControlType.radio} \r\n                                    checked={this.props.customer.phonebook === EPhonebookType.no}\r\n                                    onChange={this.props.onChange} name=\"phonebook\" id=\"phonebook_0\" title={MainTexts.no}/>\r\n                        </Col>\r\n                        <Col xs={4} md={4} className=\"npr\">\r\n                            <page.LControl type={EControlType.radio} \r\n                                    checked={this.props.customer.phonebook === EPhonebookType.yesDefault}\r\n                                    onChange={this.props.onChange} name=\"phonebook\" id=\"phonebook_1\" title={OrderingTexts.phoneBook1}/>\r\n                        </Col>\r\n                        {/* <Col xs={4} md={4} className=\"npr\">\r\n                            <page.LControl type={EControlType.radio} \r\n                                    checked={this.props.customer.phonebook === EPhonebookType.yesIndividual}\r\n                                    onChange={this.props.onChange} name=\"phonebook\" id=\"phonebook_2\" title={OrderingTexts.phoneBook2}/>\r\n                        </Col>                                            */}\r\n                    </Row>            \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };        \r\n};\r\n\r\nexport default CustomerPhonebook;","import * as React from 'react';\r\nimport { IBlockConfiguration } from '../../../models/block/configuration';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport BaseBlock from '../../page/block';\r\nimport ActivationCustomerData from '../process/activationCustomerData';\r\nimport * as page from '../../page/index';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport * as m from '../../../models/index';\r\nimport StorageHelper from '../../../utils/storage';\r\nimport linq from 'linq';\r\nimport { IListItem, IKeyText } from '../../../models/page/interfaces';\r\nimport { MainTexts, OrderingTexts, ValidationMessages } from '../../../utils/messages';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { EPaymentType, EPhonebookType, ETopupType } from '../../../models/ordering/order';\r\nimport { IBaseComponentState } from '../../../interfaces';\r\nimport { ITopup } from '../../../models/index';\r\nimport Global from '../../../utils/Global';\r\nimport { EPagingType } from '../../page/table';\r\nimport ValidationOption, { EValidationOption } from '../../../utils/validation/validationOption';\r\n\r\nexport interface ICustomerTopupProps {\r\n    parent: ActivationCustomerData;\r\n    topup?: ITopup;\r\n    onChange: any;\r\n};\r\n\r\nexport class CustomerTopup extends React.Component<ICustomerTopupProps, IBaseComponentState> {\r\n    constructor(props: ICustomerTopupProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: ICustomerTopupProps) {\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: OrderingTexts.autotopup,\r\n            titleDesc:OrderingTexts.forOtelo,\r\n            transparent: false\r\n        };\r\n\r\n        if(!this.props.parent.props.parent.dataWrapper.needTopUp()) {\r\n            return <></>\r\n        };\r\n\r\n        let topup: ITopup = this.props.topup ? this.props.topup : {amount:0, amountSingle: 0, trigger: 0, type: ETopupType.undefined};\r\n        \r\n        let ctrl = (\r\n            <BaseBlock config={cfg}>\r\n                <Container>            \r\n                    <div className=\"spacer-dim2\"></div>\r\n                    <Row>\r\n                        <Col className=\"np\">\r\n                            <page.LControl type={EControlType.hint} label={OrderingTexts.autotopup}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"spacer-dim2\"></div>\r\n                    <Row>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LControl type={EControlType.dropdown} value={topup.amount} \r\n                                onChange={(e)=>{\r\n                                    if(e.value > 0) {\r\n                                        this.props.parent.props.parent.data.customer.payment!.paymentType = EPaymentType.iban;\r\n                                    } \r\n\r\n                                    this.props.onChange(e);\r\n                                }} name=\"topup.amount\" id=\"amount\" title={OrderingTexts.amount} \r\n                                options={this.getAmounts()}/>\r\n                        </Col>\r\n\r\n                        {\r\n                            this.props.parent.props.parent.data.customer.topup && this.props.parent.props.parent.data.customer.topup.amount > 0 ?\r\n                            <Col xs={6} md={6} className=\"npr\">\r\n                                <page.LControl type={EControlType.dropdown} value={topup.trigger} \r\n                                    onChange={this.props.onChange} name=\"topup.trigger\" id=\"trigger\" title={OrderingTexts.atTrigger} \r\n                                    options={this.getTriggers()}\r\n                                    validationOptions={[\r\n                                        new ValidationOption({ type: EValidationOption.required, message: ValidationMessages.requiredError })\r\n                                    ]}/>\r\n                            </Col> \r\n                            : null\r\n                        }                                      \r\n                    </Row>   \r\n                    <div className=\"spacer-dim2\"></div>        \r\n                    <Row>\r\n                        <Col className=\"np\">\r\n                            <page.LControl type={EControlType.hint} label={OrderingTexts.singeltopup}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"spacer-dim2\"></div>\r\n                    <Row>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            <page.LControl type={EControlType.dropdown} value={topup.amountSingle} \r\n                                onChange={this.props.onChange} name=\"topup.amountSingle\" id=\"amount\" title={OrderingTexts.amount} \r\n                                options={this.getNow()}/>\r\n                        </Col>                                   \r\n                    </Row>                        \r\n                </Container>\r\n                <page.LClear />\r\n            </BaseBlock>\r\n        );\r\n\r\n        return ctrl;\r\n    };     \r\n    \r\n    private getAmounts() : IKeyText[] {\r\n        let op: IKeyText[] = new Array();\r\n        op = [\r\n            {key: '0', text: OrderingTexts.noComfort},\r\n            {key: '9', text: '9 €'},\r\n            {key: '15', text: '15 €'},\r\n            {key: '19', text: '19 €'},\r\n            {key: '25', text: '25 €'},\r\n            {key: '29', text: '29 €'},\r\n        ];\r\n        return op;\r\n    };  \r\n    \r\n    private getTriggers() : IKeyText[] {\r\n        let op: IKeyText[] = new Array();\r\n        op = [\r\n            {key: '0', text: MainTexts.pleaseSelect},\r\n            {key: '5', text: '5 €'},\r\n            {key: '15', text: '15 €'},\r\n            {key: '50', text: '50 €'},\r\n        ];\r\n        return op;\r\n    };      \r\n\r\n    private getNow() : IKeyText[] {\r\n        let op: IKeyText[] = new Array();\r\n        op = [\r\n            {key: '0', text: OrderingTexts.noSofort},\r\n            {key: '5', text: '5 €'},\r\n            {key: '15', text: '15 €'},\r\n            {key: '50', text: '50 €'},\r\n        ];\r\n        return op;\r\n    };     \r\n};\r\n\r\nexport default CustomerTopup;","export {default as CustomerConsent} from \"./consent\";\r\nexport {default as CustomerEVN} from \"./evn\";\r\nexport {default as CustomerDSL} from \"./dsl\";\r\nexport {default as CustomerLegitimation} from \"./legitimation\";\r\nexport {default as CustomerDataMain} from \"./main\";\r\nexport {default as CustomerPayment} from \"./payment\";\r\nexport {default as CustomerConsulting} from \"./consulting\";\r\nexport {default as CustomerAction} from \"./action\";\r\nexport {default as CustomerMnp} from \"./mnp\";\r\nexport {default as CustomerPhonebook} from './phonebook';\r\nexport {default as CustomerDesiredSchedule} from './desiredSchedule';\r\nexport {default as CustomerTopup} from './topup';","import * as React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Global from '../../../utils/Global';\r\nimport { EControlType, ETelType } from '../../../models/page/diverse';\r\nimport * as page from '../../page/index';\r\nimport { MainTexts } from '../../../utils/messages';\r\nimport { IBaseComponentState } from '../../../interfaces/index';\r\nimport GlobalJSX from '../../../utils/GlobalJSX';\r\nimport { IControlValue } from '../../../models/page/interfaces';\r\nimport { Tel as TelModel}  from '../../../models/ordering/tel';\r\n\r\nexport interface ITelProps {\r\n    telTypeHidden?: boolean;\r\n    telModel?: TelModel;\r\n    prefix: string;\r\n    onChange: any;\r\n    source: any;\r\n    preview: boolean; \r\n    valueChange?: boolean;\r\n    countryCodeVisible?: boolean;\r\n    withPading?: boolean;\r\n    id?: string;\r\n    validationOptions?: any;\r\n    titleTel?: string;\r\n    disablePrefix?: boolean;\r\n};\r\n\r\nexport class Tel extends React.Component<ITelProps, IBaseComponentState> {\r\n    private tel : TelModel;\r\n    private titleTel: string;\r\n\r\n    constructor(props: ITelProps) {\r\n        super(props);\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n\r\n        this.titleTel = this.props.titleTel ?  this.props.titleTel : 'Telefon';\r\n\r\n        this.tel = {\r\n            telType: ETelType.mobile,\r\n            prefix: '',\r\n            number: ''\r\n        };\r\n\r\n        if(this.props.telModel){\r\n            this.tel = this.props.telModel;\r\n        };\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: ITelProps) {\r\n        if(next.titleTel) {\r\n            this.titleTel = next.titleTel;\r\n        }\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public render() {\r\n        let type: ETelType = ETelType.home;\r\n\r\n        let name: string = this.props.prefix + '.telType';\r\n\r\n        type = Global.getValueByPath(this.props.source, name);\r\n\r\n        if (!type) {\r\n            type = ETelType.home;\r\n        };\r\n\r\n        let countryCodeControl = <></>;\r\n\r\n        if (this.props.countryCodeVisible === true) {\r\n            countryCodeControl =\r\n                <Col xs={3} md={3} >\r\n                    {GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'countryCode', \" \", MainTexts.countryCode, this.props.preview)}\r\n                </Col>\r\n        }\r\n\r\n        let ctrl = (<div id={this.props.id}>\r\n            <Container className={this.props.withPading ? '' : 'np'}>\r\n                {\r\n                    this.props.preview || this.props.telTypeHidden === true ? null :\r\n                        <Row>\r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <page.LControl \r\n                                    type={EControlType.radio}\r\n                                    onChange={this.props.onChange} \r\n                                    name={name}\r\n                                    id={this.props.prefix  + \".telType-1\"}\r\n                                    //id={this.props.prefix.replace('.', '') + \"telType-1\"}\r\n                                    value={ETelType.mobile}\r\n                                    checked={type == ETelType.mobile}\r\n                                    label=\"Mobil\" \r\n                                    title={this.titleTel} />\r\n                            </Col>\r\n                            <Col xs={6} md={6}>\r\n                                <page.LControl \r\n                                    type={EControlType.radio}\r\n                                    onChange={this.props.onChange} \r\n                                    name={name}\r\n                                    id={this.props.prefix  + \".telType-2\"}\r\n                                    //id={this.props.prefix.replace('.', '') + \"telType-2\"}\r\n                                    checked={type == ETelType.home}\r\n                                    value={ETelType.home} \r\n                                    label=\"Festnetz\" />\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n\r\n                <Row>\r\n                    {countryCodeControl}\r\n\r\n                    <Col xs={3} md={3} className=\"np\">\r\n                        {\r\n                            GlobalJSX.renderInner(this.props.prefix, \r\n                                this.props.source, \r\n                                this.props.valueChange ? (e)=>{this.tel.prefix = e.value;\r\n                                    this.changeValue(); } : this.props.onChange, \r\n                                'prefix' , \" \", MainTexts.telPrefix, this.props.preview, this.tel.prefix, this.props.disablePrefix)\r\n\r\n                               \r\n                        }\r\n                    </Col>\r\n                    <Col xs={9} md={9}>\r\n                        {\r\n                            GlobalJSX.renderInner(this.props.prefix, \r\n                                this.props.source, \r\n                                this.props.valueChange ? (e)=>{this.tel.number = e.value; this.changeValue(); } : this.props.onChange, \r\n                                'number', \" \", MainTexts.telnummer, this.props.preview, this.tel.number)\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n            <page.LClear />\r\n        </div>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public getValue() {\r\n        return {\r\n            type: EControlType.tel,\r\n            name: this.props.id ?  this.props.id : '',\r\n            id: this.props.id ?  this.props.id : '',\r\n            value: this.tel.prefix + '-' + this.tel.number,\r\n             \r\n        };        \r\n\r\n    };\r\n\r\n    private changeValue() {\r\n        let val = this.getValue();\r\n\r\n        this.props.onChange(val);\r\n    };\r\n};\r\n\r\nexport default Tel;","import linq from 'linq';\r\nimport { Availability } from \"..\";\r\nimport { IApiStep } from \"../../interfaces\";\r\nimport * as m from '../../models/index';\r\nimport { IDataTable1 } from \"../../screens/orderProducts/orderOverview\";\r\nimport { BrandKeys, CatKeys } from \"../../utils/Defaults\";\r\nimport Global from \"../../utils/Global\";\r\nimport StorageHelper from \"../../utils/storage\";\r\nimport { EDesiredSchedule, EPortationType, ERequestStatus, ERequestType } from \"../page/diverse\";\r\nimport { ProductTree, TreeItem } from \"../support/tree\";\r\nimport { IActivation } from \"./activation\";\r\nimport Address from \"./address\";\r\nimport IBrand from \"./brand\";\r\nimport { ICustomer } from \"./customer\";\r\nimport { ECustomerActionType, ICustomerAction } from \"./customerAction\";\r\nimport { House } from \"./house\";\r\nimport { EActionAddressType, EActivationType, EBillingType, EBusinessCase, ECreditDebitType, EEvnType, EHomeType, EIDCardType, EPaymentType, EPhonebookType, ESalutation, ESubOptions, ETargetNumber } from \"./order\";\r\nimport PersonAndAddress from './personWithAddress';\r\nimport IProduct, { IProductSub, ISubConfig, ISubServiceConfig } from \"./product\";\r\nimport IService from \"./service\";\r\nimport ISub from './sub';\r\n\r\nexport interface IOrderData {\r\n    type: EBusinessCase;\r\n    activations: IActivation[];\r\n    customer: ICustomer;\r\n    id: string;\r\n    currentBrand: string;\r\n    currentCat: string;\r\n\r\n    parentId?: string;\r\n    activityId?: string;\r\n    isCrossSelling?: boolean;\r\n\r\n    avl?: Availability;\r\n    //action?: ICustomerAction;\r\n    //parent?: IOrderData;\r\n};\r\n\r\nexport interface IOrderProductViewModel {\r\n      products: IDataTable1[] ;\r\n      address: m.Address;\r\n};\r\n\r\nexport class OrderDataWrapper {\r\n    public data: IOrderData;\r\n\r\n    private brands: IBrand[] = [];\r\n\r\n    public inPrepaid: boolean = false;\r\n    public inPostpaid: boolean = false;\r\n    public inActDefault: boolean = false;\r\n    public inActMnp: boolean = false;\r\n    public inCdChange: boolean = false;\r\n    public inDsl: boolean = false;\r\n    public inOtelo: boolean = false;\r\n    public inVodafone: boolean = false;\r\n    public inKabel: boolean = false;\r\n\r\n    constructor(input: IOrderData) {\r\n        this.data = input;\r\n\r\n        if(!this.brands || this.brands.length === 0) {\r\n            this.brands = StorageHelper.getBrands();\r\n        }\r\n\r\n        this.inPrepaid = this.hasPrepaid();\r\n        this.inPostpaid = this.hasPostpaid();\r\n        this.inActDefault = this.hasActDefault();\r\n        this.inActMnp= this.hasActMnp();\r\n        this.inDsl = this.hasDsl();\r\n        this.inOtelo = this.hasOtelo();\r\n        this.inVodafone = this.hasVodafone();\r\n        this.inKabel = this.hasKabel(); \r\n        this.inCdChange = this.hasCdChange();\r\n\r\n        //console.log('data', this);\r\n    };\r\n\r\n    public canEditActivation(index: number):boolean {\r\n        let act = this.data.activations[index];\r\n        if(act.processStatus && act.processStatus.steps){\r\n            let step: IApiStep = act.getStep(ERequestType.activation);\r\n            if(step) {\r\n                return step.status !== ERequestStatus.done;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    public static ensure(order: IOrderData) {\r\n        //console.log((new Error()).stack);\r\n        if(order.activations) {\r\n            let aa:IActivation[] = [];\r\n\r\n            //**if existing */\r\n            if(order.customer.contracts && order.customer.contracts.length>0 && !order.isCrossSelling) {\r\n                order.currentBrand = order.activations[0].brandKey;\r\n                //** 2020-11-24 sm only if selection is null, because otelo.weiteren vertrag does not work correctly (https://lightds.atlassian.net/browse/VAS-502) */\r\n                if(!order.activations[0].selection) {\r\n                    let sel = new TreeItem('root');\r\n                    sel.add(order.customer.contracts[0].bookedProduct!.id);\r\n                    order.activations[0].selection = sel;\r\n                }\r\n            };\r\n\r\n            order.activations.forEach((i,idx)=>{\r\n                let aaa:IActivation = OrderDataWrapper.ensureActivationIsObject(i); // Object.assign(new IActivation(i.brandKey), i);\r\n                aaa.selection = TreeItem.ensure(aaa.selection);\r\n                aa.push(aaa);\r\n            });\r\n            order.activations = aa;\r\n        }         \r\n    };\r\n\r\n    public static subHasOption(sub: ISub, option: ESubOptions) : boolean {\r\n        if(!sub.keyNecessary) {\r\n            return false;\r\n        }\r\n\r\n        return (sub.keyNecessary & option) === option;\r\n    };\r\n\r\n    public getAllExcludesForSelectedServices(brand: string, selectedServices: string[]) : string[] {\r\n        let res: string[] = [];\r\n        let br:IBrand = linq.from<IBrand>(this.brands).where(x=>x.id == brand).first();\r\n\r\n        selectedServices.map(i=>{\r\n           \r\n            let svc = linq.from<IService>(br.services).where(x=>x.id == i).firstOrDefault();\r\n\r\n            if(svc && svc.notbookableWith) {\r\n                \r\n                svc.notbookableWith.map(j=>{\r\n                    if(res.indexOf(j)<0){\r\n                        res.push(j);\r\n                    };\r\n                });\r\n            };\r\n        });\r\n\r\n        return res;\r\n    };\r\n\r\n    public static ensureActivationIsObject(act:IActivation) : IActivation {\r\n        return Object.assign(new IActivation(act.brandKey), act);\r\n    };\r\n\r\n    public getCurrentActivation() : IActivation | undefined {\r\n        if(this.data.activations && this.data.activations.length > 0) {\r\n            return this.data.activations[this.data.activations.length - 1];\r\n        };\r\n\r\n        return undefined;\r\n    };\r\n\r\n    public resetUnfinishedActivations() {\r\n        for(let i = 0; i < this.data.activations.length; i++) {\r\n            if(!this.data.activations[i].isActivated()) {\r\n                this.data.activations[i].resetSteps(ERequestType.print);\r\n            };\r\n\r\n            StorageHelper.addOrder(this.data);\r\n        };\r\n    };\r\n\r\n    public getAllActivationsDone() : boolean {\r\n        for(let i = 0; i < this.data.activations.length; i++) {\r\n            if(!this.data.activations[i].isActivated()) {\r\n                return false;\r\n            };\r\n        };\r\n\r\n        return true;\r\n    };\r\n\r\n    //**will deliver all tariff/subs/services as tree */\r\n    public getProducts() : ProductTree {\r\n        let ti = new ProductTree('', '');\r\n        \r\n        this.data.activations.map((i)=>{\r\n            ti.addChildren(i.getProductsTree());\r\n        });\r\n\r\n        return ti;\r\n    };\r\n\r\n    // public getOteloProductsForBK(): IProduct[]{\r\n    //     let br:IBrand = linq.from<IBrand>(this.brands).where(x=>x.id == BrandKeys.otelo).first();\r\n    //    return br.products\r\n    // }\r\n\r\n    public getActivationByProduct(productId: string) {\r\n        for(let i: number = 0; i< this.data.activations.length; i++) {\r\n            if(this.data.activations[i].hasProduct(productId)) {\r\n                this.data.activations[i].idx = i;\r\n                return this.data.activations[i];\r\n            };\r\n        };\r\n    };\r\n\r\n    public getActivationByBrand(brand: string) {\r\n        for(let i: number = 0; i< this.data.activations.length; i++) {\r\n            if(this.data.activations[i].brandKey == brand) {\r\n                this.data.activations[i].idx = i;\r\n                return this.data.activations[i];\r\n            };\r\n        };\r\n    };\r\n\r\n    public static createOrder(\r\n        id: string,\r\n        catKey: string,\r\n        brandKey: string, \r\n        productId:string) : IOrderData { \r\n        let act: IActivation = new IActivation(brandKey);\r\n\r\n        act.id = Global.getUniqueId();\r\n        act.processId = id;\r\n        act.brandKey = brandKey;\r\n        act.catKey = catKey;\r\n        act.productId = productId;\r\n        act.addRemoveProduct(productId);\r\n\r\n        let avl = StorageHelper.getAvailability();\r\n\r\n        let order: IOrderData = {\r\n            id: id,\r\n            currentCat: catKey,\r\n            type: EBusinessCase.bnt,\r\n            activations: [act],\r\n            currentBrand: brandKey,\r\n            customer: {\r\n                bew: {}\r\n            }\r\n        };\r\n\r\n        let cfg = Global.getConfiguration();\r\n        \r\n        if(cfg.debug) {\r\n            order = {\r\n                id: id,\r\n                currentCat: catKey,\r\n                currentBrand: brandKey,\r\n                activations: [act],\r\n                customer: {\r\n                    payment: {\r\n                        paymentType: EPaymentType.iban,\r\n                        iban: 'DE02700100800030876808', //'DE13701500000123456782', //'DE22478400650158361601', //'DE13701500000123456782',\r\n                        owner: 'Bon Jovi',\r\n                        addressType: EActionAddressType.sameAddress,\r\n                        address: new Address()\r\n                    },\r\n                    evn : {\r\n                        billingType: EBillingType.online,\r\n                        evnType:  EEvnType.shortEvn,\r\n                        targetNumberType: ETargetNumber.complete,\r\n                    },\r\n                    salutation: ESalutation.undefined,\r\n                    firstname: 'Jon',\r\n                    surname: 'Bon Jovi',\r\n                    email2: 'dummy@avarto.de',\r\n                    email: 'dummy@avarto.de',\r\n                    emailApproved: 1,\r\n                    nationality: 'DEU',\r\n                    password: 'Wxo12345',\r\n                    phonebook: EPhonebookType.no,\r\n                    birthday: new Date(),\r\n                    address: avl && avl.address ? avl.address : undefined,\r\n                    /* address: { street: 'Ferdinand-Braun-Platz', nr: '1', city: 'Düsseldorf', zip: '40549', additional: '' }, */\r\n                    deliveryType: EActionAddressType.sameAddress,\r\n                    delivery: new PersonAndAddress(),\r\n                    instType: EActionAddressType.sameAddress,\r\n                    inst: new PersonAndAddress(),\r\n                    legitimation: {\r\n                        type: EIDCardType.german,\r\n                        id: '1234567891',\r\n                        authority: 'Bonn',\r\n                        validFrom: new Date(), \r\n                        validTo: new Date()\r\n                    },\r\n                    mnp: {differentCustomer: false, provider: '', network: '', birthday: new Date(), salutation: ESalutation.mr},\r\n                    installationSchedule: {\r\n                        dateType: EDesiredSchedule.asap,\r\n                        date: new Date()\r\n                    },\r\n                    bew: {}\r\n                },\r\n                type: EBusinessCase.bnt\r\n            };\r\n\r\n            if(order.customer.address) {\r\n                order.customer.house = new House();\r\n                order.customer.house.homeType = EHomeType.detachedHouse,\r\n                order.customer.house.details = \"Wohnzimmer\";\r\n                order.customer.house.floor = \"4\";\r\n                order.customer.house.entranceLocation = \"Vorderhaus\";\r\n                order.customer.house.appartmentLocation = \"Mitte\";\r\n            };      \r\n        } else {\r\n            order = {\r\n                id: id,\r\n                currentCat: catKey,\r\n                currentBrand: brandKey,\r\n                activations: [act],\r\n                customer: {\r\n                    payment: {\r\n                        paymentType: EPaymentType.iban,\r\n                        iban: '', \r\n                        owner: '',\r\n                        addressType: EActionAddressType.sameAddress,\r\n                        address: new Address()\r\n                    },\r\n                    evn : {\r\n                        billingType: EBillingType.online,\r\n                        evnType:  EEvnType.shortEvn,\r\n                        targetNumberType: ETargetNumber.complete,\r\n                    },\r\n                    salutation: ESalutation.undefined,\r\n                    firstname: '',\r\n                    surname: '',\r\n                    email2: '',\r\n                    email: '',\r\n                    emailApproved: 0,\r\n                    nationality: 'DEU',\r\n                    password: '',\r\n                    phonebook: EPhonebookType.no,\r\n                    birthday: new Date(),\r\n                    address: avl && avl.address ? avl.address : undefined,\r\n                    /* address: { street: 'Ferdinand-Braun-Platz', nr: '1', city: 'Düsseldorf', zip: '40549', additional: '' }, */\r\n                    deliveryType: EActionAddressType.sameAddress,\r\n                    delivery: new PersonAndAddress(),\r\n                    instType: EActionAddressType.sameAddress,\r\n                    inst: new PersonAndAddress(),\r\n                    bew: {},\r\n                    mnp: {differentCustomer: false, provider: '', network: '', birthday: new Date()},\r\n                    legitimation: {\r\n                        type: EIDCardType.german,\r\n                        id: '',\r\n                        authority: '',\r\n                        validFrom: new Date(), \r\n                        validTo: new Date()                        \r\n                    },\r\n                    installationSchedule: {\r\n                        dateType: EDesiredSchedule.asap,\r\n                        date: new Date()\r\n                    }\r\n                },\r\n                type: EBusinessCase.bnt\r\n            };\r\n\r\n            if(order.customer.address) {\r\n                order.customer.house = new House();\r\n                order.customer.house.homeType = EHomeType.detachedHouse,\r\n                order.customer.house.details = \"Wohnzimmer\";\r\n                order.customer.house.floor = \"4\";\r\n                order.customer.house.entranceLocation = \"Vorderhaus\";\r\n                order.customer.house.appartmentLocation = \"Mitte\";\r\n            };  \r\n        };\r\n        \r\n        StorageHelper.addOrder(order);\r\n\r\n        return order;\r\n    };\r\n\r\n    public static createProcess(bc: EBusinessCase, \r\n        at: EActivationType,\r\n        d: IOrderData,\r\n        a: ICustomerAction|undefined) : IOrderData{\r\n        return OrderDataWrapper.createProcessFromData(bc, at, d, a);\r\n    };\r\n\r\n    public static createProcessFromData(bc: EBusinessCase, \r\n        at: EActivationType,\r\n        d: IOrderData,\r\n        a: ICustomerAction | undefined) : IOrderData {\r\n        let newid = Global.getUniqueId();\r\n\r\n        let data : IOrderData = {\r\n            currentCat: '',\r\n            id: newid,\r\n            type: bc,\r\n            customer: d.customer,\r\n            currentBrand: d.currentBrand,\r\n            parentId: d.id,\r\n            \r\n            activations: JSON.parse(JSON.stringify(d.activations))\r\n        };\r\n\r\n        data.customer.bew = { };\r\n\r\n        if(at === EActivationType.partnerCard) {\r\n            data.customer.payment = {\r\n                paymentType: EPaymentType.iban,\r\n                addressType: EActionAddressType.sameAddress,\r\n                address: new Address()\r\n            };\r\n        };\r\n\r\n        data.customer.action = a;\r\n        \r\n        data.activations.forEach(x=>{\r\n            if(bc != EBusinessCase.bookService) {\r\n                if(d.customer.contracts && d.customer.contracts[0].bookedProduct) {\r\n                    x.services = d.customer.contracts[0].bookedProduct.services;\r\n                };\r\n            };\r\n            \r\n            if(!x.services) {x.services = [];};\r\n            x.processId = newid;\r\n\r\n            x.activationType = at;\r\n\r\n            if(at === EActivationType.partnerCard) {\r\n                x.creditDebitType = ECreditDebitType.postpaid;\r\n                x.processStatus = {steps:[]};\r\n            };\r\n            \r\n            //action type is only given when delivered from epos for vvl/tw\r\n            if(a) {\r\n                x.action = a;\r\n                if(a.nbaId) {\r\n                    x.productId = a.product!;\r\n                    x.sub = a.sub!;\r\n\r\n                    //x.nbaId = a.nbaId;\r\n                    x.services = a.services || [];\r\n                };\r\n                x.portationType = a.type == ECustomerActionType.ART ? EPortationType.asap : EPortationType.contractEnd;\r\n            };\r\n\r\n            x.id = Global.getUniqueId();\r\n        });\r\n\r\n        if(a && a.bc == EBusinessCase.bookService && data.activations[0].brandKey === BrandKeys.vodafone) {\r\n            data.activations[0].activationType = EActivationType.bookService;\r\n            data.activations[0].productId = a.products[0].id;\r\n            data.activations[0].sub = a.products[0].subs[0].id;\r\n            data.activations[0].services = linq.from<ISubServiceConfig>(a.products[0].subs[0].sl).select(x=>x.id).toArray();\r\n        };\r\n\r\n        OrderDataWrapper.ensure(data);\r\n\r\n        StorageHelper.addOrder(data);\r\n\r\n        return data;\r\n    };\r\n\r\n    public static previewAvailable(act: IActivation[]) : boolean {\r\n       \r\n        for(let i: number = 0 ; i < act.length; i++) {\r\n            \r\n            if(!act[i].productId) {\r\n                return false;\r\n            };\r\n        };\r\n        return true;\r\n    };\r\n\r\n    public static previewAvailableForAtLeastOne(act: IActivation[]) : boolean {\r\n        for(let i: number = 0 ; i < act.length; i++) {\r\n            if(act[i].productId) {\r\n                return true;\r\n            };\r\n        };\r\n        return false;\r\n    };    \r\n\r\n    public hasNextContract() {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.otelo && x.nextContract === true)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    public hasOtelo() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.otelo)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };    \r\n\r\n    public hasOteloPrepaid() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.otelo && x.creditDebitType == ECreditDebitType.prepaid)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };       \r\n\r\n    public needTopUp() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.otelo && x.creditDebitType == ECreditDebitType.prepaid)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    public hasUnity() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.unity)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };    \r\n\r\n    public hasVodafone() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.vodafone)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    public hasVodafoneOrDsl() : boolean {\r\n        return this.hasVodafone() || this.hasDsl() || this.hasOtelo();\r\n    };\r\n\r\n    public hasPartnerCard() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.activationType === EActivationType.partnerCard)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    public hasPartnerGroups() : boolean {\r\n\r\n        let res: boolean = false;\r\n        if(this.data.customer.contracts) {\r\n            let con = this.data.customer.contracts[0];\r\n\r\n            if(con.groups && con.groups.length > 0) {\r\n                res = true;\r\n            };\r\n        }\r\n\r\n        return res;\r\n    };        \r\n\r\n    public hasNumberProtability() : boolean {\r\n        let res: boolean = false;\r\n        \r\n        if(this.data.activations) {\r\n            let orders = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.kabel)\r\n                .toArray();\r\n            \r\n            if(orders.length >0){\r\n                for(let i = 0; i< orders.length; i++) {\r\n                    if(orders[i].services.indexOf('rufnummernmitnahme-1')>=0){\r\n                        res = true;\r\n                        break;\r\n                    };\r\n                };\r\n            };\r\n        }\r\n\r\n        return res;\r\n    };    \r\n\r\n    public hasCategory(cat: string) : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.catKey == cat)\r\n                .count() > 0;\r\n\r\n            if(!res && (cat == CatKeys.tv || cat == CatKeys.fn))  {\r\n                this.data.activations.map((i)=>{\r\n                    if(!res && i.selection && i.selection.children) {\r\n                        for(let c = 0; c < i.selection.children.length ; c++) {\r\n                            let prcat = Global.categoryWrapper.getCategoryKeyByProduct(i.selection.children[c].id);\r\n                            if(prcat == cat) {\r\n                                res = true;\r\n                            }\r\n                        };\r\n                    };\r\n                });\r\n            };\r\n        }\r\n        \r\n        return res;\r\n    };     \r\n\r\n    public hasVodafoneWithMnp() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.vodafone && x.activationType != EActivationType.actDefault)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };   \r\n\r\n    public hasCableWithMnp() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.kabel && x.activationType != EActivationType.actDefault)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };       \r\n    \r\n    public hasVodafoneWithMnpANDPortierungandASAP() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.vodafone && x.activationType === EActivationType.portDefault && x.portationType===EPortationType.asap)\r\n                .count() > 0;\r\n        }\r\n       \r\n\r\n        return res;\r\n    }; \r\n\r\n    public brandsInOrder() : string[] {\r\n        let res: string[] = [];\r\n\r\n        if(this.hasDsl()) { res.push(BrandKeys.dsl);}\r\n        if(this.hasOtelo()) { res.push(BrandKeys.otelo);}\r\n        if(this.hasVodafone()) { res.push(BrandKeys.vodafone);}\r\n        if(this.hasKabel()) { res.push(BrandKeys.kabel);}\r\n\r\n        return res;\r\n    };\r\n\r\n    public hasDsl() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.dsl)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    public hasKabel() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.kabel)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };   \r\n\r\n    public hasDslOnly() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.dsl)\r\n                .count() > 0;\r\n\r\n            let other = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey !== BrandKeys.dsl)\r\n                .count() > 0;         \r\n                \r\n            if(other) {\r\n                res = false;\r\n            };\r\n        }\r\n\r\n        return res;\r\n    };   \r\n\r\n    public hasProduct(productId: string) : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.productId === productId)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };       \r\n\r\n    public hasKabelOnly() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.kabel)\r\n                .count() > 0;\r\n\r\n            let other = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey !== BrandKeys.kabel)\r\n                .count() > 0;         \r\n                \r\n            if(other) {\r\n                res = false;\r\n            };\r\n        }\r\n\r\n        return res;\r\n    };       \r\n\r\n    public hasOteloOnly() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.otelo)\r\n                .count() > 0;\r\n\r\n            let other = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey !== BrandKeys.otelo)\r\n                .count() > 0;         \r\n                \r\n            if(other) {\r\n                res = false;\r\n            };\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    public hasUnityOnly() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.unity)\r\n                .count() > 0;\r\n\r\n            let other = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey !== BrandKeys.unity)\r\n                .count() > 0;         \r\n                \r\n            if(other) {\r\n                res = false;\r\n            };\r\n        }\r\n\r\n        return res;\r\n    };\r\n    \r\n    public countActivations() : number {\r\n        if(this.data.activations) {\r\n            return this.data.activations.length;\r\n        }\r\n\r\n        return 0;\r\n    };      \r\n\r\n    public hasBrand(brandKey: string) {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.brandKey === brandKey)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    public hasActMnp() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.activationType === EActivationType.portDefault || x.activationType === EActivationType.partnerCardPortation)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    public hasCdChange() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.activationType === EActivationType.cdChange)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };    \r\n\r\n    public hasActDefault() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.activationType === EActivationType.actDefault || x.activationType === EActivationType.partnerCard)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };    \r\n\r\n    public hasPostpaid() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.creditDebitType === ECreditDebitType.postpaid)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };      \r\n\r\n    public hasPrepaid() : boolean {\r\n        let res: boolean = false;\r\n        if(this.data.activations) {\r\n            res = linq.from<IActivation>(this.data.activations)\r\n                .where(x=>x.creditDebitType === ECreditDebitType.prepaid)\r\n                .count() > 0;\r\n        }\r\n\r\n        return res;\r\n    };       \r\n\r\n    public static hasGiga(data: IOrderData) {\r\n        let res1: boolean = false;\r\n        let res2: boolean = false;\r\n\r\n        //vf and dsl should be selected\r\n        if(data.activations) {\r\n            res1 = linq.from<IActivation>(data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.dsl)\r\n                .count() > 0;\r\n\r\n            res2 = linq.from<IActivation>(data.activations)\r\n                .where(x=>x.brandKey === BrandKeys.vodafone)\r\n                .count() > 0;                \r\n        }\r\n\r\n        //or check if gigakombi as servcie selected\r\n        if(res1 && res2) {\r\n            data.activations.map((i, idx)=>{\r\n                if(i.brandKey === BrandKeys.dsl && i.services.indexOf(\"V0987\")<0) {\r\n                    res2 = false;\r\n                };\r\n\r\n                if(i.brandKey === BrandKeys.vodafone && i.services.indexOf(\"VFAIO2MRK\")<0) {\r\n                    res1 = false;\r\n                };                \r\n            });\r\n        };\r\n\r\n        return res1 && res2;\r\n    };\r\n\r\n    public getDraftFromActivation(id: string) : IOrderData {\r\n        let d:IOrderData = JSON.parse(JSON.stringify(this.data));\r\n\r\n        d.activations = linq.from<IActivation>(d.activations)\r\n            .where(x=>x.id === id)\r\n            .toArray();\r\n        \r\n        let avl = StorageHelper.getAvailability();\r\n\r\n        d.activations.forEach(x=> {\r\n            x.availabilityId = avl.id;\r\n            x.availability = new Availability()\r\n        }); \r\n\r\n        return d;\r\n    };\r\n\r\n    public getPortationBrand() : string {\r\n        let a = linq.from<IActivation>(this.data.activations)\r\n            .where(x=>x.activationType == EActivationType.portDefault || x.activationType == EActivationType.partnerCardPortation)\r\n            .firstOrDefault();\r\n        \r\n        if(a) {\r\n            return a.brandKey;\r\n        } else {\r\n            return '';\r\n        };\r\n    };\r\n\r\n    public hasPortation() : boolean {\r\n        let a = linq.from<IActivation>(this.data.activations)\r\n            .where(x=>x.activationType === EActivationType.portDefault)\r\n            .firstOrDefault();\r\n        \r\n        if(a) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        };\r\n    };\r\n\r\n    public getPortationCount() : number {\r\n        return linq.from<IActivation>(this.data.activations)\r\n            .where(x=>x.activationType === EActivationType.portDefault)\r\n            .count();\r\n    };    \r\n\r\n    public getPasswordForAdditionalContract() : string | undefined {\r\n        let a = linq.from<IActivation>(this.data.activations)\r\n            .where(x=>x.additional)\r\n            .firstOrDefault();\r\n        \r\n        if(a) {\r\n            return a.customerPassword;\r\n        } else {\r\n            return undefined;\r\n        };\r\n    };\r\n\r\n    public static getMsisdnFromContract(d:IOrderData) : string | undefined {\r\n        if(d.customer && d.customer.contracts) {\r\n            return d.customer.contracts[0].msisdn;\r\n        };\r\n\r\n        return '';\r\n    };\r\n\r\n    public static getParentOfProcess(id: string) {\r\n        let orders:IOrderData[] = StorageHelper.getOrders();\r\n\r\n        let current = linq.from<IOrderData>(StorageHelper.getOrders())\r\n            .where(x=>x.id == id)\r\n            .firstOrDefault();\r\n\r\n        return linq.from<IOrderData>(orders).where(x=>x.id == current!.parentId).firstOrDefault();\r\n    };\r\n \r\n    public static getAvailableProducts(brand:IBrand, \r\n        action: ICustomerAction | undefined,\r\n        customer:ICustomer,\r\n        bc: EBusinessCase) : IProduct[] {\r\n        let res:IProduct[] = []; \r\n\r\n        if(customer.contracts) {\r\n            let c = customer.contracts[0];\r\n  \r\n            if(c.bookableProducts) {\r\n                if(brand.id === BrandKeys.otelo && action) {\r\n                    res = action.products;\r\n                    //transfer BC to sub.services since they are dynamic...in further versions implement in API\r\n                    res.map((i)=>{\r\n                        i.subs.map((j)=>{\r\n                            j.b = bc;\r\n                        });\r\n                    });\r\n                } else {\r\n                    for(let i = 0; i < c.bookableProducts.length; i++) {\r\n                        let ps : IProductSub = OrderDataWrapper.splitProductSub(brand, c.bookableProducts[i].id);\r\n\r\n                        //split not worked\r\n                        if(!ps || !ps.product) { continue; };\r\n\r\n                        let bp: IProduct = linq.from<IProduct | any>(brand.products)\r\n                            .where(x=>x.id == ps.product)\r\n                            .firstOrDefault();\r\n\r\n                        //not found in brandconfig\r\n                        if(!bp) { continue; };\r\n\r\n                        let p:IProduct = linq.from<IProduct | any>(res)\r\n                            .where(x=>x.id == ps.product)\r\n                            .firstOrDefault();\r\n\r\n                        if(p == null) {\r\n                            p = JSON.parse(JSON.stringify(bp));\r\n                            p.businessCases = [bc] //[EBusinessCase.vvl];\r\n                            p.subs = [];\r\n\r\n                            res.push(p);\r\n                        } else {\r\n                            p.creditDebitType = bp.creditDebitType;\r\n                        }\r\n\r\n                        let sub = linq.from<ISubConfig>(p.subs).where(x=>x.id == ps.sub).firstOrDefault();\r\n\r\n                        if(!sub) {\r\n                            let psub = linq.from<ISubConfig>(bp.subs).where(x=>x.id == ps.sub).firstOrDefault();\r\n                            if(psub) {\r\n                                p.subs.push(psub);  \r\n                                res[res.indexOf(p)] = p;\r\n                            };\r\n                        };\r\n                    };\r\n                };\r\n            };\r\n        };\r\n\r\n        return res;\r\n    };\r\n\r\n    public static splitProductSub(brand: IBrand, data: string):IProductSub{\r\n        let ps:IProductSub = {product: '', sub: ''};\r\n\r\n        for(let i =0;i<brand.subs.length;i++) {\r\n            if(data.endsWith(brand.subs[i].id)) {\r\n                ps.sub = brand.subs[i].id;\r\n                ps.product = data.substring(0, data.length - brand.subs[i].id.length)\r\n                break;\r\n            };\r\n        };\r\n\r\n        return ps;\r\n    };\r\n\r\n    public static getProductFromContract(b:IBrand, d:IOrderData) : string | undefined {\r\n        if(d.customer.contracts && d.customer.contracts[0].bookedProduct) {\r\n            return d.customer.contracts[0].bookedProduct.name;\r\n        };\r\n\r\n        return '';\r\n    };\r\n};\r\n\r\nexport default {};","/* eslint-disable no-extend-native */\r\nif (!Array.prototype.find) {\r\n    Object.defineProperty(Array.prototype, 'find', {\r\n      value: function(predicate) {\r\n       // 1. Let O be ? ToObject(this value).\r\n        if (this == null) {\r\n          throw new TypeError('\"this\" is null or not defined');\r\n        }\r\n  \r\n        var o = Object(this);\r\n  \r\n        // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n        var len = o.length; // >>> 0; //eslint-disable-line no-bitwise\r\n  \r\n        // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n        if (typeof predicate !== 'function') {\r\n          throw new TypeError('predicate must be a function');\r\n        }\r\n  \r\n        // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        var thisArg = arguments[1];\r\n  \r\n        // 5. Let k be 0.\r\n        var k = 0;\r\n  \r\n        // 6. Repeat, while k < len\r\n        while (k < len) {\r\n          // a. Let Pk be ! ToString(k).\r\n          // b. Let kValue be ? Get(O, Pk).\r\n          // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n          // d. If testResult is true, return kValue.\r\n          var kValue = o[k];\r\n          if (predicate.call(thisArg, kValue, k, o)) {\r\n            return kValue;\r\n          }\r\n          // e. Increase k by 1.\r\n          k++;\r\n        }\r\n  \r\n        // 7. Return undefined.\r\n        return undefined;\r\n      }\r\n    });\r\n  };\r\n\r\n  if(!String.prototype.startsWith) {\r\n    String.prototype.startsWith = function(searchString, position) {\r\n      position = position || 0;\r\n      return this.indexOf(searchString, position) === position;\r\n    };\r\n  };\r\n\r\n  if(!Date.prototype.addDays) {\r\n    Date.prototype.addDays = function(days) {\r\n      var date = new Date(this.valueOf());\r\n      date.setDate(date.getDate() + days);\r\n      return date;\r\n  }\r\n  };  \r\n\r\n  if(!Number.prototype.parseInt) {\r\n    String.prototype.parseInt = function(numeric) {\r\n      return parseInt(numeric, 10);\r\n    };\r\n  };\r\n\r\n  if (typeof Object.assign != 'function') {\r\n    Object.assign = function(target) {\r\n      // 'use strict';\r\n      if (target == null) {\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      }\r\n  \r\n      target = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var source = arguments[index];\r\n        if (source != null) {\r\n          for (var key in source) {\r\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n              target[key] = source[key];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return target;\r\n    };\r\n  };\r\n\r\n  export {};","import * as React from 'react';\r\nimport { IDefCon, EAppState } from '../../models';\r\nimport StorageHelper from '../../utils/storage';\r\nimport Global from '../../utils/Global';\r\nimport App from '../../App';\r\n\r\nexport class DefCon extends React.Component<any, any> {\r\n    private model: IDefCon = new IDefCon();// {state: EAppState.undefined, brands: []};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        };\r\n    }; \r\n\r\n    public render() {\r\n        this.model = Global.easyApp.defcon;\r\n        \r\n        if(!this.model || (this.model.state & EAppState.warningVisible) !== EAppState.warningVisible) {\r\n            return <></>\r\n        };\r\n\r\n        let block = (this.model.state & EAppState.blockScreen) === EAppState.blockScreen;\r\n\r\n        let ctrl = (\r\n            <>\r\n            <div className=\"defcon-container\">\r\n                <div className=\"defcon\">\r\n                    <div dangerouslySetInnerHTML={{__html: this.model.notification ? this.model.notification : ''}}/>\r\n                </div>\r\n            </div>\r\n            {\r\n                block ?\r\n                <div className=\"defcon-blocked\"></div> \r\n                : <></>\r\n            }\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default DefCon;","import {isIE, isEdge, isSafari, isFirefox} from 'react-device-detect';\r\n\r\nexport class Browser {\r\n    public static getBrowserString() : string {\r\n        if(isIE) { \r\n            return 'ie'\r\n        } else if(isSafari) {             \r\n            return 'safari';\r\n        } else if(isFirefox) {             \r\n            return 'firefox';            \r\n        } else if(isEdge) { \r\n            return 'edge'\r\n        };\r\n\r\n        return 'chrome';\r\n    };\r\n};","import 'babel-polyfill';\r\nimport React, { Component } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as scr from '../src/screens/insex';\r\nimport '../src/styles/App.scss';\r\nimport '../src/styles/dev.scss';\r\nimport '../src/styles/form.scss';\r\nimport '../src/styles/icons.scss';\r\nimport '../src/styles/menu.scss';\r\nimport '../src/styles/popup.scss';\r\nimport '../src/styles/print.scss';\r\nimport '../src/styles/table.scss';\r\nimport '../src/styles/thumbs.scss';\r\nimport '../src/utils/fixes';\r\nimport { EPopupType, IPopupConfig } from './components/dialogs/popup';\r\nimport Head from './components/page/head';\r\nimport * as page from './components/page/index';\r\nimport DefCon from './components/tools/defcon';\r\nimport { IApiResponse, ISocketPushModel } from './interfaces';\r\nimport { IAppSettings } from './interfaces/app/IAppSettings';\r\nimport { INavLink } from './interfaces/nav/INavLink';\r\nimport { EControlType, ELButtonType, IDefCon } from './models';\r\nimport Api from './utils/api';\r\nimport { Browser } from './utils/browser';\r\nimport { StorageKeys } from './utils/Defaults';\r\nimport Global from './utils/Global';\r\nimport GlobalJSX from './utils/GlobalJSX';\r\nimport { MainTexts } from './utils/messages';\r\nimport EasyRouter from './utils/router';\r\nimport StorageHelper from './utils/storage';\r\nimport { connect } from 'react-redux';\r\nimport { mapDispatchToProps, mapStateToProps } from './store/index';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nexport interface IAppState {\r\n  initialised: boolean;\r\n  expanded: boolean;\r\n  changed?: boolean;\r\n  fixed?: boolean;\r\n  refresh?: boolean;\r\n  popUpVisibility: boolean;\r\n  popupDefCon?: boolean;\r\n  expiredSessionUser: boolean;\r\n  firstLoginDataCheck: boolean;\r\n};\r\n\r\nexport interface IAppProps {\r\n  css?: string;\r\n  content?: JSX.Element;\r\n};\r\n\r\nexport class App extends Component<any, IAppState> {\r\n  public head?: Head;\r\n\r\n  private static currentTheme: string = \"\";\r\n\r\n  public static containerId: string = \"app\";\r\n\r\n  public defcon: IDefCon = new IDefCon(); //{ brands: [], state: EAppState.ok };\r\n\r\n  public dynamicPopup: any;\r\n\r\n  private extras: JSX.Element[] = [];\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    // set initial theme to light\r\n    App.currentTheme = localStorage.getItem(StorageKeys.keyTheme) || \"theme-light\";\r\n    localStorage.setItem(StorageKeys.keyTheme, App.currentTheme);\r\n\r\n    this.defcon = StorageHelper.getDefCon();\r\n\r\n    // test switching of theme dark-light and light-dark with 5 secs interval\r\n    // setTimeout(function(){\r\n    //   App.switchTheme();\r\n    // }, 5000);\r\n\r\n    this.expand = this.expand.bind(this);\r\n    this.append = this.append.bind(this);\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n    this.areUsureLogout = this.areUsureLogout.bind(this);\r\n\r\n    let set: IAppSettings = StorageHelper.getAppSettings();\r\n\r\n    window.onpopstate = (e) => {\r\n      EasyRouter.route({ title: e.state, url: window.location.href, skipState: true });\r\n    };\r\n\r\n    /*\r\n    window.onerror = function(msg, url, line, col, error) {\r\n      console.log('onerror');\r\n      console.log(url);\r\n      console.log(line);\r\n      console.log(col);\r\n      console.log(error);\r\n      // Note that col & error are new to the HTML 5 spec and may not be \r\n      // supported in every browser.  It worked for me in Chrome.\r\n      var extra = !col ? '' : '\\ncolumn: ' + col;\r\n      extra += !error ? '' : '\\nerror: ' + error;\r\n   \r\n      // You can view the information in an alert to see things working like this:\r\n      alert(\"Error: \" + msg + \"\\nurl: \" + url + \"\\nline: \" + line + extra);\r\n   \r\n      // TODO: Report this error via ajax so you can keep track\r\n      //       of what pages have JS issues\r\n   \r\n      var suppressErrorAlert = true;\r\n      // If you return true, then error alerts (like in older versions of \r\n      // Internet Explorer) will be suppressed.\r\n      return suppressErrorAlert;\r\n    };\r\n    */\r\n\r\n    this.state = {\r\n      initialised: false,\r\n      expanded: set.expanded,\r\n      popUpVisibility: false,\r\n      expiredSessionUser: false,\r\n      firstLoginDataCheck: true\r\n    };\r\n\r\n    Global.easyApp = this;\r\n  };\r\n\r\n  public refresh(next: any) {\r\n    this.setState({ initialised: true });\r\n  };\r\n\r\n  public static switchTheme() {\r\n    App.currentTheme = localStorage.getItem(StorageKeys.keyTheme) || \"theme-light\";\r\n\r\n    if (App.currentTheme === 'theme-dark') {\r\n      App.currentTheme = 'theme-light';\r\n    } else if (App.currentTheme === 'theme-light') {\r\n      App.currentTheme = 'theme-dark';\r\n    }\r\n\r\n    localStorage.setItem(StorageKeys.keyTheme, App.currentTheme);\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  public gotoDashboard() {\r\n    EasyRouter.route({ url: '/', title: Global.getConfiguration().appTitle });\r\n  };\r\n\r\n  public refreshAndRoute(item: INavLink) {\r\n    this.setState({ initialised: true }, () => {\r\n      EasyRouter.route(item);\r\n    });\r\n  };\r\n\r\n  public runPopup(dyn: any, runnable: any | undefined) {\r\n    this.dynamicPopup = dyn;\r\n    this.setState({ changed: true });\r\n\r\n    if (runnable) {\r\n      runnable();\r\n    };\r\n  };\r\n\r\n  public expand(value: boolean) {\r\n    this.setState({ expanded: value });\r\n  };\r\n\r\n  public append(comp: JSX.Element) {\r\n    this.extras.push(comp);\r\n    this.setState({ changed: true });\r\n  };\r\n\r\n  public setTitle(value: string) {\r\n    if (this.head) {\r\n      this.head.setTitle(value);\r\n    }\r\n  };\r\n\r\n  public socketCallback(sock: ISocketPushModel) {\r\n    let api: IApiResponse = JSON.parse(sock.data);\r\n    StorageHelper.set(StorageKeys.keyDefCon, api.data);\r\n    this.defcon = api.data;\r\n    this.setState({ changed: true }, () => {\r\n      EasyRouter.reload();\r\n    });\r\n  };\r\n\r\n  public static setContainer(comp: JSX.Element, id: string) {\r\n    if (id == null) {\r\n      id = 'container';\r\n    }\r\n    let cont = document.getElementById(id);\r\n    ReactDOM.render(comp, cont);\r\n  };\r\n\r\n  public static unmountComponent(id: string) {\r\n    let cont = document.getElementById(id);\r\n    if (cont) {\r\n      ReactDOM.unmountComponentAtNode(cont);\r\n    };\r\n  };\r\n\r\n  public static renderComponent(target: HTMLElement, ctrl: any) {\r\n    ReactDOM.render(ctrl, target);\r\n  };\r\n\r\n  public render() {\r\n    // set theme\r\n    var htmlElement = document.documentElement;\r\n    htmlElement.setAttribute(\"data-theme\", App.currentTheme);\r\n\r\n    let css: string = this.props.css ? this.props.css : \"\";\r\n\r\n    if (this.state.expanded) {\r\n      css += ' exp';\r\n    };\r\n\r\n    if (this.state.fixed) {\r\n      css += ' fix';\r\n    };\r\n\r\n    let isBlank = EasyRouter.isBlank();\r\n    if (isBlank) {\r\n      css += ' blank';\r\n    };\r\n\r\n    css += ' ' + Browser.getBrowserString();\r\n\r\n    if (this.state.refresh) {\r\n      return\r\n    }\r\n\r\n    let oteloOnly = StorageHelper.oteloOnlyBookable();\r\n\r\n    let app = (\r\n      <>\r\n        {\r\n          oteloOnly ? <div id=\"appback\"></div> : null\r\n        }\r\n\r\n        <div id={App.containerId} className={css}>\r\n          <DefCon />\r\n          {this.dynamicPopup}\r\n          {this.props.content ? <scr.MainScreen blank={true} content={this.props.content} /> : null}\r\n          {this.state.initialised ? <scr.MainScreen blank={isBlank} /> : <scr.InitScreen parent={this} />}\r\n          {this.state.popUpVisibility ? this.areUsureLogout() : <></>}\r\n          {this.state.popupDefCon ? this.defConPopup() : <></>}\r\n          {this.state.firstLoginDataCheck ? this.firstLoginDataCheck() : <></>}\r\n          {this.state.expiredSessionUser ? this.expiredSessionUser() : <></>}\r\n          {this.extras.map((i, idx) => (\r\n            i\r\n          ))}\r\n\r\n          {/* <div>\r\n            <div onClick={()=>{\r\n              this.props.openScreen(<div>ssss</div>);\r\n            }}>aaaaaa</div>\r\n          </div> */}\r\n        </div>\r\n      </>\r\n    );\r\n\r\n    return app;\r\n  };\r\n\r\n  public componentDidMount() {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  };\r\n\r\n  public componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  };\r\n\r\n  public visibilityLogout(show: boolean) {\r\n    this.setState({ popUpVisibility: show })\r\n  }\r\n\r\n  public expiredSessionVisibility(show: boolean) {\r\n    this.setState({ expiredSessionUser: show })\r\n  }\r\n\r\n  public areUsureLogout(): JSX.Element {\r\n    let ctrl = (\r\n      <Container className=\"full tal\">\r\n        <Row>\r\n          <Col xs={12} md={12} className=\"npr\">\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n\r\n    let cfg: IPopupConfig = {\r\n      props: {\r\n        id: 'dynamicPopup',\r\n        title: 'Bist du sicher, dass du vf-easy.de verlassen möchtest?',\r\n        visible: true,\r\n        closable: false,\r\n        style: 'tal',\r\n        type: EPopupType.custom,\r\n        height: 150,\r\n        width: 500\r\n      },\r\n      content: ctrl,\r\n      action: <>\r\n        <page.LButton type={ELButtonType.buttonWithIconRight}\r\n          css=\"a1 fl\"\r\n          id=\"\"\r\n          text={\"NEIN, WEITERMACHEN\"}\r\n          onClick={() => {\r\n            this.setState({ changed: true, popUpVisibility: false })\r\n          }} />\r\n        <page.LButton type={ELButtonType.buttonWithIconRight}\r\n          css=\"a1 fr\"\r\n          id=\"\"\r\n          text={\"JA, ABMELDEN\"}\r\n          onClick={() => {\r\n            Api.logout()\r\n          }} />\r\n      </>\r\n    };\r\n\r\n    return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n  }\r\n\r\n  public defConPopup(): JSX.Element {\r\n    let dc = StorageHelper.getDefCon();\r\n    let cfg: IPopupConfig = {\r\n      props: {\r\n        id: 'dynamicPopup',\r\n        title: 'Access',\r\n        visible: true,\r\n        closable: true,\r\n        style: 'tal',\r\n        type: EPopupType.custom,\r\n        height: 250,\r\n        onDismiss: () => {\r\n          this.setState({ popupDefCon: false });\r\n        }\r\n      },\r\n      content: <div>{dc.notification}</div>\r\n    };\r\n\r\n    return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n  };\r\n\r\n  public checkDefCon = () => {\r\n    let dc = StorageHelper.getDefCon();\r\n    if (dc.canAccess()) {\r\n      return true;\r\n    } else {\r\n      this.setState({ popupDefCon: true });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  public firstLoginDataCheck(): JSX.Element {\r\n    let ctrl = (\r\n      <Container className=\"full tal\">\r\n\r\n        <Row>\r\n          <Col xs={12} md={12} className=\"np\">\r\n          <div style={{color: '#B8B8B8',textAlign: \"center\"}}>{\"Bitte vervollständige deine Daten und prüfe die bereits existierenden auf ihre Richtigkeit. Erst danach kannst du das Portal nutzen.\"}</div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col xs={6} md={6}>\r\n          <page.LControl type={EControlType.text}\r\n                                        value={''}\r\n                                       // onChange={this._onChange}\r\n                                       placeholder={MainTexts.void}\r\n                                        id='voidInitial'\r\n                                        name='void'\r\n                                         />\r\n          </Col>\r\n          <Col xs={6} md={6}>\r\n          <page.LControl type={EControlType.text}\r\n                                        value={''}\r\n                                       // onChange={this._onChange}\r\n                                       placeholder={MainTexts.vpkn}\r\n                                        id='vpknInitial'\r\n                                        name='vpkn'\r\n                                         />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={6} md={6}>\r\n          <page.LControl type={EControlType.text}\r\n                                        value={''}\r\n                                       // onChange={this._onChange}\r\n                                       placeholder={MainTexts.fnvoid}\r\n                                        id='fnvoidInitial'\r\n                                        name='fnvoid'\r\n                                         />\r\n          </Col>\r\n          <Col xs={6} md={6}>\r\n          <page.LControl type={EControlType.text}\r\n                                        value={''}\r\n                                       // onChange={this._onChange}\r\n                                       placeholder={MainTexts.salesId}\r\n                                        id='salesIdInitial'\r\n                                        name='salesId'\r\n                                         />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} md={12}>\r\n          <page.LControl type={EControlType.text}\r\n                                        value={''}\r\n                                       // onChange={this._onChange}\r\n                                       title={MainTexts.address}                                \r\n                                       placeholder={MainTexts.nameAddress}\r\n                                        id='nameInitial'\r\n                                        name='name'\r\n                                         />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={8} md={8}>\r\n          <page.LControl type={EControlType.text}\r\n                                        value={''}\r\n                                       // onChange={this._onChange}                                                             \r\n                                       placeholder={MainTexts.street}\r\n                                        id='streetInitial'\r\n                                        name='street'\r\n                                         />\r\n          </Col>\r\n          <Col xs={4} md={4}>\r\n          <page.LControl type={EControlType.text}\r\n                                        value={''}\r\n                                       // onChange={this._onChange}                                                            \r\n                                       placeholder={MainTexts.houseNumber}\r\n                                        id='houseNRInitial'\r\n                                        name='housenumber'\r\n                                         />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={4} md={4}>\r\n          <page.LControl type={EControlType.text}\r\n                                        value={''}\r\n                                       // onChange={this._onChange}                                                            \r\n                                       placeholder={MainTexts.zip}\r\n                                        id='zipInitial'\r\n                                        name='zip'\r\n                                         />\r\n          </Col>\r\n          <Col xs={8} md={8}>\r\n          <page.LControl type={EControlType.text}\r\n                                        value={''}\r\n                                       // onChange={this._onChange}                                                            \r\n                                       placeholder={MainTexts.city}\r\n                                        id='nameInitial'\r\n                                        name='name'\r\n                                         />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={4} md={4}>\r\n          <page.LControl type={EControlType.text}\r\n                                        value={''}\r\n                                       // onChange={this._onChange}   \r\n                                       title ={MainTexts.phoneNumber}                                                         \r\n                                       placeholder={MainTexts.telPrefix}\r\n                                        id='areaCodeInitial'\r\n                                        name='areaCode'\r\n                                         />\r\n          </Col>\r\n          <Col xs={8} md={8}>\r\n          <page.LControl type={EControlType.text}\r\n                                        value={''}\r\n                                       // onChange={this._onChange}                                                                                           \r\n                                       placeholder={MainTexts.phoneNumber}\r\n                                        id='numberInitial'\r\n                                        name='number'\r\n                                         />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} md={12}>\r\n        <page.LButton type={ELButtonType.buttonWithIconRight}\r\n                                            css=\"a1 fr\"\r\n                                            id=\"buttonSave\"\r\n                                            text={MainTexts.save}\r\n                                            onClick={() => {\r\n                                               \r\n                                            }} />\r\n                                            </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n\r\n    let cfg: IPopupConfig = {\r\n      props: {\r\n        id: 'dynamicPopup',\r\n        title: 'Abgleich deiner Stammdaten',\r\n        visible: false,\r\n        closable: false,\r\n        style: 'tal',\r\n        type: EPopupType.custom,\r\n        height: 900,\r\n     \r\n        onDismiss: () => {\r\n          this.setState({ firstLoginDataCheck: false });\r\n        }\r\n      },\r\n    content: <div>{ctrl}</div>\r\n    };\r\n\r\n    return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n  };\r\n\r\n  public expiredSessionUser(): JSX.Element {\r\n    let usr = StorageHelper.getUser();\r\n    let ctrl = (\r\n      <Container className=\"full tal\">\r\n        <Row>\r\n          <Col xs={12} md={12} className=\"npr\">\r\n            <page.LControl type={EControlType.textArea} id=\"login\"\r\n            />{MainTexts.loginInfo}\r\n          </Col>\r\n        </Row>\r\n\r\n        {\r\n          usr ? <iframe src={usr.logoutUrl} className='zero' /> : null\r\n        }\r\n\r\n      </Container>\r\n    )\r\n\r\n    let cfg: IPopupConfig = {\r\n      props: {\r\n        id: 'dynamicPopup',\r\n        title: 'Ihre Sitzung ist abgelaufen',\r\n        visible: true,\r\n        closable: false,\r\n        style: 'tal',\r\n        type: EPopupType.custom,\r\n        height: 200,\r\n        width: 500\r\n      },\r\n      content: ctrl,\r\n      action: <>\r\n\r\n        <page.LButton type={ELButtonType.buttonWithIconRight}\r\n          css=\"a1 fr\"\r\n          id=\"\"\r\n          text={\"Zum Login\"}\r\n          onClick={() => {\r\n            window.location.href = '/';\r\n            //Global.easyApp.gotoDashboard();\r\n          }} />\r\n      </>\r\n    };\r\n\r\n    return GlobalJSX.GetPopup(cfg.props, cfg.content, cfg.action);\r\n  };\r\n\r\n  private handleScroll(event: any) {\r\n    let scrollTop = document.documentElement ? document.documentElement.scrollTop : document.body.scrollTop;\r\n    if (!scrollTop) {\r\n      scrollTop = window.scrollY\r\n    };\r\n\r\n    if (this.head) {\r\n      this.head.fix(scrollTop > 30);\r\n      this.setState({ fixed: scrollTop > 30 });\r\n      return;\r\n    }\r\n\r\n    this.setState({ changed: true });\r\n  };\r\n};\r\n\r\nconst AppC = connect(mapStateToProps, mapDispatchToProps)(App);\r\n  \r\nexport default AppC;","import * as React from 'react';\r\nimport { IBaseComponentState } from '../../interfaces/index';\r\n\r\nexport interface IInputWrapperProps {\r\n    //children: JSX.Element[];\r\n};\r\n\r\nexport class InputWrapper extends React.Component<IInputWrapperProps, IBaseComponentState> {\r\n    constructor(props:IInputWrapperProps) {\r\n        super(props);\r\n\r\n    };\r\n\r\n    public render() {\r\n        let ctrl= <div className=\"iwrap\">\r\n            {this.props.children}\r\n        </div>;\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default InputWrapper;","import * as React from 'react';\r\nimport { App } from \"../../App\";\r\nimport * as constants from '../../constants';\r\nimport { ERAPIAction, IApiResponse, ISocketPushModel } from \"../../interfaces\";\r\nimport { ERequestType } from \"../../models\";\r\nimport ISignalrMessage from '../../models/global/ISignalrMessage';\r\nimport { EditUserScreen } from '../../screens/am/editUser';\r\nimport { MnpStatusScreen } from '../../screens/am/mnpStatus';\r\nimport * as scr from '../../screens/insex';\r\nimport { BelatedPorting, StatusPorting } from '../../screens/insex';\r\nimport { AppIds, StorageKeys } from \"../../utils/Defaults\";\r\nimport Global from \"../../utils/Global\";\r\nimport { MainTexts } from '../../utils/messages';\r\nimport EasyRouter from '../../utils/router';\r\nimport StorageHelper from '../../utils/storage';\r\nimport ExistingPartnerCard from '../existing/data/partnerCard';\r\nimport PreviewContract from \"../ordering/preview/contract\";\r\nimport { ActivationAvailability, ActivationSummary } from \"../ordering/process\";\r\nimport ToolSearchExisting from './searchExisting';\r\n\r\nconst buildEnv = constants.build;\r\n\r\n\r\ndeclare global {\r\n    interface Window { jQuery: any; }\r\n};\r\n\r\nwindow.jQuery = window.jQuery || {};\r\n\r\nlet apiProxy = {};\r\n\r\n\r\n\r\n\r\n/// <reference path=\"..\\..\\SignalR.Client.JS\\Scripts\\jquery-1.6.4.js\" />\r\n/// <reference path=\"jquery.signalR.js\" />\r\n(function ($, window, undefined) {\r\n    /// <param name=\"$\" type=\"jQuery\" />\r\n    \"use strict\";\r\n\r\n    if (typeof ($.signalR) !== \"function\") {\r\n        throw new Error(\"SignalR: SignalR is not loaded. Please ensure jquery.signalR-x.js is referenced before ~/signalr/js.\");\r\n    }\r\n\r\n    let signalR = $.signalR;\r\n\r\n    function makeProxyCallback(hub, callback) {\r\n        return function () {\r\n            // Call the client hub method\r\n            callback.apply(hub, $.makeArray(arguments));\r\n        };\r\n    }\r\n\r\n    function registerHubProxies(instance, shouldSubscribe) {\r\n        let key, hub, memberKey, memberValue, subscriptionMethod;\r\n\r\n        for (key in instance) {\r\n            if (instance.hasOwnProperty(key)) {\r\n                hub = instance[key];\r\n\r\n                if (!(hub.hubName)) {\r\n                    // Not a client hub\r\n                    continue;\r\n                }\r\n\r\n                if (shouldSubscribe) {\r\n                    // We want to subscribe to the hub events\r\n                    subscriptionMethod = hub.on;\r\n                } else {\r\n                    // We want to unsubscribe from the hub events\r\n                    subscriptionMethod = hub.off;\r\n                }\r\n\r\n                // Loop through all members on the hub and find client hub functions to subscribe/unsubscribe\r\n                for (memberKey in hub.client) {\r\n                    if (hub.client.hasOwnProperty(memberKey)) {\r\n                        memberValue = hub.client[memberKey];\r\n\r\n                        if (!$.isFunction(memberValue)) {\r\n                            // Not a client hub function\r\n                            continue;\r\n                        }\r\n\r\n                        // Use the actual user-provided callback as the \"identity\" value for the registration.\r\n                        subscriptionMethod.call(hub, memberKey, makeProxyCallback(hub, memberValue), memberValue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function _registerSubscribedHubs() {\r\n        let connection = $.hubConnection;\r\n        if (!connection._subscribedToHubs) {\r\n            connection._subscribedToHubs = true;\r\n            connection.starting(function () {\r\n                // Set the connection's data object with all the hub proxies with active subscriptions.\r\n                // These proxies will receive notifications from the server.\r\n                let subscribedHubs = [] as any;\r\n\r\n                $.each(connection.proxies, function (key) {\r\n                    if ($.hubConnection.hasSubscriptions()) {\r\n                        subscribedHubs.push({ name: key });\r\n                        connection.log(\"Client subscribed to hub '\" + key + \"'.\");\r\n                    }\r\n                });\r\n\r\n                if (subscribedHubs.length === 0) {\r\n                    connection.log(\"No hubs have been subscribed to.  The client will not receive data from hubs.  To fix, declare at least one client side function prior to connection start for each hub you wish to subscribe to.\");\r\n                }\r\n\r\n                connection.data = connection.json.stringify(subscribedHubs);\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    const cnnDev: string = 'https://api.easy3.com/api/hub';\r\n\r\n    let cnn: string = cnnDev; // dev by default\r\n\r\n    if (buildEnv === constants.BuildEnv.Dev) {\r\n        cnn = cnnDev;\r\n    } else if (buildEnv === constants.BuildEnv.Int) {\r\n        cnn = 'https://easy3.tradelight.net/r/api/hub';\r\n    } else if (buildEnv === constants.BuildEnv.Prod) {\r\n        cnn = 'https://api.vf-easy.de/r/api/hub';\r\n    } else if (buildEnv === constants.BuildEnv.DevInt) {\r\n        cnn = 'https://easy3.tradelight.net/r/api/hub';\r\n    }\r\n\r\n    console.log('hub:' + cnn);\r\n\r\n    signalR.hub = $.hubConnection(cnn, { useDefaultPath: false });\r\n\r\n    $.extend(signalR, signalR.hub._registerSubscribedHubs());\r\n\r\n    $.hubConnection.prototype.createHubProxies = function () {\r\n        console.log('proxies created');\r\n        let proxies = {};\r\n        this.starting(function () {\r\n            // Register the hub proxies as subscribed\r\n            // (instance, shouldSubscribe)\r\n            registerHubProxies(proxies, true);\r\n\r\n            signalR.hub._registerSubscribedHubs();\r\n        }).disconnected(function () {\r\n            // Unsubscribe all hub proxies when we \"disconnect\".  This is to ensure that we do not re-add functional call backs.\r\n            // (instance, shouldSubscribe)\r\n            registerHubProxies(proxies, false);\r\n        });\r\n\r\n        proxies['trustlightApiHub'] = this.createHubProxy('trustlightApiHub');\r\n        proxies['trustlightApiHub'].client = {};\r\n\r\n        proxies['trustlightApiHub'].server = {\r\n            onSend: function (message) {\r\n                return proxies['trustlightApiHub'].invoke.apply(proxies['trustlightApiHub'], $.merge([\"onSend\"], $.makeArray(arguments)));\r\n            }\r\n        };\r\n\r\n        apiProxy = proxies['trustlightApiHub'];\r\n\r\n        return proxies;\r\n    };\r\n\r\n    $.extend(signalR, signalR.hub.createHubProxies());\r\n\r\n}(window.jQuery, window));\r\n\r\nexport class SignalRClient {\r\n    //private callback: any;\r\n    private hub: any;\r\n    private id: string;\r\n    public connectionId: string = '';\r\n\r\n    public started: boolean = false;\r\n\r\n    constructor(\r\n        //callback: any,\r\n        autostart: boolean,\r\n        id: string) {\r\n        //this.callback = callback;\r\n        this.started = false;\r\n        this.id = id;\r\n\r\n        //this.callback = this.callback.bind(this);\r\n        this.push = this.push.bind(this);\r\n        this.auto = this.auto.bind(this);\r\n\r\n        if (autostart) { this.start(); }\r\n\r\n        this.send = this.send.bind(this);\r\n    };\r\n\r\n    public send(message: string, requestType: ERequestType, callback: any) {\r\n       \r\n        try {\r\n            let h = ($.connection as any).trustlightApiHub;\r\n            let m: ISignalrMessage = {\r\n                type: requestType,\r\n                connectionId: this.connectionId,\r\n                data: message,\r\n                url: window.location.href //Api.getAppUrl()\r\n            };\r\n            \r\n            if(buildEnv != constants.BuildEnv.Prod) { console.log('hub send: ' + message.length, m); }\r\n            h.server.onSend(JSON.stringify(m));\r\n           \r\n            if (callback) { callback(); };\r\n            \r\n        } catch (e) {\r\n            console.log('!!!!!!!!!!!!!!!!!errror!!!!!!!!!!!!!!!!!!!!');\r\n            \r\n            console.log(e);\r\n            if (callback) { callback(e); };\r\n        }\r\n    };\r\n\r\n    public start() {\r\n        this.hub = ($.connection as any).trustlightApiHub;\r\n\r\n        $.connection.hub.disconnected(function () {\r\n            console.log('!!!!!!!!!!!hub disconnected!!!!!!!!!!!!!');\r\n            setTimeout(function () {\r\n                $.connection.hub.start();\r\n            }, 1000); // Restart connection after 5 seconds.\r\n        });\r\n\r\n        console.log('hub started');\r\n\r\n        this.hub.on(\"pushResponse\", (o) => { });\r\n\r\n        this.hub.client.pushResponse = this.push;\r\n\r\n        $.connection.hub.start({ pingInterval: 60000, transport: ['webSockets', 'longPolling'] })\r\n            .done((e) => {\r\n                this.started = true;\r\n                this.connectionId = this.hub.connection.id;\r\n                console.log('hub started: ' + this.connectionId);\r\n            })\r\n            .fail(function (e) {\r\n                console.log('!!!!!!!!!!!!!!!!!hub error!!!!!!!!!!!!!!!!!!!!!!');\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    private push(u: string) {\r\n        this.auto(u);\r\n    };\r\n\r\n    public stop() {\r\n        console.log('hub stopped');\r\n        this.started = false;\r\n        $.connection.hub.stop();\r\n    };\r\n\r\n    private auto(u: string) {\r\n        Global.parseSocketAndApiResponse(u, (a: IApiResponse, s: ISocketPushModel) => {\r\n            if (!s.data) {\r\n                return;\r\n            };\r\n\r\n            if(Global.trackSession) {\r\n                Global.trackSession(a);\r\n            };\r\n\r\n            if (a.error && a.error.action) {\r\n                if (a.error.action.type === ERAPIAction.login) {\r\n                    window.location.href = a.error.action.url;\r\n                    return;\r\n                }\r\n            };\r\n\r\n            if (a.error) {\r\n                if (a.error.code == '403' || a.error.code == 'Forbidden') {\r\n                    App.setContainer(<scr.ErrorScreen data={{ code: 403 }} />, AppIds.container);\r\n\r\n                    return;\r\n                };\r\n\r\n                if (a.error.code == '404' || a.error.code == 'NotFound') {\r\n                    App.setContainer(<scr.ErrorScreen data={{ code: 404 }} />, AppIds.container);\r\n\r\n                    return;\r\n                };\r\n            };\r\n\r\n            console.log('socket receive:' + s.type);\r\n            if(buildEnv != constants.BuildEnv.Prod) { console.log('hub receive: ' + s.type, s); }\r\n\r\n            if (s.type === ERequestType.loadDraft) {\r\n                let order = JSON.parse(a.data.data);\r\n                order.customer = JSON.parse(order.model);\r\n                StorageHelper.resetOrders();\r\n                \r\n                order.currentBrand = order.activations[0].brandKey;\r\n                order.currentCat = order.activations[0].brandKey;\r\n\r\n                StorageHelper.addOrder(order);\r\n\r\n                if(a.data.avl) {\r\n                    a.data.avl.id = a.data.avl.brands[0].id;\r\n                    StorageHelper.set(StorageKeys.keyAvailability, a.data.avl); \r\n                };\r\n               \r\n                let u = '/ordering/new/tariff/' + order.Id;\r\n                EasyRouter.route({ url: u, title: MainTexts.draft });\r\n            } else if (s.type === ERequestType.defconChanged) {\r\n                let receiver = Global.GetComponent<App>(App.containerId);\r\n                if (receiver) { receiver.socketCallback(s); }\r\n            } else if (s.type === ERequestType.customerGroupGet || s.type === ERequestType.customerGroupCreate) {\r\n                let receiver = Global.GetComponent<ExistingPartnerCard>(ExistingPartnerCard.containerId);\r\n                if (receiver) { receiver.socketCallback(s); }\r\n            } else if (s.type === ERequestType.loadCustomer) {\r\n                let receiver = Global.GetComponent<ToolSearchExisting>(ToolSearchExisting.containerId);\r\n                if (receiver) { receiver.socketCallback(s); }\r\n            } else if (s.type === ERequestType.checkAvailability) {\r\n                StorageHelper.parseAvailability(s);\r\n                let receiverAvl = Global.GetComponent<ActivationAvailability>(ActivationAvailability.containerId);\r\n                if (receiverAvl) { receiverAvl.socketCallback(s); }\r\n\r\n                let receiverCust = Global.GetComponent<scr.CustomerScreen>(scr.CustomerScreen.containerId);\r\n                if (receiverCust) { receiverCust.applyAvailability(); }\r\n            } else if (s.type === ERequestType.startApp) {\r\n                let receiver = Global.GetComponent<scr.InitScreen>(scr.InitScreen.containerId);\r\n                if (receiver) { receiver.socketCallback(a); }\r\n            } else if (s.type === ERequestType.getDrafts) {\r\n                let receiver = Global.GetComponent<scr.DraftsScreen>(scr.DraftsScreen.containerId);\r\n                if (receiver) { receiver.socketCallback(a); }\r\n            } else if (s.type === ERequestType.getContracts) {\r\n                let receiver = Global.GetComponent<scr.ContractManagerScreen>(scr.ContractManagerScreen.containerId);\r\n                if (receiver) { receiver.socketCallback(a); }\r\n            } else if (s.type === ERequestType.create || s.type === ERequestType.checkMsisdn) {\r\n                let receiver = Global.GetComponent<scr.ProcessNewScreen>(scr.ProcessNewScreen.containerId);\r\n                if (receiver) { receiver.socketCallback(s); }\r\n            } else if (s.type === ERequestType.createCustomerProcess\r\n                || s.type === ERequestType.customerChangePayment\r\n                || s.type === ERequestType.customerChangeData\r\n                || s.type === ERequestType.customerChangePassword\r\n                || s.type === ERequestType.customerChangeAddRemoveServices\r\n                || s.type === ERequestType.customerGetCanellation\r\n                || s.type === ERequestType.customerSetCancellation\r\n                || s.type === ERequestType.createCancellationProcess\r\n                || s.type === ERequestType.customerOrderSim\r\n                || s.type === ERequestType.customerUpdateConsents) {\r\n                let receiver = Global.GetComponent<scr.CustomerScreen>(scr.CustomerScreen.containerId);\r\n                if (receiver) { receiver.socketCallback(s); }\r\n            } else if (s.type == ERequestType.customerChangeAddCombi){\r\n                let receiver = Global.GetComponent<PreviewContract>(s.receiverId);\r\n                if (receiver) { receiver.socketCallback(a); } else { console.log('receiver:' + s.receiverId + ' noyt found!!!!!');}\r\n            } else if (s.type === ERequestType.print || s.type === ERequestType.activation || s.type === ERequestType.contractSummaryPost || s.type === ERequestType.loadCustomerRefresh) {\r\n                let receiver = Global.GetComponent<PreviewContract>(s.receiverId);\r\n                if (!receiver) { return; }\r\n                if (s.type === ERequestType.loadCustomerRefresh) {\r\n                    receiver.socketCallbackCustomer(s);\r\n                } else {\r\n                    if (receiver) { receiver.socketCallback(a); }\r\n                };\r\n            } else if (s.type === ERequestType.saveDraft) {\r\n                \r\n                let receiver = Global.GetComponent<ActivationSummary>(ActivationSummary.containerId);\r\n                \r\n                if (receiver) { receiver.socketCallback(s); }\r\n            } else if (s.type === ERequestType.getOrderDetail) {\r\n\r\n                let receiver = Global.GetComponent<scr.OrderProduct>(scr.OrderProduct.containerId);\r\n                receiver.socketCallbackDetails(a);\r\n\r\n            } else if (s.type === ERequestType.saveOrderPoducts) {\r\n                let receiver = Global.GetComponent<scr.OrderOverview>(scr.OrderOverview.containerId);\r\n                if (receiver) { receiver.socketCallback(a); }\r\n            }\r\n            else if (s.type === ERequestType.changePassword) {\r\n                let receiver = Global.GetComponent<scr.EditPasswordScreen>(scr.EditPasswordScreen.containerId);\r\n                if (receiver) { receiver.socketCallback(a); }\r\n            } else if (s.type === ERequestType.loadProfile) {\r\n                let receiver = Global.GetComponent<scr.EditProfileScreen>(scr.EditProfileScreen.containerId);\r\n                if (receiver) { receiver.loadProfileCallback(a); }\r\n            } else if (s.type === ERequestType.saveProfile) {\r\n                let receiver = Global.GetComponent<scr.EditProfileScreen>(scr.EditProfileScreen.containerId);\r\n                if (receiver) { receiver.saveProfileCallback(a); }\r\n            } else if (s.type === ERequestType.loadAccount) {\r\n                let receiver = Global.GetComponent<scr.DealerScreen>(scr.DealerScreen.containerId) || Global.GetComponent<scr.AdministrationScreen>(scr.AdministrationScreen.containerId);\r\n                if (receiver) { receiver.loadAccountCallback(a); }\r\n            } else if (s.type === ERequestType.saveAccount) {\r\n                let receiver = Global.GetComponent<scr.DealerScreen>(scr.DealerScreen.containerId);\r\n                if (receiver) { receiver.saveAccountCallback(a); }\r\n            } else if (s.type === ERequestType.getContacts) {\r\n                let receiver = Global.GetComponent<scr.AdministrationScreen>(scr.AdministrationScreen.containerId);\r\n                if (receiver) { receiver.contactsRecieved(a); }\r\n            } else if (s.type === ERequestType.getContractDetails) {\r\n                let receiver = Global.GetComponent<scr.ContractManagerDetailsScreen>(scr.ContractManagerDetailsScreen.containerId);\r\n                if (receiver) { receiver.socketCallback(a); }\r\n            } else if (s.type === ERequestType.saveImei || s.type === ERequestType.saveImeiList) {\r\n                let receiver = Global.GetComponent<scr.ImeiScreen>(scr.ImeiScreen.containerId);\r\n                if (receiver) { receiver.socketCallback(a); }\r\n            } else if (s.type === ERequestType.loadContact) {\r\n                let receiver = Global.GetComponent<EditUserScreen>(EditUserScreen.containerId);\r\n                receiver.loadUserCallback(a);\r\n            } else if (s.type === ERequestType.getOrderProducts) {\r\n                let receiver = Global.GetComponent<scr.OrderProduct>(scr.OrderProduct.containerId);\r\n                receiver.socketCallback(a);\r\n            } else if (s.type === ERequestType.getOrdersList) {\r\n                let receiver = Global.GetComponent<scr.OrderProduct>(scr.OrderProduct.containerId);\r\n                receiver.socketCallbackOrdersList(a);\r\n            } else if (s.type === ERequestType.saveContact) {\r\n                let receiver = Global.GetComponent<EditUserScreen>(EditUserScreen.containerId);\r\n                if (receiver) { receiver.saveUserCallback(a); }\r\n            } else if (s.type === ERequestType.activateUser) {\r\n                let receiver = Global.GetComponent<EditUserScreen>(EditUserScreen.containerId);\r\n                if (receiver) { receiver.activateUserCallback(a); }\r\n            } else if (s.type === ERequestType.deactivateUser) {\r\n                let receiver = Global.GetComponent<EditUserScreen>(EditUserScreen.containerId);\r\n                if (receiver) { receiver.deactivateUserCallback(a); }\r\n            } else if (s.type === ERequestType.belatedPortation) {\r\n                let receiver = Global.GetComponent<BelatedPorting>(BelatedPorting.containerId);\r\n                if (receiver) { receiver.socketCallback(a); }\r\n            } else if (s.type === ERequestType.getMnpPortingStatus) {\r\n                let receiver = Global.GetComponent<StatusPorting>(StatusPorting.containerId);\r\n                if (receiver) { receiver.socketCallback(a); }\r\n            }\r\n            else if (s.type === ERequestType.getMnpPortingStatusDetails) {\r\n                let receiver = Global.GetComponent<StatusPorting>(StatusPorting.containerId);\r\n                if (receiver) { receiver.socketCallbackDetails(a); }\r\n            }\r\n            else if (s.type === ERequestType.notify) {\r\n                alert('notify:' + s.data);\r\n            } else if (s.type === ERequestType.loadPortingStatus) {\r\n                let receiver = Global.GetComponent<MnpStatusScreen>(MnpStatusScreen.containerId);\r\n                if (receiver) { receiver.socketCallback(a); }\r\n            }\r\n        });\r\n    };\r\n}","import linq from 'linq';\r\nimport * as React from 'react';\r\nimport { App } from \"../App\";\r\nimport CategoryWrapper from \"../components/tools/categoryWrapper\";\r\nimport { SignalRClient } from '../components/tools/singalRClient';\r\nimport * as e3c from '../constants';\r\nimport IAppDefinition from \"../interfaces/app/IAppDefinition\";\r\nimport * as i from \"../interfaces/index\";\r\nimport { ERAPIAction, IApiSummary } from \"../interfaces/index\";\r\nimport { ECustomerStatus } from \"../models\";\r\nimport { AddChanel } from \"../models/ordering/bew\";\r\nimport IFee from \"../models/ordering/fee\";\r\nimport { EPaymentType } from \"../models/ordering/order\";\r\nimport { IProduct } from \"../models/ordering/product\";\r\nimport IService from \"../models/ordering/service\";\r\nimport { DateValue, EControlType } from \"../models/page/diverse\";\r\nimport { IControlValue, ICountry, IKeyText, IKeyTextNumber } from \"../models/page/interfaces\";\r\nimport { ErrorScreen } from \"../screens/insex\";\r\nimport { AppIds, Defaults, VodafonePositions } from \"./Defaults\";\r\nimport { MainTexts, OrderingTexts } from \"./messages\";\r\nimport StorageHelper from \"./storage\";\r\n\r\nexport class Global {\r\n    public static easyApp: App;\r\n    public static categoryWrapper: CategoryWrapper;\r\n\r\n    public static hub: SignalRClient;\r\n\r\n    //** is called after the initscreen is mounted */\r\n    public static init() {\r\n        Global.hub = new SignalRClient(true, 'main');\r\n    };\r\n\r\n    public static trackSession: any;\r\n\r\n    public static FindReact(dom: any) {\r\n        if (!dom)\r\n            return undefined;\r\n        let k = Object.keys(dom).find(key => key.startsWith(\"__reactInternalInstance$\"));\r\n        let internalInstance = dom[k ? k : 0];\r\n        if (internalInstance == null) { return null; }\r\n\r\n        if (internalInstance.return) { // react 16+\r\n            return internalInstance._debugOwner\r\n                ? internalInstance._debugOwner.stateNode\r\n                : internalInstance.return.stateNode;\r\n        } else { // react <16\r\n            return internalInstance._currentElement._owner._instance;\r\n        }\r\n    };\r\n\r\n    public static Stringify(data) {\r\n        var cache: any[] = [];\r\n        return JSON.stringify(data, function (key, value) {\r\n            if (typeof value === 'object' && value !== null) {\r\n                if (cache.indexOf(value) !== -1) {\r\n                    // Duplicate reference found, discard key\r\n                    return;\r\n                }\r\n                // Store value in our collection\r\n                cache.push(value);\r\n            }\r\n            return value;\r\n        });\r\n    };\r\n\r\n    public static dateOnly(d: Date): Date {\r\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\r\n    };\r\n\r\n    public static containsAny<T>(target: T[], source: T[]): boolean {\r\n        if (target && source) {\r\n            for (let i = 0; i < source.length; i++) {\r\n                if (target.indexOf(source[i]) >= 0) {\r\n                    return true;\r\n                };\r\n            };\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    public static getAgeFromDate(dateOfBirth: any): number {\r\n        let today = new Date();\r\n        let bday = new Date(dateOfBirth);\r\n        let age: number = Math.floor((today.getTime() - new Date(dateOfBirth).getTime()) / 3.15576e+10);\r\n\r\n        if (age === 18 && bday.getMonth() + 1 > today.getMonth() + 1 && bday.getDate() > today.getDate()) {\r\n            age--;\r\n        } else if (age === 18 && bday.getMonth() + 1 === today.getMonth() + 1 && bday.getDate() > today.getDate()) {\r\n            age--;\r\n        }else if(age === 18 && bday.getMonth() + 1 > today.getMonth() + 1 && bday.getDate() === today.getDate()){\r\n            age--;\r\n        }\r\n\r\n        if (age === 16 && bday.getMonth() + 1 > today.getMonth() + 1 && bday.getDate() > today.getDate()) {\r\n            age--;\r\n        } else if (age === 16 && bday.getMonth() + 1 === today.getMonth() + 1 && bday.getDate() > today.getDate()) {\r\n            age--;\r\n        }else if(age === 16 && bday.getMonth() + 1 > today.getMonth() + 1 && bday.getDate() === today.getDate()){\r\n            age--;\r\n        }\r\n\r\n        // if (age === 27 && bday.getMonth() + 1 > today.getMonth() + 1 && bday.getDate() > today.getDate()) {\r\n        //     debugger\r\n        //     age--;\r\n        // } else if (age === 27 && bday.getMonth() + 1 === today.getMonth() + 1 && bday.getDate() > today.getDate()) {\r\n        //     debugger\r\n        //     age--;\r\n        // }else if(age === 27 && bday.getMonth() + 1 > today.getMonth() + 1 && bday.getDate() === today.getDate()){\r\n        //     debugger\r\n        //     age--;\r\n        // }\r\n        return age;\r\n    }\r\n\r\n    public static dateIsValid(d: Date): boolean {\r\n        if (d.toString() == 'Invalid Date') {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    public static dateToString(d: Date): Date {\r\n        let tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\r\n        let v = (new Date(d.getTime() - (d.getTimezoneOffset() * 60000))).toISOString().split('T');\r\n\r\n        return new Date(v[0]);\r\n    };\r\n\r\n    public static GetComponent<T>(id: string): T {\r\n        let element = document.getElementById(id);\r\n        let ctrl: T = Global.FindReact(element);\r\n        return ctrl;\r\n    };\r\n\r\n    public static TrackError(error, errorInfo) {\r\n        console.log('TrackError');\r\n        console.log(error);\r\n        console.log(errorInfo);\r\n    };\r\n\r\n    public static FocusComponent(id: string) {\r\n        let element = document.getElementById(id);\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        };\r\n    };\r\n\r\n    public static getEmptyFee() : IFee {\r\n        return {price: 0, unit: Defaults.currencyUnit };\r\n    };\r\n\r\n    public static inRole(role: string): boolean {\r\n        let usr = StorageHelper.getUser();\r\n        if (usr) {\r\n            let r = linq.from<string>(usr.roles).where(x => x === role).firstOrDefault();\r\n\r\n            return r ? true : false;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    public static inAnyRole(roles: string[]): boolean {\r\n        let usr = StorageHelper.getUser();\r\n\r\n        if (usr) {\r\n            let r = linq.from<string>(usr.roles).where(x => roles.indexOf(x) >= 0).toArray();\r\n\r\n            return r && r.length > 0 ? true : false;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    public static checkAccessRoles(roles: string[]): boolean {\r\n        if (!Global.inAnyRole(roles)) {\r\n            return false;\r\n        };\r\n\r\n        return true;\r\n    };\r\n\r\n    public static validateAccessRoles(roles: string[]): boolean {\r\n        const result = Global.checkAccessRoles(roles);\r\n\r\n        if (!result) {\r\n            App.setContainer(<ErrorScreen data={{ code: 403 }} />, AppIds.container);\r\n        };\r\n\r\n        return result;\r\n    };\r\n\r\n    public static isDelaer(redirect: boolean): boolean {\r\n        const result = Global.inAnyRole([VodafonePositions.Vertriebsbeauftragter, \r\n            VodafonePositions.Vertriebsleiter, \r\n            VodafonePositions.Niederlassungsleiter, \r\n            VodafonePositions.Niederlassungssupport,\r\n            VodafonePositions.Hotline,\r\n            VodafonePositions.Backoffice, \r\n            VodafonePositions.Hauptabteilungsleiter\r\n        ]);\r\n\r\n        if (result && redirect) {\r\n            App.setContainer(<ErrorScreen data={{ code: 403.1 }} />, AppIds.container);\r\n        };\r\n\r\n        return !result;\r\n    };\r\n\r\n    public static extractErrorAndValidation(sum: IApiSummary): string {\r\n        let ctrl = sum.message;\r\n\r\n        if (sum.validation) {\r\n            ctrl += '<ul>';\r\n            sum.validation.items.map((i) => {\r\n                ctrl += '<li>' + i.Key + ': ' + i.Value + '</li>';\r\n            });\r\n            ctrl += '</ul>';\r\n        };\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public static getVersion() {\r\n        return '3.0.100.3';\r\n    };\r\n\r\n    public static convertUTCDateToLocalDate(date: Date): Date {\r\n        //var newDate = new Date(date.getTime() + date.getTimezoneOffset()*60*1000);\r\n\r\n        //var offset = date.getTimezoneOffset() / 60;\r\n        var hours = date.getHours();\r\n\r\n        date.setHours(hours + 2); //- offset);\r\n\r\n        return date;\r\n    };\r\n\r\n    public static getTimestamp() {\r\n        return Date.now();\r\n    };\r\n\r\n    public static getToday(): Date {\r\n        let d: Date = new Date();\r\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\r\n    };\r\n\r\n    public static indexOfAny<T>(source: T[], needles: T[]): boolean {\r\n        if (needles && source) {\r\n            for (let i = 0; i < needles.length; i++) {\r\n                if (source.indexOf(needles[i]) >= 0) {\r\n                    return true;\r\n                };\r\n            };\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    public static addDays(date: Date, days: number): Date {\r\n        //var date = new Date();\r\n        date.setDate(date.getDate() + days);\r\n        return date;\r\n    };\r\n\r\n    public static getProductById(id: string): IProduct | undefined {\r\n        let brands = StorageHelper.getBrands();\r\n\r\n        for (let i = 0; i < brands.length; i++) {\r\n            var p = linq.from<IProduct>(brands[i].products)\r\n                .where(x => x.id === id)\r\n                .firstOrDefault();\r\n\r\n            if (p !== null) {\r\n                return p;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    };\r\n\r\n    public static getDaysInMonth(value: Date): number {\r\n        let m: number = value.getMonth() + 1;\r\n        if (m == 2) {\r\n            if (Global.isLeapYear(value.getFullYear())) {\r\n                return 29;\r\n            } else {\r\n                return 28;\r\n            };\r\n        } else if (m == 4 || m == 6 || m == 9 || m == 11) {\r\n            return 30;\r\n        } else {\r\n            return 31;\r\n        };\r\n    };\r\n\r\n    public static isLeapYear(year) {\r\n        return ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\r\n    }\r\n\r\n    public static getDays(min: number, max: number): IKeyText[] {\r\n        let op: IKeyText[] = new Array();\r\n        for (let i = min; i <= max; i++) {\r\n            op.push({ key: i.toString(), text: i.toString() })\r\n        }\r\n        return op;\r\n    };\r\n\r\n    public static getYears(from: number, to: number): IKeyText[] {\r\n        let op: IKeyText[] = new Array();\r\n        let y = (new Date()).getFullYear()\r\n        for (let i = to; i >= from; i--) {\r\n            op.push({ key: i.toString(), text: i.toString() })\r\n        }\r\n        return op;\r\n    };\r\n\r\n    public static getCustomerStatus(stat: ECustomerStatus): string {\r\n        if (stat == ECustomerStatus.gold) {\r\n            return MainTexts.gold;\r\n        } else if (stat == ECustomerStatus.silver) {\r\n            return MainTexts.silver;\r\n        } else if (stat == ECustomerStatus.platinum) {\r\n            return MainTexts.platinum;\r\n        };\r\n\r\n        return MainTexts.na;\r\n    };\r\n\r\n    public static toGermanDate(value: Date | undefined): string {\r\n        if (!value) { return '' };\r\n\r\n        let inner: Date = new Date(value);\r\n        let dd: number = inner.getDate();\r\n        let mm: number = inner.getMonth() + 1;\r\n        let yyyy: number = inner.getFullYear();\r\n        let d: string = dd.toString();\r\n        let m: string = mm.toString();\r\n\r\n        if (dd < 10) {\r\n            d = '0' + dd;\r\n        }\r\n\r\n        if (mm < 10) {\r\n            m = '0' + mm;\r\n        }\r\n\r\n        return d + '.' + m + '.' + yyyy;\r\n    };\r\n\r\n    public static toGermanDateL(value: DateValue): string {\r\n        let d = new Date(value.year, value.month, value.day);\r\n        return Global.toGermanDate(d);\r\n    };\r\n\r\n    public static fromGermanDateString(value: string): Date | undefined {\r\n        try {\r\n            let sa = value.split('.');\r\n\r\n            if (sa.length != 3) {\r\n                throw new Error('not a date');\r\n            };\r\n\r\n            let d = new Date(Number.parseInt(sa[2]), Number.parseInt(sa[1]) - 1, Number.parseInt(sa[0]));\r\n\r\n            return d;\r\n        } catch (e) {\r\n            console.error(e);\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n    public static formatNumber(value: number, n: number, x: number, unit: string) {\r\n        var re = '\\\\d(?=(\\\\d{' + (x || 3) + '})+' + (n > 0 ? '\\\\.' : '$') + ')';\r\n        var res = value.toFixed(Math.max(0, ~~n)).replace(new RegExp(re, 'g'), '$&,');\r\n        if (unit) {\r\n            res += ' ' + unit;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    public static removeElementFromArray(arr: string[], value: string) {\r\n        if (arr) {\r\n            let idx = arr.indexOf(value);\r\n            if (idx >= 0) {\r\n                arr.splice(idx, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    public static getPaymentTypeUi(payment: EPaymentType): string {\r\n        if (payment === EPaymentType.iban) {\r\n            return OrderingTexts.payment1;\r\n        } else if (payment === EPaymentType.creditcard) {\r\n            return OrderingTexts.payment3;\r\n        } else if (payment === EPaymentType.bank) {\r\n            return OrderingTexts.payment2;\r\n        } else { return OrderingTexts.payment4; }\r\n    };\r\n\r\n    public static feeToString(fee: IFee) {\r\n        if (fee) {\r\n            return (fee.price / 100).toFixed(2).toString().replace('.', ',') + ' ' + (fee.unit ? fee.unit : MainTexts.euro);\r\n        } else {\r\n            return (0.0).toFixed(2).toString().replace('.', ',') + ' ' + (MainTexts.euro);\r\n        }\r\n    };\r\n\r\n    public static hideIban(v: string | undefined): string {\r\n        let val: string = v ? v : '';\r\n        if (val && val.length >= 6) {\r\n            return val.substring(0, 2) + '****' + val.substring(val.length - 4);\r\n        }\r\n\r\n        return val ? val : '';\r\n    };\r\n\r\n    public static feeServiceToString(services: IService[]) {\r\n        let res: number = 0;\r\n        services.map((i, idx) => {\r\n            if (i.monthlyFee) {\r\n                res += i.monthlyFee.price;\r\n            }\r\n        });\r\n\r\n        return (res / 100).toFixed(2).toString().replace('.', ',') + ' €';\r\n    };\r\n\r\n    public static GetValueForControl(target: any) {\r\n        let val: string = target.value;\r\n        let id: string = target.id;\r\n        let key = '';\r\n\r\n        if (id.indexOf('-') > 0) {\r\n            id = id.substring(id.indexOf('-') + 1);\r\n        }\r\n\r\n        if (target.type == 'radio') {\r\n            val = id.replace(target.name + '_', '');\r\n        } else if (target.type == EControlType.radio || target.type == EControlType.checkbox) {\r\n            key = target.name;\r\n            if (target.name.indexOf('.') > 0) {\r\n                let sa: string[] = target.name.split('.');\r\n                key = sa[sa.length - 1];\r\n            }\r\n\r\n            val = id.replace(key + '_', '');\r\n        } else if (target.type == EControlType.date) {\r\n            val = target.dateValue;\r\n        }\r\n\r\n        return val;\r\n    };\r\n\r\n    public static onInput(target: any, source: any, apply: any) {\r\n        let val: any = Global.GetValueForControl(source);\r\n\r\n        if(val.value) {\r\n            val.value = val.value.trim();\r\n        };\r\n\r\n        let ctrl: IControlValue = source as IControlValue;\r\n\r\n        if (ctrl) {\r\n            if (ctrl.type == EControlType.checkbox) {\r\n                val = ctrl.checked ? ctrl.checked : false;\r\n            }\r\n        }\r\n\r\n        if (!isNaN(val) && source.type != EControlType.text) {\r\n            val = Number(val);\r\n        };\r\n\r\n        let name: string = source.name;\r\n\r\n        if (source.targetName) {\r\n            name = source.targetName;\r\n        };\r\n\r\n        if (source.type === EControlType.date) {\r\n            Global.setValueByPath(target, name, source.dateValue);\r\n        } else {\r\n            Global.setValueByPath(target, name, val);\r\n        }\r\n\r\n        if (apply) {\r\n            apply();\r\n        }\r\n    };\r\n\r\n    public static AutoInput(cmp: React.Component, object: any, target: any) {\r\n        let val = Global.GetValueForControl(target);\r\n\r\n        if (object) {\r\n            Global.setValueByPath(object, target.name, val);\r\n        }\r\n\r\n        cmp.setState({ changed: true });\r\n    };\r\n\r\n    public static getValueByPath(target: any, path: string) {\r\n        let sa = path.split('.');\r\n\r\n        if (sa.length === 1) {\r\n            return target[path];\r\n        } else {\r\n            let child = sa[0];\r\n            if (!target[child]) {\r\n                target[child] = {};\r\n            }\r\n            sa.splice(0, 1);\r\n\r\n            return this.getValueByPath(target[child], sa.join('.'));\r\n        }\r\n    };\r\n\r\n    public static setValueByPath(target: any, path: string, value: any) {\r\n        let sa = path.split('.');\r\n\r\n        if (path.startsWith('-')) {\r\n            path = path.substring(1);\r\n        };\r\n\r\n        if (sa.length === 1) {\r\n            target[path] = value;\r\n        } else {\r\n            let child = sa[0];\r\n\r\n            if (child.startsWith('-')) {\r\n                child = child.substring(1);\r\n            };\r\n\r\n            if (!target[child]) {\r\n                target[child] = {};\r\n            }\r\n            sa.splice(0, 1);\r\n            this.setValueByPath(target[child], sa.join('.'), value);\r\n        }\r\n    };\r\n\r\n    public static getPropertyPath(key, obj) {\r\n\r\n        return key.split('.').reduce(function (a, b) {\r\n            return a && a[b];\r\n        }, obj);\r\n    }\r\n\r\n    public static openUrl(uri: string) {\r\n        let cfg = Global.getConfiguration();\r\n        let url: string = cfg.apiUrl + uri;\r\n        window.open(url, \"_blank\");\r\n    };\r\n\r\n    public static getNationalities(): IKeyText[] {\r\n        let op: IKeyText[] = new Array();\r\n        let all = StorageHelper.getSupport().countries;\r\n\r\n        op = linq.from<ICountry>(all)\r\n            .orderByDescending(x => x.priority)\r\n            .thenBy(x => x.name)\r\n            .select((x, i) => {\r\n                return { key: x.code, text: x.name };\r\n            })\r\n            .cast<IKeyText>()\r\n            .toArray();\r\n\r\n        return op;\r\n    };\r\n\r\n    public static getMonths(start: number): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n        op.push({ key: 1, text: \"Januar\" });\r\n        op.push({ key: 2, text: \"Februar\" });\r\n        op.push({ key: 3, text: \"März\" });\r\n        op.push({ key: 4, text: \"April\" });\r\n        op.push({ key: 5, text: \"Mai\" });\r\n        op.push({ key: 6, text: \"Juni\" });\r\n        op.push({ key: 7, text: \"Juli\" });\r\n        op.push({ key: 8, text: \"August\" });\r\n        op.push({ key: 9, text: \"September\" });\r\n        op.push({ key: 10, text: \"Oktober\" });\r\n        op.push({ key: 11, text: \"November\" });\r\n        op.push({ key: 12, text: \"Dezember\" });\r\n\r\n        return linq.from<IKeyTextNumber>(op)\r\n            .where(x => x.key >= start)\r\n            .select((x) => {\r\n                {\r\n                    let a: IKeyTextNumber = { key: x.key, text: x.text };\r\n                    return a;\r\n                }\r\n            }).toArray();\r\n    };\r\n\r\n    public static getAllConsents(): AddChanel[] {\r\n        let op: AddChanel[] = new Array();\r\n        op.push({ channel: \"ONL\", change_date: new Date(), ad_channel_type: \"EMA\" });\r\n        op.push({ channel: \"ONL\", change_date: new Date(), ad_channel_type: \"ECU\" });\r\n        op.push({ channel: \"ONL\", change_date: new Date(), ad_channel_type: \"SMS\" });\r\n        op.push({ channel: \"ONL\", change_date: new Date(), ad_channel_type: \"OBP\" });\r\n        op.push({ channel: \"ONL\", change_date: new Date(), ad_channel_type: \"PVL\" });\r\n        op.push({ channel: \"ONL\", change_date: new Date(), ad_channel_type: \"WHM\" });\r\n\r\n        return op;\r\n    };\r\n\r\n    public static getPaginationItemsPerPage(): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n        op.push({ key: 10, text: \"10\" });\r\n        op.push({ key: 20, text: \"20\" });\r\n        op.push({ key: 50, text: \"50\" });\r\n        op.push({ key: 50, text: \"100\" });\r\n\r\n        return linq.from<IKeyTextNumber>(op)\r\n            .select((x) => {\r\n                {\r\n                    let a: IKeyTextNumber = { key: x.key, text: x.text };\r\n                    return a;\r\n                }\r\n            }).toArray();\r\n    };\r\n\r\n    public static getHours(): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n        let counter = 8;\r\n        op.push({ key: 0, text: \"\" });\r\n        while(counter!=19){\r\n            op.push({ key: counter, text: counter.toString() });\r\n            counter++;\r\n        }\r\n\r\n        return linq.from<IKeyTextNumber>(op)\r\n            .select((x) => {\r\n                {\r\n                    let a: IKeyTextNumber = { key: x.key, text: x.text };\r\n                    return a;\r\n                }\r\n            }).toArray();\r\n    };\r\n\r\n    public static getMinutes(): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n        op.push({ key: 0, text: \"\" });\r\n        op.push({ key: 0o0, text: \"00\" });\r\n        op.push({ key: 15, text: \"15\" });\r\n        op.push({ key: 30, text: \"30\" });\r\n        op.push({ key: 45, text: \"45\" });\r\n\r\n        return linq.from<IKeyTextNumber>(op)\r\n            .select((x) => {\r\n                {\r\n                    let a: IKeyTextNumber = { key: x.key, text: x.text };\r\n                    return a;\r\n                }\r\n            }).toArray();\r\n    };\r\n\r\n    public static getPrefixes(): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n        //op.push({ key: 1, text: \"01511\" });\r\n        //op.push({ key: 2, text: \"01512\" });\r\n        //op.push({ key: 3, text: \"01516\" });\r\n        op.push({ key: 4, text: \"0151\" });\r\n        op.push({ key: 5, text: \"01520\" });\r\n        op.push({ key: 6, text: \"01521\" });\r\n        op.push({ key: 7, text: \"01522\" });\r\n        op.push({ key: 8, text: \"01523\" });\r\n        op.push({ key: 9, text: \"01525\" });\r\n        op.push({ key: 10, text: \"01526\" });\r\n        op.push({ key: 11, text: \"01529\" });\r\n        op.push({ key: 12, text: \"01566\" });\r\n        op.push({ key: 13, text: \"01570\" });\r\n        op.push({ key: 14, text: \"01573\" });\r\n        op.push({ key: 15, text: \"01575\" });\r\n        op.push({ key: 16, text: \"01577\" });\r\n        op.push({ key: 17, text: \"01578\" });\r\n        op.push({ key: 18, text: \"01579\" });\r\n        op.push({ key: 19, text: \"01590\" });\r\n        op.push({ key: 20, text: \"0160\" });\r\n        op.push({ key: 21, text: \"0162\" });\r\n        op.push({ key: 22, text: \"0163\" });\r\n        op.push({ key: 23, text: \"0170\" });\r\n        op.push({ key: 24, text: \"0171\" });\r\n        op.push({ key: 25, text: \"0172\" });\r\n        op.push({ key: 26, text: \"0173\" });\r\n        op.push({ key: 27, text: \"0174\" });\r\n        op.push({ key: 28, text: \"0175\" });\r\n        op.push({ key: 29, text: \"0176\" });\r\n        op.push({ key: 30, text: \"0177\" });\r\n        op.push({ key: 31, text: \"0178\" });\r\n        op.push({ key: 32, text: \"0179\" });\r\n        op.push({ key: 33, text: \"11001\" });\r\n        op.push({ key: 34, text: \"01502\" });\r\n        op.push({ key: 35, text: \"01531\" });\r\n        op.push({ key: 36, text: \"01567\" });\r\n        op.push({ key: 37, text: \"01505\" });\r\n        op.push({ key: 38, text: \"01508\" });\r\n        op.push({ key: 39, text: \"01588\" });\r\n        op.push({ key: 40, text: \"01556\" });\r\n        op.push({ key: 41, text: \"01555\" });\r\n        op.push({ key: 42, text: \"01563\" });\r\n\r\n        return linq.from<IKeyTextNumber>(op)\r\n            .select((x) => {\r\n                {\r\n                    let a: IKeyTextNumber = { key: x.key, text: x.text };\r\n                    return a;\r\n                }\r\n            }).toArray();\r\n    };\r\n\r\n    public static getNetworkProvider(): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n        op.push({ key: 1, text: \"O2\" });\r\n        op.push({ key: 2, text: \"Sipgate Wireless\" });\r\n        op.push({ key: 3, text: \"T-Mobile\" });\r\n        op.push({ key: 4, text: \"Lycamobile\" });\r\n        op.push({ key: 5, text: \"Vodafone\" });\r\n\r\n\r\n        return linq.from<IKeyTextNumber>(op)\r\n            .select((x) => {\r\n                {\r\n                    let a: IKeyTextNumber = { key: x.key, text: x.text };\r\n                    return a;\r\n                }\r\n            }).toArray();\r\n    };\r\n\r\n    public static getNameProvider(): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n        op.push({ key: 1, text: \"1&1\" });\r\n        op.push({ key: 2, text: \"7,7 Cent\" });\r\n        op.push({ key: 3, text: \"AirBerlin\" });\r\n        op.push({ key: 4, text: \"Alice\" });\r\n        op.push({ key: 5, text: \"Alphatel\" });\r\n        op.push({ key: 6, text: \"AOL\" });\r\n        op.push({ key: 7, text: \"Atu\" });\r\n        op.push({ key: 8, text: \"Ay Yildiz\" });\r\n        op.push({ key: 9, text: \"BASE\" });\r\n        op.push({ key: 10, text: \"Blau\" });\r\n        op.push({ key: 11, text: \"Blauworld\" });\r\n        op.push({ key: 12, text: \"Blauworld powered by Ortel\" });\r\n        op.push({ key: 13, text: \"callmobile\" });\r\n        op.push({ key: 14, text: \"Cellway\" });\r\n        op.push({ key: 15, text: \"Conrad\" });\r\n        op.push({ key: 16, text: \"debitel\" });\r\n        op.push({ key: 17, text: \"debitel light\" });\r\n        op.push({ key: 18, text: \"DOKOM21 Dortmund\" });\r\n        op.push({ key: 19, text: \"Drillisch\" });\r\n        op.push({ key: 20, text: \"encoLine Gera\" });\r\n        op.push({ key: 21, text: \"EnoCom Karlsruhe\" });\r\n        op.push({ key: 22, text: \"Express\" });\r\n        op.push({ key: 23, text: \"Fonic\" });\r\n        op.push({ key: 24, text: \"foto@phone\" });\r\n        op.push({ key: 25, text: \"Freenet\" });\r\n        op.push({ key: 26, text: \"freenetmobile\" });\r\n        op.push({ key: 27, text: \"Galeria mobil\" });\r\n        op.push({ key: 28, text: \"Gruner & Jahr\" });\r\n        op.push({ key: 29, text: \"GTCom\" });\r\n        op.push({ key: 30, text: \"Hansenet\" });\r\n        op.push({ key: 31, text: \"HeLi NET Hamm\" });\r\n        op.push({ key: 32, text: \"hellomobil\" });\r\n        op.push({ key: 33, text: \"HFO Telecom Hof\" });\r\n        op.push({ key: 34, text: \"HL komm Leipzig\" });\r\n        op.push({ key: 35, text: \"htp Hannover\" });\r\n        op.push({ key: 36, text: \"Jamba!\" });\r\n        op.push({ key: 37, text: \"JKR Bad Kreuznach\" });\r\n        op.push({ key: 38, text: \"K-net Kaiserslautern\" });\r\n        op.push({ key: 39, text: \"KEVAG Telekom Koblenz\" });\r\n        op.push({ key: 40, text: \"KielNET/Versatel Kiel\" });\r\n        op.push({ key: 41, text: \"klarmobil\" });\r\n        op.push({ key: 42, text: \"komro Rosenheim\" });\r\n        op.push({ key: 43, text: \"Lokalisten Fon\" });\r\n        op.push({ key: 44, text: \"M-net Mobil\" });\r\n        op.push({ key: 45, text: \"MEDIONmobile\" });\r\n        op.push({ key: 46, text: \"mobilcom\" });\r\n        op.push({ key: 47, text: \"Mobilka powered by Ortel\" });\r\n        op.push({ key: 48, text: \"My Mobi\" });\r\n        op.push({ key: 49, text: \"NetCologne Mobil\" });\r\n        op.push({ key: 50, text: \"NetCom BW Ellwangen\" });\r\n        op.push({ key: 51, text: \"Netcom Kassel\" });\r\n        op.push({ key: 52, text: \"NettoKOM\" });\r\n        op.push({ key: 53, text: \"nt-v go\" });\r\n        op.push({ key: 54, text: \"o2 Germany\" });\r\n        op.push({ key: 55, text: \"Ortel Mobile\" });\r\n        op.push({ key: 56, text: \"Phonex.de\" });\r\n        op.push({ key: 57, text: \"Plus-Kom\" });\r\n        op.push({ key: 58, text: \"PremiumSIm\" });\r\n        op.push({ key: 59, text: \"primacom (primaholding) Berlin\" });\r\n        op.push({ key: 60, text: \"Regio Plus Dresden\" });\r\n        op.push({ key: 61, text: \"Schlecker Prepaid\" });\r\n        op.push({ key: 62, text: \"Schwarzfunk/Weissfunk\" });\r\n        op.push({ key: 63, text: \"Scott (BASE Prepaid)\" });\r\n        op.push({ key: 64, text: \"sdt.net Aalen\" });\r\n        op.push({ key: 65, text: \"sim.de\" });\r\n        op.push({ key: 66, text: \"SimDiscount\" });\r\n        op.push({ key: 67, text: \"SIMVoice\" });\r\n        op.push({ key: 68, text: \"Simyo\" });\r\n        op.push({ key: 69, text: \"Stadtwerke Schwedt\" });\r\n        op.push({ key: 70, text: \"STAR Communications\" });\r\n        op.push({ key: 71, text: \"SWU Telenet Ulm\" });\r\n        op.push({ key: 72, text: \"talkline\" });\r\n        op.push({ key: 73, text: \"Tchibo mobil\" });\r\n        op.push({ key: 74, text: \"Tele2\" });\r\n        op.push({ key: 75, text: \"TNG Stadnetz Kiel\" });\r\n        op.push({ key: 76, text: \"Unitymedia\" });\r\n        op.push({ key: 77, text: \"Untiymedia (BW)\" });\r\n        op.push({ key: 78, text: \"VICTORVOX\" });\r\n        op.push({ key: 79, text: \"VIVA\" });\r\n        op.push({ key: 80, text: \"Voiceworks\" });\r\n        op.push({ key: 81, text: \"Volkswagen TeleCom\" });\r\n        op.push({ key: 82, text: \"voxenergie (primaholding) Berlin\" });\r\n        op.push({ key: 83, text: \"Vybemobile\" });\r\n        op.push({ key: 84, text: \"wilhelm.tel Norderstedt\" });\r\n        op.push({ key: 85, text: \"willy.tel Hamburg\" });\r\n        op.push({ key: 86, text: \"winSIM\" });\r\n        op.push({ key: 87, text: \"WOBCOM Wolfsburg\" });\r\n        op.push({ key: 88, text: \"Yahoo! Internet Stick\" });\r\n        op.push({ key: 89, text: \"Youni\" });\r\n        op.push({ key: 90, text: \"yourfone\" });\r\n        op.push({ key: 91, text: \"simfinity\" });\r\n\r\n\r\n        return linq.from<IKeyTextNumber>(op)\r\n            .select((x) => {\r\n                {\r\n                    let a: IKeyTextNumber = { key: x.key, text: x.text };\r\n                    return a;\r\n                }\r\n            }).toArray();\r\n    };\r\n\r\n    public static toDate(input: any): Date | undefined {\r\n        var timestamp = Date.parse(input);\r\n\r\n        if (isNaN(timestamp) == false) {\r\n            var d = new Date(timestamp);\r\n            return d;\r\n        }\r\n    };\r\n\r\n    public static getConfiguration(): IAppDefinition {\r\n        const devUrl = 'https://api.easy3.com/api/';\r\n        const build = e3c.build;\r\n\r\n        let url: string = devUrl;\r\n\r\n        if (build === e3c.BuildEnv.Dev) {\r\n            url = devUrl;\r\n        } else if (build === e3c.BuildEnv.Int) {\r\n            url = 'https://easy3.tradelight.net/r/api/';\r\n        } else if (build === e3c.BuildEnv.Prod) {\r\n            url = 'https://api.vf-easy.de/r/api/';\r\n        } else if (build === e3c.BuildEnv.DevInt) {\r\n            url = 'https://easy3.tradelight.net/r/api/';\r\n        }\r\n    \r\n        // if (window.location.href.toLocaleLowerCase().indexOf('//localhost:') > 0) {\r\n        //     url = devUrl;\r\n        // }\r\n\r\n        return {\r\n            appTitle: 'EASY ' + Global.getVersion(),\r\n            apiUrl: url,\r\n            debug: e3c.debug,\r\n            pageSize: 10\r\n        };\r\n    };\r\n\r\n    public static getStringFromEnum(e: any, value: any): string {\r\n        for (var k in e) {\r\n            if (e[k] == value) {\r\n                return k;\r\n            }\r\n        }\r\n        return '';\r\n    };\r\n\r\n    public static parseApiResponseAndContinue(res: i.IApiResponse, callback: any) {\r\n\r\n        if (res) {\r\n            let followUrl = '';\r\n            if (!res.isAuthenticated) {\r\n                followUrl = res.error.action.url;\r\n            } else {\r\n                if (res.error && res.error.action) {\r\n                    if (res.error.action.type == ERAPIAction.login || res.error.code == \"401\") {\r\n                        followUrl = res.error.action.url;\r\n                    };\r\n                };\r\n            }\r\n\r\n            if (followUrl) {\r\n                window.location.href = followUrl;\r\n                return;\r\n            };\r\n\r\n            callback();\r\n        };\r\n    };\r\n\r\n    public static parseSocketResponseAndContinue(input: string, callback: any) {\r\n        let res: i.ISocketPushModel = JSON.parse(input);\r\n\r\n        if (res) {\r\n            //let api:i.IApiResponse = JSON.parse(res.data);\r\n\r\n            callback(res);\r\n        };\r\n    };\r\n\r\n    public static parseSocketAndApiResponse(input: string, callback: any) {\r\n        Global.parseSocketResponseAndContinue(input, (sock: i.ISocketPushModel) => {\r\n            let api: i.IApiResponse = JSON.parse(sock.data);\r\n\r\n            Global.parseApiResponseAndContinue(api, () => {\r\n                callback(api, sock);\r\n            });\r\n        });\r\n    };\r\n\r\n    public static getEmptyGuid = () => {\r\n        return '00000000-0000-0000-0000-000000000000';\r\n    };\r\n\r\n    public static getUniqueId = () => {\r\n        let result: string = '';\r\n        let i: string = '';\r\n        let j: number = 0;\r\n        result = '';\r\n        for (j = 0; j < 32; j++) {\r\n            if (j === 8 || j === 12 || j === 16 || j === 20) {\r\n                result = result + '-';\r\n            }\r\n            i = Math.floor(Math.random() * 16).toString(16).toUpperCase();\r\n            result = result + i;\r\n        }\r\n        return result.toLowerCase();\r\n    };\r\n};\r\n\r\nexport default Global;\r\n","import * as React from 'react';\r\nimport { IBlockConfiguration } from '../../models/block/configuration';\r\nimport BlockBase from '../../components/page/block';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport * as page from '../../components/page/index';\r\nimport { MainTexts } from '../../utils/messages';\r\nimport { ELButtonType, EControlType, IFilter } from '../../models';\r\nimport EasyRouter from '../../utils/router';\r\nimport { IControlValue, IKeyText, IKeyTextNumber } from '../../models/page/interfaces';\r\nimport { ELElementStatus, EValueType } from '../../models/page/diverse';\r\nimport Global from '../../utils/Global';\r\nimport { Lists } from '../../utils/Defaults';\r\nimport { EDateInputMode } from './date';\r\n\r\nexport enum EFilterType {\r\n    default = 0\r\n};\r\n\r\nexport interface IFilterProps {\r\n    id: string;\r\n    type: EFilterType;\r\n    onChange?: any;\r\n    onApply?: any;\r\n    optionalButtons?: true;\r\n    optionalButtonSelection?: any;\r\n    title: string;\r\n    to?: Date;\r\n    from?: Date;\r\n    orderManagerFilter?: boolean;\r\n    placeholderSearch?: string;\r\n    filter: IFilter;\r\n    hideDateFilter?: boolean;\r\n    actionButtons?: JSX.Element | JSX.Element[],\r\n    searchTitle?:string;\r\n};\r\n\r\nexport interface IFilterState {\r\n    filter: IFilter;\r\n    inProcessing: boolean;\r\n    completed: boolean;\r\n    all: boolean;\r\n\r\n};\r\n\r\nexport class Filter extends React.Component<IFilterProps, IFilterState>{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onApply = this.onApply.bind(this);\r\n        this.onButtonChange = this.onButtonChange.bind(this);\r\n\r\n         this.state = {\r\n            filter: this.props.filter ? this.props.filter : { needle: '' },\r\n             inProcessing: false,\r\n             completed: false,\r\n             all: false\r\n         };\r\n    };\r\n\r\n    public render() {\r\n        let cfg: IBlockConfiguration = {\r\n            title: this.props.title,\r\n            transparent: false\r\n        };\r\n\r\n        let to: Date = new Date();\r\n        let from: Date = new Date();\r\n\r\n\r\n\r\n        let filter = (\r\n            <BlockBase config={cfg}>\r\n                <Container>\r\n                    {false && this.props.orderManagerFilter===true? \r\n                    <>\r\n                        <Row>\r\n                            <Col xs={2} md={2} >\r\n                                <page.LLabel text={\"Brand:\"}/>\r\n                            </Col>\r\n\r\n                            <Col xs={2} md={2} >\r\n                            <page.LButton type={ELButtonType.normal}\r\n                                        css=\"a1 fr\"\r\n                                        status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                        id=\"otelo\"\r\n                                        text={\"Otelo\"} \r\n                                        onClick={\"\"} />\r\n                            </Col>\r\n                            <Col xs={2} md={2} >\r\n                            <page.LButton type={ELButtonType.normal}\r\n                                        css=\"a1 fr\"\r\n                                        status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                        id=\"Kabel\"\r\n                                        text={\"Kabel\"} \r\n                                        onClick={\"\"} />\r\n                            </Col>\r\n                            <Col xs={2} md={2} >\r\n                            <page.LButton type={ELButtonType.normal}\r\n                                        css=\"a1 fr\"\r\n                                        status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                        id=\"Vodafone\"\r\n                                        text={\"Vodafone\"} \r\n                                        onClick={\"\"} />\r\n                            </Col>\r\n                            <Col xs={2} md={2} >\r\n                            <page.LButton type={ELButtonType.normal}\r\n                                        css=\"a1 fr\"\r\n                                        status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                        id=\"DSL\"\r\n                                        text={\"DSL\"} \r\n                                        onClick={\"\"} />\r\n                            </Col>\r\n                            <Col xs={2} md={2} >\r\n                            <page.LButton type={ELButtonType.normal}\r\n                                        css=\"a1 fr\"\r\n                                        status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                        id=\"Alle\"\r\n                                        text={\"Alle\"} \r\n                                        onClick={\"\"} />\r\n                            </Col>\r\n                        </Row>\r\n                    \r\n                        <Row>\r\n                        <Col xs={2} md={2} >\r\n                            <page.LLabel text={\"Status:\"}/>\r\n                        </Col>\r\n\r\n                        <Col xs={3} md={3} >\r\n                        <page.LButton type={ELButtonType.normal}\r\n                                    css=\"a1 fr\"\r\n                                    status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                    id=\"Offen\"\r\n                                    text={\"Offen\"} \r\n                                    onClick={\"\"} />\r\n                        </Col>\r\n                        <Col xs={3} md={3} >\r\n                        <page.LButton type={ELButtonType.normal}\r\n                                    css=\"a1 fr\"\r\n                                    status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                    id=\"abgeschlossen\"\r\n                                    text={\"Abgeschlossen\"} \r\n                                    onClick={\"\"} />\r\n                        </Col>\r\n                        <Col xs={3} md={3} >\r\n                        <page.LButton type={ELButtonType.normal}\r\n                                    css=\"a1 fr\"\r\n                                    status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                    id=\"Alle\"\r\n                                    text={\"Alle\"} \r\n                                    onClick={\"\"} />\r\n                        </Col>\r\n\r\n                        </Row>\r\n                    \r\n                        <Row>\r\n                    <Col xs={2} md={2} >\r\n                    <page.LLabel text={\"Type:\"}/>\r\n                    </Col>\r\n\r\n                    <Col xs={2} md={2} >\r\n                    <page.LButton type={ELButtonType.normal}\r\n                                css=\"a1 fr\"\r\n                                status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                id=\"bnt\"\r\n                                text={\"BNT\"} \r\n                                onClick={\"\"} />\r\n                    </Col>\r\n                    <Col xs={2} md={2} >\r\n                    <page.LButton type={ELButtonType.normal}\r\n                                css=\"a1 fr\"\r\n                                status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                id=\"mnp\"\r\n                                text={\"MNP\"} \r\n                                onClick={\"\"} />\r\n                    </Col>\r\n                    <Col xs={2} md={2} >\r\n                    <page.LButton type={ELButtonType.normal}\r\n                                css=\"a1 fr\"\r\n                                status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                id=\"vvl\"\r\n                                text={\"VVL/TW\"} \r\n                                onClick={\"\"} />\r\n                    </Col>\r\n                    <Col xs={2} md={2} >\r\n                    <page.LButton type={ELButtonType.normal}\r\n                                css=\"a1 fr\"\r\n                                status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                id=\"optionsbuchung\"\r\n                                text={\"Optionsbuchung\"} \r\n                                onClick={\"\"} />\r\n                    </Col>\r\n                    <Col xs={2} md={2} >\r\n                    <page.LButton type={ELButtonType.normal}\r\n                                css=\"a1 fr\"\r\n                                status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                id=\"Alle\"\r\n                                text={\"Alle\"} \r\n                                onClick={\"\"} />\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </>\r\n                    : <></>}\r\n                  { this.props.optionalButtons===true ? \r\n                    <Row>\r\n                        <Col xs={4} md={4} >\r\n                            <page.LButton type={ELButtonType.normal}\r\n                                css=\"a1 fr\"\r\n                                status={this.state.inProcessing? ELElementStatus.selected: ELElementStatus.normal}\r\n                                id=\"In Bearbeitung\"\r\n                                text={\"In Bearbeitung\"} \r\n                                onClick={()=>{this.onButtonChange(event)}} />\r\n                        </Col>\r\n                        <Col xs={4} md={4} >\r\n                            <page.LButton type={ELButtonType.normal}\r\n                                css=\"a1 fr\"\r\n                               status={this.state.completed? ELElementStatus.selected: ELElementStatus.normal}\r\n                                id=\"Abgeschlossen\"\r\n                                text={\"Abgeschlossen\"}\r\n                                onClick={()=>{this.onButtonChange(event)}} />\r\n                        </Col>\r\n                        <Col xs={4} md={4} >\r\n                            <page.LButton type={ELButtonType.normal}\r\n                                css=\"a1 fr\"\r\n                                status={this.state.all? ELElementStatus.selected: ELElementStatus.normal}\r\n                                id=\"Alle\"\r\n                                text={\"Alle\"}\r\n                                onClick={()=>{this.onButtonChange(event)}} />\r\n                        </Col>\r\n                    </Row>\r\n                    : <></>\r\n                }\r\n\r\n                    <Row>\r\n                        {this.props.hideDateFilter === true ? <></> :\r\n                            <Col xs={6} md={6} className=\"np\">\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col xs={5} md={5} className=\"np\">\r\n                                            <page.LDate value={this.props.filter.from}\r\n                                                datePicker = {true}\r\n                                                    onChange={this.onChange}\r\n                                                    title={MainTexts.periodFrom}\r\n                                                    id={this.props.id + '.from'}\r\n                                                    name=\"from\"\r\n                                                    style=\"middle\" />\r\n                                        </Col>\r\n                                        <Col xs={2} md={2}></Col>\r\n                                        <Col xs={5} md={5} className=\"np\">\r\n                                            <page.LDate \r\n                                                datePicker={true}\r\n                                                value={this.props.filter.to}\r\n                                                onChange={this.onChange}\r\n                                                title={MainTexts.to}\r\n                                                style=\"middle\"\r\n                                                id={this.props.id + '.to'}\r\n                                                name=\"to\" />\r\n                                        </Col>   \r\n                                    </Row>    \r\n                                    {\r\n                                        this.props.orderManagerFilter ? \r\n                                        <Row>\r\n                                            <Col>\r\n                                                <page.LControl type={EControlType.dropdown} \r\n                                                    value={this.props.filter.timeFilter}\r\n                                                    onChange={this.onChange} \r\n                                                    valueType={EValueType.numberInt}\r\n                                                    preview={false}\r\n                                                    name=\"timeFilter\" \r\n                                                    id=\"timeFilter\" \r\n                                                    title={MainTexts.timeFilter}\r\n                                                    options={this.getTimeFilterOptions()} />                                        \r\n                                            </Col>\r\n                                        </Row>   \r\n                                        : null                                     \r\n                                    }\r\n                                </Container>                         \r\n                            </Col>\r\n                        }\r\n                        <Col xs={1} md={1} className=\"npr\"></Col>\r\n                        <Col xs={5} md={5} className=\"npr\">\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col className=\"npr\">\r\n                                        <page.LControl\r\n                                            value={this.props.filter.needle}\r\n                                            type={EControlType.text}\r\n                                            onChange={this.onChange}\r\n                                            onEnter={this.onApply}\r\n                                            title={this.props.searchTitle !== undefined ? this.props.searchTitle : MainTexts.searchTitle}\r\n                                            style=\"roundinner\"\r\n                                            label={undefined}\r\n                                            hideLabel={true}\r\n                                            placeholder={this.props.placeholderSearch}\r\n                                            id={this.props.id + '.needle'}\r\n                                            name=\"needle\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                {\r\n                                    this.props.orderManagerFilter ? this.renderCats()  : null\r\n                                }\r\n                            </Container>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            \r\n                        </Col>\r\n                        <Col xs={6} md={6} className=\"np\">\r\n                            {this.props.actionButtons !== undefined ? <div className=\"filterAction\">{this.props.actionButtons}</div> :\r\n                                <div className=\"filterAction\">\r\n                                    <page.LButton text={MainTexts.toDashboard}\r\n                                        css=\"fr\"\r\n                                        onClick={() => { EasyRouter.route({ url: '/' }); }}\r\n                                        type={ELButtonType.buttonWithIconRight}\r\n                                        icon=\"arrow-right\" />\r\n                                    <page.LButton text={this.props.optionalButtons? \"Filtern\": MainTexts.apply}\r\n                                        css=\"fr\"\r\n                                        onClick={this.onApply}\r\n                                        type={ELButtonType.buttonWithIconRight}\r\n                                        icon=\"expand\" />\r\n                                </div>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <></>\r\n            </BlockBase>\r\n        );\r\n\r\n        let ctrl = (\r\n            <page.Inner1C>\r\n                <page.Inner2CLeft>\r\n                    <>\r\n                        {filter}\r\n                    </>\r\n                </page.Inner2CLeft>\r\n                <></>\r\n            </page.Inner1C>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    private renderCats() {\r\n        console.log('filter', this.props.filter);\r\n        let all:JSX.Element[] = [];\r\n\r\n        Lists.brandCats.map((i, idx)=>{\r\n            let cb = <page.LControl \r\n                type={EControlType.checkbox}\r\n                checked={this.props.filter.cats && this.props.filter.cats.indexOf(i.key)>=0}\r\n                label={i.text}\r\n                hideTitle={true}\r\n                name=\"\"\r\n                value={i.key}\r\n                onChange={this.onChange}\r\n                key={\"cb-cat-\" + i.key}\r\n                id={\"cats-\" + i.key}/>\r\n\r\n            all.push(cb);\r\n        })\r\n\r\n        return all;\r\n    };\r\n\r\n    private getTimeFilterOptions(): IKeyTextNumber[] {\r\n        let op: IKeyTextNumber[] = new Array();\r\n        op.push({ key: 0, text: \"Alle\" });\r\n        op.push({ key: 1, text: \"Aktuelle Woche\" });\r\n        op.push({ key: 2, text: \"Aktueller Monat\" });\r\n        op.push({ key: 3, text: \"Letzter Monat\" });\r\n        op.push({ key: 4, text: \"Letzte drei Monate\" });\r\n\r\n        return op;\r\n    };\r\n\r\n    private onChange(val: IControlValue) {\r\n        let f = this.props.filter;\r\n        if (val.type === EControlType.date) {\r\n            f[val.name] = val.dateValue;\r\n        } else {\r\n            f[val.name] = val.value;\r\n        }\r\n\r\n        if(val.id.startsWith('cats')) {\r\n            let cats = f.cats;\r\n            let id = val.id.replace('cats-', '');\r\n            let idx = cats!.indexOf(id);\r\n\r\n            if(idx >=0 ) {\r\n                cats!.splice(idx, 1);\r\n            } else {\r\n                cats!.push(id);\r\n            }\r\n\r\n            f['cats'] = cats;\r\n        };\r\n\r\n        this.setState({ filter: f });\r\n\r\n        if (this.props.onChange) {\r\n            this.props.onChange(f);\r\n        };\r\n    };\r\n\r\n    private onButtonChange(e: any){\r\n        switch(e.target.id) {\r\n            case 'In Bearbeitung':\r\n                this.props.optionalButtonSelection(e.target.id);\r\n               this.setState({inProcessing:true,completed:false,all:false});\r\n              break;\r\n            case 'Abgeschlossen':\r\n                this.props.optionalButtonSelection(e.target.id);\r\n                this.setState({completed:true,inProcessing:false,all:false});\r\n              break;\r\n            case 'Alle':\r\n                this.props.optionalButtonSelection(e.target.id);\r\n                this.setState({all:true,completed:false,inProcessing:false});\r\n            break;\r\n          }\r\n    }\r\n\r\n    private onApply() {\r\n        if (this.props.onApply) {\r\n            this.props.onApply(this.props.filter);\r\n        };\r\n    };\r\n};\r\n\r\nexport default Filter;","import * as React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { IBaseComponentState } from '../../../interfaces/index';\r\nimport { EControlType } from '../../../models/page/diverse';\r\nimport Global from '../../../utils/Global';\r\nimport GlobalJSX from '../../../utils/GlobalJSX';\r\nimport { MainTexts } from '../../../utils/messages';\r\nimport * as page from '../../page/index';\r\n\r\nexport interface IAddressProps {\r\n    prefix: string;\r\n    onChange: any;\r\n    source: any;\r\n    withAditional?: boolean;\r\n    addressAdditionalFields?: boolean;\r\n    preview: boolean;\r\n    showStrnAdditional?: boolean\r\n\r\n};\r\n\r\nexport interface ICustomerDataMainState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class Address extends React.Component<IAddressProps, IBaseComponentState> {\r\n    constructor(props: IAddressProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentWillReceiveProps(next: IAddressProps) {\r\n        this.setState({ changed: true });\r\n    };\r\n\r\n    public render() {\r\n        let ctrl = (<>\r\n            <Container className=\"np\">\r\n                <Row>\r\n                    <Col xs={7} md={7} className=\"np\">\r\n                        {GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'street', MainTexts.address, MainTexts.street, this.props.preview,undefined,undefined,undefined,30)}\r\n                    </Col>\r\n                    <Col xs={3} md={3} className=\"\">\r\n                        {GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'nr', \" \", MainTexts.stnr, this.props.preview,undefined,undefined,undefined,5)}\r\n                    </Col>\r\n                    {this.props.showStrnAdditional ? <Col xs={2} md={2} className=\"npr\">\r\n                        {GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'nre', \" \", MainTexts.stnre, this.props.preview)}\r\n                    </Col> : <></>}\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={3} md={3} className=\"np\">\r\n                        {GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'zip', undefined, MainTexts.zip, this.props.preview,undefined,undefined,undefined,5)}\r\n                    </Col>\r\n                    <Col xs={9} md={9} className=\"npr\">\r\n                        {GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'city', undefined, MainTexts.city, this.props.preview,undefined,undefined,undefined,24)}\r\n                    </Col>\r\n                </Row>\r\n\r\n                {\r\n                    this.props.addressAdditionalFields ? <Row>\r\n                        <Col xs={3} md={3} className=\"np\">\r\n                            {GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'Name', undefined, MainTexts.nameAddress, this.props.preview)}\r\n                        </Col>\r\n                        <Col xs={9} md={9} className=\"npr\">\r\n                            {GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'Adresszusatz', undefined, MainTexts.addressAdditional, this.props.preview)}\r\n                        </Col>\r\n                    </Row> : <></>\r\n                }\r\n\r\n                {\r\n                    this.props.withAditional ?\r\n                        <Row>\r\n                            <Col xs={12} md={12} className=\"np\">\r\n                                {GlobalJSX.renderInner(this.props.prefix, this.props.source, this.props.onChange, 'additional', undefined, MainTexts.adrAdditional, this.props.preview)}\r\n                            </Col>\r\n                        </Row>\r\n                        : <></>\r\n                }\r\n            </Container>\r\n            <page.LClear />\r\n        </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n\r\n\r\n    private renderInner(field: string, title: string | undefined, label: string): JSX.Element {\r\n        let id = this.props.prefix + '_' + field;\r\n        let name = this.props.prefix + '.' + field;\r\n        let value = Global.getValueByPath(this.props.source, name);\r\n\r\n        let ctrl = <page.LControl type={EControlType.text} value={value}\r\n            onChange={this.props.onChange} title={title}\r\n            hideTitle={!title}\r\n            name={name} id={id} label={label} />;\r\n\r\n        return ctrl;\r\n    };\r\n};\r\n\r\nexport default Address;","import { ESalutation } from './order';\r\n\r\nexport class Person {\r\n    public salutation: ESalutation = ESalutation.undefined;\r\n    public firstname: string = '';\r\n    public surname: string = '';\r\n    public birthday: Date = new Date();\r\n    public title: string = '';     \r\n};\r\n\r\nexport default Person;","import { Tel } from '..';\r\nimport Address from './address';\r\nimport Person from './person';\r\n\r\nexport class PersonAndAddress {\r\n    public address: Address = new Address();\r\n    public person: Person = new Person();\r\n    public tel:Tel=new Tel();\r\n    public callbackTimeSplitted: CallbackTimeSplitted =  new CallbackTimeSplitted();\r\n    public callbackTime: string  = ''\r\n    public deliveryDate: Date = new Date();  //Global.addDays(new Date(), 11); //((new Date()).getDate() + 10);\r\n};\r\n\r\nexport class CallbackTimeSplitted{\r\n    public hour: string = '';\r\n    public minutes: string = '';\r\n}\r\n\r\nexport default PersonAndAddress;","import linq from 'linq';\r\nimport * as React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { ERequestType } from '../../../models';\r\nimport IActivation from '../../../models/ordering/activation';\r\nimport { ICustomer } from '../../../models/ordering/customer';\r\nimport { EActivationType, EBillingType, ECreditDebitType, EEvnType, EIDCardType, EOrderProcessView, ETargetNumber } from '../../../models/ordering/order';\r\nimport { CombiWrapper } from '../../../models/support/ISupportWrapper';\r\nimport * as s from '../../../screens/insex';\r\nimport { ValidationWrapper } from '../../../utils';\r\nimport { BrandKeys } from '../../../utils/Defaults';\r\nimport Global from '../../../utils/Global';\r\nimport InputWrapper from '../../page/inputWrapper';\r\nimport * as c from '../customer/index';\r\n\r\nexport interface IActivationCustomerDataProps {\r\n    parent: s.ProcessNewScreen;\r\n    customer: ICustomer;\r\n};\r\n\r\nexport interface IActivationCustomerDataState {\r\n    changed: boolean;\r\n};\r\n\r\nexport class ActivationCustomerData extends React.Component<IActivationCustomerDataProps, IActivationCustomerDataState> {\r\n    private customer: ICustomer;\r\n    private hasDsl: boolean;\r\n    private activation: IActivation;\r\n    constructor(props: IActivationCustomerDataProps) {\r\n        super(props);\r\n\r\n        this.onNext = this.onNext.bind(this);\r\n        this.onBack = this.onBack.bind(this);\r\n        this.onInput = this.onInput.bind(this);\r\n\r\n        this.customer = this.props.customer;\r\n        this.customer.legitimation = this.props.customer.legitimation ? this.props.customer.legitimation : {type: EIDCardType.german, id: '', authority: ''};\r\n\r\n        this.hasDsl = linq.from<IActivation>(this.props.parent.data.activations)\r\n            .where(x => x.brandKey === BrandKeys.dsl)\r\n            .count() > 0;\r\n\r\n        this.activation = this.props.parent.data.activations[0];\r\n\r\n        if (this.activation.brandKey === BrandKeys.vodafone && this.customer.evn === null && this.activation.activationType === EActivationType.partnerCard) {\r\n            this.customer.evn =  {billingType: EBillingType.online,evnType: EEvnType.shortEvn,targetNumberType: ETargetNumber.complete}\r\n        }\r\n\r\n\r\n\r\n\r\n        this.state = {\r\n            changed: false\r\n        };\r\n    };\r\n\r\n    public componentDidMount() {\r\n        ValidationWrapper.validateFormular(this.props.parent.dataWrapper, false);\r\n\r\n        window.scrollTo(0, 0);\r\n\r\n\r\n    };\r\n\r\n    public render() {\r\n        let prov = this.props.parent.data.customer.mnp ? this.props.parent.data.customer.mnp.provider : '';\r\n\r\n        let hasUnityOnly = this.props.parent.dataWrapper.hasUnityOnly();\r\n\r\n        let inCdChange = this.props.parent.dataWrapper.hasCdChange();\r\n\r\n        let ctrl = (\r\n            <>\r\n                <div className=\"gigakombiAlert\">\r\n                    {CombiWrapper.combisWereAdded ? <Alert variant={'success'}>\r\n                        Hinweis:<br />\r\n                        Da du mehrere Gigakombi fähige Produkte in den Warenkorb gelegt hast, haben wir die fehlenden GigaKombi-Marker automatisch hinzugefügt.\r\n                     </Alert> : <></>}\r\n                </div>\r\n\r\n                <InputWrapper>\r\n                    <c.CustomerDataMain parent={this} data={this.props.parent.data} customer={this.props.customer}\r\n                        onChange={this.onInput} />\r\n                    <></>\r\n                </InputWrapper>\r\n\r\n                {\r\n                    this.hasDsl ?\r\n                        <>\r\n                            <InputWrapper>\r\n                                <c.CustomerDesiredSchedule parent={this} customer={this.props.customer} onChange={this.onInput} />\r\n                            </InputWrapper>\r\n                        </>\r\n                        :\r\n                        <></>\r\n                }\r\n\r\n                {\r\n                    (this.props.parent.dataWrapper.inActMnp || inCdChange) && !this.props.parent.dataWrapper.hasUnityOnly() ?\r\n                        <InputWrapper>\r\n                            <c.CustomerMnp parent={this} customer={this.props.customer} onChange={this.onInput} preview={false} />\r\n                        </InputWrapper>\r\n                        : null\r\n                }\r\n\r\n                {\r\n                    this.hasDsl ?\r\n                        <>\r\n                            <InputWrapper>\r\n                                <c.CustomerDSL customer={this.props.customer} parent={this}\r\n                                    showAddress={!(prov == '1' || prov == '2')}\r\n                                    showTel={true}\r\n                                    house={this.props.customer.house} onChange={this.onInput} />\r\n                            </InputWrapper>\r\n                        </>\r\n                        :\r\n                        <></>\r\n                }\r\n\r\n                {\r\n                    this.topUPageValidation() ? <InputWrapper>\r\n                        <c.CustomerTopup parent={this} topup={this.props.customer.topup} onChange={this.onInput} />\r\n                    </InputWrapper> : <></>\r\n                }\r\n\r\n                <InputWrapper>\r\n                    <c.CustomerLegitimation parent={this} onChange={this.onInput}\r\n                        preview={false}\r\n                        legitimation={this.customer.legitimation}\r\n                        payment={this.customer.payment} />\r\n                </InputWrapper>\r\n\r\n                <InputWrapper>\r\n                    <c.CustomerPayment parent={this} onChange={this.onInput} payment={this.customer.payment} />\r\n                </InputWrapper>\r\n\r\n                {\r\n                    !hasUnityOnly && this.props.parent.current && this.props.parent.current.creditDebitType === ECreditDebitType.postpaid ?\r\n                        <InputWrapper>\r\n                            <c.CustomerEVN parent={this} onChange={this.onInput} evn={this.customer.evn} />\r\n                        </InputWrapper>\r\n                        : null\r\n                }\r\n\r\n                <InputWrapper>\r\n                    <c.CustomerConsulting parent={this} onChange={this.onInput} bew={this.customer.bew} />\r\n                </InputWrapper>\r\n\r\n                <c.CustomerAction parent={this} />\r\n            </>\r\n        );\r\n\r\n        return ctrl;\r\n    };\r\n\r\n    public onNext() {\r\n        if (ValidationWrapper.validateFormular(this.props.parent.dataWrapper, true, 'container-main')) {\r\n            this.props.parent.onCreateProcess(ERequestType.create);\r\n        }\r\n    };\r\n\r\n    public onBack() {\r\n        this.props.parent.gotoView(EOrderProcessView.tariff);\r\n    };\r\n \r\n    private onInput(target: any) {\r\n        \r\n        Global.onInput(this.customer, target, () => {\r\n            if(target) {\r\n                if(target.name == 'payment.owner') {\r\n                    this.customer.payment!.ownerChanged = true;\r\n                }\r\n\r\n                if(target.id === 'type_1'){\r\n                    this.customer.legitimation!.type = EIDCardType.german;\r\n                }else if (target.id === 'type_1'){\r\n                    this.customer.legitimation!.type = EIDCardType.foreign;\r\n                }\r\n                \r\n                // set the name of bank owner\r\n                if(this.customer.payment && !this.customer.payment.ownerChanged && (target.name == 'firstname' || target.name == 'surname')) {\r\n                    this.customer.payment!.owner = (this.customer.firstname || '') + ' ' + (this.customer.surname || '');\r\n                };\r\n\r\n                if(target.id === 'delivery-callbackTime'){\r\n                    if(target.value==='0:0'){\r\n                        this.customer.delivery!.callbackTime = '';\r\n                    }else{\r\n                        this.customer.delivery!.callbackTime = target.value\r\n                    }              \r\n                }\r\n            };\r\n            this.props.parent.applyCustomer(this.customer);\r\n            this.setState({ changed: true });\r\n        });\r\n    };\r\n\r\n    private topUPageValidation() {\r\n        let canbook: boolean = true;\r\n\r\n        if (this.activation.brandKey === BrandKeys.otelo) {\r\n            let ageOfCustomer = Global.getAgeFromDate(this.customer.birthday);\r\n\r\n            if (this.activation!.creditDebitType == ECreditDebitType.prepaid && ageOfCustomer < 18) {\r\n                this.customer.topup = undefined\r\n                canbook = false;\r\n            }\r\n        }\r\n\r\n        return canbook;\r\n    }\r\n};\r\n\r\nexport default ActivationCustomerData;","import * as linq from 'linq';\r\nimport { Availability, ERequestStatus, IDefCon, InfoItem, IOrderData } from \"../../models\";\r\nimport { AvailabilityProduct, IAvailabilityBrand } from \"../../models/ordering/availability\";\r\nimport IBrand from \"../../models/ordering/brand\";\r\nimport IProduct from \"../../models/ordering/product\";\r\nimport { TreeItem } from \"../../models/support/tree\";\r\nimport { BrandKeys, CatKeys } from \"../../utils/Defaults\";\r\nimport Global from '../../utils/Global';\r\nimport { MainTexts } from \"../../utils/messages\";\r\nimport StorageHelper from \"../../utils/storage\";\r\n\r\nexport enum ECategoryStatus {\r\n    undefined = 0,\r\n    available = 1,\r\n    notAvailable = 2,\r\n    inProcess = 3\r\n};\r\n\r\nexport class Category extends InfoItem {\r\n    public id: string = '';\r\n    public status: ECategoryStatus = ECategoryStatus.notAvailable;\r\n\r\n    public constructor(id: string, status: ECategoryStatus) {\r\n        super();\r\n        this.id = id;\r\n        this.status = status;\r\n    };\r\n\r\n    setInfo(i: InfoItem) {\r\n        this.text = i.text;\r\n        this.css = i.css;\r\n\r\n        this.visible = i.visible;\r\n        this.loading = i.loading;\r\n    };\r\n};\r\n\r\nexport interface ICategoryBrandProduct {\r\n    catKey: string;\r\n    brandKey: string;\r\n    productId: string;\r\n    available: boolean;\r\n};\r\n\r\nexport class CategoryWrapper {\r\n    public static categories: TreeItem = new TreeItem('cat');\r\n    public static brandsFnTv: string[] = [BrandKeys.kabel, BrandKeys.dsl, BrandKeys.unity];\r\n    public cat: string = '';\r\n    //**if true no filtering by cat */\r\n    public all: boolean = false;\r\n    public avl: Availability;\r\n    public dc: IDefCon;\r\n    public bra: IBrand[] = [];\r\n\r\n    public availableCats: Category[] = [];\r\n    public availableBrands: string[] = [];\r\n    public catBrandMap: ICategoryBrandProduct[] = [];\r\n\r\n    public constructor() {\r\n        this.avl = StorageHelper.getAvailability();\r\n        this.bra = StorageHelper.getBrands();\r\n        this.dc = StorageHelper.getDefCon();\r\n\r\n        this.reset();\r\n    };\r\n\r\n    switchCat(cat: string) {\r\n       \r\n        this.cat = cat;\r\n\r\n        this.reset();\r\n    };\r\n\r\n    switchCatForProduct(id: string) {\r\n        let map = linq.from<ICategoryBrandProduct>(this.catBrandMap).where(x => x.productId == id).first();\r\n\r\n        this.switchCat(map.catKey);\r\n    };\r\n\r\n    getCrossSellingCats(): Category[] {\r\n        return linq.from<Category>(this.availableCats).where(x => x.id == CatKeys.fn || x.id == CatKeys.tv).toArray();\r\n    };\r\n\r\n    onlyOneBrandAvailable() {\r\n        let avl = linq.from<IBrand>(this.dc.brands).where(x => x.available).toArray();\r\n\r\n        return avl.length == 1;\r\n    };\r\n\r\n    canSwitchCat(data: IOrderData) {\r\n        // if(data.currentBrand == BrandKeys.unity) {\r\n        //     return false;\r\n        // };\r\n        \r\n        if (data.currentCat == CatKeys.fn) {\r\n            return this.allBrandsInCategoryAvailable(data.currentCat);\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    //**will find the next brand within a category*/\r\n    getOtherBrandsAvailable(currentBrand: string) : IAvailabilityBrand[]  {\r\n        let c = linq.from<TreeItem>(CategoryWrapper.categories.children).where(x=>x.id == this.cat).first();\r\n        let res : IAvailabilityBrand[] = [];\r\n\r\n        for(let i: number = 0; i < c.children.length; i++){\r\n            if(c.children[i].id == currentBrand) { continue;};\r\n            //check if its available\r\n            let b = linq.from<IAvailabilityBrand>(this.avl.brands).where(x=>x.key == c.children[i].id).firstOrDefault();\r\n\r\n            if(b && b.products && b.products.length>0) {\r\n                let allInCat = linq.from<ICategoryBrandProduct>(this.catBrandMap).where(x=>x.catKey == this.cat && x.brandKey == b!.key).select(x=>x.productId).toArray();\r\n                let allAvl = linq.from<AvailabilityProduct>(b.products).select(x=>x.productId).toArray();\r\n                if(allInCat.length > 0 && Global.containsAny(allAvl, allInCat)) {\r\n                    res.push(b);\r\n                };\r\n            }\r\n        };\r\n        \r\n        return res;\r\n    };\r\n\r\n    resetCategory() {\r\n        //todo: get default cateogry fr dealer\r\n        this.cat = CatKeys.vodafone;\r\n    };\r\n\r\n    private allBrandsInCategoryAvailable(catKey: string) {\r\n        let c = linq.from<TreeItem>(CategoryWrapper.categories.children).where(x => x.id == catKey).first();\r\n\r\n        let res = false;\r\n\r\n        c.children.map((i) => {\r\n            if (this.availableBrands.indexOf(i.id) >= 0) {\r\n                res = true;\r\n            };\r\n        });\r\n\r\n        return res;\r\n    };\r\n\r\n    getCategoryBrandProducts(withBlister: boolean): IProduct[] {\r\n        \r\n        let brandKey = this.getCategoryBrandKey(undefined);\r\n\r\n        let bdc = linq.from<IBrand>(this.dc.brands).where(x=>x.id == brandKey).first();\r\n        if(!bdc.categories || bdc.categories.indexOf(this.cat) < 0) {\r\n            return [];\r\n        };\r\n\r\n        let prod = linq.from<IBrand>(this.bra).where(x => x.id == brandKey).first().products;\r\n\r\n        prod = linq.from<IProduct>(prod).where(x => x.catKey == this.cat).toArray();\r\n\r\n        /* !!!! check disable because of unity !!!! dont remove\r\n        if(withBlister) {\r\n            prod = linq.from<IProduct>(prod).where(x=> (x.blister != null && x.blister!= '' && x.blister.length > 0)).toArray();\r\n        };\r\n        */\r\n\r\n        prod = this.applyAvailabilityToProducts(brandKey, prod);\r\n\r\n       \r\n\r\n        return prod;\r\n    };\r\n\r\n    private applyAvailabilityToProducts(brandKey: string, products: IProduct[]): IProduct[] {\r\n       \r\n        if (brandKey == BrandKeys.vodafone || brandKey == BrandKeys.otelo) {\r\n            return products;\r\n        };\r\n      \r\n        let pr = this.avl.getBrandProductIds(brandKey);\r\n\r\n        let filteredPr: IProduct[] = [];\r\n        filteredPr = linq.from<IProduct>(products).where(x => pr.indexOf(x.id) >= 0).toArray();\r\n        return filteredPr;\r\n    };\r\n\r\n    private getCategoryProductsAvailable(catKey: string, brandsAvl: IAvailabilityBrand[]) {\r\n        let res = false;\r\n        if (catKey == CatKeys.vodafone || catKey == CatKeys.otelo) {\r\n            res = true;\r\n        } else {\r\n            brandsAvl.map((i) => {\r\n                if (i.products) {\r\n                    let b = linq.from<IBrand>(this.bra).where(x => x.id == i.key).first();\r\n\r\n                    let ca = linq.from<AvailabilityProduct>(i.products)\r\n                        .join(b.products, ip => ip.productId, bp => bp.id, (ip, bp) => { return { IP: ip, BP: bp } })\r\n                        .where(x => x.BP.catKey == catKey)\r\n                        .select(x => x.BP.id)\r\n                        .toArray();\r\n\r\n                    if (ca.length > 0) {\r\n                        res = true;\r\n                    };\r\n                };\r\n            });\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    //**will add custom information to the categories e.g. loading or available */\r\n    private applyAvailability() {\r\n        for (let i = 0; i < CategoryWrapper.categories.children.length; i++) {\r\n            try {\r\n                let cat: Category = new Category(CategoryWrapper.categories.children[i].id, ECategoryStatus.notAvailable); //this.availableCats[i];\r\n\r\n                console.log('avl', this.avl);\r\n                let info: InfoItem = { id: '', text: MainTexts.available, css: 'main' };\r\n\r\n                info.visible = true;\r\n                info.loading = false;\r\n\r\n                var brandsAvl = linq.from<IAvailabilityBrand>(this.avl.brands)\r\n                    .where(x => CategoryWrapper.categories.children[i].getChildrenIds().indexOf(x.key) >= 0)\r\n                    .toArray();\r\n\r\n                let oneIsAvailable = Availability.oneOfIsAvaialble(brandsAvl);\r\n                let productsAvailable = this.getCategoryProductsAvailable(cat.id, brandsAvl);\r\n\r\n                if (cat.id == CatKeys.otelo || cat.id === CatKeys.vodafone) {\r\n                    if (cat.status == ECategoryStatus.available) {\r\n                        info.loading = false;\r\n                        info.visible = true;\r\n                        info.css = 'main';\r\n                        info.text = MainTexts.available;\r\n                    }\r\n                    //defcon appliesd in reset so do nothing\r\n                } else if (\r\n                    (this.avl.executed == ERequestStatus.running || this.avl.executed == ERequestStatus.tempResult)\r\n                    && (cat.id === CatKeys.fn || cat.id === CatKeys.tv)) {\r\n                    //console.log('case 1');\r\n                    //** processing availability */\r\n                    info.loading = true;\r\n                    info.visible = true;\r\n                    info.css = productsAvailable ? 'main' : 'high';\r\n                    info.text = productsAvailable ? MainTexts.available : MainTexts.inCheck;\r\n                    cat.status = productsAvailable ? ECategoryStatus.available : ECategoryStatus.inProcess;\r\n                } else if (\r\n                    !(this.avl.executed == ERequestStatus.done || this.avl.executed == ERequestStatus.tempResult)\r\n                    && (cat.id === CatKeys.fn || cat.id === CatKeys.tv)) {\r\n                    cat.visible = false;\r\n                } else if (\r\n                    oneIsAvailable\r\n                    && (this.avl.executed == ERequestStatus.done)\r\n                    && (cat.id === CatKeys.fn || cat.id === CatKeys.tv)) {\r\n                    info.visible = true;\r\n                    info.loading = false;\r\n                    info.css = \"main\";\r\n                    info.text = MainTexts.available;\r\n                    cat.status = ECategoryStatus.available;\r\n                } else {\r\n                    info.css = \"bad theme-dark\";\r\n                    info.text = MainTexts.notAvailable;\r\n                };\r\n\r\n                if (!productsAvailable && cat.status != ECategoryStatus.inProcess) {\r\n                    cat.status = ECategoryStatus.notAvailable;\r\n                    info.css = \"bad theme-dark\";\r\n                    info.text = MainTexts.notAvailable;\r\n                }\r\n\r\n                cat.setInfo(info);\r\n\r\n            } catch(e) {\r\n\r\n            };\r\n        };\r\n\r\n    };\r\n\r\n    private isCategoryAvailableInDefCon(cat: string) : boolean {\r\n        return linq.from<IBrand>(this.dc.brands).where(x=>x.categories && x.categories.indexOf(cat)>=0).count() > 0;\r\n    };\r\n\r\n    private isBrandAvailableInDefCon(brand: string) : boolean {\r\n        return linq.from<IBrand>(this.dc.brands).where(x=>x.id == brand && x.available).count() > 0;\r\n    }    \r\n\r\n    getCategory(catKey: string) {\r\n        return linq.from<Category>(this.availableCats).where(x => x.id == catKey).firstOrDefault();\r\n    };\r\n\r\n    //**delivers the top 1 prio brand in the category */\r\n    getCategoryBrandKey(data: IOrderData | undefined) {\r\n        if(linq.from<Category>(this.availableCats).select(x=>x.id).toArray().indexOf(this.cat) < 0) {\r\n            this.cat = this.availableCats[0].id;\r\n        }\r\n\r\n        if (this.cat == CatKeys.vodafone || this.cat == CatKeys.otelo) {\r\n            return linq.from<TreeItem>(CategoryWrapper.categories.children).where(x => x.id == this.cat).first().children[0].id;\r\n        } else {\r\n            //**despite the new category prio, an user is capble to switch the brand in a cat manually so return the one selected */\r\n            if (data) {\r\n                return data.currentBrand;\r\n            };\r\n\r\n            let children = linq.from<TreeItem>(CategoryWrapper.categories.children)\r\n                .where(x => x.id == this.cat).first()\r\n                .children;\r\n\r\n            let distinctBrandsWithProducts = linq.from<ICategoryBrandProduct>(this.catBrandMap)\r\n                .where(x => x.catKey == this.cat && x.available)\r\n                .select(x => x.brandKey)\r\n                .distinct()\r\n                .toArray();\r\n\r\n            let cb = linq.from<TreeItem>(children)\r\n                .where(x => this.availableBrands.indexOf(x.id) >= 0 && distinctBrandsWithProducts.indexOf(x.id) >= 0)\r\n                .orderByDescending(x => x.prio).first().id;\r\n\r\n            return cb;\r\n        }\r\n    };\r\n\r\n    getCategoryBrand(data: IOrderData) {\r\n        //this.cat = data.currentCat;\r\n\r\n        let b = this.getCategoryBrandKey(data);\r\n\r\n        return linq.from<IBrand>(this.bra).first(x => x.id == b);\r\n    };\r\n\r\n    //**returns the brandid of the given product id */\r\n    getBrandByProduct(id: string) {\r\n        return linq.from<ICategoryBrandProduct>(this.catBrandMap).first(x => x.productId == id).brandKey;\r\n    };\r\n\r\n    getCategoryBrandMapByProduct(id: string): ICategoryBrandProduct {\r\n        return linq.from<ICategoryBrandProduct>(this.catBrandMap)\r\n            .where(x => x.productId == id)\r\n            .first();\r\n    };\r\n\r\n    //**needed for ALL TARIFFS Link */\r\n    getFirstProductInCategory() {\r\n        let map = linq.from<ICategoryBrandProduct>(this.catBrandMap)\r\n            .where(x => x.catKey == this.cat)\r\n            .toArray();\r\n        \r\n        let ids = linq.from<ICategoryBrandProduct>(map).where(x=>x.available === true).select(x => x.productId).toArray();\r\n        // let b = this.getCategoryBrandKey(undefined);\r\n        let br = linq.from<IBrand>(this.bra).where(x => x.id == map[0].brandKey).first();\r\n        let brp = linq.from<IProduct>(br.products).where(x => ids.indexOf(x.id) >= 0).toArray();\r\n        \r\n        let p = this.applyAvailabilityToProducts(map[0].brandKey, brp);\r\n\r\n        return p.length>0? p[0].id : ids[0]\r\n        \r\n    };\r\n\r\n    getCategoryKeyByProduct(id) {\r\n        let p = linq.from<ICategoryBrandProduct>(this.catBrandMap).firstOrDefault(x => x.productId == id);\r\n        return p ? p.catKey : '';\r\n    };\r\n\r\n    getCategoryByProduct(id) {\r\n       \r\n        let p = linq.from<ICategoryBrandProduct>(this.catBrandMap).firstOrDefault(x => x.productId == id);\r\n        \r\n        if(p) {\r\n            \r\n            return linq.from<Category>(this.availableCats).first(x => x.id == p!.catKey);\r\n        } else {\r\n           \r\n            return linq.from<Category>(this.availableCats).first(x => x.id == this.cat);\r\n        }\r\n    };\r\n\r\n    getSelected = () => {\r\n        if(!this.cat) {\r\n            var c  = linq.from<Category>(this.availableCats).where(x=>x.status == ECategoryStatus.available).firstOrDefault();\r\n            if(c) {\r\n                this.cat = c.id;\r\n            }\r\n        };\r\n        return linq.from<Category>(this.availableCats).where(x => x.id == this.cat).firstOrDefault();\r\n    };\r\n\r\n    reset = () => {\r\n        this.avl = StorageHelper.getAvailability();\r\n\r\n        if(!this.dc) {\r\n            this.dc = StorageHelper.getDefCon();\r\n        };\r\n\r\n        CategoryWrapper.categories.children = [\r\n            TreeItem.createInstance(CatKeys.vodafone, [new TreeItem(BrandKeys.vodafone)]),\r\n            TreeItem.createInstance(CatKeys.otelo, [new TreeItem(BrandKeys.otelo)]),\r\n            TreeItem.createInstance(CatKeys.fn, [TreeItem.createInstance(BrandKeys.kabel, [], 100), TreeItem.createInstance(BrandKeys.unity, [], 50), TreeItem.createInstance(BrandKeys.dsl, [], 0)]),\r\n            TreeItem.createInstance(CatKeys.tv, [new TreeItem(BrandKeys.kabel)])\r\n           \r\n        ];\r\n\r\n        this.availableCats = [];\r\n        this.availableBrands = [];\r\n\r\n        CategoryWrapper.categories.children.map((i) => {\r\n            let c = new Category(i.id, ECategoryStatus.undefined);\r\n\r\n            let dc = linq.from<IBrand>(this.dc.brands).firstOrDefault(x => x.id == i.id);\r\n\r\n            if (dc) {\r\n                if (dc.available) {\r\n                    c.status = ECategoryStatus.available;\r\n                    this.availableBrands.push(i.id);\r\n                };\r\n            };\r\n\r\n            if (linq.from<string>(i.getChildrenIds()).any(x => CategoryWrapper.brandsFnTv.indexOf(x) >= 0)) {\r\n                i.children.map((j) => {\r\n                    c.status = ECategoryStatus.undefined;\r\n\r\n                    let av = linq.from<IAvailabilityBrand>(this.avl.brands).firstOrDefault(x => x.key == j.id);\r\n                    if (av && av.products && av.products.length > 0 && this.isBrandAvailableInDefCon(j.id)) {\r\n                        c.status = ECategoryStatus.available;\r\n                        this.availableBrands.push(j.id);\r\n                    }\r\n                });\r\n            };\r\n\r\n            if(c.status == ECategoryStatus.available) {\r\n                this.availableCats.push(c);\r\n            };\r\n        });\r\n\r\n        if (!this.cat) {\r\n            let fa = linq.from<Category>(this.availableCats).firstOrDefault(x => x.status == 1);\r\n            if (fa) {\r\n                this.cat = fa.id;\r\n            } else {\r\n                this.cat = this.availableCats.length > 0 ? this.availableCats[0].id : '';\r\n            }\r\n        };\r\n\r\n        this.bra.map((i) => {\r\n            i.products.map((j) => {\r\n                let a = false;\r\n                if (j.catKey == CatKeys.otelo || j.catKey == CatKeys.vodafone) {\r\n                    a = true;\r\n                } else {\r\n                    if (this.avl && this.avl.brands) {\r\n                        let avlBrand = linq.from<IAvailabilityBrand>(this.avl.brands).where(x => x.key == i.id).firstOrDefault();\r\n                        if (avlBrand) {\r\n                            a = Availability.getProducts(avlBrand).indexOf(j.id) >= 0;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.catBrandMap.push({ brandKey: i.id, catKey: j.catKey, productId: j.id, available: a });\r\n            })\r\n        });\r\n\r\n        this.applyAvailability();\r\n\r\n        this.availableBrands = linq.from<string>(this.availableBrands).distinct().toArray();\r\n\r\n        console.log('reseted', this);\r\n    };\r\n};\r\n\r\nexport default CategoryWrapper;","import linq from 'linq';\r\nimport { IActivation } from '..';\r\nimport IProduct, { ISubConfig, ISubServiceConfig } from '../../models/ordering/product';\r\nimport StorageHelper from '../../utils/storage';\r\nimport IBrand from './brand';\r\nimport { EBusinessCase, ECreditDebitType } from './order';\r\n\r\nexport class ProductWrapper {\r\n    private prod: IProduct;\r\n    private brand: IBrand;\r\n    constructor(brandKey: string, valProduct: IProduct) {\r\n        this.prod = valProduct;\r\n        this.brand = linq.from<IBrand>(StorageHelper.getBrands())\r\n            .where(x => x.id == brandKey)\r\n            .first();\r\n    };\r\n\r\n    public getServices(act: IActivation | undefined,\r\n        bc: EBusinessCase,\r\n        withMandatory: boolean): string[] {\r\n        let svc: string[] = [];\r\n\r\n        let sub: string = act ? act.sub : '';\r\n        \r\n        if (act && act.creditDebitType === ECreditDebitType.prepaid) {\r\n            return this.prod.services;\r\n        };\r\n\r\n        if (!this.prod) return [];\r\n     \r\n        let t = linq.from<ISubConfig>(this.prod.subs)\r\n            .where(x => x.id == sub && x.b == bc)\r\n            .firstOrDefault();\r\n       \r\n        if (t) {\r\n            if (withMandatory) {\r\n               \r\n                svc = linq.from<ISubServiceConfig>(t.sl)\r\n                   \r\n                    .select(x => x.id)\r\n                    .toArray();\r\n            } else {\r\n                svc = linq.from<ISubServiceConfig>(t.sl)\r\n                    .where(x => !x.m)\r\n                    .select(x => x.id)\r\n                    .toArray();\r\n            }\r\n        }\r\n\r\n        return svc;\r\n    };\r\n\r\n    public getServicesAndMandatory(sub: string, bc: EBusinessCase): string[] {\r\n        let svc: string[] = [];\r\n\r\n        let t = linq.from<ISubConfig>(this.prod.subs)\r\n            .where(x => x.id == sub && x.b == bc)\r\n            .firstOrDefault();\r\n\r\n        if (t) {\r\n            svc = linq.from<ISubServiceConfig>(t.sl)\r\n                .select(x => x.id)\r\n                .toArray();\r\n        }\r\n\r\n        return svc;\r\n    };\r\n\r\n    public getAllServicesFromConfig(sub: string, bc: EBusinessCase): string[] {\r\n        let svc: string[] = [];\r\n\r\n        let t = linq.from<ISubConfig>(this.prod.subs)\r\n            .where(x => x.id == sub && x.b == bc)\r\n            .firstOrDefault();\r\n\r\n        svc = linq.from<ISubServiceConfig>(t!.sl)\r\n            .select(x => x.id)\r\n            .toArray();\r\n\r\n        return svc;\r\n    };\r\n};\r\n\r\nexport default ProductWrapper;"],"sourceRoot":""}